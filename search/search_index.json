{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u5927\u6a21\u578b\u6559\u7a0b\u96c6\u5408","text":"<p>Pytorch\u624b\u518c</p> <p>Huggingface transformers\u7684\u4e2d\u6587\u6587\u6863</p> <p>Transformer/BERT/\u5b9e\u6218</p>"},{"location":"algorithm/basic/","title":"\u7b97\u6cd5\u57fa\u7840\u77e5\u8bc6","text":""},{"location":"algorithm/basic/#_2","title":"\u4e00\u3001\u65f6\u95f4\u590d\u6742\u5ea6","text":""},{"location":"algorithm/basic/#11-o1","title":"1.1 \u5e38\u6570\u9636 O(1)","text":"<p>\u65e0\u8bba\u4ee3\u7801\u6267\u884c\u4e86\u591a\u5c11\u884c\uff0c\u53ea\u8981\u662f\u6ca1\u6709\u5faa\u73af\u7b49\u590d\u6742\u7ed3\u6784\uff0c\u90a3\u8fd9\u4e2a\u4ee3\u7801\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u90fd\u662fO(1)\uff0c\u5982\uff1a</p> <pre><code>int i = 1;\nint j = 2;\n++i;\nj++;\nint m = i + j;\n</code></pre> <p>\u4e0a\u8ff0\u4ee3\u7801\u5728\u6267\u884c\u7684\u65f6\u5019\uff0c\u5b83\u6d88\u8017\u7684\u65f6\u5019\u5e76\u4e0d\u968f\u7740\u67d0\u4e2a\u53d8\u91cf\u7684\u589e\u957f\u800c\u589e\u957f\uff0c\u90a3\u4e48\u65e0\u8bba\u8fd9\u7c7b\u4ee3\u7801\u6709\u591a\u957f\uff0c\u5373\u4f7f\u6709\u51e0\u4e07\u51e0\u5341\u4e07\u884c\uff0c\u90fd\u53ef\u4ee5\u7528 O(1) \u6765\u8868\u793a\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002</p>"},{"location":"algorithm/basic/#12-ologn","title":"1.2 \u5bf9\u6570\u9636O(logn)","text":"<pre><code>int i = 1;\nwhile( i &lt; n ){\n    i = i * 2;\n}\n</code></pre> <p>\u5728 while \u5faa\u73af\u91cc\u9762\uff0c\u6bcf\u6b21\u90fd\u5c06 i \u4e58\u4ee5 2\uff0c\u8ba1\u7b97\u5b8c\u4e4b\u540e\uff0ci \u8ddd\u79bb n \u5c31\u8d8a\u6765\u8d8a\u8fd1\u3002</p> <p>\u5047\u8bbe\u5faa\u73af x \u6b21\u4e4b\u540e\uff0ci \u5c31\u5927\u4e8e n \uff0c\u6b64\u65f6\u8fd9\u4e2a\u5faa\u73af\u5c31\u9000\u51fa\uff0c\u4e5f\u5c31\u662f\u8bf4 2 \u7684 x \u6b21\u65b9\u7b49\u4e8e n\uff0c\u90a3\u4e48 x = log2n\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\u5f53\u5faa\u73af log2n \u6b21\u4ee5\u540e\uff0c\u8fd9\u4e2a\u4ee3\u7801\u5c31\u7ed3\u675f\uff0c\u56e0\u6b64\u8fd9\u4e2a\u4ee3\u7801\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\uff1aO(logn)</p>"},{"location":"algorithm/basic/#13-on","title":"1.3 \u7ebf\u6027\u9636 O(n)","text":"<p><pre><code>for( i = 1 ; i &lt;= n ; i++){\n   j = i ;\n   j++ ;\n}\n</code></pre> \u8fd9\u6bb5\u4ee3\u7801\uff0cfor \u5faa\u73af\u91cc\u9762\u7684\u4ee3\u7801\u4f1a\u6267\u884c n \u904d\uff0c\u56e0\u6b64\u5b83\u6d88\u8017\u7684\u65f6\u95f4\u662f\u968f\u7740 n \u7684\u53d8\u5316\u800c\u53d8\u5316\u7684\uff0c\u56e0\u6b64\u8fd9\u7c7b\u4ee3\u7801\u90fd\u53ef\u4ee5\u7528 O(n) \u6765\u8868\u793a\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002</p>"},{"location":"algorithm/basic/#14-onlogn","title":"1.4 \u7ebf\u6027\u5bf9\u6570\u9636O(nlogn)","text":"<p>\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(logn)\u7684\u4ee3\u7801\u5faa\u73af n \u904d\u7684\u8bdd\uff0c\u90a3\u4e48\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f n * O(logn)\uff0c\u4e5f\u5c31\u662fO(nlogn)\u3002</p> <pre><code>for( int m = 1; m &lt; n; m++ ){\n    i = 1;\n    while( i &lt; n){\n        i = i * 2;\n    }\n}\n</code></pre>"},{"location":"algorithm/basic/#15-on2","title":"1.5 \u5e73\u65b9\u9636 O(n\u00b2)","text":"<p>\u5e73\u65b9\u9636O(n2) \u5c31\u66f4\u5bb9\u6613\u7406\u89e3\u4e86\uff0c\u5982\u679c\u628a O(n) \u7684\u4ee3\u7801\u518d\u5d4c\u5957\u5faa\u73af\u4e00\u904d\uff0c\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f O(n\u00b2) \u3002</p> <pre><code>for( int x = 1; x &lt;= n ; x++ ){\n   for( i = 1 ; i &lt;= n ; i++ ){\n       ...\n    }\n}\n</code></pre> <p>\u8fd9\u6bb5\u4ee3\u7801\u5d4c\u5957\u4e86 2 \u5c42 n \u5faa\u73af\uff0c\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n*n)\uff0c\u5373 O(n\u00b2) \u3002</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u63a5\u89e6\u7684\u5927\u90e8\u5206\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f\u4ee5\u4e0a\u8fd9 5 \u79cd\uff0c\u5176\u5b83\u7684\u6bd4\u5982 \u7acb\u65b9\u9636 \\(O(n\u00b3)\\)\u3001K\u6b21\u65b9\u9636 \\(O(n^k)\\)  \u7b49\u7b49\u51fa\u73b0\u7684\u9891\u7387\u8f83\u5c11\uff0c\u540c\u65f6\u5206\u6790\u60c5\u51b5\u4e5f\u548c\u4e0a\u8ff0\u5176\u5b83\u51e0\u79cd\u60c5\u51b5\u4e00\u6837\u3002</p>"},{"location":"algorithm/basic/#_3","title":"\u4e8c\u3001\u7a7a\u95f4\u590d\u6742\u5ea6","text":"<p>\u7a7a\u95f4\u590d\u6742\u5ea6\u662f\u8861\u91cf\u7b97\u6cd5\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u4e34\u65f6\u5360\u7528\u5b58\u50a8\u7a7a\u95f4\u5927\u5c0f\u7684\u6307\u6807\uff0c\u901a\u5e38\u7528\u5927O\u7b26\u53f7\u8868\u793a\u3002\u5b83\u5173\u6ce8\u7684\u662f\u7b97\u6cd5\u4f7f\u7528\u7684\u989d\u5916\u7a7a\u95f4\uff08\u5373\u9664\u8f93\u5165\u6570\u636e\u5916\uff09\uff0c\u968f\u8f93\u5165\u89c4\u6a21\u589e\u957f\u7684\u53d8\u5316\u8d8b\u52bf\u3002</p>"},{"location":"algorithm/basic/#21","title":"2.1 \u5173\u952e\u70b9\uff1a","text":"<ol> <li>\u5e38\u89c1\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a</li> <li>O(1)\uff1a\u5e38\u6570\u7a7a\u95f4\uff0c\u4f7f\u7528\u56fa\u5b9a\u6570\u91cf\u7684\u53d8\u91cf\uff08\u5982\u5faa\u73af\u4e2d\u7684\u4e34\u65f6\u53d8\u91cf\uff09\u3002</li> <li>O(n)\uff1a\u7ebf\u6027\u7a7a\u95f4\uff0c\u5982\u5206\u914d\u957f\u5ea6\u4e3an\u7684\u6570\u7ec4\u3002</li> <li>O(n\u00b2)\uff1a\u5e73\u65b9\u7a7a\u95f4\uff0c\u5982n\u00d7n\u7684\u4e8c\u7ef4\u77e9\u9635\u3002</li> <li> <p>O(log n)\uff1a\u5bf9\u6570\u7a7a\u95f4\uff0c\u5e38\u89c1\u4e8e\u9012\u5f52\u6df1\u5ea6\u4e3a\u5bf9\u6570\u7684\u60c5\u51b5\uff08\u5982\u5e73\u8861\u6811\u7684\u904d\u5386\uff09\u3002</p> </li> <li> <p>\u9012\u5f52\u7b97\u6cd5\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a</p> </li> <li>\u7531\u9012\u5f52\u6df1\u5ea6\u548c\u6bcf\u5c42\u9012\u5f52\u7684\u989d\u5916\u7a7a\u95f4\u5171\u540c\u51b3\u5b9a\u3002</li> <li> <p>\u4f8b\u5982\uff0c\u666e\u901a\u9012\u5f52\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\uff08\u6df1\u5ea6\u4e3an\uff09\uff0c\u800c\u5c3e\u9012\u5f52\u4f18\u5316\u540e\u53ef\u964d\u81f3O(1)\u3002</p> </li> <li> <p>\u52a8\u6001\u89c4\u5212\u4e0e\u4f18\u5316\uff1a</p> </li> <li> <p>\u901a\u8fc7\u72b6\u6001\u538b\u7f29\uff08\u5982\u4ec5\u4fdd\u5b58\u5fc5\u8981\u7684\u524d\u9a71\u72b6\u6001\uff09\u53ef\u5c06\u7a7a\u95f4\u590d\u6742\u5ea6\u4eceO(n)\u4f18\u5316\u81f3O(1)\u3002</p> </li> <li> <p>\u539f\u5730\u64cd\u4f5c\uff1a</p> </li> <li>\u5982\u5feb\u901f\u6392\u5e8f\u548c\u53cd\u8f6c\u6570\u7ec4\u7684\u8fed\u4ee3\u5b9e\u73b0\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aO(1)\uff0c\u65e0\u9700\u989d\u5916\u5b58\u50a8\u3002</li> </ol>"},{"location":"algorithm/basic/#22","title":"2.2 \u793a\u4f8b\u5206\u6790\uff1a","text":"<ul> <li>\u5f52\u5e76\u6392\u5e8f\uff1a\u9700\u989d\u5916O(n)\u7a7a\u95f4\u5408\u5e76\u5b50\u6570\u7ec4\u3002</li> <li>\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff08BFS\uff09\uff1a\u961f\u5217\u6700\u5927\u5b58\u50a8O(n)\u8282\u70b9\u3002</li> <li>\u9012\u5f52\u521b\u5efa\u6570\u7ec4\uff1a\u82e5\u6bcf\u6b21\u9012\u5f52\u5206\u914d\u9012\u51cf\u6570\u7ec4\uff08\u5982n, n-1, \u2026\uff09\uff0c\u603b\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aO(n\u00b2)\u3002</li> </ul>"},{"location":"algorithm/basic/#23","title":"2.3 \u8ba1\u7b97\u6b65\u9aa4\uff1a","text":"<ol> <li>\u8bc6\u522b\u53d8\u91cf\u4e0e\u6570\u636e\u7ed3\u6784\uff1a\u786e\u5b9a\u7b97\u6cd5\u4e2d\u52a8\u6001\u5206\u914d\u7684\u7ed3\u6784\uff08\u5982\u6570\u7ec4\u3001\u961f\u5217\uff09\u3002</li> <li>\u5206\u6790\u9012\u5f52\u6df1\u5ea6\uff1a\u9012\u5f52\u7b97\u6cd5\u7684\u6808\u7a7a\u95f4\u4e0e\u6df1\u5ea6\u6210\u6b63\u6bd4\u3002</li> <li>\u5408\u5e76\u7a7a\u95f4\u9700\u6c42\uff1a\u53d6\u6700\u9ad8\u9636\u9879\uff0c\u5ffd\u7565\u4f4e\u9636\u548c\u5e38\u6570\u3002</li> </ol>"},{"location":"algorithm/basic/#24","title":"2.4 \u603b\u7ed3\uff1a","text":"<p>\u7a7a\u95f4\u590d\u6742\u5ea6\u5206\u6790\u9700\u7ed3\u5408\u7b97\u6cd5\u5b9e\u73b0\u7ec6\u8282\uff0c\u91cd\u70b9\u5173\u6ce8\u989d\u5916\u7a7a\u95f4\u7684\u4f7f\u7528\u8d8b\u52bf\u3002\u4f18\u5316\u65b9\u6cd5\u5305\u62ec\u51cf\u5c11\u6570\u636e\u7ed3\u6784\u5927\u5c0f\u3001\u6539\u7528\u8fed\u4ee3\u66ff\u4ee3\u9012\u5f52\u6216\u4f18\u5316\u9012\u5f52\u4e3a\u5c3e\u9012\u5f52\u3002</p>"},{"location":"algorithm/basic/#_4","title":"\u4e09\u3001\u4ec0\u4e48\u662f\u6570\u636e\u7ed3\u6784","text":"<p>\u6570\u636e\u7ed3\u6784\u7814\u7a76\u7684\u662f\u6570\u636e\u5982\u4f55\u5728\u8ba1\u7b97\u673a\u4e2d\u8fdb\u884c\u7ec4\u7ec7\u548c\u5b58\u50a8\uff0c\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5 \u300c\u9ad8\u6548\u300d \u7684\u83b7\u53d6\u6570\u636e\u6216\u8005\u4fee\u6539\u6570\u636e\u3002</p> <p>\u8fd9\u91cc\uff0c\u6211\u4eec\u9700\u8981\u7279\u522b\u6ce8\u610f\u9ad8\u6548\u8fd9\u4e2a\u8bcd\uff0c\u5b83\u6697\u793a\u6211\u4eec\u83b7\u53d6\u6570\u636e\u6216\u8005\u4fee\u6539\u6570\u636e\u6709\u5f88\u591a\u79cd\u65b9\u5f0f\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u4f7f\u7528\u573a\u666f\u6765\u9009\u62e9\u6700\u5408\u9002\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8fbe\u5230\u9ad8\u6548\u7684\u76ee\u7684\u3002</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u4f1a\u63a5\u89e6\u4e09\u79cd\u6570\u636e\u7ed3\u6784\uff1a\u7ebf\u6027\u7ed3\u6784\u3001\u6811\u5f62\u7ed3\u6784\u3001\u56fe\u5f62\u7ed3\u6784\u3002</p>"},{"location":"algorithm/basic/#_5","title":"\u56db\u3001\u7ebf\u6027\u7ed3\u6784","text":"<p>\u7ebf\u6027\u8868\u662f\u5177\u6709 n \u4e2a\u76f8\u540c\u7c7b\u578b\u5143\u7d20\u7684\u6709\u9650\u5e8f\u5217\uff08 n \u2265 0 \uff09\u3002</p> <p>\u5e38\u89c1\u7684\u7ebf\u6027\u8868\u6709\uff1a</p> <ul> <li>\u6570\u7ec4</li> <li>\u94fe\u8868</li> <li>\u6808</li> <li>\u961f\u5217</li> <li>\u54c8\u5e0c\u8868\uff08\u4e5f\u53eb\u505a\u6563\u5217\u8868\uff09</li> </ul>"},{"location":"algorithm/basic/#_6","title":"\u4e94\u3001\u6570\u7ec4","text":"<p>\u6570\u7ec4\u662f\u4e00\u79cd\u987a\u5e8f\u5b58\u50a8\u7684\u7ebf\u6027\u8868\uff0c\u6240\u6709\u5143\u7d20\u7684\u5185\u5b58\u5730\u5740\u662f\u8fde\u7eed\u7684\uff0c\u5bf9\u4e8e\u4e00\u7ef4\u6570\u7ec4\u6765\u8bf4\uff0c\u628a\u7b2c\u4e00\u4e2a\u6570\u636e\u5143\u7d20\u5b58\u50a8\u5230\u4e0b\u6807\u4e3a 0 \u7684\u4f4d\u7f6e\u4e2d\uff0c\u628a\u7b2c 2 \u4e2a\u6570\u636e\u5143\u7d20\u5b58\u50a8\u5230\u4e0b\u6807\u4e3a 1 \u7684\u4f4d\u7f6e\u4e2d\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <p>\u57fa\u4e8e\u8fd9\u6837\u7684\u5b58\u50a8\u65b9\u5f0f\uff0c\u6570\u7ec4\u5177\u5907\u4e00\u4e2a\u5f88\u5927\u7684\u4f18\u70b9\uff1a\u5feb\u901f\u67e5\u8be2\uff0c\u901a\u8fc7\u7d22\u5f15\u53ef\u4ee5\u5feb\u901f\u83b7\u53d6\u5230\u9700\u8981\u67e5\u8be2\u7684\u6570\u636e\u3002</p> <p>\u6570\u7ec4\u6709\u4e2a\u7f3a\u70b9\uff1a \u65e0\u6cd5\u52a8\u6001\u4fee\u6539\u5bb9\u91cf\u3002</p>"},{"location":"algorithm/basic/#_7","title":"\u516d\u3001\u94fe\u8868","text":""},{"location":"algorithm/basic/#61","title":"6.1 \u7b80\u4ecb","text":"<p>\u5728\u6570\u7ec4\u7684\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u60f3\u8981\u5728\u52a8\u6001\u6570\u7ec4\u4e2d\u6267\u884c \u63d2\u5165 \u548c \u5220\u9664 \u64cd\u4f5c\u9700\u8981\u79fb\u52a8\u5927\u91cf\u7684\u5143\u7d20\u3002</p> <p></p> <p></p> <p>\u4e8e\u6b64\u540c\u65f6\uff0c\u52a8\u6001\u6570\u7ec4\u53ef\u80fd\u4f1a\u9020\u6210\u5185\u5b58\u7a7a\u95f4\u7684\u5927\u91cf\u6d6a\u8d39\u3002</p> <p></p> <p>\u90a3\u4e48\uff0c\u53ef\u4e0d\u53ef\u4ee5\u5728\u4e0d\u79fb\u52a8\u5927\u91cf\u5143\u7d20\u7684\u57fa\u7840\u4e0a\u5b9e\u73b0 \u63d2\u5165 \u548c \u5220\u9664 \u64cd\u4f5c\u5462\uff1f\u540c\u65f6\u80fd\u4e0d\u80fd\u7528\u5230\u591a\u5c11\u6570\u636e\u5c31\u7533\u8bf7\u591a\u5c11\u5185\u5b58\u5462\uff1f</p> <p>\u7b54\u6848\u662f\u53ef\u4ee5\u7684\uff0c\u90a3\u5c31\u662f\u94fe\u8868\u3002</p>"},{"location":"algorithm/basic/#62","title":"6.2 \u94fe\u8868\u8be6\u89e3","text":"<p>\u94fe\u8868\u662f\u4e00\u79cd\u94fe\u5f0f\u5b58\u50a8\u7684\u7ebf\u6027\u8868\uff0c\u6240\u6709\u5143\u7d20\u7684\u5185\u5b58\u5730\u5740\u4e0d\u4e00\u5b9a\u662f\u8fde\u7eed\u7684\uff0c\u56e0\u4e3a\u53ea\u6709\u5728\u6bcf\u6b21\u65b0\u589e\u6570\u636e\u7684\u65f6\u5019\u624d\u4f1a\u53bb\u7533\u8bf7\u5185\u5b58\u5730\u5740\uff0c\u5b83\u662f\u771f\u6b63\u7684\u52a8\u6001\u6570\u636e\u7ed3\u6784\u3002</p> <p></p> <p>\u94fe\u8868 \u662f\u7531\u4e00\u4e2a\u4e2a \u8282\u70b9 \u7ec4\u6210\uff0c\u6bcf\u4e2a \u8282\u70b9 \u4e4b\u95f4\u901a\u8fc7 \u94fe\u63a5\u5173\u7cfb \u4e32\u8054\u8d77\u6765\uff0c\u6bcf\u4e2a \u8282\u70b9 \u90fd\u6709\u4e00\u4e2a \u540e\u7ee7\u8282\u70b9\uff0c\u6700\u540e\u4e00\u4e2a \u8282\u70b9 \u7684 \u540e\u7ee7\u8282\u70b9 \u4e3a \u7a7a\u8282\u70b9\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u57fa\u4e8e\u8fd9\u6837\u7684\u7279\u6027\uff0c\u94fe\u8868\u5177\u5907\u4ee5\u4e0b\u4e24\u4e2a\u663e\u8457\u7684\u7279\u70b9\uff1a</p> <p>1\u3001\u4f18\u70b9\uff0c\u771f\u6b63\u7684\u52a8\u6001\uff0c\u4e0d\u9700\u8981\u5904\u7406\u56fa\u5b9a\u5bb9\u91cf\u7684\u95ee\u9898</p> <p>2\u3001\u7f3a\u70b9\uff0c\u4e27\u5931\u4e86\u968f\u673a\u8bbf\u95ee\u7684\u80fd\u529b\uff0c\u65e0\u6cd5\u50cf\u6570\u7ec4\u90a3\u6837\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u7d22\u5f15\uff0c\u7acb\u9a6c\u83b7\u53d6\u5230\u5143\u7d20</p>"},{"location":"algorithm/basic/#63","title":"6.3 \u8bbe\u8ba1\u5355\u94fe\u8868","text":"<p>\u548c\u8bbe\u8ba1\u52a8\u6001\u6570\u7ec4\u4e00\u6837\u7684\u601d\u8def\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e00\u4e0b\u5355\u94fe\u8868\uff0c\u5b9a\u4e49\u4e3a LinkedList\uff0c\u5b83\u5177\u5907\u4ee5\u4e0b\u7684\u529f\u80fd\uff1a</p> <ul> <li>1\u3001\u83b7\u53d6\u94fe\u8868\u4e2d\u7684\u5143\u7d20\u4e2a\u6570</li> <li>2\u3001\u5224\u65ad\u94fe\u8868\u662f\u5426\u4e3a\u7a7a</li> <li>3\u3001\u5728\u94fe\u8868\u5934\u6dfb\u52a0\u5143\u7d20</li> <li>4\u3001\u5728\u94fe\u8868\u4e2d\u95f4\u6dfb\u52a0\u5143\u7d20</li> <li>5\u3001\u5728\u94fe\u8868\u5c3e\u90e8\u6dfb\u52a0\u5143\u7d20</li> <li>6\u3001\u8bbe\u7acb\u865a\u62df\u5934\u8282\u70b9</li> <li>7\u3001\u83b7\u53d6\u94fe\u8868\u7684\u7b2c index \u4e2a\u4f4d\u7f6e\u7684\u5143\u7d20</li> <li>8\u3001\u4fee\u6539\u94fe\u8868\u7684\u7b2c index \u4e2a\u4f4d\u7f6e\u7684\u5143\u7d20</li> <li>9\u3001\u67e5\u627e\u94fe\u8868\u4e2d\u662f\u5426\u6709\u8be5\u5143\u7d20</li> <li>10\u3001\u5220\u9664\u94fe\u8868\u7684\u7b2c index \u4e2a\u4f4d\u7f6e\u7684\u5143\u7d20</li> <li>11\u3001\u6e05\u7a7a\u6240\u6709\u5143\u7d20</li> </ul> <p>\u57fa\u4e8e\u6570\u7ec4\u7684\u5b66\u4e60\u57fa\u7840\uff0c\u94fe\u8868\u7684\u8bbe\u8ba1\u8fc7\u7a0b\u4e2d\u6211\u4eec\u76f4\u63a5\u4f7f\u7528\u6cdb\u578b\u3002</p>"},{"location":"algorithm/basic/#0","title":"0\u3001\u8282\u70b9","text":"<p>\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u6765\u8bf4\uff0c\u5b83\u5177\u5907\u4e09\u4e2a\u5c5e\u6027\uff1a</p> <ul> <li>1\u3001\u5f53\u524d\u8282\u70b9\u5b58\u50a8\u7684\u503c\uff0c\u4e5f\u53eb\u505a\u6570\u636e\u57df</li> <li>2\u3001\u5f53\u524d\u8282\u70b9\u5b58\u50a8\u7684\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u6307\u5411\u540e\u7ee7\u8282\u70b9\u7684\u5730\u5740\uff0c\u4e5f\u53eb\u505a\u6307\u9488\u57df</li> <li>3\u3001\u5f53\u524d\u8282\u70b9\u7684\u5730\u5740</li> </ul> <p>=== \"Python\"</p> <pre><code>``` c\n#include &lt;stdio.h&gt;\n\nint main(void) {\n  printf(\"Hello world!\\n\");\n  return 0;\n}\n```\n</code></pre> <p>=== \"C++\"</p> <pre><code>```c++\nprivate class Node{\n   // 1\u3001\u5f53\u524d\u8282\u70b9\u5b58\u50a8\u7684\u503c\n   public  E e;\n\n   // 2\u3001\u5f53\u524d\u8282\u70b9\u5b58\u50a8\u7684\u6267\u884c\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u5730\u5740\n   public  Node next;\n\n   public Node(E e, Node next){\n       this.e = e;\n       this.next = next;\n   }\n\n   public Node(E e){\n       this(e, null);\n   }\n\n   public Node(){\n       this(null, null);\n   }\n}\n```\n</code></pre>"},{"location":"analysis/Plotly/","title":"Plotly \u6559\u7a0b","text":""},{"location":"analysis/Scikit-plot/","title":"Scikit-plot \u6559\u7a0b","text":""},{"location":"analysis/Scikit-plot/#scikit-plot_1","title":"\u4e00\u3001Scikit-plot \u662f\u4ec0\u4e48\uff1f","text":"<p>scikit-plot \u662f\u4e00\u4e2a\u4e13\u4e3a scikit-learn \u8bbe\u8ba1\u7684\u6a21\u578b\u53ef\u89c6\u5316\u5e93\uff0c\u5b83\u5c01\u88c5\u4e86\u8bb8\u591a\u5e38\u7528\u53ef\u89c6\u5316\u56fe\uff0c\u6bd4\u5982\u6df7\u6dc6\u77e9\u9635\u3001ROC \u66f2\u7ebf\u3001\u5b66\u4e60\u66f2\u7ebf\u3001\u7279\u5f81\u91cd\u8981\u6027\u7b49\uff0c\u8ba9\u4f60\u80fd\u975e\u5e38\u7b80\u5355\u5730\u8fdb\u884c\u6a21\u578b\u8bc4\u4f30\u3002</p> <ul> <li>GitHub\uff1ahttps://github.com/reiinakano/scikit-plot</li> <li>\u4f18\u70b9\uff1a\u5f00\u7bb1\u5373\u7528\u3001\u5bf9 sklearn \u6a21\u578b\u517c\u5bb9\u6027\u6781\u9ad8\u3002</li> </ul>"},{"location":"analysis/Scikit-plot/#_1","title":"\u4e8c\u3001\u5b89\u88c5","text":"<p><pre><code>pip install scikit-plot\n</code></pre> \u4f9d\u8d56\uff1amatplotlib\u3001scikit-learn\u3001numpy</p>"},{"location":"analysis/Scikit-plot/#_2","title":"\u4e09\u3001\u5feb\u901f\u5165\u95e8\u793a\u4f8b","text":"<pre><code>import scikitplot as skplt\nimport matplotlib.pyplot as plt\nfrom sklearn.datasets import load_digits\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\n\n# \u6570\u636e\u52a0\u8f7d\u4e0e\u6a21\u578b\u8bad\u7ec3\nX, y = load_digits(return_X_y=True)\nX_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, random_state=0)\nclf = RandomForestClassifier()\nclf.fit(X_train, y_train)\n\n# \u9884\u6d4b\u5e76\u53ef\u89c6\u5316\u6df7\u6dc6\u77e9\u9635\ny_pred = clf.predict(X_test)\nskplt.metrics.plot_confusion_matrix(y_test, y_pred)\nplt.show()\n</code></pre>"},{"location":"analysis/Scikit-plot/#_3","title":"\u56db\u3001\u5e38\u7528\u53ef\u89c6\u5316\u529f\u80fd\u6c47\u603b","text":"\u56fe\u7c7b\u578b \u51fd\u6570\u540d \u8bf4\u660e \u6df7\u6dc6\u77e9\u9635 <code>skplt.metrics.plot_confusion_matrix()</code> \u5206\u7c7b\u6a21\u578b\u8868\u73b0 ROC \u66f2\u7ebf <code>skplt.metrics.plot_roc()</code> \u591a\u7c7b/\u4e8c\u7c7b\u5206\u7c7b\u5668\u7684 ROC \u66f2\u7ebf \u7cbe\u786e\u7387-\u53ec\u56de\u66f2\u7ebf <code>skplt.metrics.plot_precision_recall()</code> \u7cbe\u786e\u7387 vs \u53ec\u56de\u7387\u66f2\u7ebf \u5b66\u4e60\u66f2\u7ebf <code>skplt.estimators.plot_learning_curve()</code> \u6a21\u578b\u8bad\u7ec3\u4e0e\u9a8c\u8bc1\u8bef\u5dee\u5bf9\u6bd4 \u9a8c\u8bc1\u66f2\u7ebf <code>skplt.estimators.plot_validation_curve()</code> \u8d85\u53c2\u6570\u53d8\u5316\u5bf9\u6a21\u578b\u6027\u80fd\u5f71\u54cd \u7279\u5f81\u91cd\u8981\u6027 <code>skplt.estimators.plot_feature_importances()</code> \u7279\u5f81\u5bf9\u6a21\u578b\u7684\u91cd\u8981\u6027\u6392\u5e8f KMeans \u53ef\u89c6\u5316 <code>skplt.cluster.plot_elbow_curve()</code> \u7528\u4e8e\u9009\u62e9\u6700\u4f73\u805a\u7c7b\u6570 K Silhouette \u56fe <code>skplt.cluster.plot_silhouette()</code> \u805a\u7c7b\u7c07\u5206\u5e03\u7d27\u5bc6\u5ea6\u4e0e\u5206\u79bb\u5ea6\u8bc4\u4f30 Calibration \u56fe <code>skplt.metrics.plot_calibration_curve()</code> \u9884\u6d4b\u6982\u7387\u7684\u6821\u51c6\u60c5\u51b5\uff08\u5982\u8fc7\u62df\u5408\uff09 \u51b3\u7b56\u8fb9\u754c <code>skplt.estimators.plot_2d_classification()</code> \u4e8c\u7ef4\u5206\u7c7b\u6a21\u578b\u7684\u51b3\u7b56\u8fb9\u754c\u53ef\u89c6\u5316"},{"location":"analysis/Scikit-plot/#_4","title":"\u4e94\u3001\u5206\u7c7b\u6a21\u578b\u53ef\u89c6\u5316\u793a\u4f8b","text":""},{"location":"analysis/Scikit-plot/#1","title":"1\ufe0f\u20e3 \u6df7\u6dc6\u77e9\u9635","text":"<pre><code>skplt.metrics.plot_confusion_matrix(y_test, y_pred, normalize=True)\nplt.show()\n</code></pre>"},{"location":"analysis/Scikit-plot/#2-roc","title":"2\ufe0f\u20e3 ROC \u66f2\u7ebf","text":"<pre><code>y_probas = clf.predict_proba(X_test)\nskplt.metrics.plot_roc(y_test, y_probas)\nplt.show()\n</code></pre>"},{"location":"analysis/Scikit-plot/#3-","title":"3\ufe0f\u20e3 \u7cbe\u786e\u7387-\u53ec\u56de\u7387\u66f2\u7ebf","text":"<pre><code>skplt.metrics.plot_precision_recall(y_test, y_probas)\nplt.show()\n</code></pre>"},{"location":"analysis/Scikit-plot/#_5","title":"\u516d\u3001\u5b66\u4e60\u66f2\u7ebf","text":"<pre><code>from sklearn.svm import SVC\nfrom sklearn.model_selection import StratifiedKFold\n\nskplt.estimators.plot_learning_curve(SVC(), X, y, cv=StratifiedKFold(5), scoring='accuracy')\nplt.show()\n</code></pre>"},{"location":"analysis/Scikit-plot/#_6","title":"\u4e03\u3001\u7279\u5f81\u91cd\u8981\u6027\u53ef\u89c6\u5316","text":"<p><pre><code>skplt.estimators.plot_feature_importances(clf, feature_names=None, title=\"\u7279\u5f81\u91cd\u8981\u6027\")\nplt.show()\n</code></pre> \u6ce8\u610f\uff1a\u6a21\u578b\u5fc5\u987b\u5177\u6709 .feature_importances_ \u5c5e\u6027\uff0c\u5982\u968f\u673a\u68ee\u6797\u3001\u51b3\u7b56\u6811\u3001XGBoost \u7b49\u3002</p>"},{"location":"analysis/Scikit-plot/#_7","title":"\u516b\u3001\u805a\u7c7b\u7b97\u6cd5\u53ef\u89c6\u5316","text":""},{"location":"analysis/Scikit-plot/#1-elbow-k","title":"1\ufe0f\u20e3 Elbow \u66f2\u7ebf\uff1a\u9009\u62e9\u6700\u4f73\u805a\u7c7b\u6570 K","text":"<pre><code>from sklearn.cluster import KMeans\n\nskplt.cluster.plot_elbow_curve(KMeans(), X)\nplt.show()\n</code></pre>"},{"location":"analysis/Scikit-plot/#2-silhouette","title":"2\ufe0f\u20e3 Silhouette \u5206\u6570\u56fe","text":"<pre><code>kmeans = KMeans(n_clusters=10)\nkmeans.fit(X)\nskplt.cluster.plot_silhouette(X, kmeans.labels_)\nplt.show()\n</code></pre>"},{"location":"analysis/Scikit-plot/#_8","title":"\u4e5d\u3001\u6a21\u578b\u6821\u51c6\u66f2\u7ebf\uff08\u6982\u7387\u8f93\u51fa\u6821\u51c6\uff09","text":"<pre><code>from sklearn.naive_bayes import GaussianNB\nfrom sklearn.calibration import CalibratedClassifierCV\n\ngnb = GaussianNB()\ncalibrated = CalibratedClassifierCV(gnb, cv=3)\ncalibrated.fit(X_train, y_train)\n\nskplt.metrics.plot_calibration_curve(y_test, [gnb.fit(X_train, y_train), calibrated], model_names=['Naive Bayes', 'Calibrated NB'])\nplt.show()\n</code></pre>"},{"location":"analysis/matplotlib/","title":"Matplotlib \u6559\u7a0b","text":""},{"location":"analysis/matplotlib/#_1","title":"\u4e00\u3001\u7b80\u4ecb","text":"<p>Matplotlib \u662f Python \u4e2d\u6700\u5e38\u7528\u7684\u6570\u636e\u53ef\u89c6\u5316\u5e93\uff0c\u63d0\u4f9b\u7c7b\u4f3c MATLAB \u7684\u7ed8\u56fe API\uff0c\u53ef\u4ee5\u7ed8\u5236\u5404\u79cd\u9759\u6001\u3001\u52a8\u6001\u3001\u4ea4 \u4e92\u5f0f\u56fe\u8868\u3002</p> <ul> <li>\u5b98\u7f51\uff1ahttps://matplotlib.org</li> <li>\u6838\u5fc3\u6a21\u5757\uff1amatplotlib.pyplot\uff08\u901a\u5e38\u7b80\u5199\u4e3a plt\uff09</li> </ul>"},{"location":"analysis/matplotlib/#_2","title":"\u4e8c\u3001\u5b89\u88c5","text":"<pre><code>pip install matplotlib\n</code></pre>"},{"location":"analysis/matplotlib/#_3","title":"\u4e09\u3001\u5feb\u901f\u5165\u95e8","text":"<pre><code>import matplotlib.pyplot as plt\n\n# \u6570\u636e\nx = [1, 2, 3, 4, 5]\ny = [2, 4, 6, 8, 10]\n\n# \u7ed8\u56fe\nplt.plot(x, y)\nplt.title(\"\u7b80\u5355\u6298\u7ebf\u56fe\")\nplt.xlabel(\"x\u8f74\")\nplt.ylabel(\"y\u8f74\")\nplt.show()\n</code></pre>"},{"location":"analysis/matplotlib/#_4","title":"\u56db\u3001\u5e38\u89c1\u56fe\u8868\u7c7b\u578b","text":"\u7c7b\u578b \u51fd\u6570 \u63cf\u8ff0 \u6298\u7ebf\u56fe <code>plt.plot()</code> \u6298\u7ebf \u6563\u70b9\u56fe <code>plt.scatter()</code> \u70b9\u72b6\u5206\u5e03 \u6761\u5f62\u56fe <code>plt.bar()</code> \u67f1\u72b6\uff08\u7ad6\uff09 \u6761\u5f62\u56fe\uff08\u6a2a\uff09 <code>plt.barh()</code> \u67f1\u72b6\uff08\u6a2a\uff09 \u76f4\u65b9\u56fe <code>plt.hist()</code> \u6570\u636e\u5206\u5e03 \u997c\u56fe <code>plt.pie()</code> \u5360\u6bd4 \u7bb1\u7ebf\u56fe <code>plt.boxplot()</code> \u56db\u5206\u4f4d/\u5f02\u5e38\u503c \u586b\u5145\u56fe <code>plt.fill_between()</code> \u533a\u57df\u9634\u5f71\u56fe \u56fe\u50cf\u663e\u793a <code>plt.imshow()</code> \u663e\u793a\u56fe\u7247\u6216\u70ed\u529b\u56fe"},{"location":"analysis/matplotlib/#_5","title":"\u4e94\u3001\u56fe\u8868\u5143\u7d20\u5b9a\u5236","text":""},{"location":"analysis/matplotlib/#1","title":"1. \u6dfb\u52a0\u6807\u9898\u548c\u5750\u6807\u8f74\u6807\u7b7e","text":"<pre><code>plt.title(\"\u6807\u9898\")\nplt.xlabel(\"x\u6807\u7b7e\")\nplt.ylabel(\"y\u6807\u7b7e\")\n</code></pre>"},{"location":"analysis/matplotlib/#2-legend","title":"2. \u56fe\u4f8b legend","text":"<pre><code>plt.plot(x, y, label=\"\u7ebf1\")\nplt.legend(loc=\"best\")  # \u53ef\u9009: upper right, lower left \u7b49\n</code></pre>"},{"location":"analysis/matplotlib/#3","title":"3. \u5750\u6807\u8303\u56f4","text":"<pre><code>plt.xlim(0, 10)\nplt.ylim(0, 20)\n</code></pre>"},{"location":"analysis/matplotlib/#4","title":"4. \u6837\u5f0f\u8bbe\u7f6e\uff08\u989c\u8272/\u7ebf\u578b/\u6807\u8bb0\uff09","text":"<pre><code>plt.plot(x, y, color='r', linestyle='--', marker='o')  # \u7ea2\u8272\u865a\u7ebf\u5706\u70b9\n</code></pre>"},{"location":"analysis/matplotlib/#_6","title":"\u516d\u3001\u6837\u5f0f\u4e0e\u4e3b\u9898","text":"<pre><code>plt.style.use(\"ggplot\")   # \u5176\u4ed6\u6837\u5f0f\u5982\uff1aseaborn, fivethirtyeight, classic\n</code></pre> <p>\u67e5\u770b\u6240\u6709\u53ef\u7528\u6837\u5f0f\uff1a</p> <pre><code>print(plt.style.available)\n</code></pre>"},{"location":"analysis/matplotlib/#subplot","title":"\u4e03\u3001\u5b50\u56fe subplot","text":"<pre><code>plt.subplot(2, 1, 1)  # 2\u884c1\u5217\uff0c\u7b2c1\u4e2a\u56fe\nplt.plot([1, 2, 3], [1, 2, 3])\n\nplt.subplot(2, 1, 2)  # \u7b2c2\u4e2a\u56fe\nplt.plot([1, 2, 3], [3, 2, 1])\nplt.tight_layout()\nplt.show()\n</code></pre>"},{"location":"analysis/matplotlib/#_7","title":"\u516b\u3001\u4fdd\u5b58\u56fe\u50cf","text":"<pre><code>plt.savefig(\"figure.png\", dpi=300, bbox_inches=\"tight\")\n</code></pre>"},{"location":"analysis/matplotlib/#numpy","title":"\u4e5d\u3001\u7ed3\u5408 NumPy \u4f7f\u7528\u793a\u4f8b","text":"<pre><code>import numpy as np\n\nx = np.linspace(0, 2 * np.pi, 100)\ny = np.sin(x)\n\nplt.plot(x, y)\nplt.title(\"\u6b63\u5f26\u66f2\u7ebf\")\nplt.grid(True)\nplt.show()\n</code></pre>"},{"location":"analysis/matplotlib/#_8","title":"\u5341\u3001\u52a8\u753b\u4e0e\u4ea4\u4e92\uff08\u8fdb\u9636\uff09","text":"<pre><code>from matplotlib import animation\n\nfig, ax = plt.subplots()\nx, y = [], []\nline, = ax.plot([], [], 'r-')\n\ndef init():\n    ax.set_xlim(0, 10)\n    ax.set_ylim(0, 10)\n    return line,\n\ndef update(frame):\n    x.append(frame)\n    y.append(frame)\n    line.set_data(x, y)\n    return line,\n\nani = animation.FuncAnimation(fig, update, frames=range(10), init_func=init, blit=True)\nplt.show()\n</code></pre>"},{"location":"analysis/matplotlib/#_9","title":"\u5341\u4e00\u3001\u5e38\u89c1\u95ee\u9898","text":"\u95ee\u9898 \u89e3\u51b3\u65b9\u6cd5 \u4e2d\u6587\u4e71\u7801 <code>plt.rcParams['font.sans-serif'] = ['SimHei']</code> \u8d1f\u53f7\u663e\u793a\u4e3a\u65b9\u6846 <code>plt.rcParams['axes.unicode_minus'] = False</code> \u56fe\u50cf\u663e\u793a\u4e0d\u5b8c\u6574 <code>plt.tight_layout()</code> \u56fe\u8868\u663e\u793a\u4f46\u4e00\u95ea\u800c\u8fc7\uff08\u5728\u67d0\u4e9b IDE \u4e2d\uff09 <code>plt.show()</code> \u653e\u5728\u6700\u540e\u663e\u793a\u56fe\u8868 Jupyter \u4e2d\u56fe\u8868\u4e0d\u663e\u793a \u5728\u5f00\u5934\u6dfb\u52a0 <code>%matplotlib inline</code> \u4fdd\u5b58\u56fe\u50cf\u6a21\u7cca\u6216\u88ab\u88c1\u526a \u4f7f\u7528 <code>dpi=300</code> \u548c <code>bbox_inches='tight'</code> \u53c2\u6570\u914d\u5408 <code>savefig</code>"},{"location":"analysis/matplotlib/#_10","title":"\u5341\u4e8c\u3001\u5b9e\u6218","text":""},{"location":"analysis/matplotlib/#1-line-chart","title":"1. \u6298\u7ebf\u56fe\uff08Line Chart\uff09","text":"<pre><code>import matplotlib.pyplot as plt \n%matplotlib inline\n\nplt.rcParams['font.family'] = [\"STHeiTi\"]\n\nx = [1, 2, 3, 4]\ny = [10, 20, 15, 25]\n\nplt.plot(x,y,color=\"red\",linestyle='--',marker='o',label=\"\u7ebf-1\")\nplt.title('\u7b80\u5355\u6298\u7ebf\u56fe')\nplt.xlabel('x \u8f74')\nplt.ylabel('y \u8f74')\nplt.legend(loc='upper left')\nplt.tight_layout()\nplt.show()\n</code></pre>"},{"location":"analysis/matplotlib/#2-scatter-plot","title":"2. \u6563\u70b9\u56fe\uff08Scatter Plot\uff09","text":"<pre><code>import matplotlib.pyplot as plt \n\nplt.rcParams['font.family'] = ['STHeiTi']\nplt.rcParams['axes.unicode_minus'] = False # \u51cf\u53f7\u663e\u793a\u95ee\u9898\n\nx = [1, 2, 3, 4]\ny = [10, 12, 14, 13]\n\nplt.scatter(x=x,y=y,color=\"blue\",label='\u6563\u70b9')\nplt.title(\"\u6563\u70b9\u56fe\",color=\"red\",loc=\"left\")\nplt.legend()\nplt.show()\n</code></pre>"},{"location":"analysis/matplotlib/#3-bar-chart","title":"3. \u67f1\u72b6\u56fe\uff08Bar Chart\uff09","text":"<pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\nplt.rcParams['font.family'] = ['STHeiTi']\n\n# \u6570\u636e\nlabels = ['A', 'B', 'C', 'D']\nx = np.arange(len(labels))  # x\u5750\u6807\ny1 = [5, 7, 6, 8]\ny2 = [3, 4, 2, 5]\ny3 = [2, 1, 4, 3]\n\n# \u7ed8\u56fe\nplt.bar(x, y1, label='\u7c7b\u522b1')\nplt.bar(x, y2, bottom=y1, label='\u7c7b\u522b2')  # y2 \u5728 y1 \u4e0a\u9762\nplt.bar(x, y3, bottom=np.array(y1)+np.array(y2), label='\u7c7b\u522b3')  # y3 \u7d2f\u52a0\n# \u6dfb\u52a0\u6807\u7b7e\nplt.xticks(x, labels)\nplt.ylabel('\u6570\u503c')\nplt.title('\u53e0\u52a0\u67f1\u72b6\u56fe')\nplt.legend()\n\nplt.tight_layout()\nplt.show()\n</code></pre> <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\nplt.rcParams['font.family'] = ['STHeiTi']\n\n# \u7ec4\u6807\u7b7e\nlabels = ['A', 'B', 'C', 'D']\nx = np.arange(len(labels))  # x\u8f74\u4f4d\u7f6e\n\n# \u6bcf\u4e2a\u7c7b\u522b\u7684\u6570\u636e\ny1 = [5, 6, 7, 8]   # \u7c7b\u522b1\ny2 = [4, 5, 6, 7]   # \u7c7b\u522b2\ny3 = [3, 4, 5, 6]   # \u7c7b\u522b3\n\nbar_width = 0.2  # \u6bcf\u4e2a\u67f1\u7684\u5bbd\u5ea6\n\nplt.bar(x-bar_width,y1,width=bar_width,label=\"\u7c7b\u522b 1\")\nplt.bar(x,y2,width=bar_width,label='\u7c7b\u522b 2')\nplt.bar(x+bar_width,y3,width=bar_width,label='\u7c7b\u522b 3')\n\n# \u6807\u7b7e\u8bbe\u7f6e\nplt.xticks(x,labels)\nplt.ylabel(\"\u6570\u503c\")\nplt.title(\"\u5206\u7ec4\u67f1\u72b6\u56fe\")\nplt.legend()\nplt.tight_layout()\nplt.show()\n</code></pre> <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\n# \u5206\u7ec4\u6807\u7b7e\nlabels = ['A', 'B', 'C', 'D']\ny = np.arange(len(labels))  # y\u8f74\u5750\u6807 [0,1,2,3]\n\n# \u6bcf\u7ec4\u7684\u5b50\u7c7b\u522b\u6570\u636e\nx1 = [5, 6, 7, 8]\nx2 = [4, 5, 6, 7]\nx3 = [3, 4, 5, 6]\n\nbar_height = 0.2  # \u6bcf\u4e2a\u5b50\u7c7b\u522b\u7684\u6761\u5f62\u9ad8\u5ea6\n\n# \u7ed8\u56fe\uff1ay\u8f74\u5750\u6807\u5411\u4e0b\u504f\u79fb\uff0c\u907f\u514d\u91cd\u53e0\nplt.barh(y - bar_height, x1, height=bar_height, label='\u7c7b\u522b1')\nplt.barh(y,              x2, height=bar_height, label='\u7c7b\u522b2')\nplt.barh(y + bar_height, x3, height=bar_height, label='\u7c7b\u522b3')\n\n# \u8bbe\u7f6ey\u8f74\u6807\u7b7e\nplt.yticks(y, labels)\nplt.xlabel('\u6570\u503c')\nplt.title('\u6c34\u5e73\u5206\u7ec4\u67f1\u72b6\u56fe')\nplt.legend()\nplt.tight_layout()\nplt.show()\n</code></pre>"},{"location":"analysis/matplotlib/#4_1","title":"4. \u76f4\u65b9\u56fe","text":"<pre><code>import matplotlib.pyplot as plt \nimport numpy as np\n\nplt.rcParams['font.family'] = ['STHeiTi']\n\n# \u751f\u6210\u6a21\u62df\u6570\u636e\uff08\u6b63\u6001\u5206\u5e03\uff09\ndata = np.random.normal(loc=100, scale=15, size=200)\n\n# density\uff1a\u662f\u5426\u6807\u51c6\u5316\u4e3a\u6982\u7387\u5bc6\u5ea6   bins\uff1a\u5206\u6210\u591a\u5c11\u4e2a\u533a\u95f4\uff08\u4e5f\u53ef\u4ee5\u4f20 list \u81ea\u5b9a\u4e49\uff09\nplt.hist(data,bins=10,density=True,color='skyblue',edgecolor='black')\nplt.xlabel('\u6570\u503c\u533a\u95f4')\nplt.ylabel(\"\u9891\u6570\")\nplt.title(\"\u76f4\u65b9\u56fe\u793a\u4f8b\")\nplt.tight_layout()\nplt.show()\n</code></pre> <pre><code>from scipy.stats import norm\n\n# \u62df\u5408\u6b63\u6001\u5206\u5e03\u66f2\u7ebf\nmu, std = norm.fit(data)\nx = np.linspace(min(data), max(data), 100)\npdf = norm.pdf(x, mu, std)\n\n# \u7ed8\u56fe\nplt.hist(data, bins=10, density=True, color='skyblue', edgecolor='black')\nplt.plot(x, pdf, 'r-', label='\u6b63\u6001\u5206\u5e03\u62df\u5408')\nplt.legend()\nplt.show()\n</code></pre>"},{"location":"analysis/matplotlib/#5","title":"5. \u997c\u56fe","text":"<pre><code>import matplotlib.pyplot as plt \n\n# \u6570\u636e\nlabels = ['\u82f9\u679c', '\u9999\u8549', '\u6a59\u5b50', '\u8461\u8404']\nsizes = [30, 25, 20, 25]\n\n# autopct\uff1a\u663e\u793a\u767e\u5206\u6bd4\uff0c\u5982 %1.1f%% \u8868\u793a\u4fdd\u75591\u4f4d\u5c0f\u6570  startangle\uff1a\u8d77\u59cb\u89d2\u5ea6\uff08\u9ed8\u8ba4\u4ece x \u8f74\u6b63\u65b9\u5411\uff09\nplt.pie(x=sizes,labels=labels,autopct='%1.1f%%',startangle=90)\n\nplt.title('\u6c34\u679c\u9500\u91cf\u5360\u6bd4')\nplt.axis('equal') # \u4fdd\u8bc1\u4e3a\u6b63\u5706\u5f62\nplt.show()\n</code></pre> <pre><code>import matplotlib.pyplot as plt \n\nplt.rcParams['font.family'] = \"STHeiTi\"\nplt.rcParams['axes.unicode_minus'] = False\n\nlabels = ['\u82f9\u679c', '\u9999\u8549', '\u6a59\u5b50', '\u8461\u8404']\nsizes = [30, 25, 20, 25]\nexplode = [0, 0.1, 0, 0]  # \u7a81\u51fa\u9999\u8549\n\nplt.pie(x=sizes,labels=labels,autopct=\"%1.1f%%\",startangle=90,explode=explode,shadow=True)\nplt.title(\"\u6c34\u679c\u9500\u91cf\u6bd4\u4f8b\")\nplt.axis('equal') # \u8bbe\u7f6e x \u8f74\u4e0e y \u8f74\u7684\u5355\u4f4d\u957f\u5ea6\u6bd4\u4f8b\u76f8\u540c\nplt.tight_layout()\nplt.show()\n</code></pre>"},{"location":"analysis/matplotlib/#6","title":"6. \u7bb1\u7ebf\u56fe","text":"\u7ec4\u6210\u90e8\u5206 \u542b\u4e49\u8bf4\u660e \u6700\u5c0f\u503c\uff08Minimum\uff09 \u975e\u5f02\u5e38\u6570\u636e\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u901a\u5e38\u4e3a Q1 - 1.5\u00d7IQR \u4ee5\u5185\u7684\u6570\u636e\u6700\u5c0f\u503c \u4e0b\u56db\u5206\u4f4d\u6570\uff08Q1\uff09 \u5c06\u6570\u636e\u6309\u5927\u5c0f\u987a\u5e8f\u6392\u5217\u540e\uff0c\u5904\u4e8e 25% \u4f4d\u7f6e\u7684\u503c \u4e2d\u4f4d\u6570\uff08Q2\uff09 \u5c06\u6570\u636e\u6309\u5927\u5c0f\u987a\u5e8f\u6392\u5217\u540e\uff0c\u5904\u4e8e 50% \u4f4d\u7f6e\u7684\u503c\uff08\u7bb1\u4f53\u4e2d\u95f4\u7684\u7ebf\uff09 \u4e0a\u56db\u5206\u4f4d\u6570\uff08Q3\uff09 \u5c06\u6570\u636e\u6309\u5927\u5c0f\u987a\u5e8f\u6392\u5217\u540e\uff0c\u5904\u4e8e 75% \u4f4d\u7f6e\u7684\u503c \u6700\u5927\u503c\uff08Maximum\uff09 \u975e\u5f02\u5e38\u6570\u636e\u4e2d\u7684\u6700\u5927\u503c\uff0c\u901a\u5e38\u4e3a Q3 + 1.5\u00d7IQR \u4ee5\u5185\u7684\u6570\u636e\u6700\u5927\u503c IQR \u56db\u5206\u4f4d\u6570\u95f4\u8ddd\uff0cIQR = Q3 - Q1 \u7bb1\u4f53\uff08Box\uff09 \u4ece Q1 \u5230 Q3 \u7684\u533a\u57df\uff0c\u8868\u793a\u4e2d\u95f4 50% \u7684\u6570\u636e\u5206\u5e03 \u4e2d\u4f4d\u7ebf\uff08Median Line\uff09 \u7bb1\u4f53\u5185\u90e8\u7684\u4e00\u6761\u7ebf\uff0c\u8868\u793a\u4e2d\u4f4d\u6570\u7684\u4f4d\u7f6e \u987b\uff08Whiskers\uff09 \u4ece Q1 \u5ef6\u4f38\u5230\u6700\u5c0f\u503c\u3001Q3 \u5ef6\u4f38\u5230\u6700\u5927\u503c\u7684\u7ebf\uff0c\u8868\u793a\u975e\u5f02\u5e38\u503c\u7684\u8303\u56f4 \u5f02\u5e38\u503c\uff08Outliers\uff09 \u8d85\u51fa Q1 - 1.5\u00d7IQR \u6216 Q3 + 1.5\u00d7IQR \u8303\u56f4\u7684\u70b9\uff0c\u901a\u5e38\u7528\u5355\u72ec\u7684\u70b9\u6765\u8868\u793a <pre><code>plt.boxplot(data, notch=False, vert=True, patch_artist=False, labels=None)\n</code></pre> \u53c2\u6570\u540d \u7c7b\u578b \u9ed8\u8ba4\u503c \u8bf4\u660e <code>x</code> array-like \u5fc5\u987b\u53c2\u6570 \u8f93\u5165\u6570\u636e\uff0c\u53ef\u4ee5\u662f\u4e00\u7ec4\u6570\u503c\u3001\u4e8c\u7ef4\u6570\u7ec4\uff08\u591a\u7ec4\uff09\u6216\u5e26\u6807\u7b7e\u7684\u7ed3\u6784\u3002 <code>notch</code> bool <code>False</code> \u662f\u5426\u7ed8\u5236\u7f3a\u53e3\u7bb1\u7ebf\u56fe\uff08notched boxplot\uff09\u3002\u7f3a\u53e3\u53ef\u7528\u4e8e\u7c97\u7565\u663e\u793a\u4e2d\u4f4d\u6570\u5dee\u5f02\u662f\u5426\u663e\u8457\u3002 <code>vert</code> bool <code>True</code> \u662f\u5426\u5782\u76f4\u663e\u793a\u7bb1\u7ebf\u56fe\u3002<code>False</code> \u8868\u793a\u6c34\u5e73\u7bb1\u7ebf\u56fe\u3002 <code>patch_artist</code> bool <code>False</code> \u662f\u5426\u586b\u5145\u7bb1\u4f53\u989c\u8272\u3002 <code>meanline</code> bool <code>False</code> \u662f\u5426\u7528\u7ebf\u6761\u663e\u793a\u5747\u503c\u3002 <code>showmeans</code> bool <code>False</code> \u662f\u5426\u663e\u793a\u5747\u503c\u70b9\u3002 <code>showbox</code> bool <code>True</code> \u662f\u5426\u663e\u793a\u7bb1\u4f53\u3002 <code>showfliers</code> bool <code>True</code> \u662f\u5426\u663e\u793a\u5f02\u5e38\u503c\uff08outliers\uff09\u3002 <code>showcaps</code> bool <code>True</code> \u662f\u5426\u663e\u793a\u4e0a\u4e0b\u987b\uff08whisker caps\uff09\u3002 <code>whis</code> float or tuple <code>1.5</code> \u63a7\u5236\u987b\u7684\u957f\u5ea6\uff1a<code>1.5</code> \u8868\u793a1.5\u500d\u56db\u5206\u4f4d\u8ddd\u4ee5\u5916\u7684\u70b9\u4e3a\u5f02\u5e38\u503c\u3002 <code>labels</code> list <code>None</code> \u8bbe\u7f6e\u5404\u7ec4\u6570\u636e\u7684\u6807\u7b7e\u3002 <code>flierprops</code> dict <code>None</code> \u5f02\u5e38\u503c\u7684\u6837\u5f0f\uff0c\u5982\u989c\u8272\u3001\u5f62\u72b6\u7b49\uff0c\u4f7f\u7528 <code>marker</code>\u3001<code>color</code> \u7b49\u5b57\u6bb5\u8bbe\u7f6e\u3002 <code>boxprops</code> dict <code>None</code> \u7bb1\u4f53\u6837\u5f0f\u8bbe\u7f6e\uff0c\u5982\u989c\u8272\u3001\u7ebf\u5bbd\u7b49\u3002 <code>capprops</code> dict <code>None</code> \u987b\u7aef\u6a2a\u7ebf\uff08caps\uff09\u7684\u6837\u5f0f\u8bbe\u7f6e\u3002 <code>whiskerprops</code> dict <code>None</code> \u987b\uff08whiskers\uff09\u7684\u6837\u5f0f\u8bbe\u7f6e\u3002 <code>medianprops</code> dict <code>None</code> \u4e2d\u4f4d\u6570\u7ebf\u6761\u7684\u6837\u5f0f\u8bbe\u7f6e\u3002 <code>meanprops</code> dict <code>None</code> \u5747\u503c\u70b9\u6216\u7ebf\u7684\u6837\u5f0f\u8bbe\u7f6e\u3002 <code>widths</code> float or array <code>0.5</code> \u7bb1\u4f53\u7684\u5bbd\u5ea6\u3002 <code>manage_ticks</code> bool <code>True</code> \u662f\u5426\u81ea\u52a8\u5904\u7406\u523b\u5ea6\u6807\u7b7e\u3002 <p>\ud83d\udd0d <code>plt.boxplot()</code> \u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u5305\u542b\u7ed8\u56fe\u4e2d\u5404\u5143\u7d20\u7684 <code>Line2D</code> \u6216 <code>Patch</code> \u5bf9\u8c61\uff0c\u53ef\u7528\u4e8e\u81ea\u5b9a\u4e49\u6837\u5f0f\u3002</p> <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\n# \u6a21\u62df\u6570\u636e\uff1a3\u7ec4\u6210\u7ee9\ndata = [\n    np.random.normal(80, 10, 100),\n    np.random.normal(70, 15, 100),\n    np.random.normal(60, 20, 100)\n]\n\nlabels = ['\u8bed\u6587', '\u6570\u5b66', '\u82f1\u8bed']\nplt.boxplot(data,labels=labels,patch_artist=True)\nplt.title(\"\u5b66\u751f\u6210\u7ee9\u7bb1\u7ebf\u56fe\")\nplt.ylabel(\"\u5206\u6570\")\nplt.grid(True)\nplt.show()\n</code></pre> <p></p>"},{"location":"analysis/matplotlib/#7","title":"7. \u586b\u5145\u56fe","text":"<p><code>plt.fill_between()</code> \u53c2\u6570\u8be6\u89e3</p> \u53c2\u6570\u540d \u8bf4\u660e <code>x</code> \u6a2a\u5750\u6807\u6570\u7ec4\uff0c\u8868\u793a\u586b\u5145\u533a\u57df\u7684\u8d77\u59cb\u6a2a\u5750\u6807 <code>y1</code> \u7b2c\u4e00\u4e2a y \u503c\u6570\u7ec4\uff0c\u586b\u5145\u533a\u57df\u7684\u4e0a\u8fb9\u754c\uff08\u6216\u4e0b\u8fb9\u754c\uff09 <code>y2</code> \uff08\u53ef\u9009\uff09\u7b2c\u4e8c\u4e2a y \u503c\u6570\u7ec4\uff0c\u586b\u5145\u533a\u57df\u7684\u4e0b\u8fb9\u754c\uff0c\u9ed8\u8ba4\u4e0e x \u8f74\uff08y=0\uff09\u586b\u5145 <code>where</code> \uff08\u53ef\u9009\uff09\u5e03\u5c14\u6570\u7ec4\uff0c\u6307\u793a\u54ea\u4e9b\u533a\u57df\u9700\u8981\u586b\u5145 <code>interpolate</code> \u662f\u5426\u63d2\u503c\u4ee5\u786e\u4fdd\u5728\u8fb9\u754c\u70b9\u586b\u5145\uff0c\u9ed8\u8ba4 False <code>color</code> \u586b\u5145\u989c\u8272\uff0c\u4f8b\u5982 'skyblue'\u3001'#ff9999' <code>alpha</code> \u900f\u660e\u5ea6\uff0c\u8303\u56f4 [0,1]\uff0c\u8d8a\u5c0f\u8d8a\u900f\u660e <code>label</code> \u56fe\u4f8b\u6807\u7b7e <code>linewidth</code> \u586b\u5145\u8fb9\u7f18\u7ebf\u5bbd\uff0c\u9ed8\u8ba4\u65e0\u8fb9\u7f18\u7ebf <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\nplt.rcParams['font.family'] = [\"STHeiTi\"]\nplt.rcParams['axes.unicode_minus'] = False\n\nx = np.linspace(0,10,500)\ny1 = np.sin(x)\ny2 = np.sin(x) + 0.5\n\nplt.plot(x,y1,label='y1')\nplt.plot(x,y2,label='y2')\n\nplt.fill_between(x,y1,y2,color='skyblue',alpha=0.8,label=\"Filled Area\")\n\nplt.legend()\nplt.title(\"Fill_between \u793a\u4f8b\")\nplt.show()\n</code></pre> <p></p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.linspace(0, 10, 200)\ny = np.sin(x)\n\nplt.plot(x, y, label='y = sin(x)')\n\n# \u53ea\u5728 y &gt; 0 \u7684\u5730\u65b9\u586b\u5145\nplt.fill_between(x, y, 0, where=(y &gt; 0), color='green', alpha=0.3, label='y &gt; 0')\n# \u53ea\u5728 y &lt; 0 \u7684\u5730\u65b9\u586b\u5145\nplt.fill_between(x, y, 0, where=(y &lt; 0), color='red', alpha=0.3, label='y &lt; 0')\n\nplt.axhline(0, color='black', linewidth=1)\nplt.legend()\nplt.title(\"fill_between + where \u793a\u4f8b\")\nplt.show()\n</code></pre> <p></p>"},{"location":"analysis/matplotlib/#8","title":"8. \u56fe\u50cf\u663e\u793a","text":"\u53c2\u6570 \u8bf4\u660e <code>X</code> \u8f93\u5165\u7684\u4e8c\u7ef4\u6570\u7ec4\uff08\u56fe\u50cf\u6570\u636e\uff09 <code>cmap</code> \u989c\u8272\u6620\u5c04\u8868\uff0c\u4f8b\u5982 <code>'gray'</code>, <code>'viridis'</code>, <code>'hot'</code> \u7b49 <code>interpolation</code> \u63d2\u503c\u65b9\u6cd5\uff0c\u5982 <code>'nearest'</code>, <code>'bilinear'</code>, <code>'bicubic'</code> \u7b49\uff0c\u63a7\u5236\u56fe\u50cf\u653e\u7f29\u65b9\u5f0f <code>norm</code> \u5f52\u4e00\u5316\u65b9\u5f0f\uff0c\u5982 <code>Normalize()</code>\uff0c\u7528\u4e8e\u8c03\u6574\u663e\u793a\u8303\u56f4 <code>vmin</code>, <code>vmax</code> \u624b\u52a8\u8bbe\u7f6e\u989c\u8272\u6620\u5c04\u8303\u56f4\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c <code>alpha</code> \u900f\u660e\u5ea6\uff080~1\uff09 <code>extent</code> \u6307\u5b9a\u56fe\u50cf\u8fb9\u754c\u8303\u56f4 <code>[xmin, xmax, ymin, ymax]</code> <code>origin</code> \u539f\u70b9\u4f4d\u7f6e\uff1a<code>'upper'</code>\uff08\u9ed8\u8ba4\uff0c\u5de6\u4e0a\uff09\u6216 <code>'lower'</code>\uff08\u5de6\u4e0b\uff09 <code>aspect</code> \u56fe\u50cf\u957f\u5bbd\u6bd4\uff0c\u5e38\u89c1\u4e3a <code>'auto'</code>, <code>'equal'</code> <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\ndata = np.random.rand(10, 10)  # 10x10 \u968f\u673a\u7070\u5ea6\u56fe\nplt.imshow(data, cmap='viridis', interpolation='nearest',extent=[0, 5, 0, 5])\nplt.colorbar()  # \u663e\u793a\u989c\u8272\u6761\nplt.title(\"\u793a\u4f8b\u56fe\u50cf\")\nplt.show()\n</code></pre>"},{"location":"analysis/numpy/","title":"NumPy\u79d1\u5b66\u8ba1\u7b97\u5e93","text":""},{"location":"analysis/numpy/#_1","title":"\u8bfe\u7a0b\u4ecb\u7ecd","text":"<p>NumPy\uff08Numerical Python\uff09\u662fPython\u7684\u4e00\u79cd\u5f00\u6e90\u7684\u6570\u503c\u8ba1\u7b97\u6269\u5c55\u3002\u63d0\u4f9b\u591a\u7ef4\u6570\u7ec4\u5bf9\u8c61\uff0c\u5404\u79cd\u6d3e\u751f\u5bf9\u8c61\uff08\u5982\u63a9\u7801\u6570\u7ec4\u548c\u77e9\u9635\uff09\uff0c\u8fd9\u79cd\u5de5\u5177\u53ef\u7528\u6765\u5b58\u50a8\u548c\u5904\u7406\u5927\u578b\u77e9\u9635\uff0c\u6bd4Python\u81ea\u8eab\u7684\u5d4c\u5957\u5217\u8868\uff08nested list structure)\u7ed3\u6784\u8981\u9ad8\u6548\u7684\u591a\uff08\u8be5\u7ed3\u6784\u4e5f\u53ef\u4ee5\u7528\u6765\u8868\u793a\u77e9\u9635\uff08matrix\uff09\uff09\uff0c\u652f\u6301\u5927\u91cf\u7684\u7ef4\u5ea6\u6570\u7ec4\u4e0e\u77e9\u9635\u8fd0\u7b97\uff0c\u6b64\u5916\u4e5f\u9488\u5bf9\u6570\u7ec4\u8fd0\u7b97\u63d0\u4f9b\u5927\u91cf\u7684\u6570\u5b66\u51fd\u6570\u5e93\uff0c\u5305\u62ec\u6570\u5b66\u3001\u903b\u8f91\u3001\u5f62\u72b6\u64cd\u4f5c\u3001\u6392\u5e8f\u3001\u9009\u62e9\u3001\u8f93\u5165\u8f93\u51fa\u3001\u79bb\u6563\u5085\u7acb\u53f6\u53d8\u6362\u3001\u57fa\u672c\u7ebf\u6027\u4ee3\u6570\uff0c\u57fa\u672c\u7edf\u8ba1\u8fd0\u7b97\u548c\u968f\u673a\u6a21\u62df\u7b49\u7b49\u3002</p> <ul> <li>\u51e0\u4e4e\u6240\u6709\u4ece\u4e8bPython\u5de5\u4f5c\u7684\u6570\u636e\u5206\u6790\u5e08\u90fd\u5229\u7528NumPy\u7684\u5f3a\u5927\u529f\u80fd\u3002<ul> <li>\u5f3a\u5927\u7684N\u7ef4\u6570\u7ec4</li> <li>\u6210\u719f\u7684\u5e7f\u64ad\u529f\u80fd</li> <li>\u7528\u4e8e\u6574\u5408C/C++\u548cFortran\u4ee3\u7801\u7684\u5de5\u5177\u5305</li> <li>NumPy\u63d0\u4f9b\u4e86\u5168\u9762\u7684\u6570\u5b66\u529f\u80fd\u3001\u968f\u673a\u6570\u751f\u6210\u5668\u548c\u7ebf\u6027\u4ee3\u6570\u529f\u80fd</li> </ul> </li> <li> <p>\u5b89\u88c5Python\u5e93</p> <ul> <li>\u7b2c\u4e00\u79cd\u65b9\u5f0f\uff1a<ul> <li>pip install jupyter -i https://pypi.tuna.tsinghua.edu.cn/simple</li> <li>pip install numpy -i https://pypi.tuna.tsinghua.edu.cn/simple</li> </ul> </li> <li> <p>\u7b2c\u4e8c\u79cd\u65b9\u5f0f\uff1a</p> <ul> <li>\u76f4\u63a5\u5b89\u88c5anaconda\u4e0b\u8f7d</li> <li>\u6ce8\u610f\uff1aAdd Path\uff01\uff01\uff01 \u6dfb\u52a0\u4e00\u4e0b\u73af\u5883\u53d8\u91cf~</li> </ul> <p></p> <ul> <li>\u767e\u5ea6\u7f51\u76d8\u94fe\u63a5: https://pan.baidu.com/s/1sQ8LMH6q8ezVUzNjSCtgyQ \u63d0\u53d6\u7801: sm7m</li> </ul> </li> </ul> </li> <li> <p>\u542f\u52a8\u7ec8\u7aef</p> <ul> <li>Windows----&gt; \u5feb\u6377\u952e\uff1awin + R -----&gt;\u8f93\u5165\uff1acmd\u56de\u8f66------&gt;\u547d\u4ee4\u884c\u51fa\u6765</li> <li>Mac ----&gt;\u542f\u52a8\u7ec8\u7aef</li> </ul> </li> <li> <p>\u542f\u52a8jupyter</p> <ul> <li>\u8fdb\u5165\u7ec8\u7aef\u8f93\u5165\u6307\u4ee4:jupyter notebook</li> <li>\u5728\u54ea\u91cc\u542f\u52a8jupyter\u542f\u52a8\uff0c\u6d4f\u89c8\u5668\u4e0a\u7684\u76ee\u5f55\uff0c\u5bf9\u5e94\u54ea\u91cc\uff0cwindows\u9ed8\u8ba4\u8def\u5f84\u662f\uff1aC:\\Users\\lufengkun</li> <li>C:\\Users\\xxx</li> </ul> </li> <li> <p>jupyter\u6269\u5c55\u63d2\u4ef6</p> <ul> <li><code>pip install jupyter_contrib_nbextensions -i https://pypi.tuna.tsinghua.edu.cn/simple</code></li> <li>pip install jupyter_nbextensions_configurator -i https://pypi.tuna.tsinghua.edu.cn/simple</li> <li>jupyter contrib nbextension install --user</li> <li>jupyter nbextensions_configurator enable --user</li> <li>\u9000\u51fa\uff0c\u91cd\u65b0\u8fdb\u5165jupyter notebook\u5c31\u53ef\u4ee5\u4e86</li> </ul> </li> </ul>"},{"location":"analysis/numpy/#_2","title":"\u7b2c\u4e00\u90e8\u5206 \u57fa\u672c\u64cd\u4f5c","text":""},{"location":"analysis/numpy/#_3","title":"\u7b2c\u4e00\u8282  \u6570\u7ec4\u521b\u5efa","text":"<p>\u521b\u5efa\u6570\u7ec4\u7684\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u4f7f\u7528array\u51fd\u6570\uff0c\u5c06Python\u4e0b\u7684list\u8f6c\u6362\u4e3andarray\u3002</p> <pre><code>import numpy as np\nl = [1,3,5,7,9] # \u5217\u8868\narr = np.array(l) # \u5c06\u5217\u8868\u8f6c\u6362\u4e3aNumPy\u6570\u7ec4\narr # \u6570\u636e\u4e00\u6837\uff0cNumPy\u6570\u7ec4\u7684\u65b9\u6cd5\uff0c\u529f\u80fd\u66f4\u52a0\u5f3a\u5927\n# \u8f93\u51fa\u4e3a\n# array([1, 3, 5, 7, 9])\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u5229\u7528np\u4e2d\u7684\u4e00\u4e9b\u5185\u7f6e\u51fd\u6570\u6765\u521b\u5efa\u6570\u7ec4\uff0c\u6bd4\u5982\u6211\u4eec\u521b\u5efa\u51680\u7684\u6570\u7ec4\uff0c\u4e5f\u53ef\u4ee5\u521b\u5efa\u51681\u6570\u7ec4\uff0c\u5168\u662f\u5176\u4ed6\u6570\u5b57\u7684\u6570\u7ec4\uff0c\u6216\u8005\u7b49\u5dee\u6570\u5217\u6570\u7ec4\uff0c\u6b63\u6001\u5206\u5e03\u6570\u7ec4\uff0c\u968f\u673a\u6570\u3002</p> <pre><code>import numpy as np\narr1 = np.ones(10) # \u8f93\u51fa\u4e3a\uff1aarray([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])\narr2 = np.zeros(10) # \u8f93\u51fa\u4e3a\uff1a array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])\narr3 = np.full(shape = [2,3],fill_value=2.718) \n# \u8f93\u51fa\u4e3a\uff1a\n# array([[2.718, 2.718, 2.718],\n#       [2.718, 2.718, 2.718]])\narr4 = np.arange(start = 0,stop = 20,step = 2) \n# \u7b49\u5dee\u6570\u5217 \u8f93\u51fa\u4e3a\uff1aarray([ 0,  2,  4,  6,  8, 10, 12, 14, 16, 18])\narr5 = np.linspace(start =0,stop = 9,num = 10) \n# \u7b49\u5dee\u6570\u5217 \u8f93\u51fa\u4e3a\uff1aarray([0., 1., 2., 3., 4., 5., 6., 7., 8., 9.])\narr6 = np.random.randint(0,100,size = 10) \n# int\u968f\u673a\u6570 \u8f93\u51fa\u4e3a\uff1aarray([ 4,  8, 79, 62, 34, 35,  2, 65, 47, 18])\narr7 = np.random.randn(5) \n# \u6b63\u6001\u5206\u5e03 \u8f93\u51fa\u4e3a\uff1aarray([ 0.57807872,  0.37922855,  2.37936837, -0.28688769,  0.2882854 ])\narr8 = np.random.random(size = 5) \n# float \u968f\u673a\u6570 \u8f93\u51fa\u4e3a\uff1aarray([0.59646412, 0.37960586, 0.38077327, 0.76983539, 0.22689201])\n</code></pre>"},{"location":"analysis/numpy/#_4","title":"\u7b2c\u4e8c\u8282  \u67e5\u770b\u64cd\u4f5c","text":"<p>NumPy\u7684\u6570\u7ec4\u7c7b\u79f0\u4e3andarray\uff0c\u4e5f\u88ab\u79f0\u4e3a\u522b\u540d array\u3002\u8bf7\u6ce8\u610f\uff0cnumpy.array\u8fd9\u4e0e\u6807\u51c6Python\u5e93\u7c7b\u4e0d\u540carray.array\uff0c\u540e\u8005\u4ec5\u5904\u7406\u4e00\u7ef4\u6570\u7ec4\u4e14\u529f\u80fd\u8f83\u5c11\u3002ndarray\u5bf9\u8c61\u7684\u91cd\u8981\u5c5e\u6027\u662f</p>"},{"location":"analysis/numpy/#121","title":"1.2.1 \u6570\u7ec4\u7684\u8f74\u6570\u3001\u7ef4\u5ea6","text":"<pre><code>import numpy as np \narr = np.random.randint(0,100,size = (3,4,5))\narr.ndim # \u8f93\u51fa 3\n</code></pre>"},{"location":"analysis/numpy/#122","title":"1.2.2 \u6570\u7ec4\u5c3a\u5bf8\u5f62\u72b6","text":"<pre><code>import numpy as np \narr = np.random.randint(0,100,size = (3,4,5))\narr.shape # \u8f93\u51fa (3,4,5)\n</code></pre>"},{"location":"analysis/numpy/#123","title":"1.2.3 \u6570\u7ec4\u5143\u7d20\u7684\u603b\u6570","text":"<pre><code>import numpy as np \narr = np.random.randint(0,100,size = (3,4,5))\narr.size # \u8f93\u51fa 3*4*5 = 60\n</code></pre>"},{"location":"analysis/numpy/#124","title":"1.2.4 \u6570\u636e\u7c7b\u578b","text":"<pre><code>import numpy as np \narr = np.random.randint(0,100,size = (3,4,5))\narr.dtype # \u8f93\u51fa dtype('int64')\n</code></pre>"},{"location":"analysis/numpy/#125","title":"1.2.5 \u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u5927\u5c0f\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09","text":"<pre><code>import numpy as np \narr = np.random.randint(0,100,size = (3,4,5))\narr.itemsize #\u8f93\u51fa\u662f 8 \uff0c\u56e0\u4e3a\u6570\u636e\u7c7b\u578b\u662fint64\uff0c64\u4f4d\uff0c\u4e00\u4e2a\u5b57\u8282\u662f8\u4f4d\uff0c\u6240\u4ee564/8 = 8\n</code></pre>"},{"location":"analysis/numpy/#io","title":"\u7b2c\u4e09\u8282 \u6587\u4ef6IO\u64cd\u4f5c","text":""},{"location":"analysis/numpy/#131","title":"1.3.1 \u4fdd\u5b58\u6570\u7ec4","text":"<p>save\u65b9\u6cd5\u4fdd\u5b58ndarray\u5230\u4e00\u4e2anpy\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528savez\u5c06\u591a\u4e2aarray\u4fdd\u5b58\u5230\u4e00\u4e2a.npz\u6587\u4ef6\u4e2d</p> <pre><code>x = np.random.randn(5)\ny = np.arange(0,10,1)\n#save\u65b9\u6cd5\u53ef\u4ee5\u5b58\u4e00\u4e2andarray\nnp.save(\"x_arr\",x)\n#\u5982\u679c\u8981\u5b58\u591a\u4e2a\u6570\u7ec4\uff0c\u8981\u662f\u7528savez\u65b9\u6cd5\uff0c\u4fdd\u5b58\u65f6\u4ee5key-value\u5f62\u5f0f\u4fdd\u5b58\uff0ckey\u4efb\u610f\uff08xarr\u3001yarr\uff09\nnp.savez(\"some_array.npz\",xarr = x,yarr=y)\n</code></pre>"},{"location":"analysis/numpy/#132","title":"1.3.2 \u8bfb\u53d6","text":"<p>load\u65b9\u6cd5\u6765\u8bfb\u53d6\u5b58\u50a8\u7684\u6570\u7ec4\uff0c\u5982\u679c\u662f.npz\u6587\u4ef6\u7684\u8bdd\uff0c\u8bfb\u53d6\u4e4b\u540e\u76f8\u5f53\u4e8e\u5f62\u6210\u4e86\u4e00\u4e2akey-value\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u901a\u8fc7\u4fdd\u5b58\u65f6\u5b9a\u4e49\u7684key\u6765\u83b7\u53d6\u76f8\u5e94\u7684array</p> <pre><code>np.load('x_arr.npy') # \u76f4\u63a5\u52a0\u8f7d\n\n# \u901a\u8fc7key\u83b7\u53d6\u4fdd\u5b58\u7684\u6570\u7ec4\u6570\u636e\nnp.load('some_array.npz')['yarr']\n</code></pre>"},{"location":"analysis/numpy/#133-csvtxt","title":"1.3.3 \u8bfb\u5199csv\u3001txt\u6587\u4ef6","text":"<pre><code>arr = np.random.randint(0,10,size = (3,4))\n#\u50a8\u5b58\u6570\u7ec4\u5230txt\u6587\u4ef6\nnp.savetxt(\"arr.csv\",arr,delimiter=',') # \u6587\u4ef6\u540e\u7f00\u662ftxt\u4e5f\u662f\u4e00\u6837\u7684\n#\u8bfb\u53d6txt\u6587\u4ef6\uff0cdelimiter\u4e3a\u5206\u9694\u7b26\uff0cdtype\u4e3a\u6570\u636e\u7c7b\u578b\nnp.loadtxt(\"arr.csv\",delimiter=',',dtype=np.int32)\n</code></pre>"},{"location":"analysis/numpy/#_5","title":"\u7b2c\u4e8c\u90e8\u5206 \u6570\u636e\u7c7b\u578b","text":"<p>ndarray\u7684\u6570\u636e\u7c7b\u578b\uff1a</p> <ul> <li>int: int8\u3001uint8\u3001int16\u3001int32\u3001int64</li> <li>float: float16\u3001float32\u3001float64</li> <li>str</li> </ul>"},{"location":"analysis/numpy/#array","title":"array\u521b\u5efa\u65f6\uff0c\u6307\u5b9a","text":"<pre><code>import numpy as np\nnp.array([1,2,5,8,2],dtype = 'float32') \n# \u8f93\u51fa \uff1aarray([1., 2., 5., 8., 2.], dtype=float32)\n</code></pre>"},{"location":"analysis/numpy/#asarray","title":"asarray\u8f6c\u6362\u65f6\u6307\u5b9a","text":"<pre><code>import numpy as np\narr = [1,3,5,7,2,9,0]\n# asarray \u5c06\u5217\u8868\u8fdb\u884c\u53d8\u6362\nnp.asarray(arr,dtype = 'float32') \n# \u8f93\u51fa\uff1aarray([1., 3., 5., 7., 2., 9., 0.], dtype=float32)\n</code></pre>"},{"location":"analysis/numpy/#astype","title":"\u6570\u636e\u7c7b\u578b\u8f6c\u6362astype","text":"<pre><code>import numpy as np\narr = np.random.randint(0,10,size = 5,dtype = 'int16') \n# \u8f93\u51fa\uff1aarray([6, 6, 6, 6, 3], dtype=int16)\n# \u4f7f\u7528astype\u8fdb\u884c\u8f6c\u6362\narr.astype('float32') # \u8f93\u51fa\uff1aarray([1., 4., 0., 6., 6.], dtype=float32)\n</code></pre>"},{"location":"analysis/numpy/#_6","title":"\u7b2c\u4e09\u90e8\u5206 \u6570\u7ec4\u8fd0\u7b97","text":""},{"location":"analysis/numpy/#_7","title":"\u52a0\u51cf\u4e58\u9664\u5e42\u8fd0\u7b97","text":"<pre><code>import numpy as np\narr1 = np.array([1,2,3,4,5])\narr2 = np.array([2,3,1,5,9])\narr1 - arr2 # \u51cf\u6cd5\narr1 * arr2 # \u4e58\u6cd5\narr1 / arr2 # \u9664\u6cd5\narr1**arr2 # \u4e24\u4e2a\u661f\u53f7\u8868\u793a\u5e42\u8fd0\u7b97\n</code></pre>"},{"location":"analysis/numpy/#_8","title":"\u903b\u8f91\u8fd0\u7b97","text":"<pre><code>import numpy as np\narr1 = np.array([1,2,3,4,5])\narr2 = np.array([1,0,2,3,5])\narr1 &lt; 5\narr1 &gt;= 5\narr1 == 5\narr1 == arr2\narr1 &gt; arr2\n</code></pre>"},{"location":"analysis/numpy/#_9","title":"\u6570\u7ec4\u4e0e\u6807\u91cf\u8ba1\u7b97","text":"<p>\u6570\u7ec4\u4e0e\u6807\u91cf\u7684\u7b97\u672f\u8fd0\u7b97\u4e5f\u4f1a\u5c06\u6807\u91cf\u503c\u4f20\u64ad\u5230\u5404\u4e2a\u5143\u7d20</p> <pre><code>import numpy as np\narr = np.arange(1,10)\n1/arr\narr+5\narr*5\n</code></pre>"},{"location":"analysis/numpy/#-","title":"*=\u3001+=\u3001-=\u3001/=\u64cd\u4f5c","text":"<p>\u67d0\u4e9b\u64cd\u4f5c\uff08\u4f8b\u5982+=\u548c*=\uff09\u53ea\u4f1a\u4fee\u6539\u73b0\u6709\u6570\u7ec4\uff0c\u800c\u4e0d\u662f\u521b\u5efa\u4e00\u4e2a\u65b0\u6570\u7ec4\u3002</p> <pre><code>import numpy as np\narr1 = np.arange(5)\narr1 +=5\narr1 -=5\narr1 *=5\narr2 = arr1.astype(np.float32)\n# arr /=5 \u4e0d\u652f\u6301\u8fd0\u7b97\narr2 /= 5\n</code></pre>"},{"location":"analysis/numpy/#_10","title":"\u7b2c\u56db\u90e8\u5206 \u590d\u5236\u548c\u89c6\u56fe","text":"<p>\u5728\u64cd\u4f5c\u6570\u7ec4\u65f6\uff0c\u6709\u65f6\u4f1a\u5c06\u5176\u6570\u636e\u590d\u5236\u5230\u65b0\u6570\u7ec4\u4e2d\uff0c\u6709\u65f6\u4e0d\u590d\u5236\u3002</p> <p>\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\uff0c\u8fd9\u901a\u5e38\u4f1a\u5f15\u8d77\u6df7\u4e71\u3002\u6709\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5</p>"},{"location":"analysis/numpy/#_11","title":"\u5b8c\u5168\u6ca1\u6709\u590d\u5236","text":"<pre><code>import numpy as np\na = np.random.randint(0,100,size = (4,5))\nb = a\na is b # \u8fd4\u56deTrue a\u548cb\u662f\u4e24\u4e2a\u4e0d\u540c\u540d\u5b57\u5bf9\u5e94\u540c\u4e00\u4e2a\u5185\u5b58\u5bf9\u8c61\nb[0,0] = 1024 # \u547d\u8fd0\u5171\u540c\u4f53\ndisplay(a,b)\n</code></pre>"},{"location":"analysis/numpy/#_12","title":"\u67e5\u770b\u6216\u6d45\u62f7\u8d1d","text":"<p>\u4e0d\u540c\u7684\u6570\u7ec4\u5bf9\u8c61\u53ef\u4ee5\u5171\u4eab\u76f8\u540c\u7684\u6570\u636e\u3002\u8be5view\u65b9\u6cd5\u521b\u5efa\u4e00\u4e2a\u67e5\u770b\u76f8\u540c\u6570\u636e\u7684\u65b0\u6570\u7ec4\u5bf9\u8c61</p> <pre><code>import numpy as np\na = np.random.randint(0,100,size = (4,5))\nb = a.view() # \u4f7f\u7528a\u4e2d\u7684\u6570\u636e\u521b\u5efa\u4e00\u4e2a\u65b0\u6570\u7ec4\u5bf9\u8c61\na is b # \u8fd4\u56deFalse a\u548cb\u662f\u4e24\u4e2a\u4e0d\u540c\u540d\u5b57\u5bf9\u5e94\u540c\u4e00\u4e2a\u5185\u5b58\u5bf9\u8c61\nb.base is a # \u8fd4\u56deTrue\uff0cb\u89c6\u56fe\u7684\u6839\u6570\u636e\u548ca\u4e00\u6837\nb.flags.owndata # \u8fd4\u56deFalse b\u4e2d\u7684\u6570\u636e\u4e0d\u662f\u5176\u81ea\u5df1\u7684\na.flags.owndata # \u8fd4\u56deTrue a\u4e2d\u7684\u6570\u636e\u662f\u5176\u81ea\u5df1\u7684\nb[0,0] = 1024 # a\u548cb\u7684\u6570\u636e\u90fd\u53d1\u751f\u6539\u53d8\ndisplay(a,b)\n</code></pre>"},{"location":"analysis/numpy/#_13","title":"\u6df1\u62f7\u8d1d","text":"<pre><code>import numpy as np\na = np.random.randint(0,100,size = (4,5))\nb = a.copy()\nb is a # \u8fd4\u56deFalse\nb.base is a # \u8fd4\u56deFalse\nb.flags.owndata # \u8fd4\u56deTrue\na.flags.owndata # \u8fd4\u56deTrue\nb[0,0] = 1024 # b\u6539\u53d8\uff0ca\u4e0d\u53d8\uff0c\u5206\u9053\u626c\u9573\ndisplay(a,b)\n</code></pre> <ul> <li>copy\u5e94\u8be5\u5728\u4e0d\u518d\u9700\u8981\u539f\u6765\u7684\u6570\u7ec4\u60c5\u51b5\u4e0b\uff0c\u5207\u7247\u540e\u8c03\u7528\u3002\u4f8b\u5982\uff0c\u5047\u8bbea\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u4e2d\u95f4\u7ed3\u679c\uff0c\u800c\u6700\u7ec8\u7ed3\u679cb\u4ec5\u5305\u542b\u7684\u4e00\u5c0f\u90e8\u5206a\uff0c\u5219\u5728b\u4f7f\u7528\u5207\u7247\u8fdb\u884c\u6784\u9020\u65f6\u5e94\u5236\u4f5c\u4e00\u4e2a\u6df1\u62f7\u8d1d\uff1a</li> </ul> <pre><code>import numpy as np\na = np.arange(1e8)\nb = a[::1000000].copy() # \u6bcf100\u4e07\u4e2a\u6570\u636e\u4e2d\u53d6\u4e00\u4e2a\u6570\u636e\ndel a # \u4e0d\u5728\u9700\u8981a\uff0c\u5220\u9664\u5360\u5927\u5185\u5b58\u7684a\nb.shape # shape(100,)\n</code></pre>"},{"location":"analysis/numpy/#_14","title":"\u7b2c\u4e94\u90e8\u5206 \u7d22\u5f15\u3001\u5207\u7247\u548c\u8fed\u4ee3","text":""},{"location":"analysis/numpy/#_15","title":"\u7b2c\u4e00\u8282 \u57fa\u672c\u7d22\u5f15\u548c\u5207\u7247","text":"<p>numpy\u4e2d\u6570\u7ec4\u5207\u7247\u662f\u539f\u59cb\u6570\u7ec4\u7684\u89c6\u56fe\uff0c\u8fd9\u610f\u5473\u7740\u6570\u636e\u4e0d\u4f1a\u88ab\u590d\u5236\uff0c\u89c6\u56fe\u4e0a\u4efb\u4f55\u6570\u636e\u7684\u4fee\u6539\u90fd\u4f1a\u53cd\u6620\u5230\u539f\u6570\u7ec4\u4e0a</p> <pre><code>arr = np.array([0,1,2,3,4,5,6,7,8,9])\narr[5] #\u7d22\u5f15 \u8f93\u51fa 5\narr[5:8] #\u5207\u7247\u8f93\u51fa\uff1aarray([5, 6, 7])\narr[2::2] # \u4ece\u7d22\u5f152\u5f00\u59cb\u6bcf\u4e24\u4e2a\u4e2d\u53d6\u4e00\u4e2a \u8f93\u51fa array([2, 4, 6, 8])\narr[::3] # \u4e0d\u5199\u7d22\u5f15\u9ed8\u8ba4\u4ece0\u5f00\u59cb\uff0c\u6bcf3\u4e2a\u4e2d\u53d6\u4e00\u4e2a \u8f93\u51fa\u4e3a array([0, 3, 6, 9])\narr[1:7:2] # \u4ece\u7d22\u5f151\u5f00\u59cb\u5230\u7d22\u5f157\u7ed3\u675f\uff0c\u5de6\u95ed\u53f3\u5f00\uff0c\u6bcf2\u4e2a\u6570\u4e2d\u53d6\u4e00\u4e2a \u8f93\u51fa array([1, 3, 5])\narr[::-1] # \u5012\u5e8f \u8f93\u51fa array([9, 8, 7, 6, 5, 4, 3, 2, 1, 0])\narr[::-2] # \u5012\u5e8f \u6bcf\u4e24\u4e2a\u53d6\u4e00\u4e2a \u8f93\u51fa  array([9, 7, 5, 3, 1])\narr[5:8]=12 # \u5207\u7247\u8d4b\u503c\u4f1a\u8d4b\u503c\u5230\u6bcf\u4e2a\u5143\u7d20\u4e0a\uff0c\u4e0e\u5217\u8868\u64cd\u4f5c\u4e0d\u540c\ntemp = arr[5:8]\ntemp[1] = 1024\narr # \u8f93\u51fa\uff1aarray([   0,    1,    2,    3,    4,   12, 1024,   12,    8,    9])\n</code></pre> <p>\u5bf9\u4e8e\u4e8c\u7ef4\u6570\u7ec4\u6216\u8005\u9ad8\u7ef4\u6570\u7ec4\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u4e4b\u524d\u7684\u77e5\u8bc6\u6765\u7d22\u5f15\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a\u4ee5\u9017\u53f7\u9694\u5f00\u7684\u7d22\u5f15\u5217\u8868\u6765\u9009\u533a\u5355\u4e2a\u6216\u591a\u4e2a\u5143\u7d20</p> <pre><code>arr2d = np.array([[1,3,5],[2,4,6],[-2,-7,-9],[6,6,6]]) # \u4e8c\u7ef4\u6570\u7ec4 shape(3,4)\narr2d[0,-1] #\u7d22\u5f15 \u7b49\u4e8earr2d[0][-1] \u8f93\u51fa 5\narr2d[0,2]  #\u7d22\u5f15 \u7b49\u4e8earr2d[0][2] ==  arr2d[0][-1] \u8f93\u51fa 5\n\narr2d[:2,-2:] #\u5207\u7247 \u7b2c\u4e00\u7ef4\u548c\u7b2c\u4e8c\u7ef4\u90fd\u8fdb\u884c\u5207\u7247 \u7b49\u4e8earr2d[:2][:,1:] \narr2d[:2,1:] #\u5207\u7247 1 == -2 \u4e00\u4e2a\u662f\u6b63\u5e8f\uff0c\u53e6\u4e2a\u4e00\u662f\u5012\u5e8f\uff0c\u5bf9\u5e94\u76f8\u540c\u7684\u4f4d\u7f6e\n# \u8f93\u51fa\uff1a\n#array([[3, 5],\n#       [4, 6]])\n</code></pre>"},{"location":"analysis/numpy/#_16","title":"\u7b2c\u4e8c\u8282 \u82b1\u5f0f\u7d22\u5f15\u548c\u7d22\u5f15\u6280\u5de7","text":"<ul> <li>\u6574\u6570\u6570\u7ec4\u8fdb\u884c\u7d22\u5f15\u5373\u82b1\u5f0f\u7d22\u5f15,\u5176\u548c\u5207\u7247\u4e0d\u4e00\u6837\uff0c\u5b83\u603b\u662f\u5c06\u6570\u636e\u590d\u5236\u5230\u65b0\u6570\u7ec4\u4e2d</li> </ul> <pre><code>import numpy as np\n#\u4e00\u7ef4\narr1 = np.array([1,2,3,4,5,6,7,8,9,10])\narr2 = arr1[[1,3,3,5,7,7,7]] # \u8f93\u51fa array([2, 4, 4, 6, 8, 8, 8])\narr2[-1] = 1024 # \u4fee\u6539\u503c\uff0c\u4e0d\u5f71\u54cdarr1\n#\u4e8c\u7ef4\narr2d = np.array([[1,3,5,7,9],[2,4,6,8,10],[12,18,22,23,37],[123,55,17,88,103]]) #shape(4,5)\narr2d[[1,3]] # \u83b7\u53d6\u7b2c\u4e8c\u884c\u548c\u7b2c\u56db\u884c\uff0c\u7d22\u5f15\u4ece0\u5f00\u59cb\u7684\u6240\u4ee51\u5bf9\u5e94\u7b2c\u4e8c\u884c \n# \u8f93\u51fa array([[  2,   4,   6,   8,  10],\n#            [123,  55,  17,  88, 103]])\narr2d[([1,3],[2,4])] # \u76f8\u5f53\u4e8earr2d[1,2]\u83b7\u53d6\u4e00\u4e2a\u5143\u7d20,arr2d[3,4]\u83b7\u53d6\u53e6\u4e00\u4e2a\u5143\u7d20\n# \u8f93\u51fa\u4e3a array([  6, 103])\n# \u9009\u62e9\u4e00\u4e2a\u533a\u57df\narr2d[np.ix_([1,3,3,3],[2,4,4])] # \u76f8\u5f53\u4e8e arr2d[[1,3,3,3]][:,[2,4,4]]\narr2d[[1,3,3,3]][:,[2,4,4]]\n# ix_()\u51fd\u6570\u53ef\u7528\u4e8e\u7ec4\u5408\u4e0d\u540c\u7684\u5411\u91cf\n# \u7b2c\u4e00\u4e2a\u5217\u8868\u5b58\u7684\u662f\u5f85\u63d0\u53d6\u5143\u7d20\u7684\u884c\u6807\uff0c\u7b2c\u4e8c\u4e2a\u5217\u8868\u5b58\u7684\u662f\u5f85\u63d0\u53d6\u5143\u7d20\u7684\u5217\u6807\n# \u8f93\u51fa\u4e3a\n# array([[  6,  10,  10],\n#        [ 17, 103, 103],\n#        [ 17, 103, 103],\n#        [ 17, 103, 103]])\n</code></pre> <ul> <li>boolean\u503c\u7d22\u5f15</li> </ul> <pre><code>names = np.array(['softpo','Brandon','Will','Michael','Will','Ella','Daniel','softpo','Will','Brandon'])\ncond1 = names == 'Will'\ncond1 \n# \u8f93\u51faarray([False, False,  True, False,  True, False, False, False,  True, False])\nnames[cond1] # array(['Will', 'Will', 'Will'], dtype='&lt;U7')\narr = np.random.randint(0,100,size = (10,8)) # 0~100\u968f\u673a\u6570\ncond2 = arr &gt; 90 \n# \u627e\u5230\u6240\u6709\u5927\u4e8e90\u7684\u7d22\u5f15\uff0c\u8fd4\u56deboolean\u7c7b\u578b\u7684\u6570\u7ec4 shape(10,8)\uff0c\u5927\u4e8e\u8fd4\u56deTrue\uff0c\u5426\u5219False\narr[cond2] # \u8fd4\u56de\u6570\u636e\u5168\u90e8\u662f\u5927\u4e8e90\u7684\n</code></pre>"},{"location":"analysis/numpy/#_17","title":"\u7b2c\u516d\u90e8\u5206 \u5f62\u72b6\u64cd\u4f5c","text":""},{"location":"analysis/numpy/#_18","title":"\u6570\u7ec4\u53d8\u5f62","text":"<pre><code>import numpy as np\narr1 = np.random.randint(0,10,size = (3,4,5))\narr2 = arr1.reshape(12,5) # \u5f62\u72b6\u6539\u53d8\uff0c\u8fd4\u56de\u65b0\u6570\u7ec4\narr3 = arr1.reshape(-1,5) # \u81ea\u52a8\u201c\u6574\u5f62\u201d\uff0c\u81ea\u52a8\u8ba1\u7b97\n</code></pre>"},{"location":"analysis/numpy/#_19","title":"\u6570\u7ec4\u8f6c\u7f6e","text":"<pre><code>import numpy as np\narr1 = np.random.randint(0,10,size = (3,5)) # shape(3,5)\narr1.T # shape(5,3) \u8f6c\u7f6e\narr2 = np.random.randint(0,10,size = (3,6,4)) # shape(3,6,4)\nnp.transpose(arr2,axes=(2,0,1)) # transpose\u6539\u53d8\u6570\u7ec4\u7ef4\u5ea6 shape(4,3,6)\n</code></pre>"},{"location":"analysis/numpy/#_20","title":"\u6570\u7ec4\u5806\u53e0","text":"<pre><code>import numpy as np\narr1 = np.array([[1,2,3]])\narr2 = np.array([[4,5,6]])\nnp.concatenate([arr1,arr2],axis = 0) \n# \u4e32\u8054\u5408\u5e76shape(2,3) axis = 0\u8868\u793a\u7b2c\u4e00\u7ef4\u4e32\u8054 \u8f93\u51fa\u4e3a\n# array([[1, 2, 3],\n#        [4, 5, 6]])\nnp.concatenate([arr1,arr2],axis = 1) \n# shape(1,6) axis = 1\u8868\u793a\u7b2c\u4e8c\u7ef4\u4e32\u8054 \u8f93\u51fa\u4e3a\uff1aarray([[1, 2, 3, 4, 5, 6]])\n\nnp.hstack((arr1,arr2)) # \u6c34\u5e73\u65b9\u5411\u5806\u53e0 \u8f93\u51fa\u4e3a\uff1aarray([[1, 2, 3, 4, 5, 6]])\nnp.vstack((arr1,arr2)) \n# \u7ad6\u76f4\u65b9\u5411\u5806\u53e0\uff0c\u8f93\u51fa\u4e3a\uff1a\n# array([[1, 2, 3],\n#        [4, 5, 6]])\n</code></pre>"},{"location":"analysis/numpy/#split","title":"split\u6570\u7ec4\u62c6\u5206","text":"<pre><code>import numpy as np\narr = np.random.randint(0,10,size = (6,5)) # shape(6,5)\nnp.split(arr,indices_or_sections=2,axis = 0) # \u5728\u7b2c\u4e00\u7ef4\uff086\uff09\u5e73\u5747\u5206\u6210\u4e24\u4efd \nnp.split(arr,indices_or_sections=[2,3],axis = 1) # \u5728\u7b2c\u4e8c\u7ef4\uff085\uff09\u4ee5\u7d22\u5f152\uff0c3\u4e3a\u65ad\u70b9\u5206\u5272\u62103\u4efd\n\nnp.vsplit(arr,indices_or_sections=3) # \u5728\u7ad6\u76f4\u65b9\u5411\u5e73\u5747\u5206\u5272\u62103\u4efd\nnp.hsplit(arr,indices_or_sections=[1,4]) # \u5728\u6c34\u5e73\u65b9\u5411\uff0c\u4ee5\u7d22\u5f151\uff0c4\u4e3a\u65ad\u70b9\u5206\u5272\u62103\u4efd\n</code></pre>"},{"location":"analysis/numpy/#_21","title":"\u7b2c\u4e03\u90e8\u5206 \u5e7f\u64ad\u673a\u5236","text":"<p>\u5f53\u4e24\u4e2a\u6570\u7ec4\u7684\u5f62\u72b6\u5e76\u4e0d\u76f8\u540c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6269\u5c55\u6570\u7ec4\u7684\u65b9\u6cd5\u6765\u5b9e\u73b0\u76f8\u52a0\u3001\u76f8\u51cf\u3001\u76f8\u4e58\u3001\u9664\u6cd5\u7b49\u64cd\u4f5c\uff0c\u8fd9\u79cd\u673a\u5236\u53eb\u505a\u5e7f\u64ad\uff08broadcasting\uff09</p>"},{"location":"analysis/numpy/#_22","title":"\u4e00\u7ef4\u6570\u7ec4\u5e7f\u64ad","text":"<pre><code>import numpy as np\narr1 = np.sort(np.array([0,1,2,3]*3)).reshape(4,3) #shape(4,3)\narr2 = np.array([1,2,3]) # shape(3,)\narr3 = arr1 + arr2 # arr2\u8fdb\u884c\u5e7f\u64ad\u590d\u52364\u4efd shape(4,3)\narr3\n</code></pre>"},{"location":"analysis/numpy/#_23","title":"\u4e8c\u7ef4\u6570\u7ec4\u7684\u5e7f\u64ad","text":"<pre><code>import numpy as np\narr1 = np.sort(np.array([0,1,2,3]*3)).reshape(4,3) # shape(4,3)\narr2 = np.array([[1],[2],[3],[4]]) # shape(4,1)\narr3 = arr1 + arr2 # arr2 \u8fdb\u884c\u5e7f\u64ad\u590d\u52363\u4efd shape(4,3)\narr3\n</code></pre>"},{"location":"analysis/numpy/#_24","title":"\u4e09\u7ef4\u6570\u7ec4\u5e7f\u64ad","text":"<pre><code>import numpy as np\narr1 = np.array([0,1,2,3,4,5,6,7]*3).reshape(3,4,2) #shape(3,4,2)\narr2 = np.array([0,1,2,3,4,5,6,7]).reshape(4,2) #shape(4,2)\narr3 = arr1 + arr2 # arr2\u6570\u7ec4\u57280\u7ef4\u4e0a\u590d\u52363\u4efd shape(3,4,2)\narr3\n</code></pre>"},{"location":"analysis/numpy/#_25","title":"\u7b2c\u516b\u90e8\u5206 \u901a\u7528\u51fd\u6570","text":""},{"location":"analysis/numpy/#_26","title":"\u7b2c\u4e00\u8282 \u901a\u7528\u51fd\u6570\uff1a\u5143\u7d20\u7ea7\u6570\u5b57\u51fd\u6570","text":"<p>abs\u3001sqrt\u3001square\u3001exp\u3001log\u3001sin\u3001cos\u3001tan\uff0cmaxinmum\u3001minimum\u3001all\u3001any\u3001inner\u3001clip\u3001round\u3001trace\u3001ceil\u3001floor</p> <pre><code>import numpy as np\narr1 = np.array([1,4,8,9,16,25])\nnp.sqrt(arr1) # \u5f00\u5e73\u65b9\nnp.square(arr1) # \u5e73\u65b9\nnp.clip(arr1,2,16) # \u8f93\u51fa array([ 2,  4,  8,  9, 16, 16])\n\nx = np.array([1,5,2,9,3,6,8])\ny = np.array([2,4,3,7,1,9,0])\nnp.maximum(x,y) # \u8fd4\u56de\u4e24\u4e2a\u6570\u7ec4\u4e2d\u7684\u6bd4\u8f83\u5927\u7684\u503c\narr2 = np.random.randint(0,10,size = (5,5))\nnp.inner(arr2[0],arr2) #\u8fd4\u56de\u4e00\u7ef4\u6570\u7ec4\u5411\u91cf\u5185\u79ef\n</code></pre>"},{"location":"analysis/numpy/#where","title":"\u7b2c\u4e8c\u8282 where\u51fd\u6570","text":"<p>where \u51fd\u6570\uff0c\u4e09\u4e2a\u53c2\u6570\uff0c\u6761\u4ef6\u4e3a\u771f\u65f6\u9009\u62e9\u503c\u7684\u6570\u7ec4\uff0c\u6761\u4ef6\u4e3a\u5047\u65f6\u9009\u62e9\u503c\u7684\u6570\u7ec4</p> <pre><code>import numpy as np\narr1 = np.array([1,3,5,7,9])\narr2 = np.array([2,4,6,8,10])\ncond = np.array([True,False,True,True,False])\nnp.where(cond,arr1,arr2) # True\u9009\u62e9arr1\uff0cFalse\u9009\u62e9arr2\u7684\u503c\n# \u8f93\u51fa array([ 1,  4,  5,  7, 10])\n\narr3 = np.random.randint(0,30,size = 20)\nnp.where(arr3 &lt; 15,arr3,-15) # \u5c0f\u4e8e15\u8fd8\u662f\u81ea\u8eab\u7684\u503c\uff0c\u5927\u4e8e15\u8bbe\u7f6e\u6210-15\n</code></pre>"},{"location":"analysis/numpy/#_27","title":"\u7b2c\u4e09\u8282 \u6392\u5e8f\u65b9\u6cd5","text":"<p>np\u4e2d\u8fd8\u63d0\u4f9b\u4e86\u6392\u5e8f\u65b9\u6cd5\uff0c\u6392\u5e8f\u65b9\u6cd5\u662f\u5c31\u5730\u6392\u5e8f\uff0c\u5373\u76f4\u63a5\u6539\u53d8\u539f\u6570\u7ec4</p> <p>arr.sort()\u3001np.sort()\u3001arr.argsort()</p> <pre><code>import numpy as np\narr = np.array([9,3,11,6,17,5,4,15,1])\narr.sort() # \u76f4\u63a5\u6539\u53d8\u539f\u6570\u7ec4\nnp.sort(arr) # \u8fd4\u56de\u6df1\u62f7\u8d1d\u6392\u5e8f\u7ed3\u679c\narr = np.array([9,3,11,6,17,5,4,15,1])\narr.argsort() # \u8fd4\u56de\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u7d22\u5f15 array([8, 1, 6, 5, 3, 0, 2, 7, 4])\n</code></pre>"},{"location":"analysis/numpy/#_28","title":"\u7b2c\u56db\u8282 \u96c6\u5408\u8fd0\u7b97\u51fd\u6570","text":"<pre><code>A = np.array([2,4,6,8])\nB = np.array([3,4,5,6])\nnp.intersect1d(A,B) # \u4ea4\u96c6 array([4, 6])\nnp.union1d(A,B) # \u5e76\u96c6 array([2, 3, 4, 5, 6, 8])\nnp.setdiff1d(A,B) #\u5dee\u96c6\uff0cA\u4e2d\u6709\uff0cB\u4e2d\u6ca1\u6709 array([2, 8])\n</code></pre>"},{"location":"analysis/numpy/#_29","title":"\u7b2c\u4e94\u8282 \u6570\u5b66\u548c\u7edf\u8ba1\u51fd\u6570","text":"<p>min\u3001max\u3001mean\u3001median\u3001sum\u3001std\u3001var\u3001cumsum\u3001cumprod\u3001argmin\u3001argmax\u3001argwhere\u3001cov\u3001corrcoef</p> <pre><code>import numpy as np\narr1 = np.array([1,7,2,19,23,0,88,11,6,11])\narr1.min() # \u8ba1\u7b97\u6700\u5c0f\u503c 0\narr1.argmax() # \u8ba1\u7b97\u6700\u5927\u503c\u7684\u7d22\u5f15 \u8fd4\u56de 6\nnp.argwhere(arr1 &gt; 20) # \u8fd4\u56de\u5927\u4e8e20\u7684\u5143\u7d20\u7684\u7d22\u5f15\nnp.cumsum(arr1) # \u8ba1\u7b97\u7d2f\u52a0\u548c\narr2 = np.random.randint(0,10,size = (4,5))\narr2.mean(axis = 0) # \u8ba1\u7b97\u5217\u7684\u5e73\u5747\u503c\narr2.mean(axis = 1) # \u8ba1\u7b97\u884c\u7684\u5e73\u5747\u503c\nnp.cov(arr2,rowvar=True) # \u534f\u65b9\u5dee\u77e9\u9635\nnp.corrcoef(arr2,rowvar=True) # \u76f8\u5173\u6027\u7cfb\u6570\n</code></pre>"},{"location":"analysis/numpy/#_30","title":"\u7b2c\u4e5d\u90e8\u5206 \u7ebf\u6027\u4ee3\u6570","text":""},{"location":"analysis/numpy/#_31","title":"\u77e9\u9635\u4e58\u79ef","text":"<pre><code>#\u77e9\u9635\u7684\u4e58\u79ef\nA = np.array([[4,2,3],\n              [1,3,1]]) # shape(2,3)\nB = np.array([[2,7],\n              [-5,-7],\n              [9,3]]) # shape(3,2)\nnp.dot(A,B) # \u77e9\u9635\u8fd0\u7b97 A\u7684\u6700\u540e\u4e00\u7ef4\u548cB\u7684\u7b2c\u4e00\u7ef4\u5fc5\u987b\u4e00\u81f4\nA @ B # \u7b26\u53f7 @ \u8868\u793a\u77e9\u9635\u4e58\u79ef\u8fd0\u7b97\n</code></pre>"},{"location":"analysis/numpy/#_32","title":"\u77e9\u9635\u5176\u4ed6\u8ba1\u7b97","text":"<p>\u4e0b\u9762\u53ef\u4ee5\u8ba1\u7b97\u77e9\u9635\u7684\u9006\u3001\u884c\u5217\u5f0f\u3001\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\u3001qr\u5206\u89e3\u503c\uff0csvd\u5206\u89e3\u503c</p> <pre><code>#\u8ba1\u7b97\u77e9\u9635\u7684\u9006\nfrom numpy.linalg import inv,det,eig,qr,svd\nA = np.array([[1,2,3],\n              [2,3,4],\n              [4,5,8]]) # shape(3,3)\ninv(A) # \u9006\u77e9\u9635\ndet(A)#\u8ba1\u7b97\u77e9\u9635\u884c\u5217\u5f0f\n</code></pre>"},{"location":"analysis/numpy/#-numpy","title":"\u7b2c\u5341\u90e8\u5206 \u5b9e\u6218-\u7528NumPy\u5206\u6790\u9e22\u5c3e\u82b1\u82b1\u843c\u5c5e\u6027\u5404\u9879\u6307\u6807","text":"<p>\u6848\u5217\uff1a\u8bfb\u53d6iris\u6570\u636e\u96c6\u4e2d\u7684\u82b1\u843c\u957f\u5ea6\u6570\u636e\uff08\u5df2\u4fdd\u5b58\u4e3acsv\u683c\u5f0f\uff09 \u5e76\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\u3001\u53bb\u91cd\uff0c\u5e76\u6c42\u51fa\u548c\u3001\u7d2f\u79ef\u548c\u3001\u5747\u503c\u3001\u6807\u51c6\u5dee\u3001\u65b9\u5dee\u3001\u6700\u5c0f\u503c\u3001\u6700\u5927\u503c\u3002</p> <pre><code>import numpy as np  # \u5bfc\u5165\u7c7b\u5e93 numpy\ndata = np.loadtxt('./iris.csv',delimiter = ',')  # \u8bfb\u53d6\u6570\u636e\u6587\u4ef6\uff0cdata\u662f\u4e8c\u7ef4\u7684\u6570\u7ec4\ndata.sort(axis = -1)  # \u7b80\u5355\u6392\u5e8f\nprint('\u7b80\u5355\u6392\u5e8f\u540e\uff1a', data)\nprint('\u6570\u636e\u53bb\u91cd\u540e\uff1a', np.unique(data)) # \u53bb\u9664\u91cd\u590d\u6570\u636e\nprint('\u6570\u636e\u6c42\u548c\uff1a', np.sum(data))  # \u6570\u7ec4\u6c42\u548c\nprint('\u5143\u7d20\u6c42\u7d2f\u52a0\u548c', np.cumsum(data))  # \u5143\u7d20\u6c42\u7d2f\u52a0\u548c\nprint('\u6570\u636e\u7684\u5747\u503c\uff1a', np.mean(data))  # \u5747\u503c\nprint('\u6570\u636e\u7684\u6807\u51c6\u5dee\uff1a', np.std(data))  # \u6807\u51c6\u5dee\nprint('\u6570\u636e\u7684\u65b9\u5dee\uff1a', np.var(data))  # \u65b9\u5dee\nprint('\u6570\u636e\u7684\u6700\u5c0f\u503c\uff1a', np.min(data))  # \u6700\u5c0f\u503c\nprint('\u6570\u636e\u7684\u6700\u5927\u503c\uff1a', np.max(data))  # \u6700\u5927\u503c\n</code></pre>"},{"location":"analysis/pandas/","title":"pandas\u6570\u636e\u5206\u6790\u5e93","text":""},{"location":"analysis/pandas/#_1","title":"\u7b2c\u4e00\u90e8\u5206 \u8bfe\u7a0b\u4ecb\u7ecd","text":"<ul> <li>Python\u5728\u6570\u636e\u5904\u7406\u548c\u51c6\u5907\u65b9\u9762\u4e00\u76f4\u505a\u5f97\u5f88\u597d\uff0c\u4f46\u5728\u6570\u636e\u5206\u6790\u548c\u5efa\u6a21\u65b9\u9762\u5c31\u5dee\u4e00\u4e9b\u3002pandas\u5e2e\u52a9\u586b\u8865\u4e86\u8fd9\u4e00\u7a7a\u767d\uff0c\u4f7f\u60a8\u80fd\u591f\u5728Python\u4e2d\u6267\u884c\u6574\u4e2a\u6570\u636e\u5206\u6790\u5de5\u4f5c\u6d41\u7a0b\uff0c\u800c\u4e0d\u5fc5\u5207\u6362\u5230\u66f4\u7279\u5b9a\u4e8e\u9886\u57df\u7684\u8bed\u8a00\uff0c\u5982R\u3002</li> <li>\u4e0e\u51fa\u8272\u7684 jupyter\u5de5\u5177\u5305\u548c\u5176\u4ed6\u5e93\u76f8\u7ed3\u5408\uff0cPython\u4e2d\u7528\u4e8e\u8fdb\u884c\u6570\u636e\u5206\u6790\u7684\u73af\u5883\u5728\u6027\u80fd\u3001\u751f\u4ea7\u7387\u548c\u534f\u4f5c\u80fd\u529b\u65b9\u9762\u90fd\u662f\u5353\u8d8a\u7684\u3002</li> <li>pandas\u662f Python \u7684\u6838\u5fc3\u6570\u636e\u5206\u6790\u652f\u6301\u5e93\uff0c\u63d0\u4f9b\u4e86\u5feb\u901f\u3001\u7075\u6d3b\u3001\u660e\u786e\u7684\u6570\u636e\u7ed3\u6784\uff0c\u65e8\u5728\u7b80\u5355\u3001\u76f4\u89c2\u5730\u5904\u7406\u5173\u7cfb\u578b\u3001\u6807\u8bb0\u578b\u6570\u636e\u3002pandas\u662fPython\u8fdb\u884c\u6570\u636e\u5206\u6790\u7684\u5fc5\u5907\u9ad8\u7ea7\u5de5\u5177\u3002</li> <li>pandas\u7684\u4e3b\u8981\u6570\u636e\u7ed3\u6784\u662f Series(\u4e00\u7ef4\u6570\u636e)\u4e0e DataFrame(\u4e8c\u7ef4\u6570\u636e)\uff0c\u8fd9\u4e24\u79cd\u6570\u636e\u7ed3\u6784\u8db3\u4ee5\u5904\u7406\u91d1\u878d\u3001\u7edf\u8ba1\u3001\u793e\u4f1a\u79d1\u5b66\u3001\u5de5\u7a0b\u7b49\u9886\u57df\u91cc\u7684\u5927\u591a\u6570\u6848\u4f8b</li> <li>\u5904\u7406\u6570\u636e\u4e00\u822c\u5206\u4e3a\u51e0\u4e2a\u9636\u6bb5\uff1a\u6570\u636e\u6574\u7406\u4e0e\u6e05\u6d17\u3001\u6570\u636e\u5206\u6790\u4e0e\u5efa\u6a21\u3001\u6570\u636e\u53ef\u89c6\u5316\u4e0e\u5236\u8868\uff0cPandas \u662f\u5904\u7406\u6570\u636e\u7684\u7406\u60f3\u5de5\u5177\u3002</li> <li>pip install pandas -i https://pypi.tuna.tsinghua.edu.cn/simple</li> </ul>"},{"location":"analysis/pandas/#_2","title":"\u7b2c\u4e8c\u90e8\u5206 \u6570\u636e\u7ed3\u6784","text":""},{"location":"analysis/pandas/#series","title":"\u7b2c\u4e00\u8282  Series","text":"<p>\u7528\u5217\u8868\u751f\u6210 Series\u65f6\uff0cPandas \u9ed8\u8ba4\u81ea\u52a8\u751f\u6210\u6574\u6570\u7d22\u5f15\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a\u7d22\u5f15</p> <pre><code>l = [0,1,7,9,np.NAN,None,1024,512]\n# \u65e0\u8bba\u662fnumpy\u4e2d\u7684NAN\u8fd8\u662fPython\u4e2d\u7684None\u5728pandas\u4e2d\u90fd\u4ee5\u7f3a\u5931\u6570\u636eNaN\u5bf9\u5f85\ns1 = pd.Series(data = l)  # pandas\u81ea\u52a8\u6dfb\u52a0\u7d22\u5f15\ns2 = pd.Series(data = l,index = list('abcdefhi'),dtype='float32') # \u6307\u5b9a\u884c\u7d22\u5f15\n# \u4f20\u5165\u5b57\u5178\u521b\u5efa\uff0ckey\u884c\u7d22\u5f15\ns3 = pd.Series(data = {'a':99,'b':137,'c':149},name = 'Python_score') \ndisplay(s1,s2,s3)\n</code></pre>"},{"location":"analysis/pandas/#dataframe","title":"\u7b2c\u4e8c\u8282  DataFrame","text":"<p>DataFrame\u662f\u7531\u591a\u79cd\u7c7b\u578b\u7684\u5217\u6784\u6210\u7684\u4e8c\u7ef4\u6807\u7b7e\u6570\u636e\u7ed3\u6784\uff0c\u7c7b\u4f3c\u4e8e Excel \u3001SQL \u8868\uff0c\u6216 Series \u5bf9\u8c61\u6784\u6210\u7684\u5b57\u5178\u3002</p> <pre><code>import numpy as np\nimport pandas as pd\n# index \u4f5c\u4e3a\u884c\u7d22\u5f15\uff0c\u5b57\u5178\u4e2d\u7684key\u4f5c\u4e3a\u5217\u7d22\u5f15\uff0c\u521b\u5efa\u4e863*3\u7684DataFrame\u8868\u683c\u4e8c\u7ef4\u6570\u7ec4\ndf1 = pd.DataFrame(data = {'Python':[99,107,122],'Math':[111,137,88],'En':[68,108,43]},# key\u4f5c\u4e3a\u5217\u7d22\u5f15\n                   index = ['\u5f20\u4e09','\u674e\u56db','Michael']) # \u884c\u7d22\u5f15\ndf2 = pd.DataFrame(data = np.random.randint(0,151,size = (5,3)),\n                   index = ['Danial','Brandon','softpo','Ella','Cindy'],# \u884c\u7d22\u5f15\n                   columns=['Python','Math','En'])# \u5217\u7d22\u5f15\n</code></pre>"},{"location":"analysis/pandas/#_3","title":"\u7b2c\u4e09\u90e8\u5206 \u6570\u636e\u67e5\u770b","text":"<ul> <li>\u67e5\u770bDataFrame\u7684\u5e38\u7528\u5c5e\u6027\u548cDataFrame\u7684\u6982\u89c8\u548c\u7edf\u8ba1\u4fe1\u606f</li> </ul> <pre><code>import numpy as np\nimport pandas as pd\n# \u521b\u5efa shape(150,3)\u7684\u4e8c\u7ef4\u6807\u7b7e\u6570\u7ec4\u7ed3\u6784DataFrame\ndf = pd.DataFrame(data = np.random.randint(0,151,size = (150,3)),\n                   index = None,# \u884c\u7d22\u5f15\u9ed8\u8ba4\n                   columns=['Python','Math','En'])# \u5217\u7d22\u5f15\n# \u67e5\u770b\u5176\u5c5e\u6027\u3001\u6982\u89c8\u548c\u7edf\u8ba1\u4fe1\u606f\ndf.head(10) # \u663e\u793a\u5934\u90e810\u884c\uff0c\u9ed8\u8ba45\u4e2a\ndf.tail(10) # \u663e\u793a\u672b\u5c3e10\u884c\uff0c\u9ed8\u8ba45\u4e2a\ndf.shape # \u67e5\u770b\u5f62\u72b6\uff0c\u884c\u6570\u548c\u5217\u6570\ndf.dtypes # \u67e5\u770b\u6570\u636e\u7c7b\u578b\ndf.index # \u884c\u7d22\u5f15\ndf.columns # \u5217\u7d22\u5f15\ndf.values # \u5bf9\u8c61\u503c\uff0c\u4e8c\u7ef4ndarray\u6570\u7ec4\ndf.describe() # \u67e5\u770b\u6570\u503c\u578b\u5217\u7684\u6c47\u603b\u7edf\u8ba1,\u8ba1\u6570\u3001\u5e73\u5747\u503c\u3001\u6807\u51c6\u5dee\u3001\u6700\u5c0f\u503c\u3001\u56db\u5206\u4f4d\u6570\u3001\u6700\u5927\u503c\ndf.info() # \u67e5\u770b\u5217\u7d22\u5f15\u3001\u6570\u636e\u7c7b\u578b\u3001\u975e\u7a7a\u8ba1\u6570\u548c\u5185\u5b58\u4fe1\u606f\n</code></pre>"},{"location":"analysis/pandas/#_4","title":"\u7b2c\u56db\u90e8\u5206 \u6570\u636e\u8f93\u5165\u4e0e\u8f93\u51fa","text":""},{"location":"analysis/pandas/#csv","title":"\u7b2c\u4e00\u8282 csv","text":"<pre><code>import numpy as np\nimport pandas as pd\ndf = DataFrame(data = np.random.randint(0,50,size = [50,5]), # \u85aa\u8d44\u60c5\u51b5\n               columns=['IT','\u5316\u5de5','\u751f\u7269','\u6559\u5e08','\u58eb\u5175'])\n# \u4fdd\u5b58\u5230\u5f53\u524d\u8def\u5f84\u4e0b\uff0c\u6587\u4ef6\u547d\u540d\u662f\uff1asalary.csv\u3002csv\u9017\u53f7\u5206\u5272\u503c\u6587\u4ef6\u683c\u5f0f\ndf.to_csv('./salary.csv',\n          sep = ';', # \u6587\u672c\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\u662f\u9017\u53f7\n          header = True,# \u662f\u5426\u4fdd\u5b58\u5217\u7d22\u5f15\n          index = True) # \u662f\u5426\u4fdd\u5b58\u884c\u7d22\u5f15\uff0c\u4fdd\u5b58\u884c\u7d22\u5f15\uff0c\u6587\u4ef6\u88ab\u52a0\u8f7d\u65f6\uff0c\u9ed8\u8ba4\u884c\u7d22\u5f15\u4f1a\u4f5c\u4e3a\u4e00\u5217\n# \u52a0\u8f7d\npd.read_csv('./salary.csv',\n            sep = ';',# \u9ed8\u8ba4\u662f\u9017\u53f7\n            header = [0],#\u6307\u5b9a\u5217\u7d22\u5f15\n            index_col=0) # \u6307\u5b9a\u884c\u7d22\u5f15\npd.read_table('./salary.csv', # \u548cread_csv\u7c7b\u4f3c\uff0c\u8bfb\u53d6\u9650\u5b9a\u5206\u9694\u7b26\u7684\u6587\u672c\u6587\u4ef6\n            sep = ';',\n            header = [0],#\u6307\u5b9a\u5217\u7d22\u5f15\n            index_col=1) # \u6307\u5b9a\u884c\u7d22\u5f15,IT\u4f5c\u4e3a\u884c\u7d22\u5f15\n</code></pre>"},{"location":"analysis/pandas/#excel","title":"\u7b2c\u4e8c\u8282 Excel","text":"<p>pip install xlrd -i https://pypi.tuna.tsinghua.edu.cn/simple</p> <p>pip install xlwt -i https://pypi.tuna.tsinghua.edu.cn/simple</p> <p>pip install openpyxl -i https://pypi.tuna.tsinghua.edu.cn/simple</p> <pre><code>import numpy as np\nimport pandas as pd\ndf1 = pd.DataFrame(data = np.random.randint(0,50,size = [50,5]), # \u85aa\u8d44\u60c5\u51b5\n               columns=['IT','\u5316\u5de5','\u751f\u7269','\u6559\u5e08','\u58eb\u5175'])\ndf2 = pd.DataFrame(data = np.random.randint(0,50,size = [150,3]),# \u8ba1\u7b97\u673a\u79d1\u76ee\u7684\u8003\u8bd5\u6210\u7ee9\n                   columns=['Python','Tensorflow','Keras'])\n# \u4fdd\u5b58\u5230\u5f53\u524d\u8def\u5f84\u4e0b\uff0c\u6587\u4ef6\u547d\u540d\u662f\uff1asalary.xls\ndf1.to_excel('./salary.xls',\n            sheet_name = 'salary',# Excel\u4e2d\u5de5\u4f5c\u8868\u7684\u540d\u5b57\n            header = True,# \u662f\u5426\u4fdd\u5b58\u5217\u7d22\u5f15\n            index = False) # \u662f\u5426\u4fdd\u5b58\u884c\u7d22\u5f15\uff0c\u4fdd\u5b58\u884c\u7d22\u5f15\npd.read_excel('./salary.xls',\n              sheet_name=0,# \u8bfb\u53d6\u54ea\u4e00\u4e2aExcel\u4e2d\u5de5\u4f5c\u8868\uff0c\u9ed8\u8ba4\u7b2c\u4e00\u4e2a\n              header = 0,# \u4f7f\u7528\u7b2c\u4e00\u884c\u6570\u636e\u4f5c\u4e3a\u5217\u7d22\u5f15\n              names = list('ABCDE'),# \u66ff\u6362\u884c\u7d22\u5f15\n              index_col=1)# \u6307\u5b9a\u884c\u7d22\u5f15\uff0cB\u4f5c\u4e3a\u884c\u7d22\u5f15\n# \u4e00\u4e2aExcel\u6587\u4ef6\u4e2d\u4fdd\u5b58\u591a\u4e2a\u5de5\u4f5c\u8868\nwith pd.ExcelWriter('./data.xlsx') as writer:\n    df1.to_excel(writer,sheet_name='salary',index = False)\n    df2.to_excel(writer,sheet_name='score',index = False)\npd.read_excel('./data.xlsx',\n              sheet_name='salary') # \u8bfb\u53d6Excel\u4e2d\u6307\u5b9a\u540d\u5b57\u7684\u5de5\u4f5c\u8868 \n</code></pre>"},{"location":"analysis/pandas/#sql","title":"\u7b2c\u4e09\u8282 SQL","text":"<p>pip install sqlalchemy -i https://pypi.tuna.tsinghua.edu.cn/simple</p> <p>pip install pymysql -i https://pypi.tuna.tsinghua.edu.cn/simple</p> <p></p> <p>\u6570\u636e\u5e93\u5f15\u64ce\u914d\u7f6e</p> <pre><code>import pandas as pd\n# SQLAlchemy\u662fPython\u7f16\u7a0b\u8bed\u8a00\u4e0b\u7684\u4e00\u6b3e\u5f00\u6e90\u8f6f\u4ef6\u3002\u63d0\u4f9b\u4e86SQL\u5de5\u5177\u5305\u53ca\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04\uff08ORM\uff09\u5de5\u5177\nfrom sqlalchemy import create_engine\ndf = pd.DataFrame(data = np.random.randint(0,50,size = [150,3]),# \u8ba1\u7b97\u673a\u79d1\u76ee\u7684\u8003\u8bd5\u6210\u7ee9\n                   columns=['Python','Tensorflow','Keras'])\n# \u6570\u636e\u5e93\u8fde\u63a5\nconn = create_engine('mysql+pymysql://root:root@localhost/pandas?charset=UTF8MB4')\n# \u4fdd\u5b58\u5230\u6570\u636e\u5e93\ndf.to_sql('score',#\u6570\u636e\u5e93\u4e2d\u8868\u540d\n          conn,# \u6570\u636e\u5e93\u8fde\u63a5\n          if_exists='append')#\u5982\u679c\u8868\u540d\u5b58\u5728\uff0c\u8ffd\u52a0\u6570\u636e\n# \u4ece\u6570\u636e\u5e93\u4e2d\u52a0\u8f7d\npd.read_sql('select * from score limit 10', # sql\u67e5\u8be2\u8bed\u53e5\n            conn, # \u6570\u636e\u5e93\u8fde\u63a5\n            index_col='Python') # \u6307\u5b9a\u884c\u7d22\u5f15\u540d\n</code></pre> <p>\u5b58\u4e2d\u6587\uff0c\u53ef\u80fd\u4f1a\u62a5\u9519\uff1a</p> <p></p> <p>\u6211\u4eec\u9700\u8981\u4fee\u6539\u6570\u636e\u5e93\u7684\u7f16\u7801\u3001\u8868\u7f16\u7801\u3001\u5b57\u6bb5\u7f16\u7801</p> <p></p> <p></p> <p>\u4fee\u6539\u6570\u636e\u5e93\uff0c\u6307\u4ee4\u5982\u4e0b\uff1a</p> <p>alter database &lt;\u6570\u636e\u5e93\u540d&gt; character set utf8mb4;</p> <p>\u4fee\u6539\u8868\u7684\u7f16\u7801\u540c\u7406\uff1a</p> <p>\u5148\u67e5\u770b\uff0c\u8868\u7684\u7f16\u7801\uff0c\u6307\u4ee4\u662f\uff1ashow create table &lt;\u8868\u540d&gt;;</p> <p></p> <p>\u4fee\u6539\u7684\u6307\u4ee4\u5982\u4e0b\uff1a</p> <p>alter table &lt;\u8868\u540d&gt; character set utf8mb4;</p> <p></p> <p>\u67e5\u770b\u5b57\u6bb5\u7f16\u7801\uff1ashow full columns from chengji;</p> <p></p> <p>\u4fee\u6539\u5b57\u6bb5\u7f16\u7801\uff0c\u4e24\u79cd\u65b9\u5f0f\uff1a</p> <p>alter table &lt;\u8868\u540d&gt; change &lt;\u5b57\u6bb5\u540d&gt; &lt;\u5b57\u6bb5\u540d&gt;&lt;\u7c7b\u578b&gt; character set utf8mb4;</p> <p>alter table &lt;\u8868\u540d&gt; modify &lt;\u5b57\u6bb5\u540d&gt; &lt;\u7c7b\u578b&gt; character set utf8mb4;</p> <p></p>"},{"location":"analysis/pandas/#hdf5","title":"\u7b2c\u56db\u8282 HDF5","text":"<p>pip install tables -i https://pypi.tuna.tsinghua.edu.cn/simple</p> <p>HDF5\u662f\u4e00\u4e2a\u72ec\u7279\u7684\u6280\u672f\u5957\u4ef6\uff0c\u53ef\u4ee5\u7ba1\u7406\u975e\u5e38\u5927\u548c\u590d\u6742\u7684\u6570\u636e\u6536\u96c6\u3002</p> <p>HDF5\uff0c\u53ef\u4ee5\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\u6570\u636e\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u540e\u7f00\u901a\u5e38\u662f.h5\uff0c\u5b83\u7684\u7ed3\u6784\u662f\u5c42\u6b21\u6027\u7684\u3002</p> <p>\u4e00\u4e2aHDF5\u6587\u4ef6\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u4e00\u4e2a\u7ec4\u5305\u542b\u4e86\u5404\u7c7b\u4e0d\u540c\u7684\u6570\u636e\u96c6\u3002</p> <p></p> <p>\u5bf9\u4e8eHDF5\u6587\u4ef6\u4e2d\u7684\u6570\u636e\u5b58\u50a8\uff0c\u6709\u4e24\u4e2a\u6838\u5fc3\u6982\u5ff5\uff1agroup \u548c dataset</p> <p>dataset \u4ee3\u8868\u6570\u636e\u96c6\uff0c\u4e00\u4e2a\u6587\u4ef6\u5f53\u4e2d\u53ef\u4ee5\u5b58\u653e\u4e0d\u540c\u79cd\u7c7b\u7684\u6570\u636e\u96c6\uff0c\u8fd9\u4e9b\u6570\u636e\u96c6\u5982\u4f55\u7ba1\u7406\uff0c\u5c31\u7528\u5230\u4e86group</p> <p>\u6700\u76f4\u89c2\u7684\u7406\u89e3\uff0c\u53ef\u4ee5\u53c2\u8003\u6211\u4eec\u7684\u6587\u4ef6\u7ba1\u7406\u7cfb\u7edf\uff0c\u4e0d\u540c\u7684\u6587\u4ef6\u4f4d\u4e8e\u4e0d\u540c\u7684\u76ee\u5f55\u4e0b\u3002</p> <p>\u76ee\u5f55\u5c31\u662fHDF5\u4e2d\u7684group, \u63cf\u8ff0\u4e86\u6570\u636e\u96c6dataset\u7684\u5206\u7c7b\u4fe1\u606f\uff0c\u901a\u8fc7group \u6709\u6548\u7684\u5c06\u591a\u79cddataset \u8fdb\u884c\u7ba1\u7406\u548c\u533a\u5206\uff1b\u6587\u4ef6\u5c31\u662fHDF5\u4e2d\u7684dataset, \u8868\u793a\u7684\u662f\u5177\u4f53\u7684\u6570\u636e\u3002</p> <pre><code>import numpy as np\nimport pandas as pd\ndf1 = pd.DataFrame(data = np.random.randint(0,50,size = [50,5]), # \u85aa\u8d44\u60c5\u51b5\n               columns=['IT','\u5316\u5de5','\u751f\u7269','\u6559\u5e08','\u58eb\u5175'])\ndf2 = pd.DataFrame(data = np.random.randint(0,50,size = [150,3]),# \u8ba1\u7b97\u673a\u79d1\u76ee\u7684\u8003\u8bd5\u6210\u7ee9\n                   columns=['Python','Tensorflow','Keras'])\n# \u4fdd\u5b58\u5230\u5f53\u524d\u8def\u5f84\u4e0b\uff0c\u6587\u4ef6\u547d\u540d\u662f\uff1adata.h5\ndf1.to_hdf('./data.h5',key='salary') # \u4fdd\u5b58\u6570\u636e\u7684key\uff0c\u6807\u8bb0\ndf2.to_hdf('./data.h5',key = 'score')\n\npd.read_hdf('./data.h5',\n            key = 'salary')#\u83b7\u53d6\u6307\u5b9a\u7684\u6807\u8bb0\u3001key\u7684\u6570\u636e\n</code></pre>"},{"location":"analysis/pandas/#_5","title":"\u7b2c\u4e94\u90e8\u5206 \u6570\u636e\u9009\u53d6","text":""},{"location":"analysis/pandas/#_6","title":"\u7b2c\u4e00\u8282 \u5b57\u6bb5\u6570\u636e","text":"<pre><code>import pandas as pd\nimport numpy as np\ndf = pd.DataFrame(data = np.random.randint(0,150,size = [150,3]),# \u8ba1\u7b97\u673a\u79d1\u76ee\u7684\u8003\u8bd5\u6210\u7ee9\n                   columns=['Python','Tensorflow','Keras'])\ndf['Python'] # \u83b7\u53d6\u5355\u5217\uff0cSeries\ndf.Python # \u83b7\u53d6\u5355\u5217\uff0cSeries\ndf[['Python','Keras']] # \u83b7\u53d6\u591a\u5217\uff0cDataFrame\ndf[3:15] # \u884c\u5207\u7247\n</code></pre>"},{"location":"analysis/pandas/#_7","title":"\u7b2c\u4e8c\u8282 \u6807\u7b7e\u9009\u62e9","text":"<pre><code>import pandas as pd\nimport numpy as np\ndf = pd.DataFrame(data = np.random.randint(0,150,size = [10,3]),# \u8ba1\u7b97\u673a\u79d1\u76ee\u7684\u8003\u8bd5\u6210\u7ee9\n                  index = list('ABCDEFGHIJ'),# \u884c\u6807\u7b7e\n                  columns=['Python','Tensorflow','Keras'])\ndf.loc[['A','C','D','F']] # \u9009\u53d6\u6307\u5b9a\u884c\u6807\u7b7e\u6570\u636e\u3002\ndf.loc['A':'E',['Python','Keras']] # \u6839\u636e\u884c\u6807\u7b7e\u5207\u7247\uff0c\u9009\u53d6\u6307\u5b9a\u5217\u6807\u7b7e\u7684\u6570\u636e\ndf.loc[:,['Keras','Tensorflow']] # :\u9ed8\u8ba4\u4fdd\u7559\u6240\u6709\u884c\ndf.loc['E'::2,'Python':'Tensorflow'] # \u884c\u5207\u7247\u4ece\u6807\u7b7eE\u5f00\u59cb\u6bcf2\u4e2a\u4e2d\u53d6\u4e00\u4e2a\uff0c\u5217\u6807\u7b7e\u8fdb\u884c\u5207\u7247\ndf.loc['A','Python'] # \u9009\u53d6\u6807\u91cf\u503c\n</code></pre>"},{"location":"analysis/pandas/#_8","title":"\u7b2c\u4e09\u8282 \u4f4d\u7f6e\u9009\u62e9","text":"<pre><code>import pandas as pd\nimport numpy as np\ndf = pd.DataFrame(data = np.random.randint(0,150,size = [10,3]),# \u8ba1\u7b97\u673a\u79d1\u76ee\u7684\u8003\u8bd5\u6210\u7ee9\n                  index = list('ABCDEFGHIJ'),# \u884c\u6807\u7b7e\n                  columns=['Python','Tensorflow','Keras'])\ndf.iloc[4] # \u7528\u6574\u6570\u4f4d\u7f6e\u9009\u62e9\u3002\ndf.iloc[2:8,0:2] # \u7528\u6574\u6570\u5207\u7247\uff0c\u7c7b\u4f3cNumPy\ndf.iloc[[1,3,5],[0,2,1]] # \u6574\u6570\u5217\u8868\u6309\u4f4d\u7f6e\u5207\u7247\ndf.iloc[1:3,:] # \u884c\u5207\u7247\ndf.iloc[:,:2] # \u5217\u5207\u7247\ndf.iloc[0,2] # \u9009\u53d6\u6807\u91cf\u503c\n</code></pre>"},{"location":"analysis/pandas/#boolean","title":"\u7b2c\u56db\u8282 boolean\u7d22\u5f15","text":"<pre><code>import pandas as pd\nimport numpy as np\ndf = pd.DataFrame(data = np.random.randint(0,150,size = [10,3]),# \u8ba1\u7b97\u673a\u79d1\u76ee\u7684\u8003\u8bd5\u6210\u7ee9\n                  index = list('ABCDEFGHIJ'),# \u884c\u6807\u7b7e\uff0c\u7528\u6237\n                  columns=['Python','Tensorflow','Keras']) # \u8003\u8bd5\u79d1\u76ee\ncond1 = df.Python &gt; 100 #  \u5224\u65adPython\u5206\u6570\u662f\u5426\u5927\u4e8e100\uff0c\u8fd4\u56de\u503c\u662fboolean\u7c7b\u578b\u7684Series\ndf[cond1] # \u8fd4\u56dePython\u5206\u6570\u5927\u4e8e100\u5206\u7684\u7528\u6237\u6240\u6709\u8003\u8bd5\u79d1\u76ee\u6570\u636e\ncond2 = (df.Python &gt; 50) &amp; (df['Keras'] &gt; 50) # &amp;\u4e0e\u8fd0\u7b97\ndf[cond2] # \u8fd4\u56dePython\u548cKeras\u540c\u65f6\u5927\u4e8e50\u5206\u7684\u7528\u6237\u7684\u6240\u6709\u8003\u8bd5\u79d1\u76ee\u6570\u636e\ndf[df &gt; 50]# \u9009\u62e9DataFrame\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684\u503c\uff0c\u5982\u679c\u6ee1\u8db3\u8fd4\u56de\u503c\uff0c\u4e0d\u7136\u8fd4\u56de\u7a7a\u6570\u636eNaN\ndf[df.index.isin(['A','C','F'])] # isin\u5224\u65ad\u662f\u5426\u5728\u6570\u7ec4\u4e2d\uff0c\u8fd4\u56de\u4e5f\u662fboolean\u7c7b\u578b\u503c\n</code></pre>"},{"location":"analysis/pandas/#_9","title":"\u7b2c\u4e94\u8282 \u8d4b\u503c\u64cd\u4f5c","text":"<pre><code>import pandas as pd\nimport numpy as np\ndf = pd.DataFrame(data = np.random.randint(0,150,size = [10,3]),# \u8ba1\u7b97\u673a\u79d1\u76ee\u7684\u8003\u8bd5\u6210\u7ee9\n                  index = list('ABCDEFGHIJ'),# \u884c\u6807\u7b7e\uff0c\u7528\u6237\n                  columns=['Python','Tensorflow','Keras']) # \u8003\u8bd5\u79d1\u76ee\ns = pd.Series(data = np.random.randint(0,150,size = 9),index=list('BCDEFGHIJ'),name = 'PyTorch')\ndf['PyTorch'] = s # \u589e\u52a0\u4e00\u5217\uff0cDataFrame\u884c\u7d22\u5f15\u81ea\u52a8\u5bf9\u9f50\ndf.loc['A','Python'] = 256 # \u6309\u6807\u7b7e\u8d4b\u503c\ndf.iloc[3,2] = 512 # \u6309\u4f4d\u7f6e\u8d4b\u503c\ndf.loc[:,'Python'] = np.array([128]*10) # \u6309NumPy\u6570\u7ec4\u8fdb\u884c\u8d4b\u503c\ndf[df &gt;= 128] = -df # \u6309\u7167where\u6761\u4ef6\u8fdb\u884c\u8d4b\u503c\uff0c\u5927\u4e8e\u7b49\u4e8e128\u53d8\u6210\u539f\u6765\u7684\u8d1f\u6570\uff0c\u5426\u5219\u4e0d\u53d8\ndf\n</code></pre>"},{"location":"analysis/pandas/#_10","title":"\u7b2c\u516d\u90e8\u5206 \u6570\u636e\u96c6\u6210","text":"<p>pandas \u63d0\u4f9b\u4e86\u591a\u79cd\u5c06 Series\u3001DataFrame \u5bf9\u8c61\u7ec4\u5408\u5728\u4e00\u8d77\u7684\u529f\u80fd</p>"},{"location":"analysis/pandas/#concat","title":"\u7b2c\u4e00\u8282 concat\u6570\u636e\u4e32\u8054","text":"<pre><code>import pandas as pd\nimport numpy as np\ndf1 = pd.DataFrame(data = np.random.randint(0,150,size = [10,3]),# \u8ba1\u7b97\u673a\u79d1\u76ee\u7684\u8003\u8bd5\u6210\u7ee9\n                  index = list('ABCDEFGHIJ'),# \u884c\u6807\u7b7e\uff0c\u7528\u6237\n                  columns=['Python','Tensorflow','Keras']) # \u8003\u8bd5\u79d1\u76ee\ndf2 = pd.DataFrame(data = np.random.randint(0,150,size = [10,3]),# \u8ba1\u7b97\u673a\u79d1\u76ee\u7684\u8003\u8bd5\u6210\u7ee9\n                  index = list('KLMNOPQRST'),# \u884c\u6807\u7b7e\uff0c\u7528\u6237\n                  columns=['Python','Tensorflow','Keras']) # \u8003\u8bd5\u79d1\u76ee\ndf3 = pd.DataFrame(data = np.random.randint(0,150,size = (10,2)),\n                  index = list('ABCDEFGHIJ'),\n                  columns=['PyTorch','Paddle'])\npd.concat([df1,df2],axis = 0) # df1\u548cdf2\u884c\u4e32\u8054\uff0cdf2\u7684\u884c\u8ffd\u52a0df2\u884c\u540e\u9762\ndf1.append(df2) # \u5728df1\u540e\u9762\u8ffd\u52a0df2\npd.concat([df1,df3],axis = 1) # df1\u548cdf2\u5217\u4e32\u8054\uff0cdf2\u7684\u5217\u8ffd\u52a0\u5230df1\u5217\u540e\u9762\n</code></pre>"},{"location":"analysis/pandas/#_11","title":"\u7b2c\u4e8c\u8282 \u63d2\u5165","text":"<pre><code>import numpy as np\nimport pandas as pd\ndf = pd.DataFrame(data = np.random.randint(0,151,size = (10,3)),\n                  index = list('ABCDEFGHIJ'),\n                  columns = ['Python','Keras','Tensorflow'])\ndf.insert(loc = 1,column='Pytorch',value=1024) # \u63d2\u5165\u5217\ndf\n# \u5bf9\u884c\u7684\u64cd\u4f5c\uff0c\u4f7f\u7528\u8ffd\u52a0append\uff0c\u9ed8\u8ba4\u5728\u6700\u540e\u9762\uff0c\u65e0\u6cd5\u6307\u5b9a\u4f4d\u7f6e\n# \u5982\u679c\u60f3\u8981\u5728\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165\u884c\uff1a\u5207\u5272-\u6dfb\u52a0-\u5408\u5e76\n</code></pre>"},{"location":"analysis/pandas/#join-sql","title":"\u7b2c\u4e09\u8282 Join SQL\u98ce\u683c\u5408\u5e76","text":"<p>\u6570\u636e\u96c6\u7684\u5408\u5e76\uff08merge\uff09\u6216\u8fde\u63a5\uff08join\uff09\u8fd0\u7b97\u662f\u901a\u8fc7\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u952e\u5c06\u6570\u636e\u94fe\u63a5\u8d77\u6765\u7684\u3002\u8fd9\u4e9b\u8fd0\u7b97\u662f\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u6838\u5fc3\u64cd\u4f5c\u3002pandas\u7684merge\u51fd\u6570\u662f\u6570\u636e\u96c6\u8fdb\u884cjoin\u8fd0\u7b97\u7684\u4e3b\u8981\u5207\u5165\u70b9\u3002</p> <pre><code>import pandas as pd\nimport numpy as np\n# \u8868\u4e00\u4e2d\u8bb0\u5f55\u7684\u662fname\u548c\u4f53\u91cd\u4fe1\u606f\ndf1 = pd.DataFrame(data = {'name':['softpo','Daniel','Brandon','Ella'],'weight':[70,55,75,65]})\n# \u8868\u4e8c\u4e2d\u8bb0\u5f55\u7684\u662fname\u548c\u8eab\u9ad8\u4fe1\u606f\ndf2 = pd.DataFrame(data = {'name':['softpo','Daniel','Brandon','Cindy'],'height':[172,170,170,166]})\ndf3 = pd.DataFrame(data = {'\u540d\u5b57':['softpo','Daniel','Brandon','Cindy'],'height':[172,170,170,166]})\n# \u6839\u636e\u5171\u540c\u7684name\u5c06\u4fe9\u8868\u7684\u6570\u636e\uff0c\u8fdb\u884c\u5408\u5e76\npd.merge(df1,df2,\n         how = 'inner',# \u5185\u5408\u5e76\u4ee3\u8868\u4e24\u5bf9\u8c61\u4ea4\u96c6\n         on = 'name')\npd.merge(df1,df3,\n         how = 'outer',# \u5168\u5916\u8fde\u63a5\uff0c\u4e24\u5bf9\u8c61\u5e76\u96c6\n         left_on = 'name',# \u5de6\u8fb9DataFrame\u4f7f\u7528\u5217\u6807\u7b7e name\u8fdb\u884c\u5408\u5e76\n         right_on = '\u540d\u5b57')# \u53f3\u8fb9DataFrame\u4f7f\u7528\u5217\u6807\u7b7e \u540d\u5b57\u8fdb\u884c\u5408\u5e76\n# \u521b\u5efa10\u540d\u5b66\u751f\u7684\u8003\u8bd5\u6210\u7ee9\ndf4 = pd.DataFrame(data = np.random.randint(0,151,size = (10,3)),\n                   index = list('ABCDEFHIJK'),\n                   columns=['Python','Keras','Tensorflow'])\n# \u8ba1\u7b97\u6bcf\u4f4d\u5b66\u751f\u5404\u79d1\u5e73\u5747\u5206\uff0c\u8f6c\u6362\u6210DataFrame\nscore_mean = pd.DataFrame(df4.mean(axis = 1).round(1),columns=['\u5e73\u5747\u5206'])\n# \u5c06\u5e73\u5747\u5206\u548cdf3\u4f7f\u7528merge\u8fdb\u884c\u5408\u5e76\uff0c\u5b83\u4fe9\u6709\u5171\u540c\u7684\u884c\u7d22\u5f15\npd.merge(left = df4,right = score_mean,\n         left_index=True,# \u5de6\u8fb9DataFrame\u4f7f\u7528\u884c\u7d22\u5f15\u8fdb\u884c\u5408\u5e76\n         right_index=True)# \u53f3\u8fb9\u7684DataFrame\u4f7f\u7528\u884c\u7d22\u5f15\u8fdb\u884c\u5408\u5e76\n</code></pre>"},{"location":"analysis/pandas/#_12","title":"\u7b2c\u4e03\u90e8\u5206 \u6570\u636e\u6e05\u6d17","text":"<pre><code>import numpy as np\nimport pandas as pd\ndf = pd.DataFrame(data = {'color':['red','blue','red','green','blue',None,'red'],\n                          'price':[10,20,10,15,20,0,np.NaN]})\n# 1\u3001\u91cd\u590d\u6570\u636e\u8fc7\u6ee4\ndf.duplicated() # \u5224\u65ad\u662f\u5426\u5b58\u5728\u91cd\u590d\u6570\u636e\ndf.drop_duplicates() # \u5220\u9664\u91cd\u590d\u6570\u636e\n\n# 2\u3001\u7a7a\u6570\u636e\u8fc7\u6ee4\ndf.isnull() # \u5224\u65ad\u662f\u5426\u5b58\u5728\u7a7a\u6570\u636e\uff0c\u5b58\u5728\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse\ndf.dropna(how = 'any') # \u5220\u9664\u7a7a\u6570\u636e\ndf.fillna(value=1111) # \u586b\u5145\u7a7a\u6570\u636e\n\n# 3\u3001\u6307\u5b9a\u884c\u6216\u8005\u5217\u8fc7\u6ee4\ndel df['color'] # \u76f4\u63a5\u5220\u9664\u67d0\u5217\ndf.drop(labels = ['price'],axis = 1)# \u5220\u9664\u6307\u5b9a\u5217\ndf.drop(labels = [0,1,5],axis = 0) # \u5220\u9664\u6307\u5b9a\u884c\n\n# 4\u3001\u51fd\u6570filter\u4f7f\u7528\ndf = pd.DataFrame(np.array(([3,7,1], [2, 8, 256])),\n                  index=['dog', 'cat'],\n                  columns=['China', 'America', 'France'])\ndf.filter(items=['China', 'France'])\n# \u6839\u636e\u6b63\u5219\u8868\u8fbe\u5f0f\u5220\u9009\u5217\u6807\u7b7e\ndf.filter(regex='a$', axis=1)\n# \u9009\u62e9\u884c\u4e2d\u5305\u542bog\ndf.filter(like='og', axis=0)\n\n# 5\u3001\u5f02\u5e38\u503c\u8fc7\u6ee4\ndf2 = pd.DataFrame(data = np.random.randn(10000,3)) # \u6b63\u6001\u5206\u5e03\u6570\u636e\n# 3\u03c3\u8fc7\u6ee4\u5f02\u5e38\u503c\uff0c\u03c3\u5373\u662f\u6807\u51c6\u5dee\ncond = (df2 &gt; 3*df2.std()).any(axis = 1)\nindex = df2[cond].index # \u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u884c\u7d22\u5f15\ndf2.drop(labels=index,axis = 0) # \u6839\u636e\u884c\u7d22\u5f15\uff0c\u8fdb\u884c\u6570\u636e\u5220\u9664\n</code></pre>"},{"location":"analysis/pandas/#_13","title":"\u7b2c\u516b\u90e8\u5206 \u6570\u636e\u8f6c\u6362","text":""},{"location":"analysis/pandas/#_14","title":"\u7b2c\u4e00\u8282 \u8f74\u548c\u5143\u7d20\u66ff\u6362","text":"<pre><code>import numpy as np\nimport pandas as pd\ndf = pd.DataFrame(data = np.random.randint(0,10,size = (10,3)),\n                  index = list('ABCDEFHIJK'),\n                  columns=['Python','Tensorflow','Keras'])\ndf.iloc[4,2] = None # \u7a7a\u6570\u636e\n#1\u3001\u91cd\u547d\u540d\u8f74\u7d22\u5f15\ndf.rename(index = {'A':'AA','B':'BB'},columns = {'Python':'\u4eba\u5de5\u667a\u80fd'}) \n\n# 2\u3001\u66ff\u6362\u503c\ndf.replace(3,1024) #\u5c063\u66ff\u6362\u4e3a1024\ndf.replace([0,7],2048) # \u5c060\u548c7\u66ff\u6362\u4e3a2048\ndf.replace({0:512,np.nan:998}) # \u6839\u636e\u5b57\u5178\u952e\u503c\u5bf9\u8fdb\u884c\u66ff\u6362\ndf.replace({'Python':2},-1024) # \u5c06Python\u8fd9\u4e00\u5217\u4e2d\u7b49\u4e8e2\u7684\uff0c\u66ff\u6362\u4e3a-1024\n</code></pre>"},{"location":"analysis/pandas/#map-series","title":"\u7b2c\u4e8c\u8282 map Series\u5143\u7d20\u6539\u53d8","text":"<pre><code>import numpy as np\nimport pandas as pd\ndf = pd.DataFrame(data = np.random.randint(0,10,size = (10,3)),\n                  index = list('ABCDEFHIJK'),\n                  columns=['Python','Tensorflow','Keras'])\ndf.iloc[4,2] = None # \u7a7a\u6570\u636e\n\n# 1\u3001map\u6279\u91cf\u5143\u7d20\u6539\u53d8\uff0cSeries\u4e13\u6709\ndf['Keras'].map({1:'Hello',5:'World',7:'AI'}) # \u5b57\u5178\u6620\u5c04\ndf['Python'].map(lambda x:True if x &gt;=5 else False) # \u9690\u5f0f\u51fd\u6570\u6620\u5c04\ndef convert(x): # \u663e\u793a\u51fd\u6570\u6620\u5c04\n    if x%3 == 0:\n        return True\n    elif x%3 == 1:\n        return False\ndf['Tensorflow'].map(convert)\n</code></pre>"},{"location":"analysis/pandas/#apply-series-dataframe","title":"\u7b2c\u4e09\u8282 apply\u5143\u7d20\u6539\u53d8\u3002\u65e2\u652f\u6301 Series\uff0c\u4e5f\u652f\u6301 DataFrame","text":"<pre><code>import numpy as np\nimport pandas as pd\ndf = pd.DataFrame(data = np.random.randint(0,10,size = (10,3)),\n                  index = list('ABCDEFHIJK'),\n                  columns=['Python','Tensorflow','Keras'])\ndf.iloc[4,2] = None # \u7a7a\u6570\u636e\n# 1\u3001apply \u5e94\u7528\u65b9\u6cd5\u6570\u636e\u8f6c\u6362\uff0c\u901a\u7528\n# Series\uff0c\u5176\u4e2dx\u662fSeries\u4e2d\u5143\u7d20\ndf['Keras'].apply(lambda x:True if x &gt;5 else False) \n# DataFrame\uff0c\u5176\u4e2d\u7684x\u662fDataFrame\u4e2d\u5217\u6216\u8005\u884c\uff0c\u662fSeries\ndf.apply(lambda x : x.median(),axis = 0) # \u5217\u7684\u4e2d\u4f4d\u6570\ndef convert(x): # \u81ea\u5b9a\u4e49\u65b9\u6cd5\n    return (x.mean().round(1),x.count())\ndf.apply(convert,axis = 1) # \u884c\u5e73\u5747\u503c\uff0c\u8ba1\u6570\n\n# 2\u3001applymap DataFrame\u4e13\u6709\ndf.applymap(lambda x : x + 100) # \u8ba1\u7b97DataFrame\u4e2d\u6bcf\u4e2a\u5143\u7d20\n</code></pre>"},{"location":"analysis/pandas/#transform","title":"\u7b2c\u56db\u8282 transform\u53d8\u5f62\u91d1\u521a","text":"<pre><code>import numpy as np\nimport pandas as pd\ndf = pd.DataFrame(data = np.random.randint(0,10,size = (10,3)),\n                  index = list('ABCDEFHIJK'),\n                  columns=['Python','Tensorflow','Keras'])\ndf.iloc[4,2] = None # \u7a7a\u6570\u636e\n\n# 1\u3001\u4e00\u5217\u6267\u884c\u591a\u9879\u8ba1\u7b97\ndf['Python'].transform([np.sqrt,np.exp]) # Series\u5904\u7406\ndef convert(x):\n    if x.mean() &gt; 5:\n        x *= 10\n    else:\n        x *= -10\n    return x\n# 2\u3001\u591a\u5217\u6267\u884c\u4e0d\u540c\u8ba1\u7b97\ndf.transform({'Python':convert,'Tensorflow':np.max,'Keras':np.min}) # DataFrame\u5904\u7406\n</code></pre>"},{"location":"analysis/pandas/#_15","title":"\u7b2c\u4e94\u8282 \u91cd\u6392\u968f\u673a\u62bd\u6837\u54d1\u53d8\u91cf","text":"<pre><code>import numpy as np\nimport pandas as pd\ndf = pd.DataFrame(data = np.random.randint(0,10,size = (10,3)),\n                  index = list('ABCDEFHIJK'),\n                  columns=['Python','Tensorflow','Keras'])\n\nran = np.random.permutation(10) # \u968f\u673a\u91cd\u6392\ndf.take(ran) # \u91cd\u6392DataFrame\ndf.take(np.random.randint(0,10,size = 15)) # \u968f\u673a\u62bd\u6837\n\n# \u54d1\u53d8\u91cf\uff0c\u72ec\u70ed\u7f16\u7801\uff0c1\u8868\u793a\u6709\uff0c0\u8868\u793a\u6ca1\u6709\ndf = pd.DataFrame({'key':['b','b','a','c','a','b']})\npd.get_dummies(df,prefix='',prefix_sep='')\n</code></pre>"},{"location":"analysis/pandas/#_16","title":"\u7b2c\u4e5d\u90e8\u5206 \u6570\u636e\u91cd\u5851","text":"<pre><code>import numpy as np\nimport pandas as pd\ndf = pd.DataFrame(data = np.random.randint(0,100,size = (10,3)),\n                  index = list('ABCDEFHIJK'),\n                  columns=['Python','Tensorflow','Keras'])\ndf.T # \u8f6c\u7f6e\ndf2 = pd.DataFrame(data = np.random.randint(0,100,size = (20,3)),\n                   index = pd.MultiIndex.from_product([list('ABCDEFHIJK'),['\u671f\u4e2d','\u671f\u672b']]),#\u591a\u5c42\u7d22\u5f15\n                   columns=['Python','Tensorflow','Keras'])\ndf2.unstack(level = -1) # \u884c\u65cb\u8f6c\u6210\u5217\uff0clevel\u6307\u5b9a\u54ea\u4e00\u5c42\uff0c\u8fdb\u884c\u53d8\u6362\ndf2.stack() # \u5217\u65cb\u8f6c\u6210\u884c\ndf2.stack().unstack(level = 1) # \u884c\u5217\u4e92\u6362\n\n# \u591a\u5c42\u7d22\u5f15DataFrame\u6570\u5b66\u8ba1\u7b97\ndf2.mean() # \u5404\u5b66\u79d1\u5e73\u5747\u5206\ndf2.mean(level=0) # \u5404\u5b66\u79d1\uff0c\u6bcf\u4e2a\u4eba\u671f\u4e2d\u671f\u672b\u5e73\u5747\u5206\ndf2.mean(level = 1) # \u5404\u5b66\u79d1\uff0c\u671f\u4e2d\u671f\u672b\u6240\u6709\u4eba\u5e73\u5747\u5206\n</code></pre>"},{"location":"analysis/pandas/#_17","title":"\u7b2c\u5341\u90e8\u5206 \u6570\u5b66\u548c\u7edf\u8ba1\u65b9\u6cd5","text":"<p>pandas\u5bf9\u8c61\u62e5\u6709\u4e00\u7ec4\u5e38\u7528\u7684\u6570\u5b66\u548c\u7edf\u8ba1\u65b9\u6cd5\u3002\u5b83\u4eec\u5c5e\u4e8e\u6c47\u603b\u7edf\u8ba1\uff0c\u5bf9Series\u6c47\u603b\u8ba1\u7b97\u83b7\u53d6mean\u3001max\u503c\u6216\u8005\u5bf9DataFrame\u884c\u3001\u5217\u6c47\u603b\u8ba1\u7b97\u8fd4\u56de\u4e00\u4e2aSeries\u3002</p>"},{"location":"analysis/pandas/#_18","title":"\u7b2c\u4e00\u8282 \u7b80\u5355\u7edf\u8ba1\u6307\u6807","text":"<pre><code>import numpy as np\nimport pandas as pd\ndf = pd.DataFrame(data = np.random.randint(0,100,size = (20,3)),\n                  index = list('ABCDEFHIJKLMNOPQRSTU'),\n                  columns=['Python','Tensorflow','Keras'])\n# 1\u3001\u7b80\u5355\u7edf\u8ba1\u6307\u6807\ndf.count() # \u975eNA\u503c\u7684\u6570\u91cf\ndf.max(axis = 0) #\u8f740\u6700\u5927\u503c\uff0c\u5373\u6bcf\u4e00\u5217\u6700\u5927\u503c\ndf.min() #\u9ed8\u8ba4\u8ba1\u7b97\u8f740\u6700\u5c0f\u503c\ndf.median() # \u4e2d\u4f4d\u6570\ndf.sum() # \u6c42\u548c\ndf.mean(axis = 1) #\u8f741\u5e73\u5747\u503c\uff0c\u5373\u6bcf\u4e00\u884c\u7684\u5e73\u5747\u503c\ndf.quantile(q = [0.2,0.4,0.8]) # \u5206\u4f4d\u6570\ndf.describe() # \u67e5\u770b\u6570\u503c\u578b\u5217\u7684\u6c47\u603b\u7edf\u8ba1,\u8ba1\u6570\u3001\u5e73\u5747\u503c\u3001\u6807\u51c6\u5dee\u3001\u6700\u5c0f\u503c\u3001\u56db\u5206\u4f4d\u6570\u3001\u6700\u5927\u503c\n</code></pre>"},{"location":"analysis/pandas/#_19","title":"\u7b2c\u4e8c\u8282 \u7d22\u5f15\u6807\u7b7e\u3001\u4f4d\u7f6e\u83b7\u53d6","text":"<pre><code># 2\u3001\u7d22\u5f15\u4f4d\u7f6e\ndf['Python'].argmin() # \u8ba1\u7b97\u6700\u5c0f\u503c\u4f4d\u7f6e\ndf['Keras'].argmax() # \u6700\u5927\u503c\u4f4d\u7f6e\ndf.idxmax() # \u6700\u5927\u503c\u7d22\u5f15\u6807\u7b7e\ndf.idxmin() # \u6700\u5c0f\u503c\u7d22\u5f15\u6807\u7b7e\n</code></pre>"},{"location":"analysis/pandas/#_20","title":"\u7b2c\u4e09\u8282 \u66f4\u591a\u7edf\u8ba1\u6307\u6807","text":"<pre><code># 3\u3001\u66f4\u591a\u7edf\u8ba1\u6307\u6807\ndf['Python'].value_counts() # \u7edf\u8ba1\u5143\u7d20\u51fa\u73b0\u6b21\u6570\ndf['Keras'].unique() # \u53bb\u91cd\ndf.cumsum() # \u7d2f\u52a0\ndf.cumprod() # \u7d2f\u4e58\ndf.std() # \u6807\u51c6\u5dee\ndf.var() # \u65b9\u5dee\ndf.cummin() # \u7d2f\u8ba1\u6700\u5c0f\u503c\ndf.cummax() # \u7d2f\u8ba1\u6700\u5927\u503c\ndf.diff() # \u8ba1\u7b97\u5dee\u5206\ndf.pct_change() # \u8ba1\u7b97\u767e\u5206\u6bd4\u53d8\u5316\n</code></pre>"},{"location":"analysis/pandas/#_21","title":"\u7b2c\u56db\u8282 \u9ad8\u7ea7\u7edf\u8ba1\u6307\u6807","text":"<pre><code># 4\u3001\u9ad8\u7ea7\u7edf\u8ba1\u6307\u6807\ndf.cov() # \u5c5e\u6027\u7684\u534f\u65b9\u5dee\ndf['Python'].cov(df['Keras']) # Python\u548cKeras\u7684\u534f\u65b9\u5dee\ndf.corr() # \u6240\u6709\u5c5e\u6027\u76f8\u5173\u6027\u7cfb\u6570\ndf.corrwith(df['Tensorflow']) # \u5355\u4e00\u5c5e\u6027\u76f8\u5173\u6027\u7cfb\u6570\n</code></pre> <p>\u534f\u65b9\u5dee\uff1a\\(Cov(X,Y) = \\frac{\\sum\\limits_1^n(X_i - \\overline{X})(Y_i - \\overline{Y})}{n-1}\\)</p> <p>\u76f8\u5173\u6027\u7cfb\u6570\uff1a\\(r(X,Y) = \\frac{Cov(X,Y)}{\\sqrt{Var[X]Var[Y]}}\\)</p>"},{"location":"analysis/pandas/#_22","title":"\u7b2c\u5341\u4e00\u90e8\u5206 \u6570\u636e\u6392\u5e8f","text":"<pre><code>import numpy as np\nimport pandas as pd\ndf = pd.DataFrame(data = np.random.randint(0,30,size = (30,3)),\n                  index = list('qwertyuioijhgfcasdcvbnerfghjcf'),\n                  columns = ['Python','Keras','Pytorch'])\n# 1\u3001\u7d22\u5f15\u5217\u540d\u6392\u5e8f\ndf.sort_index(axis = 0,ascending=True) # \u6309\u7d22\u5f15\u6392\u5e8f\uff0c\u964d\u5e8f\ndf.sort_index(axis = 1,ascending=False) #\u6309\u5217\u540d\u6392\u5e8f\uff0c\u5347\u5e8f\n# 2\u3001\u5c5e\u6027\u503c\u6392\u5e8f\ndf.sort_values(by = ['Python']) #\u6309Python\u5c5e\u6027\u503c\u6392\u5e8f\ndf.sort_values(by = ['Python','Keras'])#\u5148\u6309Python\uff0c\u518d\u6309Keras\u6392\u5e8f\n\n# 3\u3001\u8fd4\u56de\u5c5e\u6027n\u5927\u6216\u8005n\u5c0f\u7684\u503c\ndf.nlargest(10,columns='Keras') # \u6839\u636e\u5c5e\u6027Keras\u6392\u5e8f,\u8fd4\u56de\u6700\u592710\u4e2a\u6570\u636e\ndf.nsmallest(5,columns='Python') # \u6839\u636e\u5c5e\u6027Python\u6392\u5e8f\uff0c\u8fd4\u56de\u6700\u5c0f5\u4e2a\u6570\u636e\n</code></pre>"},{"location":"analysis/pandas/#_23","title":"\u7b2c\u5341\u4e8c\u90e8\u5206 \u5206\u7bb1\u64cd\u4f5c","text":"<p>\u5206\u7bb1\u64cd\u4f5c\u5c31\u662f\u5c06\u8fde\u7eed\u6570\u636e\u8f6c\u6362\u4e3a\u5206\u7c7b\u5bf9\u5e94\u7269\u7684\u8fc7\u7a0b\u3002\u6bd4\u5982\u5c06\u8fde\u7eed\u7684\u8eab\u9ad8\u6570\u636e\u5212\u5206\u4e3a\uff1a\u77ee\u4e2d\u9ad8\u3002</p> <p>\u5206\u7bb1\u64cd\u4f5c\u5206\u4e3a\u7b49\u8ddd\u5206\u7bb1\u548c\u7b49\u9891\u5206\u7bb1\u3002</p> <p>\u5206\u7bb1\u64cd\u4f5c\u4e5f\u53eb\u9762\u5143\u5212\u5206\u6216\u8005\u79bb\u6563\u5316\u3002</p> <pre><code>import numpy as np\nimport pandas as pd\ndf = pd.DataFrame(data = np.random.randint(0,150,size = (100,3)),\n                  columns=['Python','Tensorflow','Keras'])\n# 1\u3001\u7b49\u5bbd\u5206\u7bb1\npd.cut(df.Python,bins = 3)\n# \u6307\u5b9a\u5bbd\u5ea6\u5206\u7bb1\npd.cut(df.Keras,#\u5206\u7bb1\u6570\u636e\n       bins = [0,60,90,120,150],#\u5206\u7bb1\u65ad\u70b9\n       right = False,# \u5de6\u95ed\u53f3\u5f00\n       labels=['\u4e0d\u53ca\u683c','\u4e2d\u7b49','\u826f\u597d','\u4f18\u79c0'])# \u5206\u7bb1\u540e\u5206\u7c7b\n\n# 2\u3001\u7b49\u9891\u5206\u7bb1\npd.qcut(df.Python,q = 4,# 4\u7b49\u5206\n        labels=['\u5dee','\u4e2d','\u826f','\u4f18']) # \u5206\u7bb1\u540e\u5206\u7c7b\n</code></pre>"},{"location":"analysis/pandas/#_24","title":"\u7b2c\u5341\u4e09\u90e8\u5206 \u5206\u7ec4\u805a\u5408","text":""},{"location":"analysis/pandas/#_25","title":"\u7b2c\u4e00\u8282 \u5206\u7ec4","text":"<pre><code>import numpy as np\nimport pandas as pd\n# \u51c6\u5907\u6570\u636e\ndf = pd.DataFrame(data = {'sex':np.random.randint(0,2,size = 300), # 0\u7537\uff0c1\u5973\n                          'class':np.random.randint(1,9,size = 300),#1~8\u516b\u4e2a\u73ed\n                          'Python':np.random.randint(0,151,size = 300),#Python\u6210\u7ee9\n                          'Keras':np.random.randint(0,151,size =300),#Keras\u6210\u7ee9\n                          'Tensorflow':np.random.randint(0,151,size=300),\n                          'Java':np.random.randint(0,151,size = 300),\n                          'C++':np.random.randint(0,151,size = 300)})\ndf['sex'] = df['sex'].map({0:'\u7537',1:'\u5973'}) # \u5c060\uff0c1\u6620\u5c04\u6210\u7537\u5973\n# 1\u3001\u5206\u7ec4-&gt;\u53ef\u8fed\u4ee3\u5bf9\u8c61\n# 1.1 \u5148\u5206\u7ec4\u518d\u83b7\u53d6\u6570\u636e\ng = df.groupby(by = 'sex')[['Python','Java']] # \u5355\u5206\u7ec4\nfor name,data in g:\n    print('\u7ec4\u540d\uff1a',name)\n    print('\u6570\u636e\uff1a',data)\ndf.groupby(by = ['class','sex'])[['Python']] # \u591a\u5206\u7ec4\n# 1.2 \u5bf9\u4e00\u5217\u503c\u8fdb\u884c\u5206\u7ec4\ndf['Python'].groupby(df['class']) # \u5355\u5206\u7ec4\ndf['Keras'].groupby([df['class'],df['sex']]) # \u591a\u5206\u7ec4\n# 1.3 \u6309\u6570\u636e\u7c7b\u578b\u5206\u7ec4\ndf.groupby(df.dtypes,axis = 1)\n# 1.4 \u901a\u8fc7\u5b57\u5178\u8fdb\u884c\u5206\u7ec4\nm = {'sex':'category','class':'category','Python':'IT','Keras':'IT','Tensorflow':'IT','Java':'IT','C++':'IT'}\nfor name,data in df.groupby(m,axis = 1):\n    print('\u7ec4\u540d',name)\n    print('\u6570\u636e',data)\n</code></pre>"},{"location":"analysis/pandas/#_26","title":"\u7b2c\u4e8c\u8282 \u5206\u7ec4\u805a\u5408","text":"<pre><code># 2\u3001\u5206\u7ec4\u76f4\u63a5\u8c03\u7528\u51fd\u6570\u8fdb\u884c\u805a\u5408\n# \u6309\u7167\u6027\u522b\u5206\u7ec4\uff0c\u5176\u4ed6\u5217\u5747\u503c\u805a\u5408\ndf.groupby(by = 'sex').mean().round(1) # \u4fdd\u75591\u4f4d\u5c0f\u6570\n# \u6309\u7167\u73ed\u7ea7\u548c\u6027\u522b\u8fdb\u884c\u5206\u7ec4\uff0cPython\u3001Keras\u7684\u6700\u5927\u503c\u805a\u5408\ndf.groupby(by = ['class','sex'])[['Python','Keras']].max()\n# \u6309\u7167\u73ed\u7ea7\u548c\u6027\u522b\u8fdb\u884c\u5206\u7ec4\uff0c\u8ba1\u6570\u805a\u5408\u3002\u7edf\u8ba1\u6bcf\u4e2a\u73ed\uff0c\u7537\u5973\u4eba\u6570\ndf.groupby(by = ['class','sex']).size()\n# \u57fa\u672c\u63cf\u8ff0\u6027\u7edf\u8ba1\u805a\u5408\ndf.groupby(by = ['class','sex']).describe()\n</code></pre>"},{"location":"analysis/pandas/#applytransform","title":"\u7b2c\u4e09\u8282 \u5206\u7ec4\u805a\u5408apply\u3001transform","text":"<pre><code># 3\u3001\u5206\u7ec4\u540e\u8c03\u7528apply\uff0ctransform\u5c01\u88c5\u5355\u4e00\u51fd\u6570\u8ba1\u7b97\n# \u8fd4\u56de\u5206\u7ec4\u7ed3\u679c\ndf.groupby(by = ['class','sex'])[['Python','Keras']].apply(np.mean).round(1)\ndef normalization(x):\n    return (x - x.min())/(x.max() - x.min()) # \u6700\u5927\u503c\u6700\u5c0f\u503c\u5f52\u4e00\u5316\n# \u8fd4\u56de\u5168\u6570\u636e\uff0c\u8fd4\u56deDataFrame.shape\u548c\u539fDataFrame.shape\u4e00\u6837\u3002\ndf.groupby(by = ['class','sex'])[['Python','Tensorflow']].transform(normalization).round(3)\n</code></pre>"},{"location":"analysis/pandas/#agg","title":"\u7b2c\u56db\u8282 \u5206\u7ec4\u805a\u5408agg","text":"<pre><code># 4\u3001agg \u591a\u4e2d\u7edf\u8ba1\u6c47\u603b\u64cd\u4f5c\n# \u5206\u7ec4\u540e\u8c03\u7528agg\u5e94\u7528\u591a\u79cd\u7edf\u8ba1\u6c47\u603b\ndf.groupby(by = ['class','sex'])[['Tensorflow','Keras']].agg([np.max,np.min,pd.Series.count])\n# \u5206\u7ec4\u540e\u4e0d\u540c\u5c5e\u6027\u5e94\u7528\u591a\u79cd\u4e0d\u540c\u7edf\u8ba1\u6c47\u603b\ndf.groupby(by = ['class','sex'])[['Python','Keras']].agg({'Python':[('\u6700\u5927\u503c',np.max),('\u6700\u5c0f\u503c',np.min)],\n                                                          'Keras':[('\u8ba1\u6570',pd.Series.count),('\u4e2d\u4f4d\u6570',np.median)]})\n</code></pre>"},{"location":"analysis/pandas/#pivot_table","title":"\u7b2c\u4e94\u8282 \u900f\u89c6\u8868pivot_table","text":"<pre><code># 5\u3001\u900f\u89c6\u8868\n# \u900f\u89c6\u8868\u4e5f\u662f\u4e00\u79cd\u5206\u7ec4\u805a\u5408\u8fd0\u7b97\ndef count(x):\n    return len(x)\ndf.pivot_table(values=['Python','Keras','Tensorflow'],# \u8981\u900f\u89c6\u5206\u7ec4\u7684\u503c\n               index=['class','sex'], # \u5206\u7ec4\u900f\u89c6\u6307\u6807\n               aggfunc={'Python':[('\u6700\u5927\u503c',np.max)], # \u805a\u5408\u8fd0\u7b97\n                        'Keras':[('\u6700\u5c0f\u503c',np.min),('\u4e2d\u4f4d\u6570',np.median)],\n                        'Tensorflow':[('\u6700\u5c0f\u503c',np.min),('\u5e73\u5747\u503c',np.mean),('\u8ba1\u6570',count)]})\n</code></pre>"},{"location":"analysis/pandas/#_27","title":"\u7b2c\u5341\u56db\u90e8\u5206 \u65f6\u95f4\u5e8f\u5217","text":""},{"location":"analysis/pandas/#_28","title":"\u7b2c\u4e00\u8282 \u65f6\u95f4\u6233\u64cd\u4f5c","text":"<pre><code># 1\u3001\u521b\u5efa\u65b9\u6cd5\npd.Timestamp('2020-8-24 12')# \u65f6\u523b\u6570\u636e\npd.Period('2020-8-24',freq = 'M') # \u65f6\u671f\u6570\u636e\nindex = pd.date_range('2020.08.24',periods=5,freq = 'M') # \u6279\u91cf\u65f6\u523b\u6570\u636e\npd.period_range('2020.08.24',periods=5,freq='M') # \u6279\u91cf\u65f6\u671f\u6570\u636e\nts = pd.Series(np.random.randint(0,10,size = 5),index = index) # \u65f6\u95f4\u6233\u7d22\u5f15Series\n\n# 2\u3001\u8f6c\u6362\u65b9\u6cd5\npd.to_datetime(['2020.08.24','2020-08-24','24/08/2020','2020/8/24'])\npd.to_datetime([1598582232],unit='s')\ndt = pd.to_datetime([1598582420401],unit = 'ms') # \u4e16\u754c\u6807\u51c6\u65f6\u95f4\ndt + pd.DateOffset(hours = 8) # \u4e1c\u516b\u533a\u65f6\u95f4\ndt + pd.DateOffset(days = 100) # 100\u5929\u540e\u65e5\u671f\n</code></pre>"},{"location":"analysis/pandas/#_29","title":"\u7b2c\u4e8c\u8282 \u65f6\u95f4\u6233\u7d22\u5f15","text":"<pre><code>index = pd.date_range(\"2020-8-24\", periods=200, freq=\"D\")\nts = pd.Series(range(len(index)), index=index)\n# str\u7c7b\u578b\u7d22\u5f15\nts['2020-08-30'] # \u65e5\u671f\u8bbf\u95ee\u6570\u636e\nts['2020-08-24':'2020-09-3'] # \u65e5\u671f\u5207\u7247\nts['2020-08'] # \u4f20\u5165\u5e74\u6708\nts['2020'] # \u4f20\u5165\u5e74\n# \u65f6\u95f4\u6233\u7d22\u5f15\nts[pd.Timestamp('2020-08-30')]\nts[pd.Timestamp('2020-08-24'):pd.Timestamp('2020-08-30')] # \u5207\u7247\nts[pd.date_range('2020-08-24',periods=10,freq='D')]\n\n# \u65f6\u95f4\u6233\u7d22\u5f15\u5c5e\u6027\nts.index.year # \u83b7\u53d6\u5e74\nts.index.dayofweek # \u83b7\u53d6\u661f\u671f\u51e0\nts.index.weekofyear # \u4e00\u5e74\u4e2d\u7b2c\u51e0\u4e2a\u661f\u671f\u51e0\n</code></pre>"},{"location":"analysis/pandas/#_30","title":"\u7b2c\u4e09\u8282 \u65f6\u95f4\u5e8f\u5217\u5e38\u7528\u65b9\u6cd5","text":"<p>\u5728\u505a\u65f6\u95f4\u5e8f\u5217\u76f8\u5173\u7684\u5de5\u4f5c\u65f6\uff0c\u7ecf\u5e38\u8981\u5bf9\u65f6\u95f4\u505a\u4e00\u4e9b\u79fb\u52a8/\u6ede\u540e\u3001\u9891\u7387\u8f6c\u6362\u3001\u91c7\u6837\u7b49\u76f8\u5173\u64cd\u4f5c\uff0c\u6211\u4eec\u6765\u770b\u4e0b\u8fd9\u4e9b\u64cd\u4f5c\u5982\u4f55\u4f7f\u7528</p> <pre><code>index = pd.date_range('8/1/2020', periods=365, freq='D')\nts = pd.Series(np.random.randint(0, 500, len(index)), index=index)\n\n# 1\u3001\u79fb\u52a8\nts.shift(periods = 2) #  \u6570\u636e\u540e\u79fb \nts.shift(periods = -2) # \u6570\u636e\u524d\u79fb\n\n# \u65e5\u671f\u79fb\u52a8\nts.shift(periods = 2,freq = pd.tseries.offsets.Day()) # \u5929\u79fb\u52a8\nts.tshift(periods = 1,freq = pd.tseries.offsets.MonthOffset()) #\u6708\u79fb\u52a8\n\n# 2\u3001\u9891\u7387\u8f6c\u6362\nts.asfreq(pd.tseries.offsets.Week()) # \u5929\u53d8\u5468\nts.asfreq(pd.tseries.offsets.MonthEnd()) # \u5929\u53d8\u6708\nts.asfreq(pd.tseries.offsets.Hour(),fill_value = 0) #\u5929\u53d8\u5c0f\u65f6\uff0c\u53c8\u5c11\u53d8\u591a\uff0cfill_value\u4e3a\u586b\u5145\u503c\n\n# 3\u3001\u91cd\u91c7\u6837\n# resample \u8868\u793a\u6839\u636e\u65e5\u671f\u7ef4\u5ea6\u8fdb\u884c\u6570\u636e\u805a\u5408\uff0c\u53ef\u4ee5\u6309\u7167\u5206\u949f\u3001\u5c0f\u65f6\u3001\u5de5\u4f5c\u65e5\u3001\u5468\u3001\u6708\u3001\u5e74\u7b49\u6765\u4f5c\u4e3a\u65e5\u671f\u7ef4\u5ea6\nts.resample('2W').sum() # \u4ee52\u5468\u4e3a\u5355\u4f4d\u8fdb\u884c\u6c47\u603b\nts.resample('3M').sum().cumsum() # \u4ee5\u5b63\u5ea6\u4e3a\u5355\u4f4d\u8fdb\u884c\u6c47\u603b\n\n# 4\u3001DataFrame\u91cd\u91c7\u6837\nd = dict({'price': [10, 11, 9, 13, 14, 18, 17, 19],\n          'volume': [50, 60, 40, 100, 50, 100, 40, 50],\n          'week_starting':pd.date_range('24/08/2020',periods=8,freq='W')})\ndf1 = pd.DataFrame(d)\ndf1.resample('M',on = 'week_starting').apply(np.sum)\ndf1.resample('M',on = 'week_starting').agg({'price':np.mean,'volume':np.sum})\n\ndays = pd.date_range('1/8/2020', periods=4, freq='D')\ndata2 = dict({'price': [10, 11, 9, 13, 14, 18, 17, 19],\n           'volume': [50, 60, 40, 100, 50, 100, 40, 50]})\ndf2 = pd.DataFrame(data2,\n                   index=pd.MultiIndex.from_product([days,['morning','afternoon']]))\ndf2.resample('D', level=0).sum()\n</code></pre>"},{"location":"analysis/pandas/#_31","title":"\u7b2c\u56db\u8282 \u65f6\u533a\u8868\u793a","text":"<pre><code>index = pd.date_range('8/1/2012 00:00', periods=5, freq='D')\nts = pd.Series(np.random.randn(len(index)), index)\nimport pytz\npytz.common_timezones # \u5e38\u7528\u65f6\u533a\n# \u65f6\u533a\u8868\u793a\nts = ts.tz_localize(tz='UTC')\n# \u8f6c\u6362\u6210\u5176\u5b83\u65f6\u533a\nts.tz_convert(tz = 'Asia/Shanghai')\n</code></pre>"},{"location":"analysis/pandas/#_32","title":"\u7b2c\u5341\u4e94\u90e8\u5206 \u6570\u636e\u53ef\u89c6\u5316","text":"<p>pip install matplotlib -i https://pypi.tuna.tsinghua.edu.cn/simple</p> <pre><code>import numpy as np\nimport pandas as pd\n\n# 1\u3001\u7ebf\u5f62\u56fe\ndf1 = pd.DataFrame(data = np.random.randn(1000,4),\n                  index = pd.date_range(start = '27/6/2012',periods=1000),\n                  columns=list('ABCD'))\ndf1.cumsum().plot()\n\n# 2\u3001\u6761\u5f62\u56fe\ndf2 = pd.DataFrame(data = np.random.rand(10,4),\n                   columns = list('ABCD'))\ndf2.plot.bar(stacked = True) # stacked \u662f\u5426\u5806\u53e0\n\n# 3\u3001\u997c\u56fe\ndf3 = pd.DataFrame(data = np.random.rand(4,2),\n                   index = list('ABCD'),\n                   columns=['One','Two'])\ndf3.plot.pie(subplots = True,figsize = (8,8))\n\n# 4\u3001\u6563\u70b9\u56fe\ndf4 = pd.DataFrame(np.random.rand(50, 4), columns=list('ABCD'))\ndf4.plot.scatter(x='A', y='B') # A\u548cB\u5173\u7cfb\u7ed8\u5236\n# \u5728\u4e00\u5f20\u56fe\u4e2d\u7ed8\u5236AC\u6563\u70b9\u56fe\uff0c\u540c\u65f6\u7ed8\u5236BD\u6563\u70b9\u56fe\nax = df4.plot.scatter(x='A', y='C', color='DarkBlue', label='Group 1');\ndf4.plot.scatter(x='B', y='D', color='DarkGreen', label='Group 2', ax=ax)\n# \u6c14\u6ce1\u56fe\uff0c\u6563\u70b9\u6709\u5927\u5c0f\u4e4b\u5206\ndf4.plot.scatter(x='A',y='B',s = df4['C']*200)\n\n\n# 5\u3001\u9762\u79ef\u56fe\ndf5 = pd.DataFrame(data = np.random.rand(10, 4), \n                   columns=list('ABCD'))\ndf5.plot.area(stacked = True);# stacked \u662f\u5426\u5806\u53e0\n\n# 6\u3001\u7bb1\u5f0f\u56fe\ndf6 = pd.DataFrame(data = np.random.rand(10, 5), \n                   columns=list('ABCDE'))\ndf6.plot.box()\n\n# 7\u3001\u76f4\u65b9\u56fe\ndf7 = pd.DataFrame({'A': np.random.randn(1000) + 1, 'B': np.random.randn(1000),\n                    'C': np.random.randn(1000) - 1})\ndf7.plot.hist(alpha=0.5) #\u5e26\u900f\u660e\u5ea6\u76f4\u65b9\u56fe\ndf7.plot.hist(stacked = True)# \u5806\u53e0\u56fe\ndf7.hist(figsize = (8,8)) # \u5b50\u89c6\u56fe\u7ed8\u5236\n</code></pre>"},{"location":"analysis/pandas/#-","title":"\u7b2c\u5341\u516d\u90e8\u5206 \u5b9e\u6218-\u6570\u636e\u5206\u6790\u5e08\u62db\u8058\u6570\u636e\u5206\u6790","text":""},{"location":"analysis/pandas/#_33","title":"\u7b2c\u4e00\u8282 \u5206\u6790\u76ee\u6807","text":"<ul> <li>\u5404\u57ce\u5e02\u5bf9\u6570\u636e\u5206\u6790\u5c97\u4f4d\u7684\u9700\u6c42\u60c5\u51b5</li> <li>\u4e0d\u540c\u7ec6\u5206\u9886\u57df\u5bf9\u6570\u636e\u5206\u6790\u5c97\u7684\u9700\u6c42\u60c5\u51b5</li> <li>\u6570\u636e\u5206\u6790\u5c97\u4f4d\u7684\u85aa\u8d44\u72b6\u51b5</li> <li>\u5de5\u4f5c\u7ecf\u9a8c\u4e0e\u85aa\u6c34\u7684\u5173\u7cfb</li> <li>\u516c\u53f8\u90fd\u8981\u6c42\u4ec0\u4e48\u638c\u63e1\u4ec0\u4e48\u6280\u80fd</li> <li>\u5c97\u4f4d\u7684\u5b66\u5386\u8981\u6c42\u9ad8\u5417</li> <li>\u4e0d\u540c\u89c4\u6a21\u7684\u4f01\u4e1a\u5bf9\u5de5\u8d44\u7ecf\u9a8c\u7684\u8981\u6c42\u4ee5\u53ca\u63d0\u4f9b\u7684\u85aa\u8d44\u6c34\u5e73</li> </ul>"},{"location":"analysis/pandas/#_34","title":"\u7b2c\u4e8c\u8282 \u6570\u636e\u52a0\u8f7d","text":"<pre><code>import pandas as pd\nimport numpy as np\njob = pd.read_csv('./job.csv')\njob.drop_duplicates(inplace = True) # \u5220\u9664\u91cd\u590d\u6570\u636e\n</code></pre>"},{"location":"analysis/pandas/#_35","title":"\u7b2c\u4e09\u8282 \u6570\u636e\u6e05\u6d17","text":"<ul> <li>\u8fc7\u6ee4\u975e\u6570\u636e\u5206\u6790\u7684\u5c97\u4f4d</li> </ul> <p><pre><code>  # \u6570\u636e\u5206\u6790\u76f8\u5e94\u7684\u5c97\u4f4d\u6570\u91cf\n  cond = job[\"positionName\"].str.contains(\"\u6570\u636e\u5206\u6790\")  # \u804c\u4f4d\u540d\u4e2d\u542b\u6709\u6570\u636e\u5206\u6790\u5b57\u773c\u7684\n  # \u7b5b\u9009\u51fa\u6211\u4eec\u60f3\u8981\u7684\u5b57\u6bb5\uff0c\u5e76\u5254\u9664positionName\n  job = job[cond]\n  job.reset_index(inplace=True) # \u884c\u7d22\u5f15 \u91cd\u7f6e\n  job\n</code></pre> * \u6570\u636e\u4e2d\u7684\u85aa\u6c34\u662f\u4e00\u4e2a\u533a\u95f4\uff0c\u8fd9\u91cc\u7528\u85aa\u6c34\u533a\u95f4\u7684\u5747\u503c\u4f5c\u4e3a\u76f8\u5e94\u804c\u4f4d\u7684\u85aa\u6c34</p> <p><pre><code>  # \u5904\u7406\u8fc7\u7a0b\n  #1\u3001\u5c06salary\u4e2d\u7684\u5b57\u7b26\u4e32\u5747\u5c0f\u5199\u5316\uff08\u56e0\u4e3a\u5b58\u57288k-16k\u548c8K-16K\uff09\n  #2\u3001\u8fd0\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u63d0\u53d6\u51fa\u85aa\u8d44\u533a\u95f4\n  #3\u3001\u5c06\u63d0\u53d6\u51fa\u6765\u7684\u6570\u5b57\u8f6c\u5316\u4e3aint\u578b\n  #4\u3001\u53d6\u533a\u95f4\u7684\u5e73\u5747\u503c\n  job[\"salary\"] = job[\"salary\"].str.lower()\\\n                 .str.extract(r'(\\d+)[k]-(\\d+)k')\\\n                 .applymap(lambda x:int(x))\\\n                 .mean(axis=1)\n</code></pre> * \u4ecejob_detail\u4e2d\u63d0\u53d6\u51fa\u6280\u80fd\u8981\u6c42 \u5c06\u6280\u80fd\u5206\u4e3a\u4ee5\u4e0b\u51e0\u7c7b   Python   SQL   Tableau   Excel   SPSS/SAS   \u5904\u7406\u65b9\u5f0f\uff1a \u5982\u679cjob_detail\u4e2d\u542b\u6709\u4e0a\u8ff0\u4e94\u7c7b\uff0c\u5219\u8d4b\u503c\u4e3a1\uff0c\u4e0d\u542b\u6709\u5219\u4e3a0</p> <p><pre><code>  job[\"job_detail\"] = job[\"job_detail\"].str.lower().fillna(\"\")  #\u5c06\u5b57\u7b26\u4e32\u5c0f\u5199\u5316\uff0c\u5e76\u5c06\u7f3a\u5931\u503c\u8d4b\u503c\u4e3a\u7a7a\u5b57\u7b26\u4e32\n  job[\"Python\"] = job[\"job_detail\"].map(lambda x:1 if ('python' in x) else 0)\n  job[\"SQL\"] = job[\"job_detail\"].map(lambda x:1 if ('sql' in x) or ('hive' in x)  else 0)\n  job[\"Tableau\"] = job[\"job_detail\"].map(lambda x:1 if 'tableau' in x  else 0)\n  job[\"Excel\"] = job[\"job_detail\"].map(lambda x:1 if 'excel' in x  else 0)\n  job['SPSS/SAS'] = job['job_detail'].map(lambda x:1 if ('spss' in x) or ('sas' in x) else 0)\n</code></pre> * \u5904\u7406\u884c\u4e1a\u4fe1\u606f</p> <pre><code>\u5728\u884c\u4e1a\u4fe1\u606f\u4e2d\u6709\u591a\u4e2a\u6807\u7b7e\uff0c\u5bf9\u5176\u8fdb\u884c\u5904\u7406\uff0c\u7b5b\u9009\u6700\u663e\u8457\u7684\u884c\u4e1a\u6807\u7b7e\u3002\n</code></pre> <pre><code>def clean_industry(industry):\n          industry = industry.split(\",\")\n          if industry[0]==\"\u79fb\u52a8\u4e92\u8054\u7f51\" and len(industry)&gt;1:\n              return industry[1]\n          else:\n              return industry[0]\n      job[\"industryField\"] = job.industryField.map(clean_industry)\n</code></pre> <ul> <li>\u6570\u636e\u5206\u6790\u5e08\u804c\u4f4d\u7684\u6570\u636e\u9884\u5904\u7406\u57fa\u672c\u5b8c\u6210\uff0c\u540e\u7eed\u4f7f\u7528matplotlib\u8fdb\u884c\u6570\u636e\u53ef\u89c6\u5316\u5206\u6790\u3002</li> </ul>"},{"location":"analysis/pandas/#pandas_1","title":"pandas\u5e93\u7684\u4eae\u70b9","text":"<ul> <li>\u4e00\u4e2a\u5feb\u901f\u3001\u9ad8\u6548\u7684DataFrame\u5bf9\u8c61\uff0c\u7528\u4e8e\u6570\u636e\u64cd\u4f5c\u548c\u7efc\u5408\u7d22\u5f15\uff1b</li> <li>\u7528\u4e8e\u5728\u5185\u5b58\u6570\u636e\u7ed3\u6784\u548c\u4e0d\u540c\u683c\u5f0f\u4e4b\u95f4\u8bfb\u5199\u6570\u636e\u7684\u5de5\u5177\uff1aCSV\u548c\u6587\u672c\u6587\u4ef6\u3001Microsoft Excel\u3001SQL\u6570\u636e\u5e93\u548c\u5feb\u901fHDF 5\u683c\u5f0f\uff1b</li> <li>\u667a\u80fd\u6570\u636e\u5bf9\u9f50\u548c\u4e22\u5931\u6570\u636e\u7684\u7efc\u5408\u5904\u7406\uff1a\u5728\u8ba1\u7b97\u4e2d\u83b7\u5f97\u57fa\u4e8e\u6807\u7b7e\u7684\u81ea\u52a8\u5bf9\u9f50\uff0c\u5e76\u8f7b\u677e\u5730\u5c06\u51cc\u4e71\u7684\u6570\u636e\u64cd\u4f5c\u4e3a\u6709\u5e8f\u7684\u5f62\u5f0f\uff1b</li> <li>\u6570\u636e\u96c6\u7684\u7075\u6d3b\u8c03\u6574\u548c\u65cb\u8f6c\uff1b</li> <li>\u57fa\u4e8e\u667a\u80fd\u6807\u7b7e\u7684\u5207\u7247\u3001\u82b1\u5f0f\u7d22\u5f15\u548c\u5927\u578b\u6570\u636e\u96c6\u7684\u5b50\u96c6\uff1b</li> <li>\u53ef\u4ee5\u4ece\u6570\u636e\u7ed3\u6784\u4e2d\u63d2\u5165\u548c\u5220\u9664\u5217\uff0c\u4ee5\u5b9e\u73b0\u5927\u5c0f\u53ef\u53d8\uff1b</li> <li>\u901a\u8fc7\u5728\u5f3a\u5927\u7684\u5f15\u64ce\u4e2d\u805a\u5408\u6216\u8f6c\u6362\u6570\u636e\uff0c\u5141\u8bb8\u5bf9\u6570\u636e\u96c6\u8fdb\u884c\u62c6\u5206\u5e94\u7528\u7ec4\u5408\u64cd\u4f5c;</li> <li>\u6570\u636e\u96c6\u7684\u9ad8\u6027\u80fd\u5408\u5e76\u548c\u8fde\u63a5\uff1b</li> <li>\u5c42\u6b21\u8f74\u7d22\u5f15\u63d0\u4f9b\u4e86\u5728\u4f4e\u7ef4\u6570\u636e\u7ed3\u6784\u4e2d\u5904\u7406\u9ad8\u7ef4\u6570\u636e\u7684\u76f4\u89c2\u65b9\u6cd5\uff1b</li> <li>\u65f6\u95f4\u5e8f\u5217-\u529f\u80fd\uff1a\u65e5\u671f\u8303\u56f4\u751f\u6210\u548c\u9891\u7387\u8f6c\u6362\u3001\u79fb\u52a8\u7a97\u53e3\u7edf\u8ba1\u3001\u79fb\u52a8\u7a97\u53e3\u7ebf\u6027\u56de\u5f52\u3001\u65e5\u671f\u8f6c\u6362\u548c\u6ede\u540e\u3002\u751a\u81f3\u5728\u4e0d\u4e22\u5931\u6570\u636e\u7684\u60c5\u51b5\u4e0b\u521b\u5efa\u7279\u5b9a\u9886\u57df\u7684\u65f6\u95f4\u504f\u79fb\u548c\u52a0\u5165\u65f6\u95f4\u5e8f\u5217\uff1b</li> <li>\u5bf9\u6027\u80fd\u8fdb\u884c\u4e86\u9ad8\u5ea6\u4f18\u5316\uff0c\u7528Cython\u6216C\u7f16\u5199\u4e86\u5173\u952e\u4ee3\u7801\u8def\u5f84\u3002</li> <li>Python\u4e0epandas\u5728\u5e7f\u6cdb\u7684\u5b66\u672f\u548c\u5546\u4e1a\u9886\u57df\u4e2d\u4f7f\u7528\uff0c\u5305\u62ec\u91d1\u878d\uff0c\u795e\u7ecf\u79d1\u5b66\uff0c\u7ecf\u6d4e\u5b66\uff0c\u7edf\u8ba1\u5b66\uff0c\u5e7f\u544a\uff0c\u7f51\u7edc\u5206\u6790\uff0c\u7b49\u7b49</li> <li>\u5b66\u5230\u8fd9\u91cc\uff0c\u4f53\u4f1a\u4e00\u4f1apandas\u5e93\u7684\u4eae\u70b9\uff0c\u5982\u679c\u5bf9\u54ea\u4e9b\u8fd8\u4e0d\u719f\u6089\uff0c\u8bf7\u5bf9\u4e4b\u524d\u77e5\u8bc6\u70b9\u518d\u6b21\u8fdb\u884c\u590d\u4e60\u3002</li> </ul>"},{"location":"analysis/project/","title":"\u6570\u636e\u5206\u6790\u7efc\u5408\u9879\u76ee\u5b9e\u6218","text":""},{"location":"analysis/project/#_2","title":"\u6570\u636e","text":"<p>job.csv</p>"},{"location":"analysis/project/#_3","title":"\u9879\u76ee\u8bb2\u89e3","text":""},{"location":"analysis/pyecharts/","title":"pyecharts \u6559\u7a0b","text":""},{"location":"analysis/pyecharts/#_1","title":"\u4e00\u3001\u7b80\u4ecb","text":""},{"location":"analysis/pyecharts/#_2","title":"\u4e8c\u3001\u57fa\u7840","text":""},{"location":"analysis/pyecharts/#_3","title":"\u67f1\u72b6\u56fe","text":"<p><pre><code>from pyecharts.charts import Bar\nfrom pyecharts import options as opts\nfrom pyecharts.globals import ThemeType\n\nbar = (\n    Bar(init_opts=opts.InitOpts(theme=ThemeType.LIGHT, bg_color=\"white\"))\n    .add_xaxis(xaxis_data=[\"A\", \"B\", \"C\", \"D\"])\n    .add_yaxis(\n        series_name=\"\u9500\u91cf\",\n        y_axis=[30, 60, 45, 80],\n        itemstyle_opts=opts.ItemStyleOpts(color=\"green\"),  # \u8bbe\u7f6e\u67f1\u5b50\u989c\u8272\u4e3a\u7eff\u8272\n    )\n    .set_global_opts(\n        title_opts=opts.TitleOpts(\n            title=\"\u67f1\u72b6\u56fe\u793a\u4f8b\",\n            title_textstyle_opts=opts.TextStyleOpts(color=\"red\")\n        ),\n        xaxis_opts=opts.AxisOpts(type_=\"category\", name=\"X \u8f74\"),\n        yaxis_opts=opts.AxisOpts(type_=\"value\", name=\"Y \u8f74\"),  # Y\u8f74\u5e94\u8be5\u662f\u6570\u503c\u8f74\n        legend_opts=opts.LegendOpts(textstyle_opts=opts.TextStyleOpts(color=\"purple\"))\n    )\n    .set_series_opts(\n        label_opts=opts.LabelOpts(\n            color=\"red\",\n            position=\"top\"  # top bottom left right inside outside\n        )\n    )\n)\n\n# \u6e32\u67d3\u5230Jupyter Notebook\nbar.render_notebook()\n</code></pre> </p>"},{"location":"analysis/pyecharts/#_4","title":"\u6298\u7ebf\u56fe","text":"<p><pre><code>from pyecharts.charts import *\nfrom pyecharts.globals import *\nimport pyecharts.options as opts\n\nline = (\n    Line(init_opts=opts.InitOpts(bg_color=\"white\"))\n    .add_xaxis([\"Jan\", \"Feb\", \"Mar\", \"Apr\"])\n    .add_yaxis(\"\u9500\u552e\u989d\",[1000, 1200, 1100, 1300])\n    .set_global_opts(title_opts=opts.TitleOpts(title=\"\u6298\u7ebf\u56fe\u793a\u4f8b\"),toolbox_opts=opts.ToolboxOpts())\n)\n\nline.render_notebook()\n</code></pre> </p>"},{"location":"analysis/pyecharts/#pie","title":"\u997c\u56fe Pie\uff08\u73af\u5f62 + \u767e\u5206\u6bd4\uff09","text":"<pre><code>import pyecharts.options as opts \n\npie = (\n    Pie(init_opts=opts.InitOpts(\n        bg_color=\"white\",\n        theme=ThemeType.LIGHT\n    ))\n    .add(\"\u4ea7\u54c1\u5360\u6bd4\",data_pair=[(\"\u624b\u673a\", 40), (\"\u5e73\u677f\", 30), (\"\u7535\u8111\", 20), (\"\u914d\u4ef6\", 10)],radius=[\"40%\",\"70%\"])\n    .set_series_opts(label_opts=opts.LabelOpts(formatter=\"{b}:{d}%\"))\n    .set_global_opts(title_opts=opts.TitleOpts(title=\"\u997c\u56fe\u793a\u4f8b\"),toolbox_opts=opts.ToolboxOpts())\n)\n\npie.render_notebook()\n</code></pre>"},{"location":"analysis/pyecharts/#gauge","title":"\u4eea\u8868\u76d8 Gauge","text":"<p><pre><code>from pyecharts.charts import *\nfrom pyecharts.globals import *\nimport pyecharts.options as opts \n\ngauge = (\n    Gauge(init_opts=opts.InitOpts(\n        theme=ThemeType.LIGHT,\n        bg_color=\"white\"\n    ))\n    .add(\"\u5b8c\u6210\u7387\",[(\"\u5b8c\u6210\", 66)])\n    .set_global_opts(title_opts=opts.TitleOpts(title=\"\u4eea\u8868\u677f\u793a\u4f8b\"),toolbox_opts=opts.ToolboxOpts())\n)\n\ngauge.render_notebook()\n</code></pre> </p>"},{"location":"analysis/pyecharts/#liquid","title":"\u6c34\u7403\u56fe Liquid","text":"<p><pre><code>from pyecharts.charts import *\nfrom pyecharts.globals import *\nimport pyecharts.options as opts \n\nliquid = (\n    Liquid(init_opts=opts.InitOpts(\n        theme=ThemeType.LIGHT,\n        bg_color=\"white\"\n    ))\n    .add(\"\u5b8c\u6210\u5ea6\",[0.45,0.3])\n    .set_global_opts(title_opts=opts.TitleOpts(title=\"\u6c34\u7403\u56fe\u793a\u4f8b\"),\n                     toolbox_opts=opts.ToolboxOpts())\n)\n\nliquid.render_notebook()\n</code></pre> </p>"},{"location":"analysis/pyecharts/#heatmap","title":"\u70ed\u529b\u56fe HeatMap","text":"<p><pre><code>from pyecharts.charts import HeatMap\nfrom pyecharts import options as opts\n\nx_data = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\ny_data = [\"8AM\", \"10AM\", \"12PM\", \"2PM\", \"4PM\", \"6PM\"]\n\n# \u6784\u9020 value\uff0c\u5f62\u5982 [(x_index, y_index, value)]\nimport random\ndata = [[i, j, random.randint(0, 100)] for i in range(len(x_data)) for j in range(len(y_data))]\n\nheatmap = (\n    HeatMap(init_opts=opts.InitOpts(\n        theme=ThemeType.LIGHT,\n        bg_color=\"white\"\n    ))\n    .add_xaxis(x_data)\n    .add_yaxis(\"\u6d3b\u8dc3\u5ea6\", y_data, data)\n    .set_global_opts(\n        title_opts=opts.TitleOpts(title=\"\u70ed\u529b\u56fe\u793a\u4f8b\"),\n        visualmap_opts=opts.VisualMapOpts(min_=0, max_=100),\n        toolbox_opts=opts.ToolboxOpts()\n    )\n)\n\nheatmap.render_notebook()\n</code></pre> </p>"},{"location":"analysis/pyecharts/#k-kline","title":"K\u7ebf\u56fe Kline","text":"<p><pre><code>from pyecharts.charts import Kline\nfrom pyecharts import options as opts\nfrom pyecharts.globals import *\n\n# \u793a\u4f8b\u6570\u636e\uff08\u65e5\u671f &amp; K\u7ebf\u6570\u636e\uff09\nx_data = [\"2025-07-01\", \"2025-07-02\", \"2025-07-03\", \"2025-07-04\"]\ny_data = [\n    [2320.26, 2320.26, 2287.3, 2362.94],\n    [2300, 2291.3, 2288.26, 2308.38],\n    [2295.35, 2346.5, 2295.35, 2346.92],\n    [2347.22, 2358.98, 2337.35, 2363.8]\n]\n\nkline = (\n    Kline(init_opts=opts.InitOpts(\n        theme=ThemeType.LIGHT,\n        bg_color=\"white\"\n    ))\n    .add_xaxis(x_data)\n    .add_yaxis(\"K\u7ebf\u56fe\", y_data)\n    .set_global_opts(\n        title_opts=opts.TitleOpts(title=\"K\u7ebf\u56fe\u793a\u4f8b\"),\n        xaxis_opts=opts.AxisOpts(type_=\"category\"),\n        yaxis_opts=opts.AxisOpts(type_=\"value\"),\n        datazoom_opts=[opts.DataZoomOpts(), opts.DataZoomOpts(type_=\"inside\")],\n        tooltip_opts=opts.TooltipOpts(trigger=\"axis\", axis_pointer_type=\"cross\"),\n        toolbox_opts=opts.ToolboxOpts()\n    )\n)\n\nkline.render_notebook()\n</code></pre> </p>"},{"location":"analysis/pyecharts/#funnel","title":"\u6f0f\u6597\u56fe Funnel","text":"<p><pre><code>from pyecharts.charts import Funnel\nfrom pyecharts.globals import *\nimport pyecharts.options as opts \n\nfunnel = (\n    Funnel(init_opts=opts.InitOpts(\n        theme=ThemeType.LIGHT,\n        bg_color=\"white\"\n    ))\n    .add(\"\u8f6c\u5316\", [(\"\u5c55\u793a\", 100), (\"\u70b9\u51fb\", 80), (\"\u54a8\u8be2\", 50), (\"\u8d2d\u4e70\", 30)])\n    .set_global_opts(title_opts=opts.TitleOpts(title=\"\u6f0f\u6597\u56fe\u793a\u4f8b\"),\n                     toolbox_opts=opts.ToolboxOpts())\n)\nfunnel.render_notebook()\n</code></pre> </p>"},{"location":"analysis/pyecharts/#_5","title":"\u6563\u70b9\u56fe","text":"<p><pre><code>from pyecharts.charts import *\nfrom pyecharts.globals import *\nimport pyecharts.options as opts \nimport random\n\nx_data = [i for i in range(50)]\ny_data = [random.randint(0, 100) for _ in range(50)]\n\nscatter = (\n    Scatter(init_opts=opts.InitOpts(\n        theme=ThemeType.LIGHT,\n        bg_color=\"white\"\n    ))\n    .add_xaxis(x_data)\n    .add_yaxis(\"\",y_axis=y_data)\n    .set_global_opts(title_opts=opts.TitleOpts(title=\"\u57fa\u7840\u6563\u70b9\u56fe\"),\n                     xaxis_opts=opts.AxisOpts(type_=\"value\",splitline_opts=opts.SplitLineOpts()),\n                     yaxis_opts=opts.AxisOpts(type_=\"value\",splitline_opts=opts.SplitLineOpts()),\n                     toolbox_opts=opts.ToolboxOpts(),\n                     visualmap_opts=opts.VisualMapOpts(),\n                )\n)\n\nscatter.render_notebook()\n</code></pre> </p>"},{"location":"analysis/pyecharts/#_6","title":"\u65ed\u65e5\u56fe","text":"<p><pre><code>from pyecharts.charts import *\nfrom pyecharts.globals import * \nimport pyecharts.options as opts \n\n# \u6784\u9020\u6570\u636e\ndata = [\n    opts.SunburstItem(\n        name=\"\u7c7b\u522b 1\",\n        children=[\n            opts.SunburstItem(name=\"\u5b50\u7c7b 1\",value=1),\n            opts.SunburstItem(name=\"\u5b50\u7c7b 2\",value=2)\n        ]\n    ),\n    opts.SunburstItem(\n        name=\"\u7c7b\u522b 2\",\n        value=3,\n        children=[\n            opts.SunburstItem(name=\"\u5b50\u7c7b 3\",value=1),\n            opts.SunburstItem(name=\"\u5b50\u7c7b 4\",value=1),\n            opts.SunburstItem(name=\"\u5b50\u7c7b 5\",value=1)\n        ]\n    )\n]\n\nsunburst = (\n    Sunburst(init_opts=opts.InitOpts(\n        theme=ThemeType.LIGHT,\n        bg_color=\"white\"\n    ))\n    .add(\"\",data_pair=data,radius=[0,'90%'])\n    .set_series_opts(label_opts=opts.LabelOpts(formatter=\"{b}\"))\n    .set_global_opts(toolbox_opts=opts.ToolboxOpts(),title_opts=opts.TitleOpts(title=\"\u65ed\u65e5\u56fe\u793a\u4f8b\"))\n)\n\nsunburst.render_notebook()\n</code></pre> </p>"},{"location":"analysis/pyecharts/#_7","title":"\u5806\u53e0\u9762\u79ef\u56fe","text":"<p><pre><code>from pyecharts.charts import Line\nfrom pyecharts import options as opts\n\n# \u793a\u4f8b\u6570\u636e\nx_data = [\"\u5468\u4e00\", \"\u5468\u4e8c\", \"\u5468\u4e09\", \"\u5468\u56db\", \"\u5468\u4e94\", \"\u5468\u516d\", \"\u5468\u65e5\"]\ny1 = [120, 132, 101, 134, 90, 230, 210]\ny2 = [220, 182, 191, 234, 290, 330, 310]\ny3 = [150, 232, 201, 154, 190, 330, 410]\n\nline = (\n    Line(init_opts=opts.InitOpts(\n        theme=ThemeType.LIGHT,\n        bg_color=\"white\"\n    ))\n    .add_xaxis(x_data)\n    .add_yaxis(\"\u90ae\u4ef6\u8425\u9500\", y1, stack=\"\u603b\u91cf\", areastyle_opts=opts.AreaStyleOpts(opacity=0.5))\n    .add_yaxis(\"\u8054\u76df\u5e7f\u544a\", y2, stack=\"\u603b\u91cf\", areastyle_opts=opts.AreaStyleOpts(opacity=0.5))\n    .add_yaxis(\"\u89c6\u9891\u5e7f\u544a\", y3, stack=\"\u603b\u91cf\", areastyle_opts=opts.AreaStyleOpts(opacity=0.5))\n    .set_global_opts(\n        title_opts=opts.TitleOpts(title=\"\u5806\u53e0\u9762\u79ef\u56fe\u793a\u4f8b\"),\n        tooltip_opts=opts.TooltipOpts(trigger=\"axis\"),\n        xaxis_opts=opts.AxisOpts(type_=\"category\"),\n        yaxis_opts=opts.AxisOpts(type_=\"value\"),\n        toolbox_opts=opts.ToolboxOpts()\n    )\n)\n\nline.render_notebook()\n</code></pre> </p>"},{"location":"analysis/pyecharts/#set_global_opts","title":"set_global_opts","text":"\u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e title_opts TitleOpts \u8bbe\u7f6e\u56fe\u8868\u4e3b\u6807\u9898\u548c\u526f\u6807\u9898\uff0c\u5982\u4f4d\u7f6e\u3001\u5b57\u4f53\u3001\u989c\u8272\u7b49 legend_opts LegendOpts \u8bbe\u7f6e\u56fe\u4f8b\u76f8\u5173\u5c5e\u6027\uff0c\u5982\u4f4d\u7f6e\u3001\u65b9\u5411\u3001\u662f\u5426\u663e\u793a\u7b49 tooltip_opts TooltipOpts \u8bbe\u7f6e\u60ac\u6d6e\u63d0\u793a\u6846\u5c5e\u6027\uff0c\u5982\u89e6\u53d1\u65b9\u5f0f\u3001\u683c\u5f0f\u7b49 toolbox_opts ToolboxOpts \u8bbe\u7f6e\u5de5\u5177\u7bb1\uff08\u53f3\u4e0a\u89d2\u4e0b\u8f7d\u56fe\u3001\u7f29\u653e\u7b49\u529f\u80fd\u6309\u94ae\uff09 visualmap_opts VisualMapOpts \u8bbe\u7f6e\u89c6\u89c9\u6620\u5c04\u7ec4\u4ef6\uff08\u901a\u5e38\u7528\u4e8e\u70ed\u5ea6\u56fe\u3001\u6563\u70b9\u56fe\u7b49\uff0c\u663e\u793a\u989c\u8272-\u6570\u503c\u6620\u5c04\uff09 xaxis_opts AxisOpts \u8bbe\u7f6e X \u8f74\u5c5e\u6027\uff08\u5982\u5750\u6807\u8f74\u7ebf\u3001\u523b\u5ea6\u3001\u6807\u7b7e\u3001\u662f\u5426\u663e\u793a\u7f51\u683c\u7ebf\u7b49\uff09 yaxis_opts AxisOpts \u8bbe\u7f6e Y \u8f74\u5c5e\u6027\uff08\u540c\u4e0a\uff09 datazoom_opts DataZoomOpts \u8bbe\u7f6e\u7f29\u653e\u7ec4\u4ef6\uff08\u56fe\u8868\u5185\u7f29\u653e\u6eda\u52a8\uff09 brush_opts BrushOpts \u8bbe\u7f6e\u533a\u57df\u9009\u62e9\u7ec4\u4ef6\uff08\u7528\u4e8e\u6846\u9009\u6570\u636e\uff09 axispointer_opts AxisPointerOpts \u8bbe\u7f6e\u5750\u6807\u8f74\u6307\u793a\u5668\uff08\u7528\u4e8e\u9ad8\u4eae\u6216\u63d0\u793a\u4ea4\u53c9\u70b9\uff09 timeline_opts TimelineOpts \u914d\u5408\u65f6\u95f4\u8f74\u4f7f\u7528\uff08\u4ec5\u9002\u7528\u4e8e\u65f6\u95f4\u8f74\u56fe\u8868\uff09"},{"location":"analysis/pyecharts/#optstitleopts","title":"opts.TitleOpts \u5e38\u7528\u53c2\u6570\u8be6\u89e3\u8868","text":"\u53c2\u6570\u540d \u7c7b\u578b \u9ed8\u8ba4\u503c \u8bf4\u660e title str \"\" \u4e3b\u6807\u9898\u5185\u5bb9 subtitle str \"\" \u526f\u6807\u9898\u5185\u5bb9 left str \"auto\" \u6807\u9898\u6c34\u5e73\u4f4d\u7f6e\uff0c\u5982 'left', 'center', 'right', \u6216 '10%' top str \"auto\" \u6807\u9898\u5782\u76f4\u4f4d\u7f6e\uff0c\u5982 'top', 'middle', 'bottom', \u6216 '10%' right str None \u6c34\u5e73\u4f4d\u7f6e\u53f3\u5bf9\u9f50\u7684\u53e6\u4e00\u65b9\u5f0f\uff08\u4e00\u822c\u4e0d\u5e38\u7528\uff09 bottom str None \u5782\u76f4\u4f4d\u7f6e\u5e95\u5bf9\u9f50\u7684\u53e6\u4e00\u65b9\u5f0f\uff08\u4e00\u822c\u4e0d\u5e38\u7528\uff09 item_gap int 10 \u4e3b\u6807\u9898\u548c\u526f\u6807\u9898\u4e4b\u95f4\u7684\u95f4\u8ddd\uff08\u50cf\u7d20\uff09 text_align str None \u6807\u9898\u5185\u5bb9\u6c34\u5e73\u5bf9\u9f50\u65b9\u5f0f\uff0c\u5982 'left'\u3001'center'\u3001'right' text_vertical_align str None \u6807\u9898\u5185\u5bb9\u5782\u76f4\u5bf9\u9f50\u65b9\u5f0f\uff0c\u5982 'top'\u3001'middle'\u3001'bottom' text_style TextStyleOpts - \u4e3b\u6807\u9898\u7684\u6587\u672c\u6837\u5f0f\u914d\u7f6e\uff08\u5b57\u4f53\u3001\u989c\u8272\u3001\u5927\u5c0f\u7b49\uff09 subtext_style TextStyleOpts - \u526f\u6807\u9898\u7684\u6587\u672c\u6837\u5f0f\u914d\u7f6e target str \"blank\" \u5982\u679c\u4e3b\u6807\u9898\u6216\u526f\u6807\u9898\u8bbe\u7f6e\u4e86\u8d85\u94fe\u63a5\uff0c\u8868\u793a\u70b9\u51fb\u6253\u5f00\u7684\u65b9\u5f0f\uff0c'blank' \u6216 'self' link str \"\" \u4e3b\u6807\u9898\u7684\u8d85\u94fe\u63a5\u5730\u5740 sublink str \"\" \u526f\u6807\u9898\u7684\u8d85\u94fe\u63a5\u5730\u5740"},{"location":"analysis/pyecharts/#legend_opts","title":"legend_opts \u5e38\u7528\u53c2\u6570\u8be6\u89e3","text":"\u53c2\u6570\u540d \u7c7b\u578b \u9ed8\u8ba4\u503c \u8bf4\u660e is_show bool True \u662f\u5426\u663e\u793a\u56fe\u4f8b pos_left str 'auto' \u56fe\u4f8b\u7ec4\u4ef6\u79bb\u5bb9\u5668\u5de6\u4fa7\u7684\u8ddd\u79bb\uff08\u4f8b\u5982 <code>'10%'</code>, <code>'center'</code>, <code>'right'</code>\uff09 pos_right str 'auto' \u56fe\u4f8b\u7ec4\u4ef6\u79bb\u5bb9\u5668\u53f3\u4fa7\u7684\u8ddd\u79bb pos_top str 'auto' \u56fe\u4f8b\u7ec4\u4ef6\u79bb\u5bb9\u5668\u4e0a\u4fa7\u7684\u8ddd\u79bb\uff08\u4f8b\u5982 <code>'top'</code>, <code>'10%'</code>\uff09 pos_bottom str 'auto' \u56fe\u4f8b\u7ec4\u4ef6\u79bb\u5bb9\u5668\u4e0b\u4fa7\u7684\u8ddd\u79bb orient str 'horizontal' \u56fe\u4f8b\u6392\u5217\u65b9\u5411\uff1a<code>'horizontal'</code> \u6216 <code>'vertical'</code> type_ str 'plain' \u56fe\u4f8b\u7c7b\u578b\uff1a\u666e\u901a\u56fe\u4f8b <code>'plain'</code> \u6216\u53ef\u6eda\u52a8\u56fe\u4f8b <code>'scroll'</code> selected_mode str / bool 'multiple' \u56fe\u4f8b\u9009\u62e9\u6a21\u5f0f\uff1a<code>'multiple'</code>, <code>'single'</code>, \u6216 <code>False</code> \u7981\u7528\u70b9\u51fb textstyle_opts TextStyleOpts \u9ed8\u8ba4\u6837\u5f0f \u56fe\u4f8b\u6587\u672c\u6837\u5f0f\uff08\u5982\u5b57\u4f53\u5927\u5c0f\u3001\u989c\u8272\u7b49\uff09 item_width int 25 \u56fe\u4f8b\u6807\u8bb0\u7684\u56fe\u5f62\u5bbd\u5ea6 item_height int 14 \u56fe\u4f8b\u6807\u8bb0\u7684\u56fe\u5f62\u9ad8\u5ea6 item_gap int 10 \u56fe\u4f8b\u6bcf\u9879\u4e4b\u95f4\u7684\u95f4\u8ddd background_color str 'transparent' \u56fe\u4f8b\u80cc\u666f\u8272\uff0c\u652f\u6301 rgba \u6216 hex border_color str '#ccc' \u56fe\u4f8b\u8fb9\u6846\u989c\u8272 border_width int 0 \u56fe\u4f8b\u8fb9\u6846\u5bbd\u5ea6"},{"location":"analysis/pyecharts/#tooltipopts","title":"TooltipOpts \u5e38\u7528\u53c2\u6570\u8bf4\u660e","text":"\u53c2\u6570\u540d \u7c7b\u578b \u9ed8\u8ba4\u503c \u8bf4\u660e is_show bool True \u662f\u5426\u663e\u793a\u63d0\u793a\u6846\u7ec4\u4ef6 trigger str 'item' \u89e6\u53d1\u7c7b\u578b\uff0c\u53ef\u9009\uff1a'item'\uff08\u6570\u636e\u9879\u89e6\u53d1\uff09\u6216 'axis'\uff08\u5750\u6807\u8f74\u89e6\u53d1\uff09 trigger_on str 'mousemove' \u63d0\u793a\u6846\u89e6\u53d1\u6761\u4ef6\uff0c\u5982 'click'\u3001'mousemove'\u3001'none' \u7b49 formatter str/function None \u63d0\u793a\u6846\u5185\u5bb9\u7684\u683c\u5f0f\u5668\uff0c\u652f\u6301\u5b57\u7b26\u4e32\u6a21\u677f\u6216 JS \u51fd\u6570 background_color str 'rgba(50,50,50,0.7)' \u63d0\u793a\u6846\u80cc\u666f\u989c\u8272 border_color str '#333' \u63d0\u793a\u6846\u8fb9\u6846\u989c\u8272 border_width int 0 \u63d0\u793a\u6846\u8fb9\u6846\u5bbd\u5ea6 textstyle_opts TextStyleOpts \u9ed8\u8ba4\u6837\u5f0f \u63d0\u793a\u6846\u6587\u5b57\u6837\u5f0f\u8bbe\u7f6e position str/function None \u63d0\u793a\u6846\u4f4d\u7f6e\uff0c\u81ea\u5b9a\u4e49\u5b57\u7b26\u4e32\u6216 JS \u51fd\u6570 extra_css_text str None \u989d\u5916\u6ce8\u5165\u63d0\u793a\u6846 CSS \u6837\u5f0f\uff08pyecharts \u7279\u6709\uff09 confine bool False \u662f\u5426\u5c06 tooltip \u6846\u9650\u5236\u5728\u56fe\u8868\u533a\u57df\u5185 enterable bool False \u63d0\u793a\u6846\u662f\u5426\u53ef\u4ea4\u4e92\uff08\u4f8b\u5982\u70b9\u51fb\u63d0\u793a\u6846\u5185\u5bb9\uff09"},{"location":"analysis/pyecharts/#xaxis_opts","title":"xaxis_opts","text":"\u53c2\u6570\u540d \u7c7b\u578b \u9ed8\u8ba4\u503c \u8bf4\u660e type_ str 'category' \u5750\u6807\u8f74\u7c7b\u578b\uff0c\u5e38\u7528\uff1a'value'\uff08\u6570\u503c\u8f74\uff09\u3001'category'\uff08\u7c7b\u76ee\u8f74\uff09\u3001'log'\uff08\u5bf9\u6570\u8f74\uff09 name str \u65e0 \u5750\u6807\u8f74\u540d\u79f0 name_location str 'end' \u5750\u6807\u8f74\u540d\u79f0\u663e\u793a\u4f4d\u7f6e\uff1a'start'\u3001'center'\u3001'end' name_gap int 15 \u5750\u6807\u8f74\u540d\u79f0\u4e0e\u8f74\u7ebf\u7684\u8ddd\u79bb name_textstyle_opts TextStyleOpts \u65e0 \u5750\u6807\u8f74\u540d\u79f0\u7684\u6587\u672c\u6837\u5f0f min_ int/str \u81ea\u52a8 \u5750\u6807\u8f74\u6700\u5c0f\u503c\uff0c\u4f8b\u5982 <code>0</code> \u6216 <code>'dataMin'</code> max_ int/str \u81ea\u52a8 \u5750\u6807\u8f74\u6700\u5927\u503c\uff0c\u4f8b\u5982 <code>100</code> \u6216 <code>'dataMax'</code> interval int \u81ea\u52a8 \u5750\u6807\u8f74\u523b\u5ea6\u95f4\u9694 inverse bool False \u662f\u5426\u53cd\u8f6c\u5750\u6807\u8f74 axislabel_opts LabelOpts \u65e0 \u5750\u6807\u8f74\u6807\u7b7e\u76f8\u5173\u8bbe\u7f6e\uff0c\u5982\u5b57\u4f53\u3001\u89d2\u5ea6\u7b49 axistick_opts AxisTickOpts \u65e0 \u5750\u6807\u8f74\u523b\u5ea6\u76f8\u5173\u8bbe\u7f6e axisline_opts AxisLineOpts \u65e0 \u5750\u6807\u8f74\u7ebf\u76f8\u5173\u8bbe\u7f6e splitline_opts SplitLineOpts \u65e0 \u5206\u5272\u7ebf\uff08\u7f51\u683c\u7ebf\uff09\u76f8\u5173\u8bbe\u7f6e split_number int 5 \u5750\u6807\u8f74\u5206\u5272\u6bb5\u6570\uff0c\u8bbe\u7f6e\u540e <code>interval</code> \u81ea\u52a8\u5931\u6548 boundary_gap bool/list True \u7c7b\u76ee\u8f74\u4e24\u7aef\u662f\u5426\u7559\u767d\uff0c\u6216\u5177\u4f53\u95f4\u8ddd"},{"location":"analysis/pyecharts/#yaxis_opts","title":"yaxis_opts","text":"\u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e <code>type_</code> str \u5750\u6807\u8f74\u7c7b\u578b\uff0c\u53ef\u9009\uff1a<code>value</code>\uff08\u6570\u503c\u8f74\uff09\u3001<code>category</code>\uff08\u7c7b\u76ee\u8f74\uff09\u3001<code>log</code>\uff08\u5bf9\u6570\u8f74\uff09\u3001<code>time</code>\uff08\u65f6\u95f4\u8f74\uff09 <code>name</code> str \u5750\u6807\u8f74\u540d\u79f0\uff0c\u4f1a\u663e\u793a\u5728\u5750\u6807\u8f74\u672b\u7aef <code>name_location</code> str \u5750\u6807\u8f74\u540d\u79f0\u4f4d\u7f6e\uff1a<code>start</code>\uff0c<code>middle</code>\uff0c<code>end</code> <code>name_gap</code> int \u5750\u6807\u8f74\u540d\u79f0\u4e0e\u8f74\u7ebf\u4e4b\u95f4\u7684\u8ddd\u79bb\uff08\u5355\u4f4d\uff1a\u50cf\u7d20\uff09 <code>name_rotate</code> int \u540d\u79f0\u65cb\u8f6c\u89d2\u5ea6 <code>min_</code> str or int \u5750\u6807\u8f74\u6700\u5c0f\u503c\uff0c\u5982 <code>'dataMin'</code>\u3001\u6570\u503c <code>max_</code> str or int \u5750\u6807\u8f74\u6700\u5927\u503c\uff0c\u5982 <code>'dataMax'</code>\u3001\u6570\u503c <code>interval</code> int \u5f3a\u5236\u8bbe\u7f6e\u5750\u6807\u8f74\u5206\u5272\u95f4\u9694 <code>axislabel_opts</code> AxisLabelOpts \u8bbe\u7f6e\u5750\u6807\u8f74\u6807\u7b7e\u6837\u5f0f\uff08\u5b57\u4f53\u5927\u5c0f\u3001\u65cb\u8f6c\u3001\u683c\u5f0f\u5316\u7b49\uff09 <code>axisline_opts</code> AxisLineOpts \u8bbe\u7f6e\u5750\u6807\u8f74\u8f74\u7ebf\u6837\u5f0f\uff08\u662f\u5426\u663e\u793a\u3001\u989c\u8272\u7b49\uff09 <code>axistick_opts</code> AxisTickOpts \u8bbe\u7f6e\u523b\u5ea6\u6837\u5f0f <code>splitline_opts</code> SplitLineOpts \u8bbe\u7f6e\u5206\u5272\u7ebf\u6837\u5f0f\uff08\u662f\u5426\u663e\u793a\u3001\u7ebf\u6761\u7c7b\u578b\u3001\u989c\u8272\u7b49\uff09 <code>split_number</code> int \u5206\u5272\u6bb5\u6570\uff0c\u7528\u4e8e\u81ea\u52a8\u8ba1\u7b97\u5750\u6807\u8f74\u523b\u5ea6 <code>scale</code> bool \u662f\u5426\u8131\u79bb 0 \u503c\u6bd4\u4f8b\uff0c\u4fdd\u8bc1\u5750\u6807\u8f74\u4e0d\u4ece 0 \u5f00\u59cb <code>position</code> str \u5750\u6807\u8f74\u4f4d\u7f6e\uff1a<code>left</code>\u3001<code>right</code>"},{"location":"analysis/pyecharts/#visualmap_opts","title":"visualmap_opts","text":"\u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e <code>type_</code> str \u6307\u5b9a\u7c7b\u578b\uff0c\u53ef\u9009 <code>\"continuous\"</code>\uff08\u8fde\u7eed\u578b\uff09\u6216 <code>\"piecewise\"</code>\uff08\u5206\u6bb5\u578b\uff09\u3002\u9ed8\u8ba4 <code>\"continuous\"</code>\u3002 <code>min_</code> int/float \u89c6\u89c9\u6620\u5c04\u7684\u6700\u5c0f\u503c\u3002\u901a\u5e38\u4e0e\u56fe\u8868\u6570\u636e\u7684\u6700\u5c0f\u503c\u5bf9\u5e94\u3002 <code>max_</code> int/float \u89c6\u89c9\u6620\u5c04\u7684\u6700\u5927\u503c\u3002\u901a\u5e38\u4e0e\u56fe\u8868\u6570\u636e\u7684\u6700\u5927\u503c\u5bf9\u5e94\u3002 <code>range_color</code> list[str] \u6620\u5c04\u7684\u989c\u8272\u8303\u56f4\uff0c\u5982 <code>[\"#f6efa6\", \"#d88273\", \"#bf444c\"]</code>\u3002 <code>orient</code> str \u56fe\u4f8b\u65b9\u5411\uff0c<code>\"vertical\"</code> \u6216 <code>\"horizontal\"</code>\u3002\u9ed8\u8ba4 <code>\"vertical\"</code>\u3002 <code>pos_left</code> str \u7ec4\u4ef6\u8ddd\u79bb\u5de6\u4fa7\u7684\u8ddd\u79bb\uff0c\u5982 <code>\"left\"</code>\u3001<code>\"20%\"</code>\u3001<code>\"100px\"</code>\u3002 <code>pos_right</code> str \u7ec4\u4ef6\u8ddd\u79bb\u53f3\u4fa7\u7684\u8ddd\u79bb\u3002\u4e0e <code>pos_left</code> \u7c7b\u4f3c\uff0c\u4e8c\u8005\u4e92\u65a5\u3002 <code>pos_top</code> str \u7ec4\u4ef6\u8ddd\u79bb\u9876\u90e8\u7684\u8ddd\u79bb\uff0c\u5982 <code>\"top\"</code>\u3001<code>\"10px\"</code> \u7b49\u3002 <code>pos_bottom</code> str \u7ec4\u4ef6\u8ddd\u79bb\u5e95\u90e8\u7684\u8ddd\u79bb\u3002 <code>textstyle_opts</code> TextStyleOpts \u6587\u672c\u6837\u5f0f\u8bbe\u7f6e\uff0c\u4f8b\u5982\u5b57\u4f53\u5927\u5c0f\u3001\u989c\u8272\u7b49\u3002 <code>is_calculable</code> bool \u662f\u5426\u663e\u793a\u62d6\u62fd\u7528\u7684\u624b\u67c4\uff08\u4ec5\u9002\u7528\u4e8e <code>type_=\"continuous\"</code>\uff09\u3002 <code>dimension</code> int/str \u4f7f\u7528\u6570\u636e\u7684\u7b2c\u51e0\u7ef4\u5ea6\u8fdb\u884c\u89c6\u89c9\u6620\u5c04\u3002\u7528\u4e8e\u591a\u7ef4\u5ea6\u6570\u636e\u3002 <code>series_index</code> list[int] \u6620\u5c04\u4f5c\u7528\u5230\u54ea\u4e9b\u7cfb\u5217\uff08series\uff09\uff0c\u7528\u5e8f\u53f7\u6307\u5b9a\u3002 <code>item_width</code> int \u56fe\u4f8b\u7ec4\u4ef6\u6bcf\u9879\u7684\u5bbd\u5ea6\uff08\u4e3b\u8981\u7528\u4e8e <code>piecewise</code> \u7c7b\u578b\uff09\u3002 <code>item_height</code> int \u56fe\u4f8b\u7ec4\u4ef6\u6bcf\u9879\u7684\u9ad8\u5ea6\u3002 <code>is_inverse</code> bool \u662f\u5426\u53cd\u8f6c\u89c6\u89c9\u6620\u5c04\u3002 <code>split_number</code> int \u89c6\u89c9\u6620\u5c04\u7ec4\u4ef6\u7684\u5206\u6bb5\u6570\u91cf\uff08\u7528\u4e8e <code>continuous</code> \u7c7b\u578b\uff09\u3002"},{"location":"analysis/pyecharts/#datazoom_opts","title":"datazoom_opts","text":"\u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e \u9ed8\u8ba4\u503c \u5907\u6ce8 <code>type_</code> <code>str</code> \u6570\u636e\u7f29\u653e\u7c7b\u578b\uff0c\u5e38\u7528 <code>\"slider\"</code>\uff08\u6ed1\u52a8\u6761\uff09\u6216 <code>\"inside\"</code>\uff08\u5185\u7f6e\u7f29\u653e\uff09 <code>\"slider\"</code> \u63a7\u5236\u7f29\u653e\u6761\u7684\u8868\u73b0\u5f62\u5f0f <code>is_show</code> <code>bool</code> \u662f\u5426\u663e\u793a\u6570\u636e\u7f29\u653e\u7ec4\u4ef6 <code>True</code> \u8bbe\u7f6e\u4e3a <code>False</code> \u5219\u4e0d\u663e\u793a <code>xaxis_index</code> <code>int</code> \u6216 <code>list</code> \u6307\u5b9a\u8be5\u7f29\u653e\u7ec4\u4ef6\u63a7\u5236\u7684 x \u8f74\u7d22\u5f15 <code>0</code> \u652f\u6301\u591a\u4e2a\u8f74\u7d22\u5f15\u5217\u8868 <code>yaxis_index</code> <code>int</code> \u6216 <code>list</code> \u6307\u5b9a\u8be5\u7f29\u653e\u7ec4\u4ef6\u63a7\u5236\u7684 y \u8f74\u7d22\u5f15 \u65e0 \u4e00\u822c\u4e0d\u5e38\u7528 <code>start</code> <code>int</code> \u8d77\u59cb\u767e\u5206\u6bd4\uff0c\u63a7\u5236\u7f29\u653e\u7a97\u53e3\u8d77\u59cb\u4f4d\u7f6e\uff0c\u8303\u56f4 0~100 <code>0</code> \u521d\u59cb\u663e\u793a\u7684\u8d77\u70b9\u767e\u5206\u6bd4 <code>end</code> <code>int</code> \u7ed3\u675f\u767e\u5206\u6bd4\uff0c\u63a7\u5236\u7f29\u653e\u7a97\u53e3\u7ed3\u675f\u4f4d\u7f6e\uff0c\u8303\u56f4 0~100 <code>100</code> \u521d\u59cb\u663e\u793a\u7684\u7ec8\u70b9\u767e\u5206\u6bd4 <code>orient</code> <code>str</code> \u5e03\u5c40\u65b9\u5411\uff0c<code>\"horizontal\"</code>\uff08\u6c34\u5e73\uff09\u6216 <code>\"vertical\"</code>\uff08\u5782\u76f4\uff09 <code>\"horizontal\"</code> \u7f29\u653e\u6761\u7684\u65b9\u5411 <code>filter_mode</code> <code>str</code> \u6570\u636e\u8fc7\u6ee4\u6a21\u5f0f\uff0c<code>\"filter\"</code>\uff08\u8fc7\u6ee4\u6570\u636e\uff09\u3001<code>\"empty\"</code>\uff08\u9690\u85cf\u6570\u636e\u70b9\uff09 <code>\"filter\"</code> \u63a7\u5236\u7f29\u653e\u540e\u6570\u636e\u7684\u5904\u7406\u65b9\u5f0f <code>zoom_lock</code> <code>bool</code> \u662f\u5426\u9501\u5b9a\u7f29\u653e\u7ec4\u4ef6\uff0c\u7981\u6b62\u7f29\u653e <code>False</code> \u9501\u5b9a\u540e\u4e0d\u80fd\u8c03\u6574\u7f29\u653e\u8303\u56f4 <code>min_span</code> <code>int</code> \u7f29\u653e\u7a97\u53e3\u7684\u6700\u5c0f\u8de8\u5ea6\u767e\u5206\u6bd4 \u65e0 \u9650\u5236\u7f29\u653e\u7a97\u53e3\u6700\u5c0f\u8303\u56f4 <code>max_span</code> <code>int</code> \u7f29\u653e\u7a97\u53e3\u7684\u6700\u5927\u8de8\u5ea6\u767e\u5206\u6bd4 \u65e0 \u9650\u5236\u7f29\u653e\u7a97\u53e3\u6700\u5927\u8303\u56f4 <code>range_mode</code> <code>list</code> \u8303\u56f4\u6a21\u5f0f\uff0c\u5b9a\u4e49\u8d77\u70b9\u548c\u7ec8\u70b9\u5982\u4f55\u8ba1\u7b97 <code>[]</code> \u9ad8\u7ea7\u7528\u6cd5\uff0c\u4e00\u822c\u4e0d\u5e38\u7528 <code>background_color</code> <code>str</code> \u7f29\u653e\u6761\u80cc\u666f\u8272 \u65e0 \u652f\u6301\u989c\u8272\u4ee3\u7801\u6216\u540d\u79f0 <code>data_background</code> <code>dict</code> \u6570\u636e\u80cc\u666f\u6837\u5f0f\u914d\u7f6e \u65e0 \u53ef\u8bbe\u7f6e\u989c\u8272\u3001\u900f\u660e\u5ea6\u7b49 <code>handle_style</code> <code>dict</code> \u7f29\u653e\u624b\u67c4\u6837\u5f0f \u65e0 \u63a7\u5236\u7f29\u653e\u624b\u67c4\u7684\u989c\u8272\u3001\u8fb9\u6846\u7b49 <code>text_style</code> <code>dict</code> \u7f29\u653e\u7ec4\u4ef6\u6587\u5b57\u6837\u5f0f \u65e0 \u5b57\u4f53\u989c\u8272\u3001\u5927\u5c0f\u7b49"},{"location":"analysis/pyecharts/#set_series_opts","title":"set_series_opts","text":"\u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e \u9ed8\u8ba4\u503c \u5907\u6ce8 <code>label_opts</code> <code>LabelOpts</code> \u7cfb\u5217\u6807\u7b7e\u914d\u7f6e\uff0c\u63a7\u5236\u6807\u7b7e\u6587\u5b57\u7684\u663e\u793a\u3001\u4f4d\u7f6e\u3001\u683c\u5f0f\u7b49 \u65e0 \u5982\u662f\u5426\u663e\u793a\u6807\u7b7e\uff0c\u5b57\u4f53\u5927\u5c0f\u989c\u8272\u7b49 <code>markpoint_opts</code> <code>MarkPointOpts</code> \u6807\u8bb0\u70b9\u914d\u7f6e\uff0c\u7528\u4e8e\u7a81\u51fa\u663e\u793a\u7279\u6b8a\u6570\u636e\u70b9 \u65e0 \u652f\u6301\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u3001\u81ea\u5b9a\u4e49\u70b9\u7b49 <code>markline_opts</code> <code>MarkLineOpts</code> \u6807\u8bb0\u7ebf\u914d\u7f6e\uff0c\u7528\u4e8e\u6807\u6ce8\u7279\u5b9a\u7684\u7ebf\uff0c\u5982\u5747\u503c\u7ebf\u3001\u9608\u503c\u7ebf \u65e0 \u652f\u6301\u7c7b\u578b\u548c\u81ea\u5b9a\u4e49\u7ebf\u6bb5 <code>markarea_opts</code> <code>MarkAreaOpts</code> \u6807\u8bb0\u533a\u57df\u914d\u7f6e\uff0c\u7528\u4e8e\u7a81\u51fa\u663e\u793a\u533a\u95f4\u8303\u56f4 \u65e0 \u533a\u57df\u9ad8\u4eae\u663e\u793a <code>areastyle_opts</code> <code>AreaStyleOpts</code> \u533a\u57df\u6837\u5f0f\u914d\u7f6e\uff0c\u4e3b\u8981\u7528\u4e8e\u6298\u7ebf\u56fe\u7684\u586b\u5145\u533a\u57df \u65e0 \u989c\u8272\u3001\u900f\u660e\u5ea6\u7b49 <code>linestyle_opts</code> <code>LineStyleOpts</code> \u7ebf\u6761\u6837\u5f0f\u914d\u7f6e\uff0c\u5982\u989c\u8272\u3001\u5bbd\u5ea6\u3001\u7ebf\u578b\uff08\u5b9e\u7ebf\u3001\u865a\u7ebf\u7b49\uff09 \u65e0 \u53ea\u5bf9\u6298\u7ebf\u56fe\u6709\u6548 <code>itemstyle_opts</code> <code>ItemStyleOpts</code> \u56fe\u5f62\u6837\u5f0f\u914d\u7f6e\uff0c\u5982\u67f1\u72b6\u56fe\u3001\u997c\u56fe\u7684\u989c\u8272\u3001\u8fb9\u6846\u3001\u9634\u5f71\u7b49 \u65e0 \u8c03\u6574\u7cfb\u5217\u56fe\u5f62\u89c6\u89c9\u6548\u679c <code>tooltip_opts</code> <code>TooltipOpts</code> \u63d0\u793a\u6846\u914d\u7f6e\uff0c\u63a7\u5236\u9f20\u6807\u60ac\u6d6e\u65f6\u663e\u793a\u5185\u5bb9\u548c\u6837\u5f0f \u65e0 \u53ef\u81ea\u5b9a\u4e49\u683c\u5f0f\u548c\u6837\u5f0f <code>stack</code> <code>str</code> \u5806\u53e0\u7cfb\u5217\u540d\u79f0\uff0c\u76f8\u540c\u540d\u79f0\u7684\u7cfb\u5217\u4f1a\u5806\u53e0\u663e\u793a \u65e0 \u7528\u4e8e\u5806\u53e0\u67f1\u72b6\u56fe\u3001\u6298\u7ebf\u56fe <code>smooth</code> <code>bool</code> \u662f\u5426\u5e73\u6ed1\u6298\u7ebf <code>False</code> \u53ea\u5bf9\u6298\u7ebf\u56fe\u6709\u6548 <code>symbol</code> <code>str</code> \u6570\u636e\u70b9\u6807\u8bb0\u5f62\u72b6\uff0c\u5982 <code>\"circle\"</code>, <code>\"rect\"</code>, <code>\"triangle\"</code> <code>\"circle\"</code> \u6298\u7ebf\u56fe\u6216\u6563\u70b9\u56fe\u6570\u636e\u70b9\u5f62\u72b6 <code>symbol_size</code> <code>int</code> \u6216 <code>func</code> \u6570\u636e\u70b9\u6807\u8bb0\u5927\u5c0f <code>4</code> \u652f\u6301\u51fd\u6570\u52a8\u6001\u8bbe\u7f6e\u5927\u5c0f <code>is_selected</code> <code>bool</code> \u662f\u5426\u9009\u4e2d\u8be5\u7cfb\u5217 <code>True</code> \u5f71\u54cd\u56fe\u4f8b\u9ed8\u8ba4\u9009\u4e2d\u72b6\u6001 <code>label_show</code> <code>bool</code> \u662f\u5426\u663e\u793a\u6807\u7b7e <code>False</code> \u7b80\u5199\uff0c\u7b49\u540c\u4e8e\u8bbe\u7f6e <code>label_opts</code> <code>emphasis</code> <code>EmphasisOpts</code> \u9ad8\u4eae\u72b6\u6001\u914d\u7f6e\uff0c\u9f20\u6807\u60ac\u6d6e\u6216\u9009\u4e2d\u65f6\u7684\u6837\u5f0f \u65e0 \u53ef\u8bbe\u7f6e\u9ad8\u4eae\u989c\u8272\u3001\u5b57\u4f53\u7b49"},{"location":"analysis/pyecharts/#_8","title":"\u4e09\u3001\u5b9e\u6218","text":""},{"location":"analysis/pyecharts/#1","title":"1. \u67f1\u72b6\u56fe","text":"<p><pre><code>from pyecharts.charts import Bar\nfrom pyecharts import options as opts \nfrom pyecharts.faker import Faker\nfrom pyecharts.globals import ThemeType\n\nbar = Bar(init_opts=opts.InitOpts(\n    theme=ThemeType.LIGHT,\n    width='1000px',\n    height='600px'\n))\n\nbar.add_xaxis(Faker.choose()) \n\n# stack\u503c\u4e00\u6837\u7684\u7cfb\u5217\u4f1a\u5806\u53e0\u5728\u4e00\u8d77 \u6240\u4ee5 A \u548c B \u5806\u53e0\u5728\u4e00\u8d77\nbar.add_yaxis('A',Faker.values(),stack=\"stack1\")\nbar.add_yaxis('B',Faker.values(),stack='stack1')\nbar.add_yaxis('C',Faker.values(),stack=\"stack2\")\n\nbar.set_global_opts(toolbox_opts=opts.ToolboxOpts(is_show=True))\nbar.render_notebook()\n</code></pre> </p> <p><pre><code>from pyecharts import options as opts \nfrom pyecharts.charts import Bar\nfrom pyecharts.faker import Faker\nfrom pyecharts.globals import ThemeType\n\nbar = Bar(init_opts=opts.InitOpts(\n    theme=ThemeType.LIGHT,\n))\n\nbar.add_xaxis(Faker.choose())\nbar.add_yaxis('',Faker.values())\nbar.set_series_opts(label_opts=opts.LabelOpts(\n    position='insideLeft',\n    formatter=\"{b}:{c}\"\n))\n# \u9690\u85cf\u5750\u6807\u7cfb\nbar.set_global_opts(xaxis_opts=opts.AxisOpts(is_show=False),\n                    yaxis_opts=opts.AxisOpts(is_show=False),\n                    toolbox_opts=opts.ToolboxOpts(is_show=True)\n                    )\nbar.reversal_axis() # \u53cd\u8f6c\u5750\u6807\u7cfb\nbar.render_notebook()\n</code></pre> </p>"},{"location":"analysis/pyecharts/#_9","title":"\u81ea\u5b9a\u4e49\u5750\u6807\u8f74\u6807\u7b7e\u6587\u672c","text":"<p>pyecharts \u5e38\u89c1 formatter \u5360\u4f4d\u7b26\u901f\u67e5\u8868</p> \u5360\u4f4d\u7b26 \u542b\u4e49 \u9002\u7528\u4f4d\u7f6e \u793a\u4f8b\u663e\u793a <code>{a}</code> \u7cfb\u5217\u540d\uff08series name\uff09 \u56fe\u4f8b\u3001\u63d0\u793a\u6846 \u9500\u91cf <code>{b}</code> \u7c7b\u76ee\u540d\uff08x\u8f74\u5206\u7c7b\u540d\uff09 \u6807\u7b7e\u3001\u63d0\u793a\u6846 \u5317\u4eac / 2010 <code>{c}</code> \u6570\u636e\u503c\uff08value\uff09 \u6807\u7b7e\u3001\u63d0\u793a\u6846 30 <code>{d}</code> \u997c\u56fe\u4e2d\u7684\u767e\u5206\u6bd4 \u997c\u56fe\u3001\u63d0\u793a\u6846 45% <code>{value}</code> \u5750\u6807\u8f74\u523b\u5ea6\u503c <code>axislabel_opts.formatter</code> 2020\u5e74 <code>{@[\u7cfb\u5217\u540d]}</code> \u7279\u5b9a\u7cfb\u5217\u7684\u6570\u636e\u503c \u591a\u7cfb\u5217\u63d0\u793a\u6846 <code>@\u9500\u91cf</code> <code>{@[\u7ef4\u5ea6\u540d]}</code> \u591a\u7ef4\u6570\u636e\u4e2d\u7279\u5b9a\u7ef4\u5ea6\u503c \u63d0\u793a\u6846 <code>@\u65e5\u671f</code> <p><pre><code>from pyecharts.charts import Bar\nfrom pyecharts import options as opts \nfrom pyecharts.globals import ThemeType\nimport random\n\nx_data = list(range(2010,2020))\ny_data = [random.randint(20,200) for _ in range(len(x_data))]\n\nbar = Bar(init_opts=opts.InitOpts(\n    theme=ThemeType.LIGHT\n))\n\nbar.add_xaxis(x_data)\nbar.add_yaxis('',y_data)\n\nbar.set_global_opts(xaxis_opts=opts.AxisOpts(\n    axislabel_opts=opts.LabelOpts(\n        formatter='{value}\u5e74'\n    )\n),toolbox_opts=opts.ToolboxOpts(is_show=True))\n\nbar.render_notebook()\n</code></pre> </p>"},{"location":"analysis/pyecharts/#2","title":"2. \u6563\u70b9\u56fe","text":"<pre><code>from pyecharts.charts import Scatter\nfrom pyecharts import options as opts \nfrom pyecharts.globals import ThemeType\nimport random \n\nx_data = [random.randint(0,20) for _ in range(100)]\ny_data = [random.randint(0,50) for _ in range(100)]\n\nscatter = Scatter(init_opts=opts.InitOpts(\n    theme=ThemeType.LIGHT,\n    bg_color='white'\n))\nscatter.add_xaxis(x_data)\nscatter.add_yaxis('',y_data)\n# X\u8f74\u9ed8\u8ba4\u6570\u636e\u7c7b\u578b\u4e3a\u79bb\u6563\u6570\u636e\uff0c\u8bbe\u7f6e\u4e3a\u6570\u503c\u578b\nscatter.set_global_opts(xaxis_opts=opts.AxisOpts(type_='value',name=\"X \u8f74\"),\n                        toolbox_opts=opts.ToolboxOpts(is_show=True))\n\nscatter.render_notebook()\n</code></pre>"},{"location":"analysis/pyecharts/#type_value","title":"\u4e3a\u4ec0\u4e48\u9700\u8981 <code>type_=\"value\"</code>\uff1f","text":"<p>\u5728 Pyecharts \u4e2d\uff0cX \u8f74\u6216 Y \u8f74\u7684 <code>type_</code> \u51b3\u5b9a\u4e86\u5750\u6807\u8f74\u7684\u8868\u73b0\u65b9\u5f0f\u3002\u9ed8\u8ba4\u662f <code>\"category\"</code>\uff08\u7c7b\u76ee\u8f74\uff09\uff0c\u5982\u679c\u4f7f\u7528\u4e86\u6570\u503c\u578b\u6570\u636e\uff0c\u5219\u9700\u8981\u663e\u5f0f\u8bbe\u7f6e\u4e3a <code>\"value\"</code>\uff0c\u5426\u5219\u4f1a\u5f53\u4f5c\u5206\u7c7b\u5904\u7406\uff0c\u5bfc\u81f4\u56fe\u8868\u663e\u793a\u5f02\u5e38\u3002</p> \u53d6\u503c \u542b\u4e49 \u9002\u7528\u573a\u666f\u8bf4\u660e <code>\"value\"</code> \u6570\u503c\u8f74 \u5750\u6807\u8f74\u7528\u4e8e\u8fde\u7eed\u7684\u6570\u503c\u6570\u636e\uff0c\u6bd4\u5982\u6563\u70b9\u56fe\u3001\u6298\u7ebf\u56fe\u4e2d\u7684\u5750\u6807\u503c <code>\"category\"</code> \u7c7b\u76ee\u8f74\uff08\u9ed8\u8ba4\uff09 \u5750\u6807\u8f74\u7528\u4e8e\u8868\u793a\u5206\u7c7b\uff0c\u5982 [\"A\", \"B\", \"C\"]\uff0c\u5e38\u7528\u4e8e\u67f1\u72b6\u56fe\u3001\u997c\u56fe\u7b49 <code>\"time\"</code> \u65f6\u95f4\u8f74 \u4e13\u95e8\u7528\u4e8e\u65f6\u95f4\u5e8f\u5217\u6570\u636e\uff0c\u5982 [\"2021-01\", \"2021-02\"] <code>\"log\"</code> \u5bf9\u6570\u8f74 \u6570\u636e\u8de8\u5ea6\u5f88\u5927\u65f6\u4f7f\u7528\uff0c\u4f8b\u5982\u91d1\u878d\u6216\u79d1\u5b66\u5b9e\u9a8c\u4e2d\u7ecf\u5e38\u4f7f\u7528"},{"location":"analysis/pyecharts/#3y","title":"3.\u53ccY\u8f74\u3010\u76f4\u65b9\u56fe&amp;\u6298\u7ebf\u56fe\u3011","text":"<pre><code>from pyecharts.charts import Bar,Line\nfrom pyecharts import options as opts \nfrom pyecharts.globals import ThemeType\nimport random\n\nx_data = ['\u9999\u8549', '\u68a8\u5b50', '\u6c34\u871c\u6843', '\u6838\u6843', '\u897f\u74dc', '\u82f9\u679c']\ny_data_1 = [random.randint(10, 50) for _ in range(len(x_data))]\ny_data_2 = [random.randint(100, 500) for _ in range(len(x_data))]\n\nbar = Bar(init_opts=opts.InitOpts(\n    theme=ThemeType.LIGHT,\n    bg_color='white'\n))\n\nbar.add_xaxis(x_data)\n# \u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u5750\u6807\u8f74\nbar.extend_axis(yaxis=opts.AxisOpts()) \n# yaxis_index \u6307\u5b9a\u8be5\u7cfb\u5217\u4f7f\u7528\u7b2c\u51e0\u4e2a y \u8f74\uff080 \u8868\u793a\u7b2c\u4e00\u4e2a\uff09\nbar.add_yaxis('\u5de6\u8fb9 Y \u8f74',y_data_1,yaxis_index=0)\n\nline = Line(init_opts=opts.InitOpts(\n    theme=ThemeType.LIGHT,\n    bg_color='white'\n))\nline.add_xaxis(x_data)\nline.add_yaxis('\u53f3\u8fb9 Y \u8f74',y_data_2,yaxis_index=1)\nline.set_series_opts(z=5)  # \u8bbe\u7f6e\u6298\u7ebf\u56fe\u5728\u4e0a\u5c42 \u9ed8\u8ba4 z \u4e3a 0\uff0c\u503c\u8d8a\u5927\uff0c\u56fe\u5c42\u8d8a\u9760\u4e0a\u3002\n\nbar.overlap(line)\n\nbar.set_global_opts(toolbox_opts=opts.ToolboxOpts(\n    is_show=True\n))\n\nbar.render_notebook()\n</code></pre>"},{"location":"analysis/pyecharts/#4-x","title":"4. \u53cc X \u8f74","text":"<pre><code>from pyecharts.charts import Line\nfrom pyecharts import options as opts \nfrom pyecharts.globals import ThemeType\nimport random\n\n\nx_data_1 = [\"2020/10/{}\".format(i + 1) for i in range(30)]\nx_data_2 = [\"2019/10/{}\".format(i + 1) for i in range(30)]\ny_data_1 = [random.randint(10, 50) for _ in range(30)]\ny_data_2 = [random.randint(20, 60) for _ in range(30)]\n\nline = Line(init_opts=opts.InitOpts(\n    theme=ThemeType.LIGHT,\n    bg_color='white'\n))\n\nline.add_xaxis(x_data_1)\n# \u6dfb\u52a0\u4e00\u4e2ax\u8f74\nline.extend_axis(xaxis=opts.AxisOpts(),xaxis_data=x_data_2)\n\nline.add_yaxis('\u4e0b\u9762X \u8f74',y_data_1)\nline.add_yaxis('\u4e0a\u9762 X \u8f74',y_data_2)\n\nline.set_global_opts(toolbox_opts=opts.ToolboxOpts(is_show=True))\n\nline.render_notebook()\n</code></pre>"},{"location":"analysis/pyecharts/#5","title":"5. \u81ea\u5b9a\u4e49\u56fe\u4f8b","text":""},{"location":"analysis/pyecharts/#2-grid","title":"2. \u7ec4\u5408\u56fe Grid","text":"<pre><code>from pyecharts.charts import *\nfrom pyecharts import options as opts \nfrom pyecharts.globals import *\nfrom pyecharts.faker import Faker\n\nx_data = Faker.choose()\ny_data = Faker.values()\n\nbar = (\n    Bar()\n    .add_xaxis(xaxis_data=x_data)\n    .add_yaxis(series_name=\"\u6c34\u679c\u67f1\u72b6\u56fe\",y_axis=y_data)\n    .set_global_opts(title_opts=opts.TitleOpts(title=\"\u67f1\u72b6\u56fe\",pos_bottom=\"45%\"),legend_opts=opts.LegendOpts(\n        pos_bottom=\"45%\"\n    ),toolbox_opts=opts.ToolboxOpts(is_show=True))\n)\n\nline = (\n    Line()\n    .add_xaxis(xaxis_data=x_data)\n    .add_yaxis(series_name=\"\u6c34\u679c\u6298\u7ebf\u56fe\",y_axis=y_data)\n    .set_global_opts(title_opts=opts.TitleOpts(title=\"\u6298\u7ebf\u56fe\",pos_bottom=\"95%\"))\n)\n\ngrid = (\n    Grid(init_opts=opts.InitOpts(theme=ThemeType.LIGHT,bg_color=\"white\"))\n    .add(bar,grid_opts=opts.GridOpts(pos_top=\"60%\"))\n    .add(line,grid_opts=opts.GridOpts(pos_bottom=\"60%\"))\n\n)\ngrid.render_notebook()\n</code></pre>"},{"location":"analysis/pyecharts/#3-tabs","title":"3. \u56fe\u8868\u6807\u7b7e\u9875\uff08Tabs\uff09","text":"<pre><code>from pyecharts.charts import Bar, Line, Tab\nfrom pyecharts import options as opts\nfrom pyecharts.faker import Faker\n\n# \u521b\u5efa\u67f1\u72b6\u56fe\nbar = (\n    Bar()\n    .add_xaxis(Faker.choose())\n    .add_yaxis(\"\u9500\u552e\u989d\", Faker.values())\n    .set_global_opts(title_opts=opts.TitleOpts(title=\"\u67f1\u72b6\u56fe\"))\n)\n\n# \u521b\u5efa\u6298\u7ebf\u56fe\nline = (\n    Line()\n    .add_xaxis(Faker.choose())\n    .add_yaxis(\"\u8d8b\u52bf\", Faker.values())\n    .set_global_opts(title_opts=opts.TitleOpts(title=\"\u6298\u7ebf\u56fe\"))\n)\n\n# \u6dfb\u52a0\u5230 Tab\ntab = Tab()\ntab.add(bar, \"\u67f1\u72b6\u56fe\")\ntab.add(line, \"\u6298\u7ebf\u56fe\")\n\n# \u6e32\u67d3\u5230 notebook \u6216 HTML \u6587\u4ef6\ntab.render_notebook()\n# tab.render(\"tab_example.html\")\n</code></pre>"},{"location":"analysis/pyecharts/#4-page","title":"4.\u7ec4\u5408\u56fe Page","text":"<pre><code>from pyecharts.charts import *\nfrom pyecharts import options as opts \nfrom pyecharts.globals import *\nfrom pyecharts.faker import *\n\nx_data = Faker.choose()\ny_data = Faker.values()\n\nbar = (\n    Bar(init_opts=opts.InitOpts(bg_color=\"white\"))\n    .add_xaxis(x_data)\n    .add_yaxis(\"\u9500\u91cf\u67f1\u72b6\u56fe\",y_data)\n    .set_global_opts(title_opts=opts.TitleOpts(title=\"\u67f1\u72b6\u56fe\"))\n)\n\nline = (\n    Line(init_opts=opts.InitOpts(bg_color=\"white\"))\n    .add_xaxis(x_data)\n    .add_yaxis(\"\u8d8b\u52bf-\u6298\u7ebf\u56fe\",y_data)\n    .set_global_opts(title_opts=opts.TitleOpts(title=\"\u6298\u7ebf\u56fe\"))\n)\n\npage = (\n    Page(layout=Page.SimplePageLayout)\n    .add(bar,line)\n)\n\npage.render_notebook()\n</code></pre>"},{"location":"analysis/pyecharts/#5-timeline","title":"5. Timeline \u65f6\u95f4\u8f74","text":"<pre><code>from pyecharts.charts import *\nfrom pyecharts import options as opts \nfrom pyecharts.globals import *\n\n# \u591a\u4e2a\u5e74\u4efd\u7684\u793a\u4f8b\u6570\u636e\nyears = [\"2020\", \"2021\", \"2022\"]\ndata = {\n    \"2020\": [5, 20, 36, 10, 75, 90],\n    \"2021\": [15, 25, 40, 20, 65, 80],\n    \"2022\": [25, 30, 50, 40, 60, 70]\n}\n\nx = [\"\u82f9\u679c\", \"\u9999\u8549\", \"\u6a58\u5b50\", \"\u8292\u679c\", \"\u68a8\", \"\u8461\u8404\"]\n\ntimeline = Timeline(init_opts=opts.InitOpts(\n    theme=ThemeType.LIGHT,\n    bg_color=\"white\"\n))\n\nfor year in years:\n    bar = (\n        Bar()\n        .add_xaxis(x)\n        .add_yaxis(\"\u6c34\u679c\u9500\u91cf\",data[year])\n        .set_global_opts(title_opts=opts.TitleOpts(\n            title=f'{year}\u5e74\u9500\u91cf'\n        ))\n    )\n\n    timeline.add(bar,time_point=year)\n\ntimeline.add_schema(\n    play_interval=2000, # \u64ad\u653e\u95f4\u9694\uff0c\u5355\u4f4d\u662f\u6beb\u79d2\n    is_auto_play=False,\n    is_loop_play=True,\n    pos_bottom=\"0%\"\n)\n\ntimeline.render_notebook()\n</code></pre>"},{"location":"analysis/pyecharts/#_10","title":"\u56db\u3001\u9879\u76ee\u5b9e\u6218","text":""},{"location":"analysis/pyecharts/#1_1","title":"1. \u8fde\u7eed\u578b\u65f6\u95f4\u6570\u636e\u53ef\u89c6\u5316","text":""},{"location":"analysis/pyecharts/#_11","title":"\u9636\u68af\u56fe","text":"<pre><code>import matplotlib.pyplot as plt \n\n# \u8bbe\u7f6e\u4e2d\u6587\u5b57\u4f53\uff0c\u9632\u6b62\u4e71\u7801\nplt.rcParams[\"font.sans-serif\"] = [\"STHeiTi\"]\n# \u8bbe\u7f6e\u6b63\u5e38\u663e\u793a\u8d1f\u53f7\nplt.rcParams[\"axes.unicode_minus\"]=False\n\n# \u8981\u5c55\u793a\u7684\u6570\u636e\u70b9\nx = [1, 2, 2.5, 4.5]\ny = [0.5, 1, 2, 3]\n\nplt.step(x=x,y=y,where=\"mid\") # \u9636\u68af\u5728 \u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u4e2d\u70b9\u6539\u53d8\nplt.xlabel('\u65f6\u95f4\u8f74')\nplt.ylabel('\u6570\u503c\u8f74')\n\nplt.show()\n</code></pre>"},{"location":"analysis/pyecharts/#_12","title":"\u73ab\u7470\u56fe","text":"<p><pre><code>import pandas as pd\nfrom pyecharts.charts import Pie\nfrom pyecharts import options as opts\n\n# \u51c6\u5907\u6570\u636e\nprovinces = ['\u5317\u4eac','\u4e0a\u6d77','\u9ed1\u9f99\u6c5f','\u5409\u6797','\u8fbd\u5b81','\u5185\u8499\u53e4','\u65b0\u7586','\u897f\u85cf','\u9752\u6d77','\u56db\u5ddd','\u4e91\u5357','\u9655\u897f','\u91cd\u5e86',\n             '\u8d35\u5dde','\u5e7f\u897f','\u6d77\u5357','\u6fb3\u95e8','\u6e56\u5357','\u6c5f\u897f','\u798f\u5efa','\u5b89\u5fbd','\u6d59\u6c5f','\u6c5f\u82cf','\u5b81\u590f','\u5c71\u897f','\u6cb3\u5317','\u5929\u6d25']\nnum = [1,1,1,17,9,22,23,42,35,7,20,21,16,24,16,21,37,12,13,14,13,7,22,8,16,13,13]\ncolor_series = ['#FAE927','#E9E416','#C9DA36','#9ECB3C','#6DBC49',\n                '#37B44E','#3DBA78','#14ADCF','#209AC9','#1E91CA',\n                '#2C6BA0','#2B55A1','#2D3D8E','#44388E','#6A368B'\n                '#7D3990','#A63F98','#C31C88','#D52178','#D5225B',\n                '#D02C2A','#D44C2D','#F57A34','#FA8F2F','#D99D21',\n                '#CF7B25','#CF7B25','#CF7B25']\n\n # \u521b\u5efa\u6570\u636e\u6846\ndf = pd.DataFrame({'provinces': provinces, 'num': num})\n# \u964d\u5e8f\u6392\u5e8f\ndf.sort_values(by='num', ascending=False, inplace=True)\n\n# \u63d0\u53d6\u6570\u636e\nv = df['provinces'].values.tolist()\nd = df['num'].values.tolist()\n\n# \u5b9e\u4f8b\u5316Pie\u7c7b\npie1 = Pie(init_opts=opts.InitOpts(width='1350px', height='750px'))\n# \u8bbe\u7f6e\u989c\u8272\npie1.set_colors(color_series)\n# \u6dfb\u52a0\u6570\u636e\uff0c\u8bbe\u7f6e\u997c\u56fe\u7684\u534a\u5f84\uff0c\u662f\u5426\u5c55\u793a\u6210\u5357\u4e01\u683c\u5c14\u56fe\npie1.add(\"\", [list(z) for z in zip(v, d)],\n        radius=[\"30%\", \"135%\"],\n        center=[\"50%\", \"65%\"],\n        rosetype=\"area\"\n        )\n# \u8bbe\u7f6e\u5168\u5c40\u914d\u7f6e\u9879\npie1.set_global_opts(title_opts=opts.TitleOpts(title='\u73ab\u7470\u56fe\u793a\u4f8b'),\n                     legend_opts=opts.LegendOpts(is_show=False),\n                     toolbox_opts=opts.ToolboxOpts())\n# \u8bbe\u7f6e\u7cfb\u5217\u914d\u7f6e\u9879\npie1.set_series_opts(label_opts=opts.LabelOpts(is_show=True, position=\"inside\", font_size=12,\n                                               formatter=\"{b}:{c}\u5929\", font_style=\"italic\",\n                                               font_weight=\"bold\", font_family=\"Microsoft YaHei\"\n                                               ),\n                     )\n# \u751f\u6210html\u6587\u6863\npie1.render_notebook()\n</code></pre> </p>"},{"location":"analysis/python-igraph/","title":"Python-igraph \u6559\u7a0b","text":""},{"location":"analysis/python-igraph/#igraph","title":"\u4e00\u3001igraph \u7b80\u4ecb","text":"<p>igraph \u662f\u4e00\u4e2a\u4e13\u95e8\u7528\u4e8e\u56fe\u8bba\u5206\u6790\u7684\u5f00\u6e90\u5e93\uff0c\u652f\u6301\uff1a</p> <ul> <li>\u521b\u5efa\u56fe\uff08Graph\uff09\u548c\u7f51\u7edc\uff08Network\uff09</li> <li>\u8ba1\u7b97\u7f51\u7edc\u6307\u6807\uff08\u5982\u5ea6\u3001\u805a\u7c7b\u7cfb\u6570\u3001\u6700\u77ed\u8def\u5f84\u7b49\uff09</li> <li>\u793e\u533a\u53d1\u73b0\uff08community detection\uff09</li> <li>\u7f51\u7edc\u53ef\u89c6\u5316</li> </ul> <p>\u5b89\u88c5\uff1a</p> <pre><code>pip install igraph\npip install cairocffi  # \u82e5\u9700\u8981\u53ef\u89c6\u5316\u652f\u6301\n</code></pre>"},{"location":"analysis/python-igraph/#_1","title":"\u4e8c\u3001\u57fa\u672c\u6982\u5ff5\u4e0e\u56fe\u521b\u5efa","text":""},{"location":"analysis/python-igraph/#1","title":"1. \u5bfc\u5165\u4e0e\u57fa\u672c\u7ed3\u6784","text":"<pre><code>import igraph as ig\n</code></pre>"},{"location":"analysis/python-igraph/#2","title":"2. \u521b\u5efa\u56fe\uff08\u65e0\u5411\u56fe / \u6709\u5411\u56fe\uff09","text":"<pre><code># \u521b\u5efa\u4e00\u4e2a\u65e0\u5411\u56fe\ng = ig.Graph()\n\n# \u6dfb\u52a0 5 \u4e2a\u8282\u70b9\ng.add_vertices(5)\n\n# \u6dfb\u52a0\u8fb9\uff08\u9876\u70b9\u7f16\u53f7\u4ece0\u5f00\u59cb\uff09\ng.add_edges([(0,1), (1,2), (2,3), (3,4), (4,0)])\n</code></pre>"},{"location":"analysis/python-igraph/#3","title":"3. \u4f7f\u7528\u6709\u5411\u56fe","text":"<pre><code>g = ig.Graph(directed=True)\ng.add_vertices([\"A\", \"B\", \"C\"])\ng.add_edges([(\"A\", \"B\"), (\"B\", \"C\")])\n</code></pre>"},{"location":"analysis/python-igraph/#_2","title":"\u4e09\u3001\u56fe\u7684\u5c5e\u6027\u8bbe\u7f6e","text":"<pre><code># \u8282\u70b9\u540d\u79f0\ng.vs[\"label\"] = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n\n# \u8fb9\u6743\u91cd\ng.es[\"weight\"] = [1.0, 2.5, 1.2, 0.5, 3.0]\n\n# \u81ea\u5b9a\u4e49\u5c5e\u6027\ng.vs[\"color\"] = [\"red\", \"green\", \"blue\", \"yellow\", \"pink\"]\n</code></pre>"},{"location":"analysis/python-igraph/#_3","title":"\u56db\u3001\u56fe\u7684\u5e38\u7528\u5206\u6790\u51fd\u6570","text":""},{"location":"analysis/python-igraph/#1_1","title":"1. \u8282\u70b9\u548c\u8fb9\u7684\u6570\u91cf","text":"<pre><code>g.vcount()  # \u9876\u70b9\u6570\u91cf\ng.ecount()  # \u8fb9\u6570\u91cf\n</code></pre>"},{"location":"analysis/python-igraph/#2-degree","title":"2. \u5ea6\uff08Degree\uff09","text":"<pre><code>g.degree()               # \u6240\u6709\u8282\u70b9\u7684\u5ea6\ng.degree(0)              # \u5355\u4e2a\u8282\u70b9\u7684\u5ea6\ng.degree(mode=\"in\")      # \u5165\u5ea6\uff08\u6709\u5411\u56fe\uff09\ng.degree(mode=\"out\")     # \u51fa\u5ea6\uff08\u6709\u5411\u56fe\uff09\n</code></pre>"},{"location":"analysis/python-igraph/#3_1","title":"3. \u90bb\u63a5\u8282\u70b9","text":"<pre><code>g.neighbors(0)  # \u8fd4\u56de\u7b2c0\u53f7\u8282\u70b9\u7684\u90bb\u5c45\n</code></pre>"},{"location":"analysis/python-igraph/#4","title":"4. \u6700\u77ed\u8def\u5f84","text":"<pre><code>g.shortest_paths(source=0, target=[2,4])\n</code></pre>"},{"location":"analysis/python-igraph/#5","title":"5. \u805a\u7c7b\u7cfb\u6570","text":"<pre><code>g.transitivity_undirected()\n</code></pre>"},{"location":"analysis/python-igraph/#_4","title":"\u4e94\u3001\u793e\u533a\u53d1\u73b0\u7b97\u6cd5","text":""},{"location":"analysis/python-igraph/#1-louvain","title":"1. Louvain \u793e\u533a\u5212\u5206","text":"<pre><code>g = ig.Graph.Famous(\"Zachary\")\ncommunities = g.community_multilevel()\nprint(communities.membership)\n</code></pre>"},{"location":"analysis/python-igraph/#2-label-propagation","title":"2. Label Propagation","text":"<pre><code>communities = g.community_label_propagation()\n</code></pre>"},{"location":"analysis/python-igraph/#_5","title":"\u516d\u3001\u56fe\u7684\u53ef\u89c6\u5316","text":"<pre><code>layout = g.layout(\"circle\")  # \u5176\u4ed6\u5e03\u5c40\u6709\uff1afr\u3001kk\u3001grid_fr\u7b49\n\nig.plot(g,\n        layout=layout,\n        vertex_label=g.vs[\"label\"],\n        vertex_color=g.vs[\"color\"],\n        edge_width=[2 + w for w in g.es[\"weight\"]])\n</code></pre> <p>\u4fdd\u5b58\u56fe\u50cf\uff1a</p> <pre><code>ig.plot(g, target=\"graph.png\", layout=layout)\n</code></pre>"},{"location":"analysis/python-igraph/#_6","title":"\u4e03\u3001\u793a\u4f8b\uff1a\u6784\u5efa\u5e76\u5206\u6790\u793e\u4ea4\u7f51\u7edc","text":"<pre><code>g = ig.Graph(directed=False)\ng.add_vertices([\"Alice\", \"Bob\", \"Claire\", \"Dennis\", \"Emma\"])\ng.add_edges([(\"Alice\", \"Bob\"), (\"Alice\", \"Claire\"), (\"Bob\", \"Dennis\"), (\"Claire\", \"Emma\")])\ng.vs[\"label\"] = g.vs[\"name\"]\n\n# \u5ea6\u4e2d\u5fc3\u6027\nprint(g.degree())\n\n# \u53ef\u89c6\u5316\nlayout = g.layout(\"fr\")\nig.plot(g, layout=layout, vertex_label=g.vs[\"label\"])\n</code></pre>"},{"location":"analysis/python-igraph/#_7","title":"\u516b\u3001\u5e38\u7528\u5185\u7f6e\u56fe\u4e0e\u6570\u636e\u5bfc\u5165","text":""},{"location":"analysis/python-igraph/#1_2","title":"1. \u751f\u6210\u5e38\u89c1\u56fe","text":"<pre><code>g = ig.Graph.Famous(\"Zachary\")  # \u67e5\u514b\u5229\u7a7a\u624b\u9053\u4ff1\u4e50\u90e8\u56fe\n</code></pre>"},{"location":"analysis/python-igraph/#2_1","title":"2. \u4ece\u8fb9\u5217\u8868\u521b\u5efa","text":"<pre><code>edges = [(\"A\", \"B\"), (\"B\", \"C\")]\ng = ig.Graph.TupleList(edges, directed=False)\n</code></pre>"},{"location":"analysis/python-igraph/#3_2","title":"3. \u4ece\u90bb\u63a5\u77e9\u9635\u5bfc\u5165","text":"<pre><code>import numpy as np\nadj = np.array([\n    [0, 1, 1],\n    [1, 0, 0],\n    [1, 0, 0]\n])\ng = ig.Graph.Adjacency((adj &gt; 0).tolist())\n</code></pre>"},{"location":"analysis/python-igraph/#_8","title":"\u4e5d\u3001\u8fdb\u9636\uff1a\u56fe\u6307\u6807\u4e0e\u4e2d\u5fc3\u6027","text":"<pre><code># \u5ea6\u4e2d\u5fc3\u6027\ng.degree()\n\n# \u63a5\u8fd1\u4e2d\u5fc3\u6027\ng.closeness()\n\n# \u4e2d\u4ecb\u4e2d\u5fc3\u6027\uff08Betweenness\uff09\ng.betweenness()\n\n# Pagerank\ng.pagerank()\n\n# Cliques\uff08\u5b8c\u5168\u5b50\u56fe\uff09\ng.cliques(min=3)\n</code></pre>"},{"location":"analysis/python-igraph/#_9","title":"\u5341\u3001\u603b\u7ed3\u8868\u683c\uff08\u5e38\u7528\u51fd\u6570\u901f\u67e5\uff09","text":"\u529f\u80fd \u51fd\u6570 \u6dfb\u52a0\u8282\u70b9 <code>g.add_vertices()</code> \u6dfb\u52a0\u8fb9 <code>g.add_edges()</code> \u9876\u70b9\u6570 / \u8fb9\u6570 <code>g.vcount()</code> / <code>g.ecount()</code> \u5ea6\u4e2d\u5fc3\u6027 <code>g.degree()</code> \u63a5\u8fd1\u4e2d\u5fc3\u6027 <code>g.closeness()</code> \u4e2d\u4ecb\u4e2d\u5fc3\u6027 <code>g.betweenness()</code> PageRank <code>g.pagerank()</code> \u6700\u77ed\u8def\u5f84 <code>g.shortest_paths()</code> \u90bb\u5c45\u8282\u70b9 <code>g.neighbors()</code> \u793e\u533a\u53d1\u73b0\uff08Louvain\uff09 <code>g.community_multilevel()</code> \u793e\u533a\u53d1\u73b0\uff08\u6807\u7b7e\u4f20\u64ad\uff09 <code>g.community_label_propagation()</code> \u805a\u7c7b\u7cfb\u6570 <code>g.transitivity_undirected()</code> \u53ef\u89c6\u5316\u56fe <code>igraph.plot()</code> \u9884\u5b9a\u4e49\u56fe <code>igraph.Graph.Famous()</code> \u4ece\u8fb9\u5217\u8868\u521b\u5efa\u56fe <code>igraph.Graph.TupleList()</code> \u4ece\u90bb\u63a5\u77e9\u9635\u521b\u5efa\u56fe <code>igraph.Graph.Adjacency()</code>"},{"location":"analysis/seaborn/","title":"Seaborn \u6559\u7a0b","text":""},{"location":"analysis/seaborn/#_1","title":"\u4e00\u3001\u7b80\u4ecb","text":"<p>Seaborn \u662f\u57fa\u4e8e Matplotlib \u6784\u5efa\u7684\u9ad8\u7ea7\u53ef\u89c6\u5316\u5e93\uff0c\u4e13\u4e3a \u7edf\u8ba1\u56fe\u8868 \u800c\u8bbe\u8ba1\u3002\u76f8\u6bd4 Matplotlib\uff0c\u5b83\u66f4\u7f8e\u89c2\u3001\u66f4\u6613\u7528\uff0c\u5c24\u5176\u9002\u5408\u6570\u636e\u5206\u6790\u5de5\u4f5c\u6d41\u3002</p> <ul> <li>\u5b98\u7f51\uff1ahttps://seaborn.pydata.org</li> <li>\u6838\u5fc3\u4f18\u52bf\uff1a\u66f4\u7f8e\u89c2\u7684\u9ed8\u8ba4\u6837\u5f0f\u3001\u5bf9 Pandas DataFrame \u53cb\u597d\u3001\u652f\u6301\u5206\u7c7b\u6570\u636e\u4e0e\u7edf\u8ba1\u56fe</li> </ul>"},{"location":"analysis/seaborn/#_2","title":"\u4e8c\u3001\u5b89\u88c5","text":"<pre><code>pip install seaborn\n</code></pre>"},{"location":"analysis/seaborn/#_3","title":"\u4e09\u3001\u5e38\u7528\u56fe","text":"\u56fe\u8868\u7c7b\u578b \u51fd\u6570 \u529f\u80fd \u76f4\u65b9\u56fe <code>histplot()</code> \u663e\u793a\u6570\u503c\u5206\u5e03\u9891\u7387 \u5bc6\u5ea6\u56fe <code>kdeplot()</code> \u663e\u793a\u6570\u503c\u7684\u6982\u7387\u5bc6\u5ea6 \u6563\u70b9\u56fe <code>scatterplot()</code> \u663e\u793a\u4e24\u53d8\u91cf\u4e4b\u95f4\u5173\u7cfb \u6298\u7ebf\u56fe <code>lineplot()</code> \u663e\u793a\u8d8b\u52bf\u6216\u65f6\u95f4\u5e8f\u5217 \u56de\u5f52\u56fe <code>regplot()</code> \u5e26\u56de\u5f52\u7ebf\u7684\u6563\u70b9\u56fe \u7bb1\u578b\u56fe <code>boxplot()</code> \u663e\u793a\u4e2d\u4f4d\u6570\u3001\u56db\u5206\u4f4d\u6570\u548c\u5f02\u5e38\u503c \u5c0f\u63d0\u7434\u56fe <code>violinplot()</code> \u663e\u793a\u5206\u5e03\u5bc6\u5ea6\u4e0e\u7bb1\u578b\u56fe\u5408\u5e76 \u6761\u5f62\u56fe <code>barplot()</code> \u7c7b\u522b\u53d8\u91cf\u5bf9\u5e94\u6570\u503c\u7684\u5747\u503c\u7b49\u7edf\u8ba1\u91cf \u8ba1\u6570\u56fe <code>countplot()</code> \u7c7b\u522b\u53d8\u91cf\u7684\u9891\u6570\u7edf\u8ba1 \u70ed\u529b\u56fe <code>heatmap()</code> \u663e\u793a\u53d8\u91cf\u4e4b\u95f4\u76f8\u5173\u6027 \u77e9\u9635\u56fe <code>pairplot()</code> \u663e\u793a\u6210\u5bf9\u53d8\u91cf\u5173\u7cfb"},{"location":"analysis/seaborn/#_4","title":"\u6563\u70b9\u56fe","text":"\u53c2\u6570\u540d \u8bf4\u660e <code>x</code> \u6a2a\u5750\u6807\u53d8\u91cf\u540d <code>y</code> \u7eb5\u5750\u6807\u53d8\u91cf\u540d <code>hue</code> \u63a7\u5236\u70b9\u7684\u989c\u8272\u5206\u7c7b\u53d8\u91cf\uff08\u5982\u6027\u522b\u3001\u65f6\u95f4\uff09 <code>style</code> \u63a7\u5236\u70b9\u7684\u5f62\u72b6\u5206\u7c7b\u53d8\u91cf\uff08\u5982\u5438\u70df\u4e0e\u5426\uff09 <code>size</code> \u63a7\u5236\u70b9\u7684\u5927\u5c0f\u53d8\u91cf\uff08\u5982\u6570\u91cf\u3001\u7b49\u7ea7\uff09 <code>data</code> \u6570\u636e\u6e90\uff0c\u901a\u5e38\u662f\u4e00\u4e2a DataFrame <code>palette</code> \u8c03\u8272\u677f\uff08\u5982 <code>\"pastel\"</code>\u3001<code>\"dark\"</code>\u3001<code>\"Set2\"</code> \u7b49\uff09 <code>s</code> \u70b9\u7684\u5927\u5c0f\uff08\u6807\u91cf\u503c\uff0c\u9ed8\u8ba4\u5927\u5c0f 40\uff09 <code>marker</code> \u70b9\u7684\u5f62\u72b6\uff08\u5982 <code>\"o\"</code> \u8868\u793a\u5706\u5f62\uff0c<code>\"s\"</code> \u8868\u793a\u65b9\u5f62\uff09 <code>alpha</code> \u70b9\u7684\u900f\u660e\u5ea6\uff08\u8303\u56f4 0~1\uff09 <code>legend</code> \u662f\u5426\u663e\u793a\u56fe\u4f8b\uff08\u9ed8\u8ba4 <code>\"auto\"</code>\uff0c\u53ef\u8bbe\u4e3a <code>False</code>\uff09 <code>edgecolor</code> \u70b9\u7684\u8fb9\u6846\u989c\u8272\uff08\u5982 <code>\"w\"</code> \u8868\u793a\u767d\u8272\uff09 <pre><code>import seaborn as sns\nimport matplotlib.pyplot as plt \n\n# \u52a0\u8f7d\u6570\u636e\u96c6\ntips = sns.load_dataset(\"tips\")\n# hue:\u6839\u636e\u662f\u5426\u62bd\u70df\u8bbe\u7f6e\u4e0d\u540c\u989c\u8272 sex: \u6839\u636e\u6027\u522b\u8bbe\u7f6e\u4e0d\u540c\u5f62\u72b6 day:\u6839\u636e\u8fd9\u5217\u63a7\u5236\u5927\u5c0f\nsns.scatterplot(data=tips,x=\"total_bill\",y=\"tip\",hue=\"smoker\",style=\"sex\",size=\"day\")\nplt.title(\"\u603b\u6d88\u8d39\u4e0e\u5c0f\u8d39\u4e4b\u95f4\u7684\u5173\u7cfb\")\nplt.show()\n</code></pre>"},{"location":"analysis/seaborn/#_5","title":"\u6761\u5f62\u56fe","text":"\u53c2\u6570\u540d \u8bf4\u660e <code>x</code> \u5206\u7c7b\u53d8\u91cf\uff08\u6a2a\u8f74\uff09 <code>y</code> \u6570\u503c\u53d8\u91cf\uff08\u7eb5\u8f74\uff09 <code>hue</code> \u5206\u7ec4\u53d8\u91cf\uff0c\u663e\u793a\u591a\u7ec4\u6761\u5f62 <code>data</code> \u6570\u636e\u96c6\uff0c\u901a\u5e38\u662f Pandas \u7684 DataFrame <code>palette</code> \u8bbe\u7f6e\u989c\u8272\u65b9\u6848\uff08\u5982 <code>\"Set2\"</code>\u3001<code>\"pastel\"</code>\uff09 <code>ci</code> \u8bef\u5dee\u68d2\uff08\u9ed8\u8ba4\u662f 95% \u7f6e\u4fe1\u533a\u95f4\uff0c\u8bbe\u4e3a <code>None</code> \u53ef\u53d6\u6d88\uff09 <code>estimator</code> \u805a\u5408\u51fd\u6570\uff0c\u9ed8\u8ba4\u662f <code>np.mean</code>\uff0c\u4e5f\u53ef\u8bbe\u4e3a <code>np.sum</code>\u3001<code>len</code> \u7b49 <code>order</code> \u5206\u7c7b\u53d8\u91cf\u663e\u793a\u987a\u5e8f\uff08\u5217\u8868\uff09 <code>hue_order</code> hue \u7684\u5206\u7c7b\u987a\u5e8f\uff08\u5217\u8868\uff09 <code>orient</code> \u6761\u5f62\u56fe\u65b9\u5411\uff1a<code>\"v\"</code>\uff08\u9ed8\u8ba4\uff09\u7ad6\u76f4\u65b9\u5411 \u6216 <code>\"h\"</code> \u6a2a\u5411"},{"location":"cloud/docker/docker/","title":"Docker \u6559\u7a0b","text":""},{"location":"cloud/docker/docker/#1","title":"1. \u6982\u8ff0","text":"<p>Docker \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5bb9\u5668\u5316\u5e73\u53f0\uff0c\u7528\u4e8e\u81ea\u52a8\u5316\u5e94\u7528\u7a0b\u5e8f\u7684\u90e8\u7f72\u3001\u6269\u5c55\u548c\u7ba1\u7406\u3002Docker \u901a\u8fc7\u5c06\u5e94\u7528\u7a0b\u5e8f\u53ca\u5176\u4f9d\u8d56\u6253\u5305\u5230\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u5bb9\u5668\u4e2d\uff0c\u786e\u4fdd\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5728\u4efb\u4f55\u652f\u6301 Docker \u7684\u73af\u5883\u4e2d\u4e00\u81f4\u8fd0\u884c\u3002\u4e3b\u8981\u7528\u9014\u5305\u62ec\uff1a</p> <ul> <li>\u73af\u5883\u4e00\u81f4\u6027\uff1a \u5728\u5f00\u53d1\u3001\u6d4b\u8bd5\u3001\u751f\u4ea7\u73af\u5883\u4e2d\u63d0\u4f9b\u4e00\u81f4\u7684\u8fd0\u884c\u73af\u5883\u3002</li> <li>\u8d44\u6e90\u9694\u79bb\uff1a \u901a\u8fc7\u5bb9\u5668\u6280\u672f\u9694\u79bb\u4e0d\u540c\u5e94\u7528\uff0c\u907f\u514d\u73af\u5883\u51b2\u7a81\u3002</li> <li>\u654f\u6377\u5f00\u53d1\uff1a \u52a0\u5feb\u5e94\u7528\u7a0b\u5e8f\u7684\u4ea4\u4ed8\u548c\u90e8\u7f72\u5468\u671f\u3002</li> <li>\u6269\u5c55\u6027\uff1a \u652f\u6301\u5927\u89c4\u6a21\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u5bb9\u5668\u7f16\u6392\u548c\u7ba1\u7406\u3002</li> </ul>"},{"location":"cloud/docker/docker/#2-docker","title":"2. Docker \u955c\u50cf\u548c\u5bb9\u5668","text":""},{"location":"cloud/docker/docker/#21-docker-image","title":"2.1 Docker \u955c\u50cf\uff08image\uff09","text":"<p>Docker \u955c\u50cf\u662fDocker\u5bb9\u5668\u7684\u57fa\u7840\uff0c\u7c7b\u4f3c\u4e8e\u865a\u62df\u673a\u7684\u64cd\u4f5c\u7cfb\u7edf\u955c\u50cf\u3002Docker \u955c\u50cf\u662f\u7531\u591a\u4e2a\u53ea\u8bfb\u5c42\uff08layer\uff09\u7ec4\u6210\u7684\uff0c\u6bcf\u4e00\u5c42\u90fd\u4ee3\u8868\u6587\u4ef6\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\u3002\u955c\u50cf\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u800c\u5bb9\u5668\u662f\u5728\u955c\u50cf\u7684\u57fa\u7840\u4e0a\u6dfb\u52a0\u4e00\u4e2a\u53ef\u5199\u5c42\u3002</p> <p>2.1.1. \u955c\u50cf\u7684\u7ed3\u6784</p> <p>Docker \u955c\u50cf\u7531\u4e00\u7cfb\u5217\u53ea\u8bfb\u5c42\u7ec4\u6210\uff0c\u6bcf\u4e00\u5c42\u5bf9\u5e94\u4e00\u6b21\u6587\u4ef6\u7cfb\u7edf\u7684\u4fee\u6539\u3002\u6240\u6709\u5c42\u90fd\u662f\u57fa\u4e8e\u4e0a\u4e00\u5c42\u6784\u5efa\u7684\uff0c\u8fd9\u79cd\u5206\u5c42\u7ed3\u6784\u4f7f\u5f97\u955c\u50cf\u5728\u4e0d\u540c\u5bb9\u5668\u4e4b\u95f4\u53ef\u4ee5\u5171\u4eab\uff0c\u4ece\u800c\u51cf\u5c11\u5b58\u50a8\u7a7a\u95f4\u548c\u52a0\u5feb\u90e8\u7f72\u901f\u5ea6\u3002</p> <ul> <li>\u57fa\u7840\u5c42\uff08Base Layer\uff09\uff1a\u6bcf\u4e2aDocker\u955c\u50cf\u901a\u5e38\u90fd\u4f1a\u6709\u4e00\u4e2a\u57fa\u7840\u5c42\uff0c\u5b83\u901a\u5e38\u662f\u64cd\u4f5c\u7cfb\u7edf\u7684\u4e00\u4e2a\u6700\u5c0f\u5316\u7248\u672c\uff0c\u6bd4\u5982Ubuntu\u6216Alpine\u3002</li> <li>\u4e2d\u95f4\u5c42\uff08Intermediate Layer\uff09\uff1a\u5728\u57fa\u7840\u5c42\u4e4b\u4e0a\uff0cDockerfile\u4e2d\u7684\u6bcf\u4e00\u6761\u6307\u4ee4\uff08\u5982RUN\u3001COPY\u3001ADD\u7b49\uff09\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5c42\u3002</li> <li>\u9876\u5c42\uff08Top Layer\uff09\uff1a\u8fd9\u662f\u955c\u50cf\u7684\u6700\u540e\u4e00\u5c42\uff0c\u5305\u542b\u4e86\u955c\u50cf\u6784\u5efa\u8fc7\u7a0b\u7684\u6700\u7ec8\u72b6\u6001\u3002</li> </ul> <p>2.1.2. \u955c\u50cf\u7684\u521b\u5efa</p> <p>Docker\u955c\u50cf\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\u521b\u5efa\uff1a</p> <ul> <li>Dockerfile\uff1a\u6700\u5e38\u89c1\u7684\u65b9\u6cd5\u662f\u901a\u8fc7\u7f16\u5199\u4e00\u4e2aDockerfile\uff0c\u5b9a\u4e49\u4ece\u57fa\u7840\u955c\u50cf\u5f00\u59cb\u9700\u8981\u6267\u884c\u7684\u6307\u4ee4\uff0c\u7136\u540e\u4f7f\u7528docker build\u547d\u4ee4\u6765\u6784\u5efa\u955c\u50cf\u3002</li> <li>\u4ece\u5bb9\u5668\u5bfc\u51fa\uff1a\u53ef\u4ee5\u4ece\u4e00\u4e2a\u5df2\u7ecf\u8fd0\u884c\u7684\u5bb9\u5668\u4e2d\u521b\u5efa\u955c\u50cf\uff0c\u4f7f\u7528docker commit\u547d\u4ee4\u4fdd\u5b58\u5bb9\u5668\u7684\u5f53\u524d\u72b6\u6001\u4e3a\u65b0\u7684\u955c\u50cf\u3002</li> </ul> <p>2.1.3. \u955c\u50cf\u7684\u7ba1\u7406</p> <p>\u5e38\u7528\u7684Docker\u955c\u50cf\u7ba1\u7406\u547d\u4ee4\u5305\u62ec\uff1a</p> <ul> <li>docker images\uff1a\u5217\u51fa\u672c\u5730\u5b58\u50a8\u7684\u6240\u6709Docker\u955c\u50cf\u3002</li> <li>docker pull \uff1a\u4eceDocker Hub\u6216\u5176\u4ed6\u955c\u50cf\u4ed3\u5e93\u62c9\u53d6\u955c\u50cf\u3002 <li>docker push \uff1a\u5c06\u672c\u5730\u955c\u50cf\u4e0a\u4f20\u5230Docker Hub\u6216\u79c1\u6709\u4ed3\u5e93\u3002 <li>docker rmi \uff1a\u5220\u9664\u672c\u5730\u7684Docker\u955c\u50cf\u3002 <p>2.1.4. \u955c\u50cf\u6807\u7b7e\uff08Tags\uff09</p> <p>\u6bcf\u4e2aDocker\u955c\u50cf\u901a\u5e38\u90fd\u4f1a\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u6807\u7b7e\uff08tag\uff09\uff0c\u7528\u4e8e\u6807\u8bc6\u955c\u50cf\u7684\u4e0d\u540c\u7248\u672c\u3002\u4f8b\u5982\uff0cnginx:latest\u8868\u793anginx\u7684\u6700\u65b0\u7248\u672c\uff0cnginx:1.19\u8868\u793anginx\u76841.19\u7248\u672c\u3002\u6807\u7b7e\u4fbf\u4e8e\u5728\u540c\u4e00\u4e2a\u955c\u50cf\u4ed3\u5e93\u4e2d\u7ba1\u7406\u4e0d\u540c\u7684\u7248\u672c\u3002</p> <p>2.1.5 \u955c\u50cf\u7684\u4f18\u5316</p> <p>\u955c\u50cf\u7684\u4f53\u79ef\u548c\u6784\u5efa\u901f\u5ea6\u662f\u5f71\u54cd\u5bb9\u5668\u542f\u52a8\u548c\u90e8\u7f72\u7684\u5173\u952e\u56e0\u7d20\u3002\u4f18\u5316Docker\u955c\u50cf\u7684\u5e38\u7528\u65b9\u6cd5\u5305\u62ec\uff1a</p> <ul> <li>\u9009\u62e9\u5c0f\u578b\u57fa\u7840\u955c\u50cf\uff1a\u5982Alpine\uff0c\u6bd4\u6807\u51c6\u7684Ubuntu\u955c\u50cf\u4f53\u79ef\u5c0f\u3002</li> <li>\u51cf\u5c11\u955c\u50cf\u5c42\uff1a\u901a\u8fc7\u5408\u5e76Dockerfile\u4e2d\u7684\u6307\u4ee4\u6765\u51cf\u5c11\u4e2d\u95f4\u5c42\u3002</li> <li>\u6e05\u7406\u7f13\u5b58\u548c\u4e34\u65f6\u6587\u4ef6\uff1a\u5728\u955c\u50cf\u6784\u5efa\u8fc7\u7a0b\u4e2d\u6e05\u7406\u4e0d\u5fc5\u8981\u7684\u6587\u4ef6\uff0c\u51cf\u5c11\u955c\u50cf\u5927\u5c0f\u3002</li> </ul> <p>2.1.6 \u955c\u50cf\u4ed3\u5e93\uff08Registry\uff09</p> <p>Docker \u955c\u50cf\u901a\u5e38\u5b58\u50a8\u5728\u955c\u50cf\u4ed3\u5e93\u4e2d\uff0c\u53ef\u4ee5\u662f\u516c\u5171\u7684Docker Hub\uff0c\u4e5f\u53ef\u4ee5\u662f\u4f01\u4e1a\u5185\u90e8\u7684\u79c1\u6709\u4ed3\u5e93\u3002</p> <ul> <li>Docker Hub\uff1a\u9ed8\u8ba4\u7684\u516c\u5171\u955c\u50cf\u4ed3\u5e93\uff0c\u5168\u7403\u7528\u6237\u90fd\u53ef\u4ee5\u8bbf\u95ee\u3002</li> <li>\u79c1\u6709\u4ed3\u5e93\uff1a\u53ef\u4ee5\u4f7f\u7528Docker Registry\u642d\u5efa\u81ea\u5df1\u7684\u955c\u50cf\u4ed3\u5e93\uff0c\u7528\u4e8e\u4f01\u4e1a\u5185\u90e8\u7684\u955c\u50cf\u5b58\u50a8\u3002</li> </ul>"},{"location":"cloud/docker/docker/#22-docker-container","title":"2.2 Docker \u5bb9\u5668 \uff08container\uff09","text":"<p>Docker \u5bb9\u5668\u662fDocker\u6280\u672f\u7684\u6838\u5fc3\uff0c\u5b83\u5c06\u5e94\u7528\u7a0b\u5e8f\u53ca\u5176\u6240\u6709\u4f9d\u8d56\u9879\u5c01\u88c5\u5728\u4e00\u4e2a\u72ec\u7acb\u7684\u73af\u5883\u4e2d\uff0c\u4f7f\u5176\u80fd\u591f\u5728\u4efb\u4f55\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u800c\u4e0d\u4f1a\u53d7\u5230\u5e95\u5c42\u64cd\u4f5c\u7cfb\u7edf\u7684\u5f71\u54cd\u3002Docker \u5bb9\u5668\u4e0e\u4f20\u7edf\u7684\u865a\u62df\u673a\u4e0d\u540c\uff0c\u5177\u6709\u8f7b\u91cf\u3001\u5feb\u901f\u542f\u52a8\u3001\u8d44\u6e90\u9ad8\u6548\u7b49\u7279\u70b9\u3002</p> <p>2.2.1 Docker \u5bb9\u5668\u7684\u6982\u5ff5</p> <p>Docker \u5bb9\u5668\u662f\u4eceDocker \u955c\u50cf\u542f\u52a8\u7684\u4e00\u4e2a\u5b9e\u4f8b\u3002\u5bb9\u5668\u5305\u542b\u4e86\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u6240\u9700\u7684\u6240\u6709\u5185\u5bb9\uff0c\u5305\u62ec\u4ee3\u7801\u3001\u8fd0\u884c\u65f6\u73af\u5883\u3001\u7cfb\u7edf\u5de5\u5177\u3001\u5e93\u548c\u8bbe\u7f6e\u3002\u901a\u8fc7\u5bb9\u5668\u5316\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u786e\u4fdd\u5e94\u7528\u5728\u5f00\u53d1\u3001\u6d4b\u8bd5\u548c\u751f\u4ea7\u73af\u5883\u4e2d\u7684\u884c\u4e3a\u4e00\u81f4\u3002</p> <p>2.2.2 \u5bb9\u5668\u7684\u5de5\u4f5c\u539f\u7406</p> <p>Docker \u5bb9\u5668\u57fa\u4e8e Linux \u7684\u540d\u5b57\u7a7a\u95f4\uff08Namespaces\uff09\u548c\u63a7\u5236\u7ec4\uff08Cgroups\uff09\u6280\u672f\uff0c\u5b9e\u73b0\u8fdb\u7a0b\u9694\u79bb\u548c\u8d44\u6e90\u9650\u5236\u3002\u6bcf\u4e2a\u5bb9\u5668\u5728\u81ea\u5df1\u7684\u540d\u5b57\u7a7a\u95f4\u4e2d\u8fd0\u884c\uff0c\u4e0e\u5176\u4ed6\u5bb9\u5668\u548c\u5bbf\u4e3b\u673a\u9694\u79bb\u5f00\u6765\uff0c\u540c\u65f6\u5171\u4eab\u5bbf\u4e3b\u673a\u7684\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u3002</p> <ul> <li>\u540d\u5b57\u7a7a\u95f4\uff08Namespaces\uff09\uff1a\u540d\u5b57\u7a7a\u95f4\u63d0\u4f9b\u4e86\u8fdb\u7a0b\u9694\u79bb\uff0c\u786e\u4fdd\u6bcf\u4e2a\u5bb9\u5668\u53ea\u80fd\u770b\u5230\u81ea\u5df1\u7684\u6587\u4ef6\u7cfb\u7edf\u3001\u8fdb\u7a0b\u3001\u7f51\u7edc\u548c\u7528\u6237\u7a7a\u95f4\u3002</li> <li>\u63a7\u5236\u7ec4\uff08Cgroups\uff09\uff1a\u63a7\u5236\u7ec4\u5141\u8bb8Docker\u9650\u5236\u5bb9\u5668\u7684\u8d44\u6e90\u4f7f\u7528\uff0c\u5982CPU\u3001\u5185\u5b58\u3001\u78c1\u76d8I/O\u7b49\u3002</li> </ul> <p>2.2.3 \u5bb9\u5668\u7684\u751f\u547d\u5468\u671f</p> <p>Docker \u5bb9\u5668\u7684\u751f\u547d\u5468\u671f\u7ba1\u7406\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u547d\u4ee4\u6765\u5b9e\u73b0\uff1a</p> <ul> <li>\u521b\u5efa\u5bb9\u5668\uff1a\u4f7f\u7528docker create\u6216docker run\u547d\u4ee4\u4ece\u955c\u50cf\u521b\u5efa\u4e00\u4e2a\u5bb9\u5668\u3002</li> <li>\u542f\u52a8\u5bb9\u5668\uff1a\u4f7f\u7528docker start\u547d\u4ee4\u542f\u52a8\u4e00\u4e2a\u5df2\u521b\u5efa\u7684\u5bb9\u5668\u3002</li> <li>\u505c\u6b62\u5bb9\u5668\uff1a\u4f7f\u7528docker stop\u547d\u4ee4\u505c\u6b62\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\u3002</li> <li>\u5220\u9664\u5bb9\u5668\uff1a\u4f7f\u7528docker rm\u547d\u4ee4\u5220\u9664\u4e00\u4e2a\u5df2\u505c\u6b62\u7684\u5bb9\u5668\u3002</li> <li>\u67e5\u770b\u5bb9\u5668\uff1a\u4f7f\u7528docker ps\u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\uff0c\u4f7f\u7528docker ps -a\u67e5\u770b\u6240\u6709\u5bb9\u5668\u3002</li> </ul>"},{"location":"cloud/docker/docker/#3-dockerfile","title":"3. Dockerfile","text":""},{"location":"cloud/docker/docker/#31-dockerfile","title":"3.1 Dockerfile\u7b80\u4ecb","text":"<p>Dockerfile \u662f\u4e00\u4e2a\u5305\u542b\u4e86\u6307\u4ee4\u7684\u6587\u672c\u6587\u4ef6\uff0c\u6bcf\u4e2a\u6307\u4ee4\u544a\u8bc9 Docker \u5982\u4f55\u6784\u5efa\u4e00\u4e2a\u955c\u50cf\u3002Docker \u4f1a\u6309\u987a\u5e8f\u8bfb\u53d6 Dockerfile \u4e2d\u7684\u6307\u4ee4\u5e76\u6267\u884c\u5b83\u4eec\uff0c\u6700\u7ec8\u751f\u6210\u4e00\u4e2a\u53ef\u8fd0\u884c\u7684\u955c\u50cf\u3002</p>"},{"location":"cloud/docker/docker/#32-web","title":"3.2 \u57fa\u7840\u6848\u4f8b\uff1a\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684Web\u670d\u52a1\u5668","text":"<p>3.2.1\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 HTML \u9875\u9762</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684HTML\u6587\u4ef6\uff0c\u7528\u4e8e\u5c55\u793a\u5728Web\u670d\u52a1\u5668\u4e0a\u3002</p> <pre><code>&lt;!-- index.html --&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Hello Docker&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Hello from Docker!&lt;/h1&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>3.2.2\u7f16\u5199 Dockerfile</p> <p>\u5728\u540c\u4e00\u4e2a\u76ee\u5f55\u4e2d\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Dockerfile \u7684\u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a</p> <pre><code># \u4f7f\u7528\u5b98\u65b9\u7684 Nginx \u4f5c\u4e3a\u57fa\u7840\u955c\u50cf\nFROM nginx:alpine\n\n# \u7ef4\u62a4\u8005\u4fe1\u606f\nLABEL maintainer=\"youremail@example.com\"\n\n# \u590d\u5236\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 index.html \u6587\u4ef6\u5230 Nginx \u7684\u9ed8\u8ba4\u9875\u9762\u76ee\u5f55\nCOPY index.html /usr/share/nginx/html/\n\n# \u66b4\u9732\u7aef\u53e3 80\nEXPOSE 80\n\n# \u542f\u52a8 Nginx \u670d\u52a1\u5668\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n</code></pre> <p>3.2.3 \u6784\u5efa\u955c\u50cf</p> <p>\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6784\u5efa\u955c\u50cf\uff1a</p> <pre><code>docker build -t my-nginx .\n</code></pre> <pre><code>\u2022   -t my-nginx\uff1a\u4e3a\u955c\u50cf\u6307\u5b9a\u4e00\u4e2a\u6807\u7b7e\u540d\u79f0\u3002\n\u2022   .\uff1a\u8868\u793a\u5f53\u524d\u76ee\u5f55\u4e3a\u6784\u5efa\u4e0a\u4e0b\u6587\u3002\n</code></pre> <p>3.2.4 \u8fd0\u884c\u5bb9\u5668</p> <p>\u8fd0\u884c\u6784\u5efa\u597d\u7684\u955c\u50cf\uff1a</p> <pre><code>docker run -d -p 8080:80 my-nginx\n</code></pre> <pre><code>\u2022   -d\uff1a\u8ba9\u5bb9\u5668\u5728\u540e\u53f0\u8fd0\u884c\u3002\n\u2022   -p 8080:80\uff1a\u5c06\u5bbf\u4e3b\u673a\u76848080\u7aef\u53e3\u6620\u5c04\u5230\u5bb9\u5668\u768480\u7aef\u53e3\u3002\n</code></pre> <p>\u6253\u5f00\u6d4f\u89c8\u5668\u8bbf\u95ee http://localhost:8080\uff0c\u4f60\u5c06\u770b\u5230\u201cHello from Docker!\u201d\u7684\u9875\u9762\u3002</p>"},{"location":"cloud/docker/docker/#33-python","title":"3.3 \u8fdb\u9636\u6848\u4f8b\uff1a\u6784\u5efa\u4e00\u4e2aPython\u5e94\u7528\u7a0b\u5e8f","text":"<p>3.3.1 \u51c6\u5907Python\u811a\u672c</p> <p>\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 Python \u5e94\u7528\u7a0b\u5e8f\uff1a</p> <pre><code># app.py\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route('/')\ndef hello():\n    return \"Hello, Docker!\"\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000)\n</code></pre> <p>3.3.2 \u521b\u5efaDockerfile</p> <p>\u5728\u540c\u4e00\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a Dockerfile \u6587\u4ef6\uff1a</p> <pre><code># \u4f7f\u7528\u5b98\u65b9\u7684 Python \u4f5c\u4e3a\u57fa\u7840\u955c\u50cf\nFROM python:3.9-slim\n\n# \u8bbe\u5b9a\u5de5\u4f5c\u76ee\u5f55\nWORKDIR /app\n\n# \u5c06\u5f53\u524d\u76ee\u5f55\u5185\u5bb9\u590d\u5236\u5230\u5bb9\u5668\u7684\u5de5\u4f5c\u76ee\u5f55\u4e2d\nCOPY . /app\n\n# \u5b89\u88c5 Python \u4f9d\u8d56\nRUN pip install flask\n\n# \u66b4\u9732\u7aef\u53e3 5000\nEXPOSE 5000\n\n# \u542f\u52a8\u5e94\u7528\nCMD [\"python\", \"app.py\"]\n</code></pre> <p>3.3.3 \u6784\u5efa\u955c\u50cf</p> <pre><code>docker build -t my-python-app .\n</code></pre> <p>3.3.4 \u8fd0\u884c\u5bb9\u5668</p> <p>\u8fd0\u884c\u6784\u5efa\u597d\u7684\u955c\u50cf\uff1a</p> <pre><code>docker run -d -p 5000:5000 my-python-app\n</code></pre> <p>\u8bbf\u95ee http://localhost:5000\uff0c\u4f60\u5c06\u770b\u5230\u201cHello, Docker!\u201d\u3002</p>"},{"location":"cloud/docker/docker/#34-dockerfile","title":"3.4 Dockerfile \u6307\u4ee4\u7684\u6df1\u5165\u7406\u89e3","text":""},{"location":"cloud/docker/docker/#341","title":"3.4.1 \u591a\u9636\u6bb5\u6784\u5efa","text":"<p>\u591a\u9636\u6bb5\u6784\u5efa\u7528\u4e8e\u51cf\u5c11\u955c\u50cf\u7684\u5927\u5c0f\u3002\u4e00\u4e2a\u5178\u578b\u7684\u573a\u666f\u662f\u6784\u5efa\u4e8c\u8fdb\u5236\u6587\u4ef6\u540e\u4ec5\u5c06\u5176\u590d\u5236\u5230\u6700\u7ec8\u955c\u50cf\u4e2d\u3002</p> <pre><code># \u7b2c\u4e00\u9636\u6bb5\uff1a\u6784\u5efa\u5e94\u7528\nFROM golang:alpine AS builder\nWORKDIR /app\nCOPY . .\nRUN go build -o myapp\n\n# \u7b2c\u4e8c\u9636\u6bb5\uff1a\u521b\u5efa\u8fd0\u884c\u73af\u5883\nFROM alpine\nWORKDIR /app\nCOPY --from=builder /app/myapp .\nCMD [\"./myapp\"]\n</code></pre>"},{"location":"cloud/docker/docker/#342-arg-env","title":"3.4.2 \u4f7f\u7528 ARG \u548c ENV","text":""},{"location":"cloud/docker/docker/#arg","title":"ARG\u6307\u4ee4","text":"<p>1. \u5b9a\u4e49</p> <p>ARG \u7528\u4e8e\u5b9a\u4e49\u6784\u5efa\u65f6\u7684\u53d8\u91cf\u3002\u8fd9\u4e9b\u53d8\u91cf\u5728\u955c\u50cf\u6784\u5efa\u8fc7\u7a0b\u4e2d\u4f7f\u7528\uff0c\u53ef\u4ee5\u5728 RUN\u3001CMD\u3001ENTRYPOINT \u7b49\u6307\u4ee4\u4e2d\u4f7f\u7528\u3002</p> <p>2. \u4f5c\u7528\u8303\u56f4</p> <p>ARG \u53d8\u91cf\u7684\u4f5c\u7528\u8303\u56f4\u4ec5\u9650\u4e8e Dockerfile \u6784\u5efa\u8fc7\u7a0b\uff0c\u5373\u5728\u4f7f\u7528 docker build \u547d\u4ee4\u6784\u5efa\u955c\u50cf\u65f6\u6709\u6548\u3002\u6784\u5efa\u5b8c\u6210\u540e\uff0c\u8fd9\u4e9b\u53d8\u91cf\u4e0d\u4f1a\u4fdd\u7559\u5728\u6700\u7ec8\u7684\u955c\u50cf\u6216\u5bb9\u5668\u4e2d\u3002</p> <p>3. \u4f7f\u7528\u793a\u4f8b</p> <pre><code># \u5b9a\u4e49\u4e00\u4e2a\u6784\u5efa\u65f6\u53d8\u91cf\uff0c\u9ed8\u8ba4\u503c\u4e3a 1.0\nARG VERSION=1.0\n\n# \u4f7f\u7528\u8be5\u53d8\u91cf\nRUN echo \"Building version ${VERSION}\"\n\n# \u5982\u679c\u9700\u8981\u5c06 ARG \u7684\u503c\u4fdd\u5b58\u5230 ENV \u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 ENV \u6307\u4ee4\nENV APP_VERSION=${VERSION}\n</code></pre> <p>4. \u4f20\u9012\u6784\u5efa\u65f6\u53c2\u6570</p> <p>\u5728\u4f7f\u7528 docker build \u547d\u4ee4\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7 --build-arg \u9009\u9879\u4f20\u9012\u6784\u5efa\u65f6\u53c2\u6570\u3002</p> <pre><code>docker build --build-arg VERSION=2.0 -t myapp:2.0 .\n</code></pre> <p>\u4e0a\u9762\u7684\u547d\u4ee4\u4f1a\u5c06 VERSION \u8bbe\u7f6e\u4e3a 2.0\uff0c\u8986\u76d6 Dockerfile \u4e2d\u7684\u9ed8\u8ba4\u503c 1.0\u3002</p> <p>5. \u4f5c\u7528\u8303\u56f4\u7684\u9650\u5236</p> <p>ARG \u5b9a\u4e49\u7684\u53d8\u91cf\u5728 FROM \u6307\u4ee4\u4e4b\u524d\u662f\u4e0d\u53ef\u7528\u7684\u3002\u56e0\u6b64\uff0c\u65e0\u6cd5\u5728 FROM \u6307\u4ee4\u4e2d\u4f7f\u7528 ARG \u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u9664\u975e\u5b83\u4eec\u88ab\u5b9a\u4e49\u5728 FROM \u4e4b\u540e\u6216\u591a\u9636\u6bb5\u6784\u5efa\u7684\u8fc7\u7a0b\u4e2d\u3002</p>"},{"location":"cloud/docker/docker/#env","title":"ENV\u6307\u4ee4","text":"<p>1. \u5b9a\u4e49</p> <p>ENV \u7528\u4e8e\u5b9a\u4e49\u73af\u5883\u53d8\u91cf\uff0c\u8fd9\u4e9b\u53d8\u91cf\u4f1a\u5728\u955c\u50cf\u6784\u5efa\u8fc7\u7a0b\u4e2d\u548c\u5bb9\u5668\u8fd0\u884c\u65f6\u90fd\u53ef\u7528\u3002\u5b83\u4eec\u7684\u503c\u4f1a\u4fdd\u7559\u5728\u955c\u50cf\u548c\u5bb9\u5668\u4e2d\uff0c\u53ef\u4ee5\u88ab\u7a0b\u5e8f\u6216\u811a\u672c\u8bbf\u95ee\u3002</p> <p>2. \u4f5c\u7528\u8303\u56f4</p> <p>ENV \u53d8\u91cf\u5728\u6574\u4e2a\u955c\u50cf\u751f\u547d\u5468\u671f\u4e2d\u90fd\u662f\u6709\u6548\u7684\uff0c\u5305\u62ec\u955c\u50cf\u6784\u5efa\u8fc7\u7a0b\u548c\u5bb9\u5668\u8fd0\u884c\u65f6\u3002\u56e0\u6b64\uff0c\u8fd9\u4e9b\u53d8\u91cf\u53ef\u4ee5\u5728 Dockerfile \u7684\u4efb\u4f55\u5730\u65b9\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u5728\u5bb9\u5668\u5185\u88ab\u5e94\u7528\u7a0b\u5e8f\u8bbf\u95ee\u3002</p> <p>3. \u4f7f\u7528\u793a\u4f8b</p> <pre><code># \u5b9a\u4e49\u73af\u5883\u53d8\u91cf\nENV APP_ENV=production\nENV APP_PORT=8080\n\n# \u4f7f\u7528\u73af\u5883\u53d8\u91cf\nRUN echo \"Running in ${APP_ENV} mode on port ${APP_PORT}\"\n\n# \u5bb9\u5668\u542f\u52a8\u65f6\u8bbf\u95ee\u73af\u5883\u53d8\u91cf\nCMD [\"sh\", \"-c\", \"echo The app is running in $APP_ENV mode on port $APP_PORT\"]\n</code></pre> <p>4. \u8986\u76d6\u73af\u5883\u53d8\u91cf</p> <p>\u5728\u542f\u52a8\u5bb9\u5668\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 docker run \u547d\u4ee4\u7684 -e \u9009\u9879\u8986\u76d6 ENV \u6307\u4ee4\u8bbe\u7f6e\u7684\u73af\u5883\u53d8\u91cf\uff1a</p> <pre><code>docker run -e APP_ENV=development myapp\n</code></pre> <p>\u8fd9\u6837\uff0cAPP_ENV \u7684\u503c\u5728\u5bb9\u5668\u5185\u5c06\u4f1a\u662f development \u800c\u975e production\u3002</p> <p>\u603b\u7ed3</p> <ul> <li>ARG\uff1a\u7528\u4e8e\u5728\u6784\u5efa\u65f6\u5b9a\u4e49\u53d8\u91cf\uff0c\u8303\u56f4\u4ec5\u9650\u4e8e\u6784\u5efa\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 --build-arg \u4f20\u9012\u4e0d\u540c\u7684\u503c\u3002\u8fd9\u4e9b\u53d8\u91cf\u5728\u955c\u50cf\u6784\u5efa\u5b8c\u6210\u540e\u4e0d\u518d\u4fdd\u7559\u3002</li> <li>ENV\uff1a\u7528\u4e8e\u5b9a\u4e49\u73af\u5883\u53d8\u91cf\uff0c\u8303\u56f4\u8986\u76d6\u6574\u4e2a\u955c\u50cf\u548c\u5bb9\u5668\u751f\u547d\u5468\u671f\u3002\u8fd9\u4e9b\u53d8\u91cf\u53ef\u4ee5\u5728\u6784\u5efa\u8fc7\u7a0b\u4e2d\u548c\u5bb9\u5668\u8fd0\u884c\u65f6\u4f7f\u7528\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7 docker run -e \u6765\u8986\u76d6\u3002</li> </ul>"},{"location":"cloud/docker/docker/#343-dockerfile","title":"3.4.3 Dockerfile\u6307\u4ee4\u8be6\u89e3","text":"<p>\u4ee5\u4e0b\u662f Dockerfile \u4e2d\u5e38\u7528\u6307\u4ee4\u7684\u8be6\u89e3\u8868\u683c\uff0c\u5305\u62ec\u6bcf\u4e2a\u6307\u4ee4\u7684\u7528\u9014\u3001\u793a\u4f8b\u548c\u8bf4\u660e\uff1a</p> \u6307\u4ee4 \u7528\u9014 \u793a\u4f8b \u8bf4\u660e <code>FROM</code> \u6307\u5b9a\u6784\u5efa\u955c\u50cf\u6240\u57fa\u4e8e\u7684\u57fa\u7840\u955c\u50cf <code>FROM ubuntu:20.04</code> \u6bcf\u4e2a Dockerfile \u5fc5\u987b\u4ee5 <code>FROM</code> \u6307\u4ee4\u5f00\u59cb\u3002\u53ef\u4ee5\u591a\u6b21\u4f7f\u7528\u4ee5\u5b9e\u73b0\u591a\u9636\u6bb5\u6784\u5efa\u3002 <code>LABEL</code> \u6dfb\u52a0\u5143\u6570\u636e\u5230\u955c\u50cf\u4e2d <code>LABEL maintainer=\"youremail@example.com\"</code> \u53ef\u4ee5\u7528\u6765\u6dfb\u52a0\u4f5c\u8005\u4fe1\u606f\u3001\u7248\u672c\u4fe1\u606f\u7b49\u5143\u6570\u636e\u3002 <code>RUN</code> \u5728\u955c\u50cf\u6784\u5efa\u65f6\u6267\u884c\u547d\u4ee4 <code>RUN apt-get update &amp;&amp; apt-get install -y curl</code> \u7528\u4e8e\u5b89\u88c5\u5305\u3001\u6267\u884c\u811a\u672c\u7b49\u3002\u6bcf\u4e2a <code>RUN</code> \u6307\u4ee4\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u955c\u50cf\u5c42\u3002 <code>CMD</code> \u6307\u5b9a\u5bb9\u5668\u542f\u52a8\u65f6\u8981\u6267\u884c\u7684\u9ed8\u8ba4\u547d\u4ee4 <code>CMD [\"nginx\", \"-g\", \"daemon off;\"]</code> \u6307\u5b9a\u5bb9\u5668\u542f\u52a8\u65f6\u6267\u884c\u7684\u547d\u4ee4\uff0c\u4f46\u53ef\u4ee5\u88ab <code>docker run</code> \u547d\u4ee4\u884c\u53c2\u6570\u8986\u76d6\u3002 <code>ENTRYPOINT</code> \u914d\u7f6e\u5bb9\u5668\u542f\u52a8\u65f6\u8fd0\u884c\u7684\u53ef\u6267\u884c\u6587\u4ef6 <code>ENTRYPOINT [\"python\", \"app.py\"]</code> \u8bbe\u7f6e\u4e00\u4e2a\u56fa\u5b9a\u7684\u547d\u4ee4\uff0c<code>CMD</code> \u4ec5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9 <code>ENTRYPOINT</code>\u3002 <code>WORKDIR</code> \u8bbe\u7f6e\u5de5\u4f5c\u76ee\u5f55 <code>WORKDIR /app</code> \u5728\u5bb9\u5668\u5185\u8bbe\u7f6e\u5de5\u4f5c\u76ee\u5f55\uff0c\u4e4b\u540e\u7684\u6240\u6709\u547d\u4ee4\u90fd\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u6267\u884c\u3002 <code>COPY</code> \u5c06\u6587\u4ef6/\u76ee\u5f55\u4ece\u6784\u5efa\u4e0a\u4e0b\u6587\u590d\u5236\u5230\u955c\u50cf\u4e2d <code>COPY . /app</code> \u5c06\u6587\u4ef6\u6216\u76ee\u5f55\u4ece\u6784\u5efa\u4e0a\u4e0b\u6587\u590d\u5236\u5230\u5bb9\u5668\u6587\u4ef6\u7cfb\u7edf\u4e2d\u3002 <code>ADD</code> \u590d\u5236\u6587\u4ef6/\u76ee\u5f55\u5230\u955c\u50cf\u4e2d\uff0c\u652f\u6301 URL \u548c\u89e3\u538b\u5f52\u6863\u6587\u4ef6 <code>ADD https://example.com/file.tar.gz /app/</code> \u7c7b\u4f3c <code>COPY</code>\uff0c\u4f46\u529f\u80fd\u66f4\u5f3a\u5927\uff0c\u53ef\u4ee5\u81ea\u52a8\u89e3\u538b tar \u6587\u4ef6\u6216\u4e0b\u8f7d URL \u4e2d\u7684\u6587\u4ef6\u3002 <code>ENV</code> \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf <code>ENV APP_ENV=production</code> \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u53ef\u4ee5\u5728 <code>RUN</code>\u3001<code>CMD</code>\u3001<code>ENTRYPOINT</code> \u7b49\u6307\u4ee4\u4e2d\u4f7f\u7528\u3002 <code>ARG</code> \u5b9a\u4e49\u6784\u5efa\u65f6\u53c2\u6570 <code>ARG VERSION=1.0</code> \u5b9a\u4e49\u5728\u6784\u5efa\u65f6\u4f7f\u7528\u7684\u53c2\u6570\uff0c\u53ef\u901a\u8fc7 <code>docker build --build-arg</code> \u4f20\u9012\u3002 <code>VOLUME</code> \u5b9a\u4e49\u533f\u540d\u6302\u8f7d\u70b9 <code>VOLUME [\"/data\"]</code> \u4e3a\u6301\u4e45\u5316\u6570\u636e\u5b9a\u4e49\u4e00\u4e2a\u6302\u8f7d\u70b9\uff0c\u8be5\u76ee\u5f55\u5728\u5bb9\u5668\u8fd0\u884c\u65f6\u4e0d\u4f1a\u6301\u4e45\u5316\u5230\u5bb9\u5668\u4e2d\u3002 <code>EXPOSE</code> \u58f0\u660e\u955c\u50cf\u8981\u76d1\u542c\u7684\u7aef\u53e3 <code>EXPOSE 80</code> \u58f0\u660e\u5bb9\u5668\u4f7f\u7528\u7684\u7aef\u53e3\uff0c\u4f46\u4e0d\u81ea\u52a8\u53d1\u5e03\u7aef\u53e3\u5230\u5bbf\u4e3b\u673a\u3002\u7528\u4e8e\u6587\u6863\u6216\u5bb9\u5668\u4e92\u8054\u3002 <code>USER</code> \u8bbe\u7f6e\u5bb9\u5668\u5185\u8fd0\u884c\u65f6\u7684\u7528\u6237 <code>USER nonrootuser</code> \u5207\u6362\u5230\u6307\u5b9a\u7528\u6237\u8fd0\u884c\u540e\u7eed\u547d\u4ee4\uff0c\u589e\u5f3a\u5bb9\u5668\u7684\u5b89\u5168\u6027\u3002 <code>HEALTHCHECK</code> \u68c0\u67e5\u5bb9\u5668\u7684\u8fd0\u884c\u72b6\u51b5 <code>HEALTHCHECK CMD curl --fail http://localhost:80 || exit 1</code> \u5b9a\u4e49\u5bb9\u5668\u5065\u5eb7\u68c0\u67e5\u547d\u4ee4\u548c\u9891\u7387\u3002\u5982\u679c\u5065\u5eb7\u68c0\u67e5\u5931\u8d25\uff0c\u5bb9\u5668\u72b6\u6001\u4f1a\u53d8\u4e3a<code>unhealthy</code>\u3002 <code>SHELL</code> \u6307\u5b9a\u8fd0\u884c\u811a\u672c\u65f6\u4f7f\u7528\u7684 shell <code>SHELL [\"/bin/bash\", \"-c\"]</code> \u6539\u53d8\u6267\u884c\u811a\u672c\u65f6\u7684\u9ed8\u8ba4 shell\uff0c\u9ed8\u8ba4\u662f <code>[\"/bin/sh\", \"-c\"]</code>\u3002 <code>STOPSIGNAL</code> \u8bbe\u7f6e\u505c\u6b62\u5bb9\u5668\u65f6\u53d1\u9001\u7684\u7cfb\u7edf\u8c03\u7528\u4fe1\u53f7 <code>STOPSIGNAL SIGKILL</code> \u5b9a\u4e49\u5728\u505c\u6b62\u5bb9\u5668\u65f6\u53d1\u9001\u7684\u4fe1\u53f7\uff0c\u9ed8\u8ba4\u662f <code>SIGTERM</code>\u3002 <code>ONBUILD</code> \u5b9a\u4e49\u5728\u672a\u6765\u955c\u50cf\u6784\u5efa\u65f6\u81ea\u52a8\u6267\u884c\u7684\u547d\u4ee4 <code>ONBUILD RUN echo \"This will run on children images\"</code> \u7528\u4e8e\u5b9a\u4e49\u7236\u955c\u50cf\u4e2d\u8981\u5728\u5b50\u955c\u50cf\u6784\u5efa\u65f6\u81ea\u52a8\u6267\u884c\u7684\u6307\u4ee4\u3002 <code>COPY --from</code> \u4ece\u4e00\u4e2a\u6784\u5efa\u9636\u6bb5\u590d\u5236\u6587\u4ef6\u5230\u53e6\u4e00\u4e2a\u9636\u6bb5 <code>COPY --from=builder /app/build /app/</code> \u5728\u591a\u9636\u6bb5\u6784\u5efa\u4e2d\uff0c\u4ece\u4e00\u4e2a\u6784\u5efa\u9636\u6bb5\u590d\u5236\u6587\u4ef6\u5230\u53e6\u4e00\u4e2a\u9636\u6bb5\u3002 <p>\u8bf4\u660e\uff1a</p> <ul> <li><code>FROM</code>\uff1a\u6bcf\u4e2a\u9636\u6bb5\u90fd\u5fc5\u987b\u4ee5 <code>FROM</code> \u5f00\u5934\uff0c\u53ef\u4ee5\u591a\u6b21\u4f7f\u7528\u4ee5\u5b9e\u73b0\u591a\u9636\u6bb5\u6784\u5efa\u3002</li> <li><code>RUN</code> \u548c <code>CMD</code>\uff1a\u533a\u522b\u5728\u4e8e <code>RUN</code> \u7528\u4e8e\u6784\u5efa\u65f6\u6267\u884c\u547d\u4ee4\uff0c\u800c <code>CMD</code> \u7528\u4e8e\u5bb9\u5668\u542f\u52a8\u65f6\u7684\u9ed8\u8ba4\u547d\u4ee4\u3002</li> <li><code>ENTRYPOINT</code> \u548c <code>CMD</code>\uff1a<code>ENTRYPOINT</code> \u66f4\u503e\u5411\u4e8e\u56fa\u5b9a\u6267\u884c\u7684\u547d\u4ee4\uff0c<code>CMD</code> \u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9 <code>ENTRYPOINT</code>\u3002</li> <li><code>COPY</code> \u548c <code>ADD</code>\uff1a<code>ADD</code> \u529f\u80fd\u66f4\u5f3a\u5927\uff0c\u4f46\u66f4\u63a8\u8350\u4f7f\u7528 <code>COPY</code>\uff0c\u9664\u975e\u9700\u8981\u89e3\u538b\u7f29\u6587\u4ef6\u6216\u4ece\u8fdc\u7a0bURL\u83b7\u53d6\u6587\u4ef6\u3002</li> </ul> <p>\u901a\u8fc7\u719f\u7ec3\u4f7f\u7528\u8fd9\u4e9b\u6307\u4ee4\uff0c\u4f60\u53ef\u4ee5\u7f16\u5199\u51fa\u66f4\u52a0\u9ad8\u6548\u3001\u7075\u6d3b\u7684Dockerfile\uff0c\u4ee5\u6ee1\u8db3\u5404\u79cd\u6784\u5efa\u548c\u90e8\u7f72\u9700\u6c42\u3002</p>"},{"location":"cloud/docker/docker/#4","title":"4. \u7f51\u7edc\u6a21\u5f0f","text":""},{"location":"cloud/docker/docker/#1_1","title":"1. \u7f51\u7edc\u6a21\u5f0f\u6982\u8ff0","text":"<p>Docker \u652f\u6301\u4ee5\u4e0b\u51e0\u79cd\u7f51\u7edc\u6a21\u5f0f\uff1a</p> <pre><code>1.  bridge \u7f51\u7edc\u6a21\u5f0f\n2.  host \u7f51\u7edc\u6a21\u5f0f\n3.  none \u7f51\u7edc\u6a21\u5f0f\n4.  container \u7f51\u7edc\u6a21\u5f0f\n5.  \u81ea\u5b9a\u4e49\u7f51\u7edc\u6a21\u5f0f\uff08overlay\u3001macvlan\uff09\n</code></pre>"},{"location":"cloud/docker/docker/#2","title":"2. \u7f51\u7edc\u6a21\u5f0f\u8be6\u89e3","text":"<p>1. bridge \u7f51\u7edc\u6a21\u5f0f</p> <p>\u63cf\u8ff0\uff1a</p> <ul> <li> <p>bridge \u6a21\u5f0f\u662f Docker \u9ed8\u8ba4\u7684\u7f51\u7edc\u6a21\u5f0f\u3002\u5f53\u521b\u5efa\u4e00\u4e2a\u65b0\u5bb9\u5668\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u7f51\u7edc\u6a21\u5f0f\uff0c\u5bb9\u5668\u4f1a\u8fde\u63a5\u5230 Docker \u521b\u5efa\u7684\u9ed8\u8ba4 bridge \u7f51\u7edc\u4e2d\u3002</p> </li> <li> <p>\u6bcf\u4e2a\u5bb9\u5668\u4f1a\u88ab\u5206\u914d\u4e00\u4e2a\u72ec\u7acb\u7684 IP \u5730\u5740\uff0c\u4e0e\u5176\u4ed6\u5bb9\u5668\u548c\u4e3b\u673a\u901a\u8fc7\u6865\u63a5\u7f51\u7edc\u901a\u4fe1\u3002</p> </li> </ul> <p>\u4f7f\u7528\u573a\u666f\uff1a</p> <ul> <li>\u9002\u5408\u5728\u5355\u673a\u4e0a\u8fd0\u884c\u591a\u4e2a\u5bb9\u5668\uff0c\u5bb9\u5668\u4e4b\u95f4\u53ef\u4ee5\u901a\u8fc7 IP \u5730\u5740\u8fdb\u884c\u901a\u4fe1\uff0c\u540c\u65f6\u53ef\u4ee5\u901a\u8fc7\u7aef\u53e3\u6620\u5c04\u5c06\u5bb9\u5668\u66b4\u9732\u7ed9\u5916\u90e8\u7f51\u7edc\u3002</li> </ul> <pre><code>docker run -d --name my-container --network bridge nginx\n</code></pre> <p>\u7279\u70b9\uff1a</p> <ul> <li>\u5bb9\u5668\u4e4b\u95f4\u53ef\u4ee5\u901a\u8fc7 IP \u5730\u5740\u901a\u4fe1\u3002</li> <li>\u53ef\u4ee5\u4f7f\u7528\u7aef\u53e3\u6620\u5c04\uff08-p \u53c2\u6570\uff09\u5c06\u5bb9\u5668\u7aef\u53e3\u66b4\u9732\u7ed9\u4e3b\u673a\u3002</li> </ul> <p>2. host \u7f51\u7edc\u6a21\u5f0f</p> <p>\u63cf\u8ff0\uff1a</p> <ul> <li>\u5728 host \u6a21\u5f0f\u4e0b\uff0c\u5bb9\u5668\u4e0e\u5bbf\u4e3b\u673a\u5171\u4eab\u7f51\u7edc\u6808\uff0c\u5bb9\u5668\u4e0d\u4f1a\u83b7\u5f97\u72ec\u7acb\u7684 IP \u5730\u5740\uff0c\u800c\u662f\u4f7f\u7528\u5bbf\u4e3b\u673a\u7684 IP \u5730\u5740\u3002</li> <li>\u5bb9\u5668\u5185\u7684\u5e94\u7528\u7a0b\u5e8f\u76f4\u63a5\u66b4\u9732\u5728\u5bbf\u4e3b\u673a\u7684\u7f51\u7edc\u63a5\u53e3\u4e0a\u3002</li> </ul> <p>\u4f7f\u7528\u573a\u666f</p> <p>\u9002\u7528\u4e8e\u5bf9\u7f51\u7edc\u6027\u80fd\u8981\u6c42\u9ad8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u6216\u9700\u8981\u8bbf\u95ee\u5bbf\u4e3b\u673a\u4e0a\u7f51\u7edc\u63a5\u53e3\u7684\u5e94\u7528\u3002</p> <pre><code>docker run -d --name my-container --network host nginx\n</code></pre> <p>\u7279\u70b9</p> <ul> <li>\u63d0\u4f9b\u66f4\u597d\u7684\u7f51\u7edc\u6027\u80fd\uff0c\u56e0\u4e3a\u6ca1\u6709\u7f51\u7edc\u5730\u5740\u8f6c\u6362\uff08NAT\uff09\u3002</li> <li>\u5bb9\u5668\u76f4\u63a5\u4f7f\u7528\u5bbf\u4e3b\u673a\u7684 IP \u5730\u5740\uff0c\u6240\u6709\u66b4\u9732\u7684\u7aef\u53e3\u5bf9\u5bbf\u4e3b\u673a\u5f00\u653e\u3002</li> </ul> <p>3. none \u7f51\u7edc\u6a21\u5f0f</p> <p>\u63cf\u8ff0\uff1a</p> <ul> <li>\u5728 none \u6a21\u5f0f\u4e0b\uff0c\u5bb9\u5668\u6ca1\u6709\u7f51\u7edc\u63a5\u53e3\uff0c\u5b8c\u5168\u9694\u79bb\u4e8e\u7f51\u7edc\u4e4b\u5916\u3002\u5bb9\u5668\u53ea\u6709\u4e00\u4e2a lo\uff08\u56de\u73af\uff09\u63a5\u53e3\u3002</li> <li>\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u5bb9\u5668\u65e0\u6cd5\u4e0e\u5176\u4ed6\u5bb9\u5668\u6216\u5916\u90e8\u7f51\u7edc\u901a\u4fe1\u3002</li> </ul> <p>\u4f7f\u7528\u573a\u666f</p> <p>\u9002\u5408\u5b8c\u5168\u9694\u79bb\u7684\u4efb\u52a1\uff0c\u6216\u8005\u9700\u8981\u81ea\u5b9a\u4e49\u7f51\u7edc\u6808\u7684\u573a\u666f\u3002</p> <pre><code>docker run -d --name my-container --network none nginx\n</code></pre> <p>\u7279\u70b9\uff1a</p> <ul> <li>\u5bb9\u5668\u5b8c\u5168\u6ca1\u6709\u5916\u90e8\u7f51\u7edc\u8fde\u63a5\u3002</li> <li>\u9700\u8981\u901a\u8fc7\u81ea\u5b9a\u4e49\u7684\u7f51\u7edc\u914d\u7f6e\u6765\u5b9e\u73b0\u901a\u4fe1\uff08\u5982\u4f7f\u7528 ip link \u7b49\u547d\u4ee4\uff09\u3002</li> </ul> <p>4. container \u7f51\u7edc\u6a21\u5f0f</p> <p>\u63cf\u8ff0</p> <p>container \u6a21\u5f0f\u5141\u8bb8\u4e00\u4e2a\u5bb9\u5668\u5171\u4eab\u53e6\u4e00\u4e2a\u5bb9\u5668\u7684\u7f51\u7edc\u6808\u3002\u8fd9\u610f\u5473\u7740\u4e24\u4e2a\u5bb9\u5668\u5c06\u5171\u4eab\u540c\u4e00\u4e2a IP \u5730\u5740\u548c\u7aef\u53e3\u7a7a\u95f4\u3002</p> <p>\u4f7f\u7528\u573a\u666f</p> <p>\u9002\u7528\u4e8e\u9700\u8981\u591a\u4e2a\u5bb9\u5668\u5171\u4eab\u540c\u4e00\u4e2a\u7f51\u7edc\u63a5\u53e3\u6216\u4f9d\u8d56\u76f8\u540c\u7f51\u7edc\u6808\u7684\u5e94\u7528\u3002</p> <pre><code>docker run -d --name container1 nginx\ndocker run -d --name container2 --network container:container1 busybox\n</code></pre> <p>\u7279\u70b9\uff1a</p> <ul> <li>\u5171\u4eab\u7f51\u7edc\u6808\u7684\u5bb9\u5668\u4f7f\u7528\u540c\u4e00\u4e2a IP \u5730\u5740\u3002</li> <li>\u5bb9\u5668\u95f4\u901a\u4fe1\u4f7f\u7528 localhost \u548c\u672c\u5730\u7aef\u53e3\u3002</li> </ul> <p>5. \u81ea\u5b9a\u4e49\u7f51\u7edc\u6a21\u5f0f</p> <p>overlay \u7f51\u7edc\u6a21\u5f0f</p> <pre><code>\u2022   \u63cf\u8ff0\uff1aoverlay \u7f51\u7edc\u6a21\u5f0f\u7528\u4e8e Docker Swarm \u96c6\u7fa4\u4e2d\u7684\u8de8\u4e3b\u673a\u901a\u4fe1\u3002\u5b83\u901a\u8fc7\u5728 Docker \u4e3b\u673a\u4e4b\u95f4\u521b\u5efa\u865a\u62df\u7f51\u7edc\u6765\u5b9e\u73b0\u5bb9\u5668\u7684\u8de8\u4e3b\u673a\u901a\u4fe1\u3002\n\n\u2022   \u4f7f\u7528\u573a\u666f\uff1a\u9002\u7528\u4e8e\u5206\u5e03\u5f0f\u5e94\u7528\u6216\u5fae\u670d\u52a1\u67b6\u6784\u4e2d\u7684\u5bb9\u5668\u901a\u4fe1\u3002\n</code></pre> <pre><code>docker network create --driver overlay my-overlay-network\ndocker run -d --name my-container --network my-overlay-network nginx\n</code></pre> <p>macvlan \u7f51\u7edc\u6a21\u5f0f</p> <p>\u63cf\u8ff0\uff1amacvlan \u7f51\u7edc\u6a21\u5f0f\u5141\u8bb8\u6bcf\u4e2a\u5bb9\u5668\u83b7\u5f97\u4e00\u4e2a\u552f\u4e00\u7684 MAC \u5730\u5740\uff0c\u4f7f\u5bb9\u5668\u770b\u8d77\u6765\u50cf\u5bbf\u4e3b\u673a\u7f51\u7edc\u4e0a\u7684\u7269\u7406\u8bbe\u5907\u3002\u5bb9\u5668\u53ef\u4ee5\u76f4\u63a5\u8fde\u63a5\u5230\u5bbf\u4e3b\u673a\u7684\u7269\u7406\u7f51\u7edc\u3002</p> <p>\u4f7f\u7528\u573a\u666f\uff1a\u9002\u7528\u4e8e\u9700\u8981\u5bb9\u5668\u76f4\u63a5\u53c2\u4e0e\u7269\u7406\u7f51\u7edc\u3001\u5177\u6709\u56fa\u5b9a IP \u5730\u5740\u7684\u573a\u666f\u3002</p> <pre><code>docker network create -d macvlan \\\n  --subnet=192.168.1.0/24 \\\n  --gateway=192.168.1.1 \\\n  -o parent=eth0 my-macvlan-network\ndocker run -d --name my-container --network my-macvlan-network nginx\n</code></pre> <p>\u603b\u7ed3</p> \u7f51\u7edc\u6a21\u5f0f \u63cf\u8ff0 \u4f7f\u7528\u573a\u666f <code>bridge</code> \u9ed8\u8ba4\u7f51\u7edc\u6a21\u5f0f\uff0c\u5bb9\u5668\u5728\u865a\u62df\u6865\u63a5\u7f51\u7edc\u4e2d\uff0c\u6709\u72ec\u7acb\u7684 IP \u5730\u5740\u3002 \u5355\u673a\u8fd0\u884c\u591a\u4e2a\u5bb9\u5668\uff0c\u5bb9\u5668\u95f4\u9700\u901a\u4fe1\u5e76\u4e0e\u5916\u90e8\u7f51\u7edc\u8fde\u63a5\u3002 <code>host</code> \u5bb9\u5668\u4e0e\u5bbf\u4e3b\u673a\u5171\u4eab\u7f51\u7edc\u6808\uff0c\u5bb9\u5668\u4f7f\u7528\u5bbf\u4e3b\u673a\u7684 IP \u5730\u5740\u3002 \u5bf9\u7f51\u7edc\u6027\u80fd\u8981\u6c42\u9ad8\uff0c\u6216\u9700\u8981\u76f4\u63a5\u4f7f\u7528\u5bbf\u4e3b\u673a\u7f51\u7edc\u7684\u5e94\u7528\u3002 <code>none</code> \u5bb9\u5668\u6ca1\u6709\u7f51\u7edc\u63a5\u53e3\uff0c\u5b8c\u5168\u9694\u79bb\u4e8e\u7f51\u7edc\u4e4b\u5916\u3002 \u9700\u8981\u5b8c\u5168\u9694\u79bb\u7684\u4efb\u52a1\u6216\u81ea\u5b9a\u4e49\u7f51\u7edc\u914d\u7f6e\u3002 <code>container</code> \u5bb9\u5668\u5171\u4eab\u53e6\u4e00\u4e2a\u5bb9\u5668\u7684\u7f51\u7edc\u6808\uff0c\u4f7f\u7528\u540c\u4e00\u4e2a IP \u5730\u5740\u3002 \u591a\u4e2a\u5bb9\u5668\u9700\u8981\u5171\u4eab\u540c\u4e00\u7f51\u7edc\u63a5\u53e3\u6216\u4f9d\u8d56\u76f8\u540c\u7f51\u7edc\u6808\u3002 <code>overlay</code> \u8de8\u4e3b\u673a\u7684\u865a\u62df\u7f51\u7edc\uff0c\u7528\u4e8e Docker Swarm \u96c6\u7fa4\u4e2d\u3002 \u5206\u5e03\u5f0f\u5e94\u7528\u6216\u5fae\u670d\u52a1\u67b6\u6784\u4e2d\u7684\u5bb9\u5668\u901a\u4fe1\u3002 <code>macvlan</code> \u6bcf\u4e2a\u5bb9\u5668\u83b7\u5f97\u4e00\u4e2a\u552f\u4e00\u7684 MAC \u5730\u5740\uff0c\u5bb9\u5668\u50cf\u7269\u7406\u8bbe\u5907\u4e00\u6837\u76f4\u63a5\u8fde\u63a5\u5230\u5bbf\u4e3b\u673a\u7684\u7269\u7406\u7f51\u7edc\u3002 \u9700\u8981\u5bb9\u5668\u53c2\u4e0e\u7269\u7406\u7f51\u7edc\u3001\u5177\u6709\u56fa\u5b9a IP \u5730\u5740\u7684\u573a\u666f\u3002 <p>\u7406\u89e3\u5e76\u7075\u6d3b\u8fd0\u7528\u8fd9\u4e9b\u7f51\u7edc\u6a21\u5f0f\uff0c\u53ef\u4ee5\u5e2e\u52a9\u4f60\u8bbe\u8ba1\u548c\u5b9e\u73b0\u66f4\u4e3a\u590d\u6742\u548c\u9ad8\u6548\u7684\u5bb9\u5668\u7f51\u7edc\u67b6\u6784\u3002</p>"},{"location":"cloud/docker/docker/#5","title":"5. \u6570\u636e\u6301\u4e45\u5316","text":"<p>Docker \u5bb9\u5668\u672c\u8d28\u4e0a\u662f\u77ed\u6682\u7684\u548c\u65e0\u72b6\u6001\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5f53\u5bb9\u5668\u88ab\u5220\u9664\u6216\u91cd\u542f\u65f6\uff0c\u5bb9\u5668\u5185\u7684\u6570\u636e\u4f1a\u4e22\u5931\u3002\u7136\u800c\uff0c\u5f88\u591a\u5e94\u7528\u9700\u8981\u6570\u636e\u6301\u4e45\u5316\uff0c\u4ee5\u4fbf\u5728\u5bb9\u5668\u91cd\u542f\u6216\u5220\u9664\u540e\u6570\u636e\u4ecd\u7136\u5b58\u5728\u3002Docker \u63d0\u4f9b\u4e86\u591a\u79cd\u65b9\u5f0f\u6765\u5b9e\u73b0\u6301\u4e45\u5316\u5b58\u50a8\uff0c\u4e3b\u8981\u901a\u8fc7\u5377\uff08Volumes\uff09\u3001\u7ed1\u5b9a\u6302\u8f7d\uff08Bind Mounts\uff09\u548c tmpfs \u6302\u8f7d\u6765\u5b9e\u73b0\u3002</p>"},{"location":"cloud/docker/docker/#docker_1","title":"\u4e00\u3001Docker \u6570\u636e\u6301\u4e45\u5316\u65b9\u5f0f\u6982\u8ff0","text":"<ol> <li>Volumes\uff08\u5377\uff09\uff1a\u7531 Docker \u7ba1\u7406\u7684\u6302\u8f7d\u70b9\uff0c\u53ef\u4ee5\u5728\u5bb9\u5668\u95f4\u5171\u4eab\uff0c\u4e14\u4e0e\u5bbf\u4e3b\u673a\u7684\u6587\u4ef6\u7cfb\u7edf\u9694\u79bb\u3002</li> <li>Bind Mounts\uff08\u7ed1\u5b9a\u6302\u8f7d\uff09\uff1a\u5c06\u5bbf\u4e3b\u673a\u7684\u76ee\u5f55\u6216\u6587\u4ef6\u76f4\u63a5\u6302\u8f7d\u5230\u5bb9\u5668\u4e2d\uff0c\u5bb9\u5668\u5bf9\u8be5\u76ee\u5f55\u6216\u6587\u4ef6\u7684\u64cd\u4f5c\u4f1a\u76f4\u63a5\u5f71\u54cd\u5bbf\u4e3b\u673a\u3002</li> <li>Tmpfs Mounts\uff08\u5185\u5b58\u6302\u8f7d\uff09\uff1a\u5c06\u6570\u636e\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\uff0c\u800c\u975e\u5bbf\u4e3b\u673a\u7684\u78c1\u76d8\u4e0a\uff0c\u9002\u7528\u4e8e\u9700\u8981\u9ad8\u6027\u80fd\u3001\u4f46\u6570\u636e\u65e0\u9700\u6301\u4e45\u5316\u7684\u573a\u666f\u3002</li> </ol>"},{"location":"cloud/docker/docker/#docker_2","title":"\u4e8c\u3001Docker \u6301\u4e45\u5316\u65b9\u5f0f\u8be6\u89e3","text":""},{"location":"cloud/docker/docker/#1-volumes","title":"1. Volumes\uff08\u5377\uff09","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a</p> </li> <li> <p>\u5377\u662f Docker \u63a8\u8350\u7684\u6570\u636e\u6301\u4e45\u5316\u65b9\u5f0f\u3002\u5377\u5b58\u50a8\u5728 Docker \u7ba1\u7406\u7684\u76ee\u5f55\u4e2d\uff08\u901a\u5e38\u5728 <code>/var/lib/docker/volumes/</code> \u4e0b\uff09\uff0c\u5e76\u4e14\u53ef\u4ee5\u88ab\u591a\u4e2a\u5bb9\u5668\u6302\u8f7d\u548c\u5171\u4eab\u3002</p> </li> <li> <p>\u5377\u7684\u751f\u547d\u5468\u671f\u72ec\u7acb\u4e8e\u5bb9\u5668\uff0c\u53ef\u4ee5\u5728\u5bb9\u5668\u5220\u9664\u540e\u4fdd\u7559\u6570\u636e\u3002</p> </li> <li> <p>\u4f7f\u7528\u573a\u666f\uff1a</p> </li> <li> <p>\u9002\u7528\u4e8e\u9700\u8981\u6301\u4e45\u5316\u6570\u636e\u3001\u8de8\u591a\u4e2a\u5bb9\u5668\u5171\u4eab\u6570\u636e\u7684\u5e94\u7528\uff0c\u5982\u6570\u636e\u5e93\u3001\u6301\u4e45\u5316\u7f13\u5b58\u7b49\u3002</p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> <li> <p>\u521b\u5efa\u5e76\u6302\u8f7d\u5377\uff1a</p> <pre><code># \u521b\u5efa\u5377\ndocker volume create my-volume\n\n# \u8fd0\u884c\u5bb9\u5668\u5e76\u6302\u8f7d\u5377\ndocker run -d --name my-container -v my-volume:/data nginx\n</code></pre> </li> <li> <p>\u5220\u9664\u5377\uff1a</p> <pre><code># \u5220\u9664\u5377\uff08\u6ce8\u610f\uff1a\u5728\u5220\u9664\u524d\u9700\u786e\u4fdd\u6ca1\u6709\u5bb9\u5668\u5728\u4f7f\u7528\u6b64\u5377\uff09\ndocker volume rm my-volume\n</code></pre> </li> <li> <p>\u7279\u70b9\uff1a</p> </li> <li> <p>\u5377\u662f\u7531 Docker \u7ba1\u7406\u7684\uff0c\u4e0e\u5bbf\u4e3b\u673a\u7684\u6587\u4ef6\u7cfb\u7edf\u9694\u79bb\u3002</p> </li> <li>\u53ef\u4ee5\u901a\u8fc7\u5377\u8de8\u591a\u4e2a\u5bb9\u5668\u5171\u4eab\u6570\u636e\u3002</li> <li>\u5377\u53ef\u4ee5\u5728\u5bb9\u5668\u505c\u6b62\u6216\u5220\u9664\u540e\u7ee7\u7eed\u5b58\u5728\u3002</li> </ul>"},{"location":"cloud/docker/docker/#2-bind-mounts","title":"2. Bind Mounts\uff08\u7ed1\u5b9a\u6302\u8f7d\uff09","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a</p> </li> <li> <p>Bind Mounts \u5141\u8bb8\u4f60\u5c06\u5bbf\u4e3b\u673a\u7684\u7279\u5b9a\u76ee\u5f55\u6216\u6587\u4ef6\u6302\u8f7d\u5230\u5bb9\u5668\u5185\u7684\u76ee\u5f55\u3002\u8fd9\u79cd\u65b9\u5f0f\u76f4\u63a5\u6620\u5c04\u5bbf\u4e3b\u673a\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u5bb9\u5668\u5bf9\u6302\u8f7d\u76ee\u5f55\u6216\u6587\u4ef6\u7684\u64cd\u4f5c\u4f1a\u76f4\u63a5\u5f71\u54cd\u5bbf\u4e3b\u673a\u3002</p> </li> <li> <p>\u4f7f\u7528\u573a\u666f\uff1a</p> </li> <li> <p>\u9002\u7528\u4e8e\u9700\u8981\u5bb9\u5668\u8bbf\u95ee\u548c\u4f7f\u7528\u5bbf\u4e3b\u673a\u4e0a\u7684\u73b0\u6709\u6570\u636e\u7684\u573a\u666f\uff0c\u5982\u8bbf\u95ee\u914d\u7f6e\u6587\u4ef6\u3001\u65e5\u5fd7\u6587\u4ef6\u7b49\u3002</p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> <li> <p>\u4f7f\u7528\u7ed1\u5b9a\u6302\u8f7d\uff1a</p> <pre><code>docker run -d --name my-container -v /path/on/host:/path/in/container nginx\n</code></pre> </li> <li> <p>\u4f8b\u5982\uff0c\u5c06\u5bbf\u4e3b\u673a\u7684 <code>/var/log</code> \u76ee\u5f55\u6302\u8f7d\u5230\u5bb9\u5668\u7684 <code>/log</code> \u76ee\u5f55\uff1a</p> <pre><code>docker run -d --name my-container -v /var/log:/log nginx\n</code></pre> </li> <li> <p>\u7279\u70b9\uff1a</p> </li> <li> <p>Bind Mounts \u76f4\u63a5\u4f7f\u7528\u5bbf\u4e3b\u673a\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u56e0\u6b64\u5bf9\u6570\u636e\u7684\u66f4\u6539\u4f1a\u76f4\u63a5\u5f71\u54cd\u5bbf\u4e3b\u673a\u3002</p> </li> <li>\u76f8\u6bd4\u5377\uff0c\u5b83\u66f4\u7075\u6d3b\uff0c\u4f46\u9700\u8981\u66f4\u5c0f\u5fc3\u7ba1\u7406\uff0c\u56e0\u4e3a\u9519\u8bef\u914d\u7f6e\u53ef\u80fd\u5bfc\u81f4\u5bbf\u4e3b\u673a\u6570\u636e\u88ab\u7834\u574f\u3002</li> </ul>"},{"location":"cloud/docker/docker/#3-tmpfs-mounts","title":"3. Tmpfs Mounts\uff08\u5185\u5b58\u6302\u8f7d\uff09","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a</p> </li> <li> <p>Tmpfs Mounts \u5141\u8bb8\u4f60\u5c06\u5bb9\u5668\u5185\u7684\u6570\u636e\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\uff0c\u800c\u4e0d\u662f\u5bbf\u4e3b\u673a\u7684\u78c1\u76d8\u4e0a\u3002\u5b83\u4e0d\u9002\u5408\u6301\u4e45\u5316\u5b58\u50a8\uff0c\u4f46\u5728\u9700\u8981\u5feb\u901f\u8bbf\u95ee\u6570\u636e\u4e14\u6570\u636e\u4e0d\u9700\u8981\u6301\u4e45\u5316\u7684\u573a\u666f\u4e2d\u975e\u5e38\u6709\u7528\u3002</p> </li> <li> <p>\u4f7f\u7528\u573a\u666f\uff1a</p> </li> <li> <p>\u9002\u7528\u4e8e\u4e34\u65f6\u6570\u636e\u3001\u7f13\u5b58\u6587\u4ef6\u6216\u654f\u611f\u6570\u636e\u7684\u5b58\u50a8\uff0c\u6570\u636e\u5728\u5bb9\u5668\u505c\u6b62\u540e\u5373\u4e22\u5931\u3002</p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> <li> <p>\u521b\u5efa Tmpfs \u6302\u8f7d\uff1a</p> <pre><code>docker run -d --name my-container --mount type=tmpfs,destination=/app/tmpfs tmpfs-size=64m nginx\n</code></pre> </li> <li> <p>\u7279\u70b9\uff1a</p> </li> <li> <p>\u6570\u636e\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\uff0c\u8bbf\u95ee\u901f\u5ea6\u5feb\u3002</p> </li> <li>\u9002\u5408\u4e0d\u9700\u8981\u6301\u4e45\u5316\u7684\u6570\u636e\u5b58\u50a8\uff0c\u6570\u636e\u5728\u5bb9\u5668\u505c\u6b62\u540e\u4e22\u5931\u3002</li> </ul>"},{"location":"cloud/docker/docker/#docker_3","title":"\u4e09\u3001Docker \u6570\u636e\u6301\u4e45\u5316\u7684\u9ad8\u7ea7\u4f7f\u7528","text":""},{"location":"cloud/docker/docker/#1-named-volumes","title":"1. Named Volumes\uff08\u547d\u540d\u5377\uff09","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u547d\u540d\u5377\u662f\u6307\u4f7f\u7528\u7279\u5b9a\u540d\u79f0\u521b\u5efa\u548c\u7ba1\u7406\u7684\u5377\uff0c\u5141\u8bb8\u4f60\u660e\u786e\u5730\u6307\u5b9a\u548c\u7ba1\u7406\u5377\u7684\u751f\u547d\u5468\u671f\u3002</p> </li> <li> <p>\u4f7f\u7528\uff1a</p> </li> </ul> <pre><code>docker volume create my-named-volume\ndocker run -d --name my-container -v my-named-volume:/data nginx\n</code></pre>"},{"location":"cloud/docker/docker/#2-anonymous-volumes","title":"2. Anonymous Volumes\uff08\u533f\u540d\u5377\uff09","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u533f\u540d\u5377\u662f\u6ca1\u6709\u540d\u79f0\u7684\u5377\uff0c\u5f53\u4f60\u4f7f\u7528 <code>-v /path/in/container</code> \u683c\u5f0f\u6302\u8f7d\u5377\u65f6\uff0c\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u533f\u540d\u5377\u3002</p> </li> <li> <p>\u7279\u70b9\uff1a\u5728\u5bb9\u5668\u5220\u9664\u65f6\uff0c\u533f\u540d\u5377\u4f1a\u5b64\u7acb\u5b58\u5728\uff0c\u9700\u624b\u52a8\u6e05\u7406\u3002</p> </li> <li> <p>\u4f7f\u7528\uff1a</p> </li> </ul> <pre><code>docker run -d --name my-container -v /data nginx\n</code></pre>"},{"location":"cloud/docker/docker/#3","title":"3. \u6570\u636e\u5377\u5bb9\u5668","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u6570\u636e\u5377\u5bb9\u5668\u662f\u4e00\u79cd\u7528\u4e8e\u5171\u4eab\u5377\u7684\u5bb9\u5668\u3002\u4f60\u53ef\u4ee5\u5c06\u5377\u6302\u8f7d\u5230\u4e00\u4e2a\u5bb9\u5668\u4e0a\uff0c\u7136\u540e\u5728\u5176\u4ed6\u5bb9\u5668\u4e2d\u901a\u8fc7 <code>--volumes-from</code> \u9009\u9879\u4f7f\u7528\u8fd9\u4e9b\u5377\u3002</p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code># \u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5377\u5bb9\u5668\ndocker create -v /data --name data-container busybox\n\n# \u5176\u4ed6\u5bb9\u5668\u53ef\u4ee5\u901a\u8fc7 --volumes-from \u5171\u4eab\u6570\u636e\u5377\ndocker run -d --name my-container --volumes-from data-container nginx\n</code></pre>"},{"location":"cloud/docker/docker/#_1","title":"\u56db\u3001\u603b\u7ed3","text":"\u6301\u4e45\u5316\u65b9\u5f0f \u63cf\u8ff0 \u4f7f\u7528\u573a\u666f \u4f18\u70b9 \u7f3a\u70b9 Volumes \u7531 Docker \u7ba1\u7406\u7684\u5b58\u50a8\u5377\uff0c\u53ef\u5728\u5bb9\u5668\u95f4\u5171\u4eab\uff0c\u72ec\u7acb\u4e8e\u5bbf\u4e3b\u673a\u6587\u4ef6\u7cfb\u7edf\u3002 \u9700\u8981\u6301\u4e45\u5316\u6570\u636e\u3001\u8de8\u591a\u4e2a\u5bb9\u5668\u5171\u4eab\u6570\u636e\u7684\u573a\u666f\u3002 \u5377\u72ec\u7acb\u4e8e\u5bbf\u4e3b\u673a\u6587\u4ef6\u7cfb\u7edf\uff0c\u5b89\u5168\u4e14\u4fbf\u4e8e\u7ba1\u7406\u3002 \u4e0e\u5bbf\u4e3b\u673a\u6587\u4ef6\u7cfb\u7edf\u9694\u79bb\uff0c\u53ef\u80fd\u4e0d\u9002\u5408\u9700\u8981\u76f4\u63a5\u8bbf\u95ee\u5bbf\u4e3b\u673a\u6570\u636e\u7684\u573a\u666f\u3002 Bind Mounts \u76f4\u63a5\u5c06\u5bbf\u4e3b\u673a\u7684\u76ee\u5f55\u6216\u6587\u4ef6\u6302\u8f7d\u5230\u5bb9\u5668\u4e2d\uff0c\u5bb9\u5668\u5bf9\u6570\u636e\u7684\u66f4\u6539\u4f1a\u76f4\u63a5\u53cd\u6620\u5728\u5bbf\u4e3b\u673a\u4e0a\u3002 \u9700\u8981\u5bb9\u5668\u8bbf\u95ee\u548c\u4f7f\u7528\u5bbf\u4e3b\u673a\u4e0a\u7684\u73b0\u6709\u6570\u636e\u7684\u573a\u666f\u3002 \u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u548c\u64cd\u4f5c\u5bbf\u4e3b\u673a\u4e0a\u7684\u6587\u4ef6\u548c\u76ee\u5f55\u3002 \u9700\u8981\u5c0f\u5fc3\u7ba1\u7406\uff0c\u9519\u8bef\u7684\u914d\u7f6e\u53ef\u80fd\u5bfc\u81f4\u5bbf\u4e3b\u673a\u6570\u636e\u635f\u574f\u3002 Tmpfs Mounts \u5c06\u6570\u636e\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\uff0c\u9002\u7528\u4e8e\u9700\u8981\u5feb\u901f\u8bbf\u95ee\u4e14\u4e0d\u9700\u6301\u4e45\u5316\u7684\u6570\u636e\u3002 \u4e34\u65f6\u6570\u636e\u3001\u7f13\u5b58\u6216\u654f\u611f\u6570\u636e\u5b58\u50a8\uff0c\u6570\u636e\u5728\u5bb9\u5668\u505c\u6b62\u540e\u4e22\u5931\u3002 \u9ad8\u6027\u80fd\u7684\u6570\u636e\u8bbf\u95ee\uff0c\u56e0\u4e3a\u6570\u636e\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\u3002 \u6570\u636e\u4e0d\u53ef\u6301\u4e45\u5316\uff0c\u5bb9\u5668\u505c\u6b62\u540e\u6570\u636e\u4e22\u5931\u3002 <p>\u9009\u62e9\u5408\u9002\u7684\u6301\u4e45\u5316\u65b9\u5f0f\u53d6\u51b3\u4e8e\u5177\u4f53\u7684\u5e94\u7528\u9700\u6c42\u3002\u5bf9\u4e8e\u9700\u8981\u957f\u671f\u4fdd\u5b58\u7684\u6570\u636e\uff0c\u5982\u6570\u636e\u5e93\u6570\u636e\uff0c\u4f7f\u7528 <code>Volumes</code> \u662f\u6700\u4f73\u9009\u62e9\uff1b\u5bf9\u4e8e\u9700\u8981\u76f4\u63a5\u64cd\u4f5c\u5bbf\u4e3b\u673a\u6587\u4ef6\u7684\u573a\u666f\uff0c<code>Bind Mounts</code> \u66f4\u4e3a\u5408\u9002\uff1b\u800c\u5bf9\u4e8e\u4e34\u65f6\u6027\u6216\u9ad8\u6027\u80fd\u6570\u636e\u9700\u6c42\uff0c<code>Tmpfs Mounts</code> \u5219\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002</p>"},{"location":"cloud/docker/docker/#6-docker-compose","title":"6. Docker Compose","text":"<p>Docker Compose \u662f\u4e00\u4e2a\u7528\u4e8e\u5b9a\u4e49\u548c\u7ba1\u7406\u591a\u5bb9\u5668 Docker \u5e94\u7528\u7684\u5de5\u5177\u3002\u5b83\u5141\u8bb8\u4f60\u4f7f\u7528\u4e00\u4e2a YAML \u6587\u4ef6\u6765\u5b9a\u4e49\u5e94\u7528\u7684\u670d\u52a1\u3001\u7f51\u7edc\u3001\u5377\u7b49\u914d\u7f6e\uff0c\u5e76\u901a\u8fc7\u7b80\u5355\u7684\u547d\u4ee4\u6765\u7ba1\u7406\u8fd9\u4e9b\u670d\u52a1\u3002Docker Compose \u53ef\u4ee5\u6781\u5927\u5730\u7b80\u5316\u591a\u5bb9\u5668\u5e94\u7528\u7684\u90e8\u7f72\u548c\u7ba1\u7406\uff0c\u5c24\u5176\u662f\u5728\u5f00\u53d1\u3001\u6d4b\u8bd5\u548c\u6301\u7eed\u96c6\u6210\u73af\u5883\u4e2d\u3002</p>"},{"location":"cloud/docker/docker/#docker-compose","title":"\u4e00\u3001Docker Compose \u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u670d\u52a1\uff08Services\uff09\uff1a\u670d\u52a1\u662f\u4e00\u4e2a\u8fd0\u884c\u5bb9\u5668\u7684\u5b9a\u4e49\uff0c\u901a\u5e38\u5bf9\u5e94\u4e00\u4e2a\u955c\u50cf\u3002\u4f60\u53ef\u4ee5\u5728 Docker Compose \u6587\u4ef6\u4e2d\u5b9a\u4e49\u591a\u4e2a\u670d\u52a1\uff0c\u6bcf\u4e2a\u670d\u52a1\u53ef\u4ee5\u8fd0\u884c\u4e00\u4e2a\u6216\u591a\u4e2a\u5bb9\u5668\u3002</li> <li>\u7f51\u7edc\uff08Networks\uff09\uff1aDocker Compose \u4e2d\u7684\u670d\u52a1\u9ed8\u8ba4\u4f1a\u8fde\u63a5\u5230\u4e00\u4e2a\u540d\u4e3a <code>default</code> \u7684\u7f51\u7edc\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5728 YAML \u6587\u4ef6\u4e2d\u81ea\u5b9a\u4e49\u7f51\u7edc\u3002</li> <li>\u5377\uff08Volumes\uff09\uff1a\u7528\u4e8e\u6301\u4e45\u5316\u670d\u52a1\u6570\u636e\u6216\u5728\u670d\u52a1\u4e4b\u95f4\u5171\u4eab\u6570\u636e\uff0c\u53ef\u4ee5\u5728 YAML \u6587\u4ef6\u4e2d\u5b9a\u4e49\u548c\u914d\u7f6e\u3002</li> </ul>"},{"location":"cloud/docker/docker/#docker-compose_1","title":"\u4e8c\u3001Docker Compose \u6587\u4ef6\u7ed3\u6784","text":"<p>Docker Compose \u7684\u914d\u7f6e\u6587\u4ef6\u4f7f\u7528 YAML \u683c\u5f0f\uff0c\u901a\u5e38\u547d\u540d\u4e3a <code>docker-compose.yml</code>\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u57fa\u672c\u7684 Docker Compose \u6587\u4ef6\u7ed3\u6784\uff1a</p> <pre><code>version: '3.8'  # \u6307\u5b9a Docker Compose \u6587\u4ef6\u7248\u672c\n\nservices:  # \u5b9a\u4e49\u5e94\u7528\u7684\u670d\u52a1\n  web:  # \u5b9a\u4e49\u4e00\u4e2a\u670d\u52a1\uff0c\u540d\u79f0\u4e3a web\n    image: nginx  # \u4f7f\u7528\u5b98\u65b9\u7684 nginx \u955c\u50cf\n    ports:  # \u6620\u5c04\u5bb9\u5668\u7684\u7aef\u53e3\u5230\u4e3b\u673a\n      - \"8080:80\"\n    volumes:  # \u5c06\u4e3b\u673a\u76ee\u5f55\u6302\u8f7d\u5230\u5bb9\u5668\u4e2d\n      - ./html:/usr/share/nginx/html\n    networks:  # \u6307\u5b9a\u670d\u52a1\u4f7f\u7528\u7684\u7f51\u7edc\n      - frontend\n\n  db:  # \u5b9a\u4e49\u53e6\u4e00\u4e2a\u670d\u52a1\uff0c\u540d\u79f0\u4e3a db\n    image: mysql:5.7  # \u4f7f\u7528\u5b98\u65b9\u7684 MySQL \u955c\u50cf\n    environment:  # \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\n      MYSQL_ROOT_PASSWORD: example\n    volumes:  # \u5b9a\u4e49\u6570\u636e\u5377\n      - db-data:/var/lib/mysql\n    networks:  # \u6307\u5b9a\u670d\u52a1\u4f7f\u7528\u7684\u7f51\u7edc\n      - backend\n\nvolumes:  # \u5b9a\u4e49\u5e94\u7528\u4f7f\u7528\u7684\u6570\u636e\u5377\n  db-data:\n\nnetworks:  # \u5b9a\u4e49\u5e94\u7528\u4f7f\u7528\u7684\u7f51\u7edc\n  frontend:\n  backend:\n</code></pre>"},{"location":"cloud/docker/docker/#docker-compose_2","title":"\u4e09\u3001Docker Compose \u6587\u4ef6\u8be6\u89e3","text":""},{"location":"cloud/docker/docker/#1-version","title":"1. <code>version</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u6307\u5b9a Docker Compose \u6587\u4ef6\u7684\u7248\u672c\u3002\u4e0d\u540c\u7248\u672c\u652f\u6301\u7684\u529f\u80fd\u4e0d\u540c\uff0c\u76ee\u524d\u5e38\u7528\u7684\u662f <code>3.x</code> \u7cfb\u5217\u3002</p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>version: '3.8'\n</code></pre>"},{"location":"cloud/docker/docker/#2-services","title":"2. <code>services</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u5b9a\u4e49\u5e94\u7528\u7684\u670d\u52a1\u3002\u6bcf\u4e2a\u670d\u52a1\u5bf9\u5e94\u4e00\u4e2a Docker \u5bb9\u5668\uff0c\u670d\u52a1\u53ef\u4ee5\u901a\u8fc7\u955c\u50cf\u6784\u5efa\uff0c\u4e5f\u53ef\u4ee5\u4ece Dockerfile \u6784\u5efa\u3002</p> </li> <li> <p>\u5173\u952e\u5b50\u9879\uff1a</p> </li> <li> <p><code>image</code>\uff1a\u6307\u5b9a\u670d\u52a1\u4f7f\u7528\u7684\u955c\u50cf\u3002</p> </li> <li><code>build</code>\uff1a\u5982\u679c\u6ca1\u6709\u955c\u50cf\uff0c\u53ef\u4ee5\u6307\u5b9a Dockerfile \u6765\u6784\u5efa\u955c\u50cf\u3002</li> <li><code>ports</code>\uff1a\u66b4\u9732\u5bb9\u5668\u7684\u7aef\u53e3\u3002</li> <li><code>volumes</code>\uff1a\u6302\u8f7d\u5377\u6216\u7ed1\u5b9a\u6302\u8f7d\u3002</li> <li><code>environment</code>\uff1a\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u3002</li> <li> <p><code>networks</code>\uff1a\u6307\u5b9a\u670d\u52a1\u52a0\u5165\u7684\u7f51\u7edc\u3002</p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>services:\n  web:\n    image: nginx\n    ports:\n      - \"8080:80\"\n    volumes:\n      - ./html:/usr/share/nginx/html\n    networks:\n      - frontend\n  db:\n    image: mysql:5.7\n    environment:\n      MYSQL_ROOT_PASSWORD: example\n    volumes:\n      - db-data:/var/lib/mysql\n    networks:\n      - backend\n</code></pre>"},{"location":"cloud/docker/docker/#3-volumes","title":"3. <code>volumes</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u5b9a\u4e49\u548c\u7ba1\u7406\u6570\u636e\u5377\u3002\u5377\u53ef\u4ee5\u7528\u4e8e\u6301\u4e45\u5316\u6570\u636e\u6216\u5728\u591a\u4e2a\u670d\u52a1\u4e4b\u95f4\u5171\u4eab\u6570\u636e\u3002</p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>volumes:\n  db-data:\n</code></pre>"},{"location":"cloud/docker/docker/#4-networks","title":"4. <code>networks</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u5b9a\u4e49\u548c\u7ba1\u7406\u670d\u52a1\u95f4\u7684\u7f51\u7edc\u3002\u4f60\u53ef\u4ee5\u521b\u5efa\u591a\u4e2a\u81ea\u5b9a\u4e49\u7f51\u7edc\uff0c\u5e76\u5c06\u670d\u52a1\u8fde\u63a5\u5230\u8fd9\u4e9b\u7f51\u7edc\u4e2d\u3002</p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>networks:\n  frontend:\n  backend:\n</code></pre>"},{"location":"cloud/docker/docker/#docker-compose_3","title":"\u56db\u3001\u5e38\u7528 Docker Compose \u547d\u4ee4","text":"<p>\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u7528\u7684 Docker Compose \u547d\u4ee4\uff1a</p> <ul> <li><code>docker-compose up</code>\uff1a\u542f\u52a8\u6240\u6709\u670d\u52a1\uff0c\u5e76\u5728\u524d\u53f0\u663e\u793a\u65e5\u5fd7\u3002\u5982\u679c\u4f7f\u7528 <code>-d</code> \u9009\u9879\uff0c\u670d\u52a1\u4f1a\u5728\u540e\u53f0\u8fd0\u884c\u3002</li> </ul> <pre><code>docker-compose up\ndocker-compose up -d  # \u540e\u53f0\u8fd0\u884c\n</code></pre> <ul> <li><code>docker-compose down</code>\uff1a\u505c\u6b62\u5e76\u5220\u9664\u6240\u6709\u670d\u52a1\u5bb9\u5668\u3001\u7f51\u7edc\u548c\u6570\u636e\u5377\u3002</li> </ul> <pre><code>docker-compose down\n</code></pre> <ul> <li><code>docker-compose ps</code>\uff1a\u67e5\u770b\u5f53\u524d\u8fd0\u884c\u7684\u670d\u52a1\u5bb9\u5668\u72b6\u6001\u3002</li> </ul> <pre><code>docker-compose ps\n</code></pre> <ul> <li><code>docker-compose logs</code>\uff1a\u67e5\u770b\u670d\u52a1\u7684\u65e5\u5fd7\u8f93\u51fa\u3002</li> </ul> <pre><code>docker-compose logs\ndocker-compose logs -f  # \u5b9e\u65f6\u67e5\u770b\u65e5\u5fd7\n</code></pre> <ul> <li><code>docker-compose exec</code>\uff1a\u5728\u4e00\u4e2a\u8fd0\u884c\u4e2d\u7684\u670d\u52a1\u5bb9\u5668\u5185\u6267\u884c\u547d\u4ee4\u3002</li> </ul> <pre><code>docker-compose exec web bash  # \u5728 web \u670d\u52a1\u7684\u5bb9\u5668\u4e2d\u6253\u5f00 Bash \u7ec8\u7aef\n</code></pre> <ul> <li><code>docker-compose build</code>\uff1a\u6784\u5efa\u6216\u91cd\u65b0\u6784\u5efa\u670d\u52a1\u955c\u50cf\u3002</li> </ul> <pre><code>docker-compose build\n</code></pre>"},{"location":"cloud/docker/docker/#docker-compose_4","title":"\u4e94\u3001Docker Compose \u7684\u9ad8\u7ea7\u7279\u6027","text":""},{"location":"cloud/docker/docker/#1-override-files","title":"1. \u591a\u73af\u5883\u652f\u6301\uff08Override Files\uff09","text":"<ul> <li> <p>\u63cf\u8ff0\uff1aDocker Compose \u652f\u6301\u4f7f\u7528\u591a\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u4ee5\u4fbf\u5728\u4e0d\u540c\u7684\u73af\u5883\u4e2d\u4f7f\u7528\u4e0d\u540c\u7684\u914d\u7f6e\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a <code>docker-compose.override.yml</code> \u6587\u4ef6\uff0c\u7528\u4e8e\u8986\u76d6\u6216\u6269\u5c55 <code>docker-compose.yml</code> \u4e2d\u7684\u914d\u7f6e\u3002</p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code># docker-compose.override.yml\nversion: '3.8'\nservices:\n  web:\n    environment:\n      - DEBUG=true\n</code></pre> <ul> <li>\u547d\u4ee4\uff1a</li> </ul> <pre><code>docker-compose -f docker-compose.yml -f docker-compose.override.yml up\n</code></pre>"},{"location":"cloud/docker/docker/#2-env","title":"2. \u73af\u5883\u53d8\u91cf\u6587\u4ef6\uff08<code>.env</code>\uff09","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u53ef\u4ee5\u4f7f\u7528 <code>.env</code> \u6587\u4ef6\u6765\u5b9a\u4e49\u73af\u5883\u53d8\u91cf\uff0cDocker Compose \u4f1a\u81ea\u52a8\u52a0\u8f7d\u8be5\u6587\u4ef6\u4e2d\u7684\u53d8\u91cf\u3002</p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code># .env \u6587\u4ef6\nMYSQL_ROOT_PASSWORD=examplepassword\n</code></pre> <p>\u5728 <code>docker-compose.yml</code> \u4e2d\u4f7f\u7528\uff1a</p> <pre><code>services:\n  db:\n    image: mysql:5.7\n    environment:\n      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}\n</code></pre>"},{"location":"cloud/docker/docker/#3-swarm","title":"3. \u90e8\u7f72\u6a21\u5f0f\uff08Swarm \u6a21\u5f0f\uff09","text":"<ul> <li> <p>\u63cf\u8ff0\uff1aDocker Compose \u8fd8\u53ef\u4ee5\u7528\u4e8e Docker Swarm \u96c6\u7fa4\u7684\u90e8\u7f72\uff0c\u5229\u7528 <code>docker stack deploy</code> \u547d\u4ee4\u53ef\u4ee5\u5c06 Compose \u6587\u4ef6\u4f5c\u4e3a Swarm \u96c6\u7fa4\u7684\u670d\u52a1\u5b9a\u4e49\u3002</p> </li> <li> <p>\u547d\u4ee4\uff1a</p> </li> </ul> <pre><code>docker stack deploy -c docker-compose.yml my_stack\n</code></pre>"},{"location":"cloud/docker/docker/#_2","title":"\u516d\u3001\u603b\u7ed3","text":"<p>Docker Compose \u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5355\u4f46\u5f3a\u5927\u7684\u65b9\u5f0f\u6765\u5b9a\u4e49\u548c\u7ba1\u7406\u591a\u5bb9\u5668\u5e94\u7528\u7684\u8fd0\u884c\u73af\u5883\u3002\u901a\u8fc7\u4e00\u4e2a YAML \u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u8f7b\u677e\u5730\u5b9a\u4e49\u5e94\u7528\u7684\u5404\u4e2a\u670d\u52a1\u3001\u7f51\u7edc\u3001\u5377\u7b49\u914d\u7f6e\uff0c\u5e76\u901a\u8fc7\u7b80\u5355\u7684\u547d\u4ee4\u6765\u542f\u52a8\u3001\u505c\u6b62\u548c\u7ba1\u7406\u8fd9\u4e9b\u670d\u52a1\u3002\u8fd9\u4f7f\u5f97 Docker Compose \u6210\u4e3a\u5f00\u53d1\u3001\u6d4b\u8bd5\u548c\u90e8\u7f72\u73af\u5883\u4e2d\u4e0d\u53ef\u6216\u7f3a\u7684\u5de5\u5177\u3002</p> <p>\u638c\u63e1 Docker Compose \u7684\u57fa\u672c\u6982\u5ff5\u548c\u547d\u4ee4\uff0c\u53ef\u4ee5\u663e\u8457\u63d0\u9ad8\u5f00\u53d1\u548c\u8fd0\u7ef4\u7684\u6548\u7387\uff0c\u5c24\u5176\u662f\u5728\u7ba1\u7406\u590d\u6742\u7684\u591a\u5bb9\u5668\u5e94\u7528\u65f6\u3002</p>"},{"location":"cloud/docker/docker/#7-docker","title":"7. Docker\u547d\u4ee4\u5927\u5168","text":"<p>Docker \u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u5bb9\u5668\u7ba1\u7406\u5de5\u5177\uff0c\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u547d\u4ee4\u7528\u4e8e\u6784\u5efa\u3001\u8fd0\u884c\u3001\u7ba1\u7406\u548c\u76d1\u63a7\u5bb9\u5668\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u7528\u7684 Docker \u547d\u4ee4\u53ca\u5176\u8be6\u7ec6\u89e3\u91ca\uff1a</p>"},{"location":"cloud/docker/docker/#_3","title":"\u4e00\u3001\u955c\u50cf\u7ba1\u7406\u547d\u4ee4","text":""},{"location":"cloud/docker/docker/#1-docker-pull","title":"1. <code>docker pull</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u4ece Docker \u4ed3\u5e93\u4e2d\u62c9\u53d6\u955c\u50cf\u5230\u672c\u5730\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker pull [OPTIONS] NAME[:TAG|@DIGEST]</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker pull nginx:latest  # \u62c9\u53d6\u6700\u65b0\u7248\u672c\u7684 nginx \u955c\u50cf\n</code></pre>"},{"location":"cloud/docker/docker/#2-docker-images","title":"2. <code>docker images</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u5217\u51fa\u672c\u5730\u6240\u6709\u7684 Docker \u955c\u50cf\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker images [OPTIONS] [REPOSITORY[:TAG]]</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker images  # \u67e5\u770b\u6240\u6709\u672c\u5730\u955c\u50cf\n</code></pre>"},{"location":"cloud/docker/docker/#3-docker-rmi","title":"3. <code>docker rmi</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u5220\u9664\u4e00\u4e2a\u6216\u591a\u4e2a\u672c\u5730\u955c\u50cf\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker rmi [OPTIONS] IMAGE [IMAGE...]</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker rmi nginx:latest  # \u5220\u9664\u6307\u5b9a\u7684 nginx \u955c\u50cf\n</code></pre>"},{"location":"cloud/docker/docker/#4-docker-build","title":"4. <code>docker build</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u901a\u8fc7 Dockerfile \u6784\u5efa\u955c\u50cf\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker build [OPTIONS] PATH | URL | -</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker build -t myapp:latest .  # \u4f7f\u7528\u5f53\u524d\u76ee\u5f55\u7684 Dockerfile \u6784\u5efa\u955c\u50cf\uff0c\u5e76\u547d\u540d\u4e3a myapp:latest\n</code></pre>"},{"location":"cloud/docker/docker/#_4","title":"\u4e8c\u3001\u5bb9\u5668\u7ba1\u7406\u547d\u4ee4","text":""},{"location":"cloud/docker/docker/#1-docker-run","title":"1. <code>docker run</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u521b\u5efa\u5e76\u542f\u52a8\u4e00\u4e2a\u65b0\u7684\u5bb9\u5668\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker run [OPTIONS] IMAGE [COMMAND] [ARG...]</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker run -d -p 80:80 nginx  # \u540e\u53f0\u8fd0\u884c\u4e00\u4e2a nginx \u5bb9\u5668\uff0c\u5e76\u5c06\u4e3b\u673a\u7684 80 \u7aef\u53e3\u6620\u5c04\u5230\u5bb9\u5668\u7684 80 \u7aef\u53e3\n</code></pre>"},{"location":"cloud/docker/docker/#2-docker-ps","title":"2. <code>docker ps</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u5217\u51fa\u5f53\u524d\u8fd0\u884c\u7684\u5bb9\u5668\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker ps [OPTIONS]</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker ps  # \u5217\u51fa\u6240\u6709\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\ndocker ps -a  # \u5217\u51fa\u6240\u6709\u5bb9\u5668\uff0c\u5305\u62ec\u5df2\u505c\u6b62\u7684\n</code></pre>"},{"location":"cloud/docker/docker/#3-docker-stop","title":"3. <code>docker stop</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u505c\u6b62\u4e00\u4e2a\u6216\u591a\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker stop [OPTIONS] CONTAINER [CONTAINER...]</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker stop my-container  # \u505c\u6b62\u540d\u4e3a my-container \u7684\u5bb9\u5668\n</code></pre>"},{"location":"cloud/docker/docker/#4-docker-start","title":"4. <code>docker start</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u542f\u52a8\u4e00\u4e2a\u6216\u591a\u4e2a\u5df2\u505c\u6b62\u7684\u5bb9\u5668\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker start [OPTIONS] CONTAINER [CONTAINER...]</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker start my-container  # \u542f\u52a8\u540d\u4e3a my-container \u7684\u5bb9\u5668\n</code></pre>"},{"location":"cloud/docker/docker/#5-docker-restart","title":"5. <code>docker restart</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u91cd\u542f\u4e00\u4e2a\u6216\u591a\u4e2a\u5bb9\u5668\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker restart [OPTIONS] CONTAINER [CONTAINER...]</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker restart my-container  # \u91cd\u542f\u540d\u4e3a my-container \u7684\u5bb9\u5668\n</code></pre>"},{"location":"cloud/docker/docker/#6-docker-rm","title":"6. <code>docker rm</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u5220\u9664\u4e00\u4e2a\u6216\u591a\u4e2a\u5df2\u505c\u6b62\u7684\u5bb9\u5668\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker rm [OPTIONS] CONTAINER [CONTAINER...]</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker rm my-container  # \u5220\u9664\u540d\u4e3a my-container \u7684\u5bb9\u5668\ndocker rm $(docker ps -a -q)  # \u5220\u9664\u6240\u6709\u5df2\u505c\u6b62\u7684\u5bb9\u5668\n</code></pre>"},{"location":"cloud/docker/docker/#7-docker-exec","title":"7. <code>docker exec</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u5728\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668\u5185\u6267\u884c\u547d\u4ee4\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker exec [OPTIONS] CONTAINER COMMAND [ARG...]</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker exec -it my-container /bin/bash  # \u8fdb\u5165\u540d\u4e3a my-container \u7684\u5bb9\u5668\u5e76\u6253\u5f00 Bash \u7ec8\u7aef\n</code></pre>"},{"location":"cloud/docker/docker/#_5","title":"\u4e09\u3001\u7f51\u7edc\u7ba1\u7406\u547d\u4ee4","text":""},{"location":"cloud/docker/docker/#1-docker-network-ls","title":"1. <code>docker network ls</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u5217\u51fa\u6240\u6709\u7684 Docker \u7f51\u7edc\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker network ls</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker network ls  # \u5217\u51fa\u6240\u6709\u7f51\u7edc\n</code></pre>"},{"location":"cloud/docker/docker/#2-docker-network-create","title":"2. <code>docker network create</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Docker \u7f51\u7edc\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker network create [OPTIONS] NETWORK</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker network create my-network  # \u521b\u5efa\u4e00\u4e2a\u540d\u4e3a my-network \u7684\u7f51\u7edc\n</code></pre>"},{"location":"cloud/docker/docker/#3-docker-network-inspect","title":"3. <code>docker network inspect</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u67e5\u770b\u4e00\u4e2a\u6216\u591a\u4e2a Docker \u7f51\u7edc\u7684\u8be6\u7ec6\u4fe1\u606f\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker network inspect [OPTIONS] NETWORK [NETWORK...]</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker network inspect my-network  # \u67e5\u770b my-network \u7684\u8be6\u7ec6\u4fe1\u606f\n</code></pre>"},{"location":"cloud/docker/docker/#4-docker-network-connect","title":"4. <code>docker network connect</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u5c06\u4e00\u4e2a\u5bb9\u5668\u8fde\u63a5\u5230\u4e00\u4e2a\u7f51\u7edc\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker network connect [OPTIONS] NETWORK CONTAINER</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker network connect my-network my-container  # \u5c06 my-container \u5bb9\u5668\u8fde\u63a5\u5230 my-network \u7f51\u7edc\n</code></pre>"},{"location":"cloud/docker/docker/#5-docker-network-disconnect","title":"5. <code>docker network disconnect</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u5c06\u4e00\u4e2a\u5bb9\u5668\u4ece\u4e00\u4e2a\u7f51\u7edc\u4e2d\u65ad\u5f00\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker network disconnect [OPTIONS] NETWORK CONTAINER</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker network disconnect my-network my-container  # \u5c06 my-container \u5bb9\u5668\u4ece my-network \u7f51\u7edc\u4e2d\u65ad\u5f00\n</code></pre>"},{"location":"cloud/docker/docker/#_6","title":"\u56db\u3001\u5377\u7ba1\u7406\u547d\u4ee4","text":""},{"location":"cloud/docker/docker/#1-docker-volume-ls","title":"1. <code>docker volume ls</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u5217\u51fa\u6240\u6709\u7684 Docker \u5377\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker volume ls</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker volume ls  # \u5217\u51fa\u6240\u6709\u5377\n</code></pre>"},{"location":"cloud/docker/docker/#2-docker-volume-create","title":"2. <code>docker volume create</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Docker \u5377\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker volume create [OPTIONS] VOLUME</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker volume create my-volume  # \u521b\u5efa\u4e00\u4e2a\u540d\u4e3a my-volume \u7684\u5377\n</code></pre>"},{"location":"cloud/docker/docker/#3-docker-volume-inspect","title":"3. <code>docker volume inspect</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u67e5\u770b\u4e00\u4e2a\u6216\u591a\u4e2a Docker \u5377\u7684\u8be6\u7ec6\u4fe1\u606f\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker volume inspect [OPTIONS] VOLUME [VOLUME...]</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker volume inspect my-volume  # \u67e5\u770b my-volume \u7684\u8be6\u7ec6\u4fe1\u606f\n</code></pre>"},{"location":"cloud/docker/docker/#4-docker-volume-rm","title":"4. <code>docker volume rm</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u5220\u9664\u4e00\u4e2a\u6216\u591a\u4e2a Docker \u5377\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker volume rm [OPTIONS] VOLUME [VOLUME...]</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker volume rm my-volume  # \u5220\u9664\u540d\u4e3a my-volume \u7684\u5377\n</code></pre>"},{"location":"cloud/docker/docker/#_7","title":"\u4e94\u3001\u5bb9\u5668\u76d1\u63a7\u548c\u7ba1\u7406\u547d\u4ee4","text":""},{"location":"cloud/docker/docker/#1-docker-logs","title":"1. <code>docker logs</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u67e5\u770b\u5bb9\u5668\u7684\u65e5\u5fd7\u8f93\u51fa\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker logs [OPTIONS] CONTAINER</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker logs my-container  # \u67e5\u770b\u540d\u4e3a my-container \u7684\u5bb9\u5668\u65e5\u5fd7\ndocker logs -f my-container  # \u5b9e\u65f6\u67e5\u770b\u5bb9\u5668\u65e5\u5fd7\n</code></pre>"},{"location":"cloud/docker/docker/#2-docker-stats","title":"2. <code>docker stats</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u5b9e\u65f6\u67e5\u770b\u5bb9\u5668\u7684\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker stats [OPTIONS] [CONTAINER...]</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker stats  # \u5b9e\u65f6\u67e5\u770b\u6240\u6709\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\n</code></pre>"},{"location":"cloud/docker/docker/#3-docker-top","title":"3. <code>docker top</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u67e5\u770b\u5bb9\u5668\u4e2d\u8fd0\u884c\u7684\u8fdb\u7a0b\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker top CONTAINER [ps OPTIONS]</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker top my-container  # \u67e5\u770b my-container \u5bb9\u5668\u4e2d\u8fd0\u884c\u7684\u8fdb\u7a0b\n</code></pre>"},{"location":"cloud/docker/docker/#4-docker-inspect","title":"4. <code>docker inspect</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u67e5\u770b Docker \u5bf9\u8c61\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5982\u5bb9\u5668\u3001\u955c\u50cf\u3001\u7f51\u7edc\u7b49\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker inspect [OPTIONS] NAME|ID [NAME|ID...]</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker inspect my-container  # \u67e5\u770b my-container \u5bb9\u5668\u7684\u8be6\u7ec6\u4fe1\u606f\n</code></pre>"},{"location":"cloud/docker/docker/#_8","title":"\u516d\u3001\u5176\u4ed6\u5e38\u7528\u547d\u4ee4","text":""},{"location":"cloud/docker/docker/#1-docker-login","title":"1. <code>docker login</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u767b\u5f55\u5230 Docker \u4ed3\u5e93\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker login [OPTIONS] [SERVER]</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker login  # \u767b\u5f55\u5230 Docker Hub\n</code></pre>"},{"location":"cloud/docker/docker/#2-docker-tag","title":"2. <code>docker tag</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u4e3a\u955c\u50cf\u6253\u6807\u7b7e\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker tag SOURCE_IMAGE[:TAG] TARGET_IMAGE[:TAG]</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker tag my-image:latest my-repo/my-image:v1.0  # \u4e3a my-image \u955c\u50cf\u6253\u6807\u7b7e\n</code></pre>"},{"location":"cloud/docker/docker/#3-docker-push","title":"3. <code>docker push</code>","text":"<ul> <li>\u63cf\u8ff0\uff1a\u63a8\u9001\u955c\u50cf\u5230 Docker \u4ed3\u5e93</li> </ul> <p>\u3002</p> <ul> <li> <p>\u8bed\u6cd5\uff1a<code>docker push [OPTIONS] NAME[:TAG]</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker push my-repo/my-image:v1.0  # \u63a8\u9001 my-image \u955c\u50cf\u5230 Docker \u4ed3\u5e93\n</code></pre>"},{"location":"cloud/docker/docker/#4-docker-system-prune","title":"4. <code>docker system prune</code>","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a\u6e05\u7406\u672a\u4f7f\u7528\u7684\u5bb9\u5668\u3001\u955c\u50cf\u3001\u7f51\u7edc\u548c\u5377\u3002</p> </li> <li> <p>\u8bed\u6cd5\uff1a<code>docker system prune [OPTIONS]</code></p> </li> <li> <p>\u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>docker system prune -a  # \u5220\u9664\u6240\u6709\u672a\u4f7f\u7528\u7684\u5bb9\u5668\u3001\u955c\u50cf\u3001\u7f51\u7edc\u548c\u5377\n</code></pre>"},{"location":"cloud/docker/docker/#_9","title":"\u603b\u7ed3","text":"<p>\u8fd9\u4e9b\u547d\u4ee4\u6db5\u76d6\u4e86 Docker \u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u5305\u62ec\u955c\u50cf\u7ba1\u7406\u3001\u5bb9\u5668\u7ba1\u7406\u3001\u7f51\u7edc\u7ba1\u7406\u3001\u5377\u7ba1\u7406\u4ee5\u53ca\u5bb9\u5668\u7684\u76d1\u63a7\u4e0e\u7ba1\u7406\u3002\u638c\u63e1\u8fd9\u4e9b\u547d\u4ee4\u53ef\u4ee5\u5e2e\u52a9\u4f60\u6709\u6548\u5730\u4f7f\u7528 Docker \u6765\u6784\u5efa\u3001\u8fd0\u884c\u548c\u7ba1\u7406\u5bb9\u5668\u5316\u5e94\u7528\u3002</p>"},{"location":"cloud/k8s/crictl/","title":"crictl\u6559\u7a0b","text":"<p><code>crictl</code> \u662f\u4e00\u4e2a\u7528\u4e8e\u4e0e\u5bb9\u5668\u8fd0\u884c\u65f6\uff08\u5982 containerd \u548c CRI-O\uff09\u76f4\u63a5\u4ea4\u4e92\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u975e\u5e38\u9002\u7528\u4e8e Kubernetes \u73af\u5883\u4e2d\u7684\u5bb9\u5668\u7ba1\u7406\u548c\u8c03\u8bd5\u3002\u4e0b\u9762\u662f <code>crictl</code> \u7684\u8be6\u7ec6\u4f7f\u7528\u6559\u7a0b\uff0c\u5305\u62ec\u5b89\u88c5\u3001\u914d\u7f6e\u548c\u5e38\u7528\u547d\u4ee4\u3002</p>"},{"location":"cloud/k8s/crictl/#crictl_1","title":"\u4e00\u3001\u5b89\u88c5 <code>crictl</code>","text":""},{"location":"cloud/k8s/crictl/#1-crictl","title":"1. \u4e0b\u8f7d <code>crictl</code>","text":"<p>\u4f60\u53ef\u4ee5\u4ece <code>cri-tools</code> GitHub \u4ed3\u5e93\u4e0b\u8f7d <code>crictl</code> \u7684\u6700\u65b0\u7248\u672c\u3002\u9009\u62e9\u9002\u5408\u4f60\u64cd\u4f5c\u7cfb\u7edf\u7684\u7248\u672c\u8fdb\u884c\u4e0b\u8f7d\u3002</p> <pre><code>VERSION=\"v1.28.0\"\nwget https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-amd64.tar.gz\n</code></pre>"},{"location":"cloud/k8s/crictl/#2-crictl","title":"2. \u89e3\u538b\u5e76\u5b89\u88c5 <code>crictl</code>","text":"<p>\u4e0b\u8f7d\u5b8c\u6210\u540e\uff0c\u89e3\u538b\u5e76\u5c06 <code>crictl</code> \u4e8c\u8fdb\u5236\u6587\u4ef6\u79fb\u52a8\u5230 <code>/usr/local/bin</code> \u76ee\u5f55\u4e0b\uff0c\u786e\u4fdd\u5b83\u53ef\u4ee5\u5168\u5c40\u4f7f\u7528\u3002</p> <pre><code>tar zxvf crictl-$VERSION-linux-amd64.tar.gz\nsudo mv crictl /usr/local/bin/\n</code></pre>"},{"location":"cloud/k8s/crictl/#crictl_2","title":"\u4e8c\u3001\u914d\u7f6e <code>crictl</code>","text":"<p>\u5728\u4f7f\u7528 <code>crictl</code> \u4e4b\u524d\uff0c\u9700\u8981\u914d\u7f6e\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\u6765\u6307\u5b9a\u4f7f\u7528\u7684\u5bb9\u5668\u8fd0\u884c\u65f6\u3002<code>crictl</code> \u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\u4e3a <code>/etc/crictl.yaml</code>\u3002</p>"},{"location":"cloud/k8s/crictl/#1","title":"1. \u521b\u5efa\u914d\u7f6e\u6587\u4ef6","text":"<p>\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u521b\u5efa\u4e00\u4e2a\u57fa\u672c\u7684\u914d\u7f6e\u6587\u4ef6\uff1a</p> <pre><code>sudo tee /etc/crictl.yaml &lt;&lt;EOF\nruntime-endpoint: unix:///run/containerd/containerd.sock\nEOF\n</code></pre> <p>\u5728\u8fd9\u91cc\uff0c<code>runtime-endpoint</code> \u53c2\u6570\u6307\u5b9a\u4e86\u5bb9\u5668\u8fd0\u884c\u65f6\u7684 socket \u6587\u4ef6\u8def\u5f84\u3002\u5bf9\u4e8e <code>containerd</code>\uff0c\u8def\u5f84\u901a\u5e38\u4e3a <code>/run/containerd/containerd.sock</code>\uff0c\u800c\u5bf9\u4e8e <code>CRI-O</code>\uff0c\u8def\u5f84\u901a\u5e38\u4e3a <code>/var/run/crio/crio.sock</code>\u3002</p>"},{"location":"cloud/k8s/crictl/#2","title":"2. \u9a8c\u8bc1\u914d\u7f6e","text":"<p>\u4f60\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u68c0\u67e5 <code>crictl</code> \u662f\u5426\u6b63\u786e\u914d\u7f6e\u5e76\u8fde\u63a5\u5230\u5bb9\u5668\u8fd0\u884c\u65f6\uff1a</p> <pre><code>crictl info\n</code></pre> <p>\u5982\u679c\u914d\u7f6e\u6b63\u786e\uff0c\u5b83\u5c06\u8fd4\u56de\u6709\u5173\u8fd0\u884c\u65f6\u7684\u8be6\u7ec6\u4fe1\u606f\u3002</p>"},{"location":"cloud/k8s/crictl/#crictl_3","title":"\u4e09\u3001\u5e38\u7528 <code>crictl</code> \u547d\u4ee4","text":""},{"location":"cloud/k8s/crictl/#1_1","title":"1. \u5bb9\u5668\u7ba1\u7406","text":"<ul> <li>\u5217\u51fa\u6240\u6709\u5bb9\u5668\uff1a</li> </ul> <pre><code>crictl ps\n</code></pre> <p>\u9ed8\u8ba4\u53ea\u663e\u793a\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\uff0c\u4f7f\u7528 <code>-a</code> \u53c2\u6570\u53ef\u4ee5\u663e\u793a\u6240\u6709\u5bb9\u5668\uff0c\u5305\u62ec\u5df2\u505c\u6b62\u7684\u3002</p> <ul> <li>\u542f\u52a8\u5bb9\u5668\uff1a</li> </ul> <pre><code>crictl start &lt;CONTAINER_ID&gt;\n</code></pre> <ul> <li>\u505c\u6b62\u5bb9\u5668\uff1a</li> </ul> <pre><code>crictl stop &lt;CONTAINER_ID&gt;\n</code></pre> <ul> <li>\u5220\u9664\u5bb9\u5668\uff1a</li> </ul> <pre><code>crictl rm &lt;CONTAINER_ID&gt;\n</code></pre> <ul> <li>\u67e5\u770b\u5bb9\u5668\u8be6\u60c5\uff1a</li> </ul> <pre><code>crictl inspect &lt;CONTAINER_ID&gt;\n</code></pre> <ul> <li>\u67e5\u770b\u5bb9\u5668\u65e5\u5fd7\uff1a</li> </ul> <pre><code>crictl logs &lt;CONTAINER_ID&gt;\n</code></pre>"},{"location":"cloud/k8s/crictl/#2_1","title":"2. \u955c\u50cf\u7ba1\u7406","text":"<ul> <li>\u5217\u51fa\u6240\u6709\u955c\u50cf\uff1a</li> </ul> <pre><code>crictl images\n</code></pre> <ul> <li>\u62c9\u53d6\u955c\u50cf\uff1a</li> </ul> <pre><code>crictl pull &lt;IMAGE_NAME&gt;\n</code></pre> <ul> <li>\u5220\u9664\u955c\u50cf\uff1a</li> </ul> <pre><code>crictl rmi &lt;IMAGE_NAME&gt;\n</code></pre> <ul> <li>\u68c0\u67e5\u955c\u50cf\u8be6\u60c5\uff1a</li> </ul> <pre><code>crictl inspecti &lt;IMAGE_ID&gt;\n</code></pre>"},{"location":"cloud/k8s/crictl/#3-pod","title":"3. Pod \u7ba1\u7406","text":"<ul> <li>\u5217\u51fa\u6240\u6709 Pod\uff1a</li> </ul> <pre><code>crictl pods\n</code></pre> <ul> <li>\u67e5\u770b Pod \u8be6\u60c5\uff1a</li> </ul> <pre><code>crictl inspectp &lt;POD_ID&gt;\n</code></pre> <ul> <li>\u5220\u9664 Pod\uff1a</li> </ul> <pre><code>crictl stopp &lt;POD_ID&gt;\ncrictl rmp &lt;POD_ID&gt;\n</code></pre>"},{"location":"cloud/k8s/crictl/#kubernetes","title":"\u56db\u3001\u8c03\u8bd5 Kubernetes \u95ee\u9898","text":"<p><code>crictl</code> \u5bf9\u4e8e\u8c03\u8bd5 Kubernetes \u4e2d\u7684\u5bb9\u5668\u95ee\u9898\u975e\u5e38\u6709\u7528\u3002\u5f53 <code>kubectl</code> \u547d\u4ee4\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\u65f6\uff0c<code>crictl</code> \u53ef\u4ee5\u76f4\u63a5\u4e0e\u5bb9\u5668\u8fd0\u884c\u65f6\u63a5\u53e3\u8fdb\u884c\u4ea4\u4e92\u3002</p> <ul> <li>\u68c0\u67e5\u5bb9\u5668\u65e5\u5fd7\uff1a\u5728 Pod \u65e0\u6cd5\u542f\u52a8\u6216\u5bb9\u5668\u5d29\u6e83\u65f6\uff0c\u4f7f\u7528 <code>crictl logs</code> \u67e5\u770b\u65e5\u5fd7\uff0c\u83b7\u53d6\u66f4\u8be6\u7ec6\u7684\u9519\u8bef\u4fe1\u606f\u3002</li> <li>\u68c0\u67e5\u5bb9\u5668\u72b6\u6001\uff1a\u4f7f\u7528 <code>crictl inspect</code> \u67e5\u770b\u5bb9\u5668\u7684\u8fd0\u884c\u72b6\u6001\u3001\u914d\u7f6e\u4fe1\u606f\u4ee5\u53ca\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\u3002</li> <li>\u4e0e Kubernetes \u7684 <code>kubectl</code> \u914d\u5408\u4f7f\u7528\uff1a\u5f53 Pod \u72b6\u6001\u663e\u793a\u4e3a <code>CrashLoopBackOff</code> \u6216 <code>Error</code> \u65f6\uff0c\u4f7f\u7528 <code>kubectl describe</code> \u67e5\u770b Pod \u4e8b\u4ef6\uff0c\u7136\u540e\u4f7f\u7528 <code>crictl</code> \u67e5\u770b\u5bb9\u5668\u7684\u5177\u4f53\u65e5\u5fd7\u548c\u72b6\u6001\uff0c\u627e\u51fa\u95ee\u9898\u6240\u5728\u3002</li> </ul>"},{"location":"cloud/k8s/crictl/#_1","title":"\u4e94\u3001\u603b\u7ed3","text":"<p><code>crictl</code> \u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u5e2e\u52a9 Kubernetes \u96c6\u7fa4\u7ba1\u7406\u5458\u66f4\u6df1\u5165\u5730\u4e86\u89e3\u548c\u7ba1\u7406\u5bb9\u5668\u8fd0\u884c\u65f6\u3002\u901a\u8fc7\u5b83\uff0c\u7ba1\u7406\u5458\u53ef\u4ee5\u5728 Kubernetes \u73af\u5883\u4e2d\u5bf9\u5bb9\u5668\u8fdb\u884c\u7cbe\u7ec6\u7684\u7ba1\u7406\u548c\u8c03\u8bd5\uff0c\u786e\u4fdd\u96c6\u7fa4\u7684\u7a33\u5b9a\u8fd0\u884c\u3002</p> <p>\u5982\u679c\u4f60\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u9047\u5230\u95ee\u9898\uff0c\u53ef\u4ee5\u67e5\u770b <code>crictl</code> \u7684\u5e2e\u52a9\u6587\u6863\uff1a</p> <pre><code>crictl --help\n</code></pre> <p>\u8fd9\u6837\u53ef\u4ee5\u83b7\u5f97\u66f4\u591a\u7684\u547d\u4ee4\u9009\u9879\u548c\u7528\u6cd5\u793a\u4f8b\u3002</p>"},{"location":"cloud/k8s/helm/","title":"Helm \u6559\u7a0b","text":"<p>Helm \u662f Kubernetes \u7684\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u7c7b\u4f3c\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684 <code>apt</code> \u6216 <code>yum</code>\uff0c\u7528\u4e8e\u7b80\u5316 Kubernetes \u5e94\u7528\u7684\u90e8\u7f72\u548c\u7ba1\u7406\u3002Helm \u901a\u8fc7\u79f0\u4e3a\u201cCharts\u201d\u7684\u5305\u6765\u5b9a\u4e49\u3001\u5b89\u88c5\u548c\u7ba1\u7406 Kubernetes \u5e94\u7528\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u8be6\u7ec6\u8bb2\u89e3 Helm \u7684\u4f7f\u7528\uff0c\u5305\u62ec\u5176\u57fa\u672c\u6982\u5ff5\u3001\u5b89\u88c5\u6b65\u9aa4\u3001\u4e3b\u8981\u547d\u4ee4\u4ee5\u53ca\u5982\u4f55\u521b\u5efa\u548c\u7ba1\u7406\u81ea\u5df1\u7684 Helm Chart\u3002</p>"},{"location":"cloud/k8s/helm/#1-helm","title":"1. Helm \u57fa\u672c\u6982\u5ff5","text":""},{"location":"cloud/k8s/helm/#11-helm-chart","title":"1.1 Helm \u548c Chart","text":"<ul> <li>Helm\uff1aKubernetes \u7684\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u7528\u4e8e\u7ba1\u7406 Kubernetes \u5e94\u7528\u7a0b\u5e8f\u7684\u5b9a\u4e49\u3001\u5b89\u88c5\u548c\u5347\u7ea7\u3002</li> <li>Chart\uff1aHelm \u5305\u7684\u5355\u4f4d\uff0c\u662f\u63cf\u8ff0\u4e00\u4e2a Kubernetes \u5e94\u7528\u7684\u4e00\u7ec4\u6587\u4ef6\uff0c\u5305\u62ec Kubernetes \u8d44\u6e90\u7684\u5b9a\u4e49\u6587\u4ef6\u3001\u914d\u7f6e\u6587\u4ef6\u7b49\u3002</li> <li>Release\uff1a\u901a\u8fc7 Helm \u90e8\u7f72\u7684\u4e00\u4e2a Chart \u5b9e\u4f8b\u3002\u5728\u540c\u4e00\u4e2a\u96c6\u7fa4\u4e2d\uff0cChart \u53ef\u4ee5\u88ab\u591a\u6b21\u5b89\u88c5\uff0c\u6bcf\u6b21\u5b89\u88c5\u79f0\u4e3a\u4e00\u4e2a Release\uff0c\u6bcf\u4e2a Release \u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u540d\u79f0\u3002</li> <li>Repository\uff1a\u5b58\u653e Charts \u7684\u96c6\u5408\u3002Helm \u53ef\u4ee5\u4ece\u591a\u4e2a Repository \u4e2d\u83b7\u53d6 Charts\u3002</li> </ul>"},{"location":"cloud/k8s/helm/#12-helm","title":"1.2 Helm \u7684\u5de5\u4f5c\u539f\u7406","text":"<p>Helm \u7684\u5de5\u4f5c\u5206\u4e3a\u5ba2\u6237\u7aef\uff08Helm CLI\uff09\u548c\u670d\u52a1\u7aef\uff08Tiller\uff09\u3002\u5728 Helm 3 \u4e2d\uff0cTiller \u5df2\u7ecf\u88ab\u79fb\u9664\uff0cHelm CLI \u76f4\u63a5\u4e0e Kubernetes API \u4ea4\u4e92\u3002</p> <ul> <li>\u5ba2\u6237\u7aef\uff1a\u7528\u4e8e\u5f00\u53d1\u3001\u7248\u672c\u7ba1\u7406\u3001\u914d\u7f6e\u548c Chart \u7684\u53d1\u5e03\u3002</li> <li>\u670d\u52a1\u7aef\uff1a\u63a5\u6536 Helm \u5ba2\u6237\u7aef\u8bf7\u6c42\uff0c\u5e76\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\uff08Helm 2 \u53ca\u4ee5\u524d\u4f7f\u7528 Tiller\uff0cHelm 3 \u79fb\u9664\u4e86 Tiller\uff09\u3002</li> </ul>"},{"location":"cloud/k8s/helm/#2-helm","title":"2. Helm \u7684\u5b89\u88c5","text":""},{"location":"cloud/k8s/helm/#21-helm","title":"2.1 \u5b89\u88c5 Helm","text":"<p>Helm \u7684\u5b89\u88c5\u65b9\u5f0f\u6709\u591a\u79cd\uff0c\u4ee5\u4e0b\u4ecb\u7ecd\u4f7f\u7528\u811a\u672c\u548c\u5305\u7ba1\u7406\u5de5\u5177\u7684\u65b9\u5f0f\uff1a</p>"},{"location":"cloud/k8s/helm/#211","title":"2.1.1 \u4f7f\u7528\u811a\u672c\u5b89\u88c5","text":"<p>\u5728 Linux \u6216 macOS \u7cfb\u7edf\u4e2d\uff0c\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5feb\u901f\u5b89\u88c5 Helm\uff1a</p> <pre><code>curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash\n</code></pre>"},{"location":"cloud/k8s/helm/#212","title":"2.1.2 \u4f7f\u7528\u5305\u7ba1\u7406\u5de5\u5177\u5b89\u88c5","text":"<p>\u5728 macOS \u7cfb\u7edf\u4e2d\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7 Homebrew \u5b89\u88c5 Helm\uff1a</p> <pre><code>brew install helm\n</code></pre> <p>\u5728 Linux \u7cfb\u7edf\u4e2d\uff0c\u5982\u679c\u4f7f\u7528 <code>apt</code>\uff1a</p> <pre><code>sudo apt-get update\nsudo apt-get install -y helm\n</code></pre> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>helm version</code> \u547d\u4ee4\u68c0\u67e5\u662f\u5426\u5b89\u88c5\u6210\u529f\uff1a</p> <pre><code>helm version\n</code></pre>"},{"location":"cloud/k8s/helm/#3-helm","title":"3. Helm \u7684\u57fa\u672c\u4f7f\u7528","text":""},{"location":"cloud/k8s/helm/#31-chart","title":"3.1 \u6dfb\u52a0 Chart \u4ed3\u5e93","text":"<p>Helm \u7684 Chart \u901a\u5e38\u5b58\u653e\u5728\u4ed3\u5e93\u4e2d\u3002\u5b98\u65b9\u7684\u9ed8\u8ba4\u4ed3\u5e93\u662f <code>stable</code> \u4ed3\u5e93\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u6dfb\u52a0\u5176\u4ed6\u4ed3\u5e93\uff1a</p> <pre><code>helm repo add stable https://charts.helm.sh/stable\nhelm repo add bitnami https://charts.bitnami.com/bitnami\n</code></pre> <p>\u901a\u8fc7 <code>helm repo list</code> \u53ef\u4ee5\u67e5\u770b\u5df2\u6dfb\u52a0\u7684\u4ed3\u5e93\uff1a</p> <pre><code>helm repo list\n</code></pre>"},{"location":"cloud/k8s/helm/#32-charts","title":"3.2 \u641c\u7d22\u548c\u67e5\u627e Charts","text":"<p>\u901a\u8fc7 <code>helm search</code> \u547d\u4ee4\u53ef\u4ee5\u5728\u4ed3\u5e93\u4e2d\u641c\u7d22 Charts\uff1a</p> <ul> <li>\u641c\u7d22\u4ed3\u5e93\u4e2d\u7684 Chart\uff1a</li> </ul> <pre><code>helm search repo &lt;chart_name&gt;\n</code></pre> <ul> <li>\u793a\u4f8b\uff1a\u67e5\u627e MySQL Chart\uff1a</li> </ul> <pre><code>helm search repo mysql\n</code></pre>"},{"location":"cloud/k8s/helm/#33-chart","title":"3.3 \u5b89\u88c5 Chart","text":"<p>\u4f7f\u7528 <code>helm install</code> \u547d\u4ee4\u5b89\u88c5 Chart\uff1a</p> <pre><code>helm install &lt;release_name&gt; &lt;chart_name&gt;\n</code></pre> <p>\u4f8b\u5982\uff0c\u5b89\u88c5 MySQL Chart\uff1a</p> <pre><code>helm install my-mysql stable/mysql\n</code></pre>"},{"location":"cloud/k8s/helm/#34-release","title":"3.4 \u67e5\u770b Release","text":"<p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>helm list</code> \u547d\u4ee4\u67e5\u770b\u5f53\u524d\u96c6\u7fa4\u4e2d\u6240\u6709\u7684 Release\uff1a</p> <pre><code>helm list\n</code></pre>"},{"location":"cloud/k8s/helm/#35-release","title":"3.5 \u5347\u7ea7 Release","text":"<p>\u5f53 Chart \u7248\u672c\u6216\u914d\u7f6e\u6587\u4ef6\u66f4\u65b0\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>helm upgrade</code> \u547d\u4ee4\u5347\u7ea7 Release\uff1a</p> <pre><code>helm upgrade &lt;release_name&gt; &lt;chart_name&gt;\n</code></pre> <p>\u4f8b\u5982\uff0c\u5347\u7ea7 MySQL Release\uff1a</p> <pre><code>helm upgrade my-mysql stable/mysql\n</code></pre>"},{"location":"cloud/k8s/helm/#36-release","title":"3.6 \u56de\u6eda Release","text":"<p>\u4f7f\u7528 <code>helm rollback</code> \u53ef\u4ee5\u5c06 Release \u56de\u6eda\u5230\u6307\u5b9a\u7684\u7248\u672c\uff1a</p> <pre><code>helm rollback &lt;release_name&gt; &lt;revision_number&gt;\n</code></pre> <p>\u67e5\u770b Release \u7684\u7248\u672c\u5386\u53f2\uff1a</p> <pre><code>helm history &lt;release_name&gt;\n</code></pre>"},{"location":"cloud/k8s/helm/#37-release","title":"3.7 \u5378\u8f7d Release","text":"<p>\u4f7f\u7528 <code>helm uninstall</code> \u547d\u4ee4\u53ef\u4ee5\u5378\u8f7d Release\uff1a</p> <pre><code>helm uninstall &lt;release_name&gt;\n</code></pre>"},{"location":"cloud/k8s/helm/#38-release","title":"3.8 \u67e5\u770b Release \u72b6\u6001","text":"<p>\u4f7f\u7528 <code>helm status</code> \u53ef\u4ee5\u67e5\u770b Release \u7684\u8be6\u7ec6\u72b6\u6001\u4fe1\u606f\uff1a</p> <pre><code>helm status &lt;release_name&gt;\n</code></pre>"},{"location":"cloud/k8s/helm/#4-helm-chart","title":"4. \u521b\u5efa\u548c\u7ba1\u7406 Helm Chart","text":""},{"location":"cloud/k8s/helm/#41-chart","title":"4.1 \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Chart","text":"<p>\u4f7f\u7528 <code>helm create</code> \u547d\u4ee4\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Helm Chart\uff1a</p> <pre><code>helm create mychart\n</code></pre> <p>\u8fd9\u5c06\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u4e2a\u540d\u4e3a <code>mychart</code> \u7684\u76ee\u5f55\u7ed3\u6784\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e9b\u9ed8\u8ba4\u7684\u6a21\u677f\u548c\u914d\u7f6e\u6587\u4ef6\u3002</p>"},{"location":"cloud/k8s/helm/#42-chart","title":"4.2 Chart \u76ee\u5f55\u7ed3\u6784","text":"<p>\u4e00\u4e2a\u5178\u578b\u7684 Chart \u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a</p> <pre><code>mychart/\n  Chart.yaml          # Chart \u7684\u5143\u6570\u636e\uff0c\u5982\u540d\u79f0\u3001\u7248\u672c\u7b49\n  values.yaml         # \u9ed8\u8ba4\u7684\u914d\u7f6e\u503c\n  templates/          # Kubernetes \u8d44\u6e90\u7684\u6a21\u677f\u6587\u4ef6\n    deployment.yaml\n    service.yaml\n    ...\n  charts/             # \u5b50 Charts\n  .helmignore         # \u5ffd\u7565\u6587\u4ef6\u5217\u8868\n</code></pre>"},{"location":"cloud/k8s/helm/#43","title":"4.3 \u81ea\u5b9a\u4e49\u6a21\u677f","text":"<p><code>templates/</code> \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u662f Kubernetes \u8d44\u6e90\u7684\u6a21\u677f\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528 Go \u6a21\u677f\u8bed\u6cd5\u6765\u5b9a\u4e49\u52a8\u6001\u7684\u914d\u7f6e\u3002</p>"},{"location":"cloud/k8s/helm/#deploymentyaml","title":"\u793a\u4f8b\uff1a\u81ea\u5b9a\u4e49 <code>deployment.yaml</code>","text":"<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: {{ .Release.Name }}-{{ .Values.app.name }}\nspec:\n  replicas: {{ .Values.replicas }}\n  selector:\n    matchLabels:\n      app: {{ .Values.app.name }}\n  template:\n    metadata:\n      labels:\n        app: {{ .Values.app.name }}\n    spec:\n      containers:\n      - name: {{ .Values.app.name }}\n        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}\n        ports:\n        - containerPort: {{ .Values.service.port }}\n</code></pre>"},{"location":"cloud/k8s/helm/#44-values","title":"4.4 \u4f7f\u7528 Values \u6587\u4ef6\u8fdb\u884c\u914d\u7f6e","text":"<p><code>values.yaml</code> \u6587\u4ef6\u5305\u542b\u4e86 Chart \u7684\u9ed8\u8ba4\u914d\u7f6e\u503c\u3002\u4f60\u53ef\u4ee5\u5728\u5b89\u88c5 Chart \u65f6\u4f7f\u7528 <code>-f</code> \u9009\u9879\u6307\u5b9a\u81ea\u5b9a\u4e49\u7684 <code>values.yaml</code> \u6587\u4ef6\uff1a</p> <pre><code>helm install myapp ./mychart -f custom-values.yaml\n</code></pre>"},{"location":"cloud/k8s/helm/#45-chart","title":"4.5 \u6253\u5305\u548c\u53d1\u5e03 Chart","text":"<p>\u4f7f\u7528 <code>helm package</code> \u547d\u4ee4\u53ef\u4ee5\u5c06 Chart \u6253\u5305\u6210 <code>.tgz</code> \u6587\u4ef6\uff1a</p> <pre><code>helm package mychart\n</code></pre> <p>\u751f\u6210\u7684 <code>.tgz</code> \u6587\u4ef6\u53ef\u4ee5\u4e0a\u4f20\u5230\u4e00\u4e2a Chart \u4ed3\u5e93\uff0c\u4f9b\u5176\u4ed6\u7528\u6237\u4f7f\u7528\u3002</p>"},{"location":"cloud/k8s/helm/#46-chart","title":"4.6 \u9a8c\u8bc1\u548c\u8c03\u8bd5 Chart","text":"<p>\u4f7f\u7528 <code>helm lint</code> \u547d\u4ee4\u53ef\u4ee5\u5bf9 Chart \u8fdb\u884c\u8bed\u6cd5\u548c\u7ed3\u6784\u7684\u68c0\u67e5\uff1a</p> <pre><code>helm lint mychart\n</code></pre> <p>\u4f7f\u7528 <code>helm template</code> \u547d\u4ee4\u53ef\u4ee5\u5728\u4e0d\u5b9e\u9645\u90e8\u7f72\u7684\u60c5\u51b5\u4e0b\uff0c\u751f\u6210 Kubernetes \u8d44\u6e90\u7684 YAML \u6587\u4ef6\uff0c\u7528\u4e8e\u8c03\u8bd5\uff1a</p> <pre><code>helm template mychart\n</code></pre>"},{"location":"cloud/k8s/helm/#5-helm","title":"5. Helm \u7684\u8fdb\u9636\u4f7f\u7528","text":""},{"location":"cloud/k8s/helm/#51-helm-hooks","title":"5.1 Helm Hooks","text":"<p>Helm Hooks \u662f\u4e00\u7ec4\u7279\u6b8a\u7684\u6a21\u677f\uff0c\u53ef\u4ee5\u5728 Chart \u5b89\u88c5\u3001\u5347\u7ea7\u3001\u5220\u9664\u7684\u8fc7\u7a0b\u4e2d\u89e6\u53d1\u6267\u884c\uff0c\u7528\u4e8e\u81ea\u5b9a\u4e49\u64cd\u4f5c\uff0c\u5982\u6570\u636e\u8fc1\u79fb\u3001\u5907\u4efd\u7b49\u3002</p>"},{"location":"cloud/k8s/helm/#52-chart","title":"5.2 \u5b50 Chart \u548c\u4f9d\u8d56\u7ba1\u7406","text":"<p><code>requirements.yaml</code> \u6587\u4ef6\u5b9a\u4e49\u4e86 Chart \u7684\u4f9d\u8d56\u5173\u7cfb\uff0cHelm \u4f1a\u81ea\u52a8\u4e0b\u8f7d\u5e76\u7ba1\u7406\u8fd9\u4e9b\u4f9d\u8d56\uff1a</p> <pre><code>dependencies:\n  - name: redis\n    version: \"&gt;=10.0.0\"\n    repository: \"https://charts.bitnami.com/bitnami\"\n</code></pre> <p>\u5b89\u88c5 Chart \u65f6\uff0cHelm \u4f1a\u81ea\u52a8\u4e0b\u8f7d\u5e76\u5b89\u88c5\u4f9d\u8d56\u7684\u5b50 Chart\u3002</p>"},{"location":"cloud/k8s/helm/#53-helm","title":"5.3 Helm \u5b89\u5168\u6027","text":"<p>Helm 3 \u79fb\u9664\u4e86 Tiller\uff0c\u5b89\u5168\u6027\u5927\u5927\u63d0\u9ad8\u3002\u5bf9\u4e8e\u654f\u611f\u914d\u7f6e\uff08\u5982\u5bc6\u7801\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528 Kubernetes Secret \u6765\u7ba1\u7406\u3002</p>"},{"location":"cloud/k8s/helm/#6-helm-wordpress","title":"6. \u5b9e\u6218\u793a\u4f8b\uff1a\u4f7f\u7528 Helm \u90e8\u7f72 WordPress","text":"<p>\u4f7f\u7528 Helm \u4ece Bitnami \u4ed3\u5e93\u4e2d\u5b89\u88c5 WordPress\uff1a</p> <pre><code>helm repo add bitnami https://charts.bitnami.com/bitnami\nhelm install my-wordpress bitnami/wordpress\n</code></pre> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u4f7f\u7528 <code>helm list</code> \u67e5\u770b Release\uff0c\u4f7f\u7528 <code>helm status</code> \u67e5\u770b WordPress \u7684\u8fd0\u884c\u72b6\u6001\u3002</p> <p>\u901a\u8fc7 NodePort \u6216 Ingress \u8bbf\u95ee WordPress \u5e94\u7528\uff0c\u8fdb\u4e00\u6b65\u914d\u7f6e\u548c\u4f7f\u7528\u3002</p>"},{"location":"cloud/k8s/k8s/","title":"Kubernetes \u6559\u7a0b","text":""},{"location":"cloud/k8s/k8s/#1-kubernetes","title":"1. Kubernetes \u57fa\u7840\u6982\u5ff5","text":""},{"location":"cloud/k8s/k8s/#11-kubernetes","title":"1.1 \u4ec0\u4e48\u662f Kubernetes\uff1f","text":"<p>Kubernetes\uff08\u7b80\u79f0 K8s\uff09\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5bb9\u5668\u7f16\u6392\u5e73\u53f0\uff0c\u7528\u4e8e\u81ea\u52a8\u5316\u90e8\u7f72\u3001\u6269\u5c55\u548c\u7ba1\u7406\u5bb9\u5668\u5316\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u7531 Google \u5f00\u53d1\uff0c\u540e\u6765\u6210\u4e3a CNCF\uff08Cloud Native Computing Foundation\uff09\u7684\u4e00\u90e8\u5206\u3002Kubernetes \u65e8\u5728\u7b80\u5316\u5bb9\u5668\u7684\u7ba1\u7406\uff0c\u4f7f\u5f97\u90e8\u7f72\u548c\u7ba1\u7406\u5927\u89c4\u6a21\u5bb9\u5668\u5316\u5e94\u7528\u53d8\u5f97\u66f4\u52a0\u9ad8\u6548\u548c\u53ef\u9760\u3002</p>"},{"location":"cloud/k8s/k8s/#12-kubernetes","title":"1.2 Kubernetes \u67b6\u6784","text":"<p>Kubernetes \u7684\u67b6\u6784\u4e3b\u8981\u5305\u62ec\u4e24\u4e2a\u90e8\u5206\uff1a\u63a7\u5236\u5e73\u9762 \u548c \u8282\u70b9\u3002</p> <ul> <li>\u63a7\u5236\u5e73\u9762\uff08Control Plane\uff09\uff1a\u8d1f\u8d23\u7ba1\u7406\u6574\u4e2a Kubernetes \u96c6\u7fa4\uff0c\u8c03\u5ea6 Pods \u548c\u7ba1\u7406\u96c6\u7fa4\u72b6\u6001\u3002\u63a7\u5236\u5e73\u9762\u901a\u5e38\u7531\u4ee5\u4e0b\u7ec4\u4ef6\u7ec4\u6210\uff1a</li> <li>API Server\uff1aKubernetes \u7684 API \u5165\u53e3\u70b9\uff0c\u6240\u6709\u5bf9\u96c6\u7fa4\u7684\u64cd\u4f5c\u90fd\u662f\u901a\u8fc7 API Server \u8fdb\u884c\u7684\u3002</li> <li>Controller Manager\uff1a\u76d1\u63a7\u96c6\u7fa4\u7684\u72b6\u6001\uff0c\u5e76\u8d1f\u8d23\u5904\u7406\u63a7\u5236\u5faa\u73af\uff0c\u5982\u786e\u4fdd Pods \u6570\u91cf\u7b26\u5408\u9884\u671f\u3002</li> <li>Scheduler\uff1a\u8d1f\u8d23\u5c06 Pods \u8c03\u5ea6\u5230\u5408\u9002\u7684\u8282\u70b9\u4e0a\u3002</li> <li> <p>etcd\uff1a\u5206\u5e03\u5f0f\u952e\u503c\u5b58\u50a8\uff0c\u7528\u4e8e\u4fdd\u5b58\u96c6\u7fa4\u72b6\u6001\u548c\u914d\u7f6e\u6570\u636e\u3002</p> </li> <li> <p>\u8282\u70b9\uff08Nodes\uff09\uff1a\u96c6\u7fa4\u4e2d\u7684\u5de5\u4f5c\u673a\u5668\uff0c\u6bcf\u4e2a\u8282\u70b9\u8fd0\u884c\u4e00\u4e2a\u6216\u591a\u4e2a Pods\u3002\u8282\u70b9\u4e3b\u8981\u5305\u62ec\uff1a</p> </li> <li>Kubelet\uff1a\u7ba1\u7406\u5bb9\u5668\u7684\u751f\u547d\u5468\u671f\uff0c\u786e\u4fdd\u5bb9\u5668\u6309\u9884\u671f\u8fd0\u884c\u3002</li> <li>Kube Proxy\uff1a\u7ef4\u62a4\u7f51\u7edc\u89c4\u5219\uff0c\u786e\u4fdd\u670d\u52a1\u7684\u7f51\u7edc\u901a\u4fe1\u3002</li> <li>Container Runtime\uff1a\u8fd0\u884c\u5bb9\u5668\u7684\u5de5\u5177\uff0c\u5982 Docker\u3001containerd \u7b49\u3002</li> </ul>"},{"location":"cloud/k8s/k8s/#13","title":"1.3 \u6838\u5fc3\u6982\u5ff5","text":"<ul> <li>Pod\uff1aKubernetes \u4e2d\u7684\u57fa\u672c\u8fd0\u884c\u5355\u5143\uff0c\u4e00\u4e2a Pod \u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u5bb9\u5668\uff0c\u5b83\u4eec\u5171\u4eab\u7f51\u7edc\u3001\u5b58\u50a8\u7b49\u8d44\u6e90\u3002</li> <li>Service\uff1a\u5b9a\u4e49\u8bbf\u95ee Pods \u7684\u65b9\u6cd5\uff0c\u63d0\u4f9b\u8d1f\u8f7d\u5747\u8861\u548c\u670d\u52a1\u53d1\u73b0\u529f\u80fd\u3002</li> <li>Deployment\uff1a\u7ba1\u7406 Pods \u548c ReplicaSets\uff0c\u5b9e\u73b0\u5e94\u7528\u7684\u90e8\u7f72\u548c\u6eda\u52a8\u66f4\u65b0\u3002</li> <li>ReplicaSet\uff1a\u786e\u4fdd\u6307\u5b9a\u6570\u91cf\u7684 Pods \u526f\u672c\u5728\u96c6\u7fa4\u4e2d\u8fd0\u884c\u3002</li> <li>Namespace\uff1a\u7528\u4e8e\u7ec4\u7ec7\u548c\u9694\u79bb\u96c6\u7fa4\u8d44\u6e90\uff0c\u652f\u6301\u591a\u79df\u6237\u73af\u5883\u3002</li> <li>ConfigMap\uff1a\u7ba1\u7406\u975e\u654f\u611f\u914d\u7f6e\u6570\u636e\u3002</li> <li>Secret\uff1a\u7ba1\u7406\u654f\u611f\u6570\u636e\uff0c\u5982\u5bc6\u7801\u548c\u5bc6\u94a5\u3002</li> <li>Volume\uff1a\u7528\u4e8e\u6301\u4e45\u5316\u6570\u636e\u5b58\u50a8\u3002</li> </ul>"},{"location":"cloud/k8s/k8s/#2-kubernetes","title":"2. Kubernetes \u6838\u5fc3\u5bf9\u8c61","text":""},{"location":"cloud/k8s/k8s/#21-pod","title":"2.1 Pod","text":"<p>Pod \u662f Kubernetes \u4e2d\u6700\u5c0f\u7684\u8c03\u5ea6\u5355\u5143\uff0c\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u5bb9\u5668\u3002\u8fd9\u4e9b\u5bb9\u5668\u5171\u4eab\u7f51\u7edc\u3001\u5b58\u50a8\u7b49\u8d44\u6e90\uff0c\u901a\u5e38\u4e00\u8d77\u90e8\u7f72\u548c\u7ba1\u7406\u3002</p> <p>Pod \u7684\u914d\u7f6e\u793a\u4f8b\uff1a</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\n  labels:\n    app: my-app\nspec:\n  containers:\n  - name: my-container\n    image: nginx:latest\n    ports:\n    - containerPort: 80\n  restartPolicy: Always\n</code></pre> <ul> <li>metadata\uff1aPod \u7684\u5143\u6570\u636e\uff0c\u5305\u62ec\u540d\u79f0\u548c\u6807\u7b7e\u3002</li> <li>spec\uff1aPod \u7684\u89c4\u8303\uff0c\u5305\u62ec\u5bb9\u5668\u914d\u7f6e\u548c\u91cd\u542f\u7b56\u7565\u3002</li> <li>containers\uff1aPod \u4e2d\u7684\u5bb9\u5668\u5217\u8868\uff0c\u6bcf\u4e2a\u5bb9\u5668\u5305\u62ec\u540d\u79f0\u3001\u955c\u50cf\u3001\u66b4\u9732\u7684\u7aef\u53e3\u7b49\u4fe1\u606f\u3002</li> </ul> <p>\u64cd\u4f5c\u547d\u4ee4\uff1a</p> <pre><code>kubectl apply -f pod.yaml\nkubectl get pods\nkubectl describe pod my-pod\nkubectl delete pod my-pod\n</code></pre>"},{"location":"cloud/k8s/k8s/#22-service","title":"2.2 Service","text":"<p>Service \u63d0\u4f9b\u7a33\u5b9a\u7684\u8bbf\u95ee\u70b9\u6765\u8bbf\u95ee\u4e00\u7ec4 Pods\uff0c\u652f\u6301\u8d1f\u8f7d\u5747\u8861\u548c\u670d\u52a1\u53d1\u73b0\u3002</p> <p>Service \u7684\u914d\u7f6e\u793a\u4f8b\uff1a</p> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: my-service\nspec:\n  type: ClusterIP\n  selector:\n    app: my-app\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 80\n</code></pre> <ul> <li>type\uff1a\u6307\u5b9a Service \u7684\u7c7b\u578b\uff08ClusterIP\u3001NodePort\u3001LoadBalancer\u3001ExternalName\uff09\u3002</li> <li>selector\uff1a\u9009\u62e9\u4e0e Service \u5339\u914d\u7684 Pods\u3002</li> <li>ports\uff1a\u6307\u5b9a Service \u7684\u7aef\u53e3\u548c\u76ee\u6807\u7aef\u53e3\u3002</li> </ul> <p>\u64cd\u4f5c\u547d\u4ee4\uff1a</p> <pre><code>kubectl apply -f service.yaml\nkubectl get services\nkubectl describe service my-service\nkubectl delete service my-service\n</code></pre>"},{"location":"cloud/k8s/k8s/#23-deployment","title":"2.3 Deployment","text":"<p>Deployment \u7528\u4e8e\u58f0\u660e\u5f0f\u5730\u7ba1\u7406 Pods \u548c ReplicaSets\uff0c\u5b9e\u73b0\u5e94\u7528\u7684\u90e8\u7f72\u548c\u66f4\u65b0\u3002</p> <p>Deployment \u7684\u914d\u7f6e\u793a\u4f8b\uff1a</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: my-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: my-app\n  template:\n    metadata:\n      labels:\n        app: my-app\n    spec:\n      containers:\n      - name: my-container\n        image: nginx:latest\n        ports:\n        - containerPort: 80\n</code></pre> <ul> <li>replicas\uff1a\u6307\u5b9a Pod \u526f\u672c\u7684\u6570\u91cf\u3002</li> <li>selector\uff1a\u9009\u62e9\u4e0e Deployment \u5339\u914d\u7684 Pods\u3002</li> <li>template\uff1aPod \u6a21\u677f\uff0c\u5305\u62ec Pod \u7684\u89c4\u8303\u3002</li> </ul> <p>\u64cd\u4f5c\u547d\u4ee4\uff1a</p> <pre><code>kubectl apply -f deployment.yaml\nkubectl get deployments\nkubectl describe deployment my-deployment\nkubectl rollout status deployment/my-deployment\nkubectl set image deployment/my-deployment my-container=nginx:latest\nkubectl rollout undo deployment/my-deployment\nkubectl delete deployment my-deployment\n</code></pre>"},{"location":"cloud/k8s/k8s/#24-replicaset","title":"2.4 ReplicaSet","text":"<p>ReplicaSet \u786e\u4fdd\u6307\u5b9a\u6570\u91cf\u7684 Pod \u526f\u672c\u5728\u96c6\u7fa4\u4e2d\u8fd0\u884c\u3002\u901a\u5e38\u4e0d\u76f4\u63a5\u521b\u5efa ReplicaSet\uff0c\u800c\u662f\u901a\u8fc7 Deployment \u7ba1\u7406\u3002</p> <p>ReplicaSet \u7684\u914d\u7f6e\u793a\u4f8b\uff1a</p> <pre><code>apiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n  name: my-replicaset\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: my-app\n  template:\n    metadata:\n      labels:\n        app: my-app\n    spec:\n      containers:\n      - name: my-container\n        image: nginx:latest\n        ports:\n        - containerPort: 80\n</code></pre> <p>\u64cd\u4f5c\u547d\u4ee4\uff1a</p> <pre><code>kubectl apply -f replicaset.yaml\nkubectl get replicasets\nkubectl describe replicaset my-replicaset\nkubectl delete replicaset my-replicaset\n</code></pre>"},{"location":"cloud/k8s/k8s/#25-namespace","title":"2.5 Namespace","text":"<p>Namespace \u7528\u4e8e\u5c06\u96c6\u7fa4\u4e2d\u7684\u8d44\u6e90\u5206\u9694\u5230\u903b\u8f91\u4e0a\u4e0d\u540c\u7684\u533a\u57df\u4e2d\u3002</p> <p>Namespace \u7684\u914d\u7f6e\u793a\u4f8b\uff1a</p> <pre><code>apiVersion: v1\nkind: Namespace\nmetadata:\n  name: my-namespace\n</code></pre> <p>\u64cd\u4f5c\u547d\u4ee4\uff1a</p> <pre><code>kubectl apply -f namespace.yaml\nkubectl get namespaces\nkubectl describe namespace my-namespace\nkubectl delete namespace my-namespace\n</code></pre>"},{"location":"cloud/k8s/k8s/#26-configmap-secret","title":"2.6 ConfigMap \u548c Secret","text":"<p>ConfigMap \u548c Secret \u7528\u4e8e\u7ba1\u7406\u914d\u7f6e\u6570\u636e\u548c\u654f\u611f\u6570\u636e\u3002</p> <p>ConfigMap \u7684\u914d\u7f6e\u793a\u4f8b\uff1a</p> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: my-config\ndata:\n  key1: value1\n  key2: value2\n</code></pre> <p>Secret \u7684\u914d\u7f6e\u793a\u4f8b\uff1a</p> <pre><code>apiVersion: v1\nkind: Secret\nmetadata:\n  name: my-secret\ntype: Opaque\ndata:\n  password: cGFzc3dvcmQ=  # base64 \u7f16\u7801\u7684\u5bc6\u7801\n</code></pre> <p>\u64cd\u4f5c\u547d\u4ee4\uff1a</p> <pre><code>kubectl apply -f configmap.yaml\nkubectl apply -f secret.yaml\nkubectl get configmaps\nkubectl get secrets\nkubectl describe configmap my-config\nkubectl describe secret my-secret\nkubectl delete configmap my-config\nkubectl delete secret my-secret\n</code></pre>"},{"location":"cloud/k8s/k8s/#27-volume","title":"2.7 Volume","text":"<p>Volume \u7528\u4e8e\u5b58\u50a8\u6570\u636e\u5e76\u5728 Pod \u4e4b\u95f4\u5171\u4eab\u6570\u636e\u3002</p> <p>PersistentVolume \u548c PersistentVolumeClaim \u7684\u914d\u7f6e\u793a\u4f8b\uff1a</p> <p>PersistentVolume\uff1a</p> <pre><code>apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: my-pv\nspec:\n  capacity:\n    storage: 10Gi\n  accessModes:\n    - ReadWriteOnce\n  hostPath:\n    path: /mnt/data\n</code></pre> <p>PersistentVolumeClaim\uff1a</p> <pre><code>apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: my-pvc\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 10Gi\n</code></pre> <p>\u5728 Pod \u4e2d\u4f7f\u7528 PVC\uff1a</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  containers:\n  - name: my-container\n    image: nginx:latest\n    volumeMounts:\n    - mountPath: /usr/share/nginx/html\n      name: my-storage\n  volumes:\n  - name: my-storage\n    persistentVolumeClaim:\n      claimName: my-pvc\n</code></pre> <p>\u64cd\u4f5c\u547d\u4ee4\uff1a</p> <pre><code>kubectl apply -f pv.yaml\nkubectl apply -f pvc.yaml\nkubectl apply -f pod.yaml\nkubectl get persistentvolumes\nkubectl get persistentvolumeclaims\n</code></pre>"},{"location":"cloud/k8s/k8s/#3","title":"3. \u9ad8\u7ea7\u914d\u7f6e","text":""},{"location":"cloud/k8s/k8s/#31","title":"3.1 \u7f51\u7edc\u914d\u7f6e","text":"<p>NetworkPolicy \u7528\u4e8e\u63a7\u5236 Pods \u4e4b\u95f4\u7684\u7f51\u7edc\u901a\u4fe1\u3002</p> <p>NetworkPolicy \u7684\u914d\u7f6e\u793a\u4f8b\uff1a</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: my-network-policy\nspec:\n  podSelector:\n    matchLabels:\n      app: my-app\n  ingress:\n  - from:\n    - namespaceSelector:\n        matchLabels:\n          name: my-namespace\n</code></pre> <p>\u64cd\u4f5c\u547d\u4ee4\uff1a</p> <pre><code>kubectl apply -f networkpolicy.yaml\nkubectl get networkpolicies\nkubectl describe networkpolicy my-network-policy\n</code></pre>"},{"location":"cloud/k8s/k8s/#32-ingress","title":"3.2 Ingress","text":"<p>Ingress \u63d0\u4f9b HTTP \u548c HTTPS \u8bbf\u95ee\u5230\u96c6\u7fa4\u5185\u90e8\u7684\u670d\u52a1\uff0c\u5e76\u652f\u6301 URL \u8def\u5f84\u548c\u4e3b\u673a\u540d\u7684\u8def\u7531\u3002</p> <p>Ingress \u7684\u914d\u7f6e\u793a\u4f8b\uff1a</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: my-ingress\nspec:\n  rules:\n  - host: my-app.example.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: my-service\n            port:\n              number: 80\n</code></pre> <p>\u64cd\u4f5c\u547d\u4ee4\uff1a</p> <pre><code>kubectl apply -f ingress.yaml\nkubectl get ingress\nkubectl describe ingress my-ingress\n</code></pre>"},{"location":"cloud/k8s/k8s/#33-horizontal-pod-autoscaler","title":"3.3 Horizontal Pod Autoscaler","text":"<p>Horizontal Pod Autoscaler \u6839\u636e CPU \u4f7f\u7528\u7387\u6216\u5176\u4ed6\u6307\u6807\u81ea\u52a8\u6269\u5c55 Pods\u3002</p> <p>Horizontal Pod Autoscaler \u7684\u914d\u7f6e\u793a\u4f8b\uff1a</p> <pre><code>apiVersion: autoscaling/v1\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: my-hpa\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: my-deployment\n  minReplicas: 1\n  maxReplicas: 10\n  targetCPUUtilizationPercentage: 80\n</code></pre> <p>\u64cd\u4f5c\u547d\u4ee4\uff1a</p> <pre><code>kubectl apply -f hpa.yaml\nkubectl get hpa\nkubectl describe hpa my-hpa\n</code></pre>"},{"location":"cloud/k8s/k8s/#34-cluster-autoscaler","title":"3.4 Cluster Autoscaler","text":"<p>Cluster Autoscaler \u81ea\u52a8\u8c03\u6574\u96c6\u7fa4\u4e2d\u8282\u70b9\u7684\u6570\u91cf\u4ee5\u9002\u5e94\u8d1f\u8f7d\u9700\u6c42\u3002</p> <p>\u90e8\u7f72 Cluster Autoscaler \u7684\u914d\u7f6e\u793a\u4f8b\uff1a</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: cluster-autoscaler\n  namespace: kube-system\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: cluster-autoscaler\n  template:\n    metadata:\n      labels:\n        app: cluster-autoscaler\n    spec:\n      containers:\n      - name: cluster-autoscaler\n        image: k8s.gcr.io/cluster-autoscaler:v1.21.0\n        command:\n        - ./cluster-autoscaler\n        - --v=4\n        - --cloud-provider=aws\n        - --cluster-name=my-cluster\n        - --namespace=kube-system\n</code></pre> <p>\u64cd\u4f5c\u547d\u4ee4\uff1a</p> <pre><code>kubectl apply -f cluster-autoscaler.yaml\nkubectl get deployments -n kube-system\nkubectl describe deployment cluster-autoscaler -n kube-system\n</code></pre>"},{"location":"cloud/k8s/k8s/#35","title":"3.5 \u76d1\u63a7\u548c\u65e5\u5fd7","text":"<ul> <li>Prometheus \u548c Grafana \u7528\u4e8e\u96c6\u7fa4\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u76d1\u63a7\u548c\u53ef\u89c6\u5316\u3002</li> </ul> <p>\u90e8\u7f72 Prometheus\uff1a</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: prometheus\n  namespace: monitoring\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: prometheus\n  template:\n    metadata:\n      labels:\n        app: prometheus\n    spec:\n      containers:\n      - name: prometheus\n        image: prom/prometheus:latest\n        args:\n        - \"--config.file=/etc/prometheus/prometheus.yml\"\n        volumeMounts:\n        - name: config-volume\n          mountPath: /etc/prometheus\n      volumes:\n      - name: config-volume\n        configMap:\n          name: prometheus-config\n</code></pre> <p>\u90e8\u7f72 Grafana\uff1a</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: grafana\n  namespace: monitoring\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: grafana\n  template:\n    metadata:\n      labels:\n        app: grafana\n    spec:\n      containers:\n      - name: grafana\n        image: grafana/grafana:latest\n        ports:\n        - containerPort: 3000\n</code></pre> <p>\u90e8\u7f72 ELK Stack\uff08Elasticsearch, Logstash, Kibana\uff09\u7528\u4e8e\u65e5\u5fd7\u7ba1\u7406\u548c\u5206\u6790\u3002</p> <p>\u90e8\u7f72 Elasticsearch\uff1a</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: elasticsearch\n  namespace: logging\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: elasticsearch\n  template:\n    metadata:\n      labels:\n        app: elasticsearch\n    spec:\n      containers:\n      - name: elasticsearch\n        image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1\n        env:\n        - name: discovery.type\n          value: single-node\n        ports:\n        - containerPort: 9200\n</code></pre> <p>\u597d\u7684\uff0c\u6211\u4eec\u7ee7\u7eed\u6df1\u5165\u63a2\u8ba8 Kubernetes \u7684\u66f4\u591a\u9ad8\u7ea7\u4e3b\u9898\uff0c\u5305\u62ec\u96c6\u7fa4\u7ba1\u7406\u3001\u8c03\u5ea6\u7b56\u7565\u3001\u7f51\u7edc\u63d2\u4ef6\u4ee5\u53ca\u4e00\u4e9b\u5b9e\u9645\u64cd\u4f5c\u793a\u4f8b\u3002</p>"},{"location":"cloud/k8s/k8s/#4-kubernetes","title":"4. Kubernetes \u9ad8\u7ea7\u4e3b\u9898","text":""},{"location":"cloud/k8s/k8s/#41-kubernetes","title":"4.1 Kubernetes \u8c03\u5ea6\u7b56\u7565","text":"<p>Kubernetes \u63d0\u4f9b\u4e86\u591a\u79cd\u8c03\u5ea6\u7b56\u7565\u6765\u7ba1\u7406 Pod \u7684\u8c03\u5ea6\u548c\u5206\u914d\u3002\u7406\u89e3\u8fd9\u4e9b\u7b56\u7565\u53ef\u4ee5\u5e2e\u52a9\u4f60\u4f18\u5316\u96c6\u7fa4\u7684\u8d44\u6e90\u5229\u7528\u548c\u6027\u80fd\u3002</p>"},{"location":"cloud/k8s/k8s/#411-pod","title":"4.1.1 Pod \u7684\u8c03\u5ea6","text":"<p>\u8c03\u5ea6\u662f Kubernetes \u5c06 Pod \u5206\u914d\u5230\u96c6\u7fa4\u4e2d\u9002\u5f53\u8282\u70b9\u4e0a\u7684\u8fc7\u7a0b\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cKubernetes \u4f1a\u9009\u62e9\u8d44\u6e90\u8db3\u591f\u4e14\u8d1f\u8f7d\u6700\u5c11\u7684\u8282\u70b9\u6765\u8fd0\u884c Pod\u3002\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\u5f71\u54cd\u8c03\u5ea6\u7b56\u7565\uff1a</p> <ul> <li>\u8282\u70b9\u9009\u62e9\u5668\uff08Node Selector\uff09\uff1a\u901a\u8fc7\u6807\u7b7e\u9009\u62e9\u7279\u5b9a\u7684\u8282\u70b9\u6765\u8fd0\u884c Pod\u3002</li> <li>\u8282\u70b9\u4eb2\u548c\u6027\uff08Node Affinity\uff09\uff1a\u901a\u8fc7\u66f4\u590d\u6742\u7684\u89c4\u5219\u6307\u5b9a Pod \u5e94\u8be5\u6216\u5fc5\u987b\u8c03\u5ea6\u5230\u7684\u8282\u70b9\u3002</li> <li>Pod \u4eb2\u548c\u6027\u4e0e\u53cd\u4eb2\u548c\u6027\uff08Pod Affinity &amp; Anti-Affinity\uff09\uff1a\u63a7\u5236 Pod \u4e0e\u5176\u4ed6 Pods \u7684\u8c03\u5ea6\u5173\u7cfb\u3002</li> </ul>"},{"location":"cloud/k8s/k8s/#412","title":"4.1.2 \u8282\u70b9\u9009\u62e9\u5668","text":"<p>\u8282\u70b9\u9009\u62e9\u5668\u662f\u4e00\u79cd\u7b80\u5355\u7684\u8c03\u5ea6\u7b56\u7565\uff0c\u5141\u8bb8\u4f60\u6307\u5b9a Pod \u53ea\u80fd\u8c03\u5ea6\u5230\u5177\u6709\u7279\u5b9a\u6807\u7b7e\u7684\u8282\u70b9\u4e0a\u3002</p> <p>\u793a\u4f8b\uff1a</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  containers:\n  - name: my-container\n    image: nginx:latest\n  nodeSelector:\n    disktype: ssd\n</code></pre> <p>\u8fd9\u4e2a\u793a\u4f8b\u4e2d\u7684 Pod \u53ea\u4f1a\u8c03\u5ea6\u5230\u5e26\u6709 <code>disktype=ssd</code> \u6807\u7b7e\u7684\u8282\u70b9\u4e0a\u3002</p>"},{"location":"cloud/k8s/k8s/#413","title":"4.1.3 \u8282\u70b9\u4eb2\u548c\u6027","text":"<p>\u8282\u70b9\u4eb2\u548c\u6027\u63d0\u4f9b\u4e86\u6bd4\u8282\u70b9\u9009\u62e9\u5668\u66f4\u7075\u6d3b\u7684\u8c03\u5ea6\u7b56\u7565\u3002\u5b83\u5141\u8bb8\u4f60\u6307\u5b9a\u8f6f\u6027\u548c\u786c\u6027\u8981\u6c42\u3002</p> <p>\u793a\u4f8b\uff1a</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  containers:\n  - name: my-container\n    image: nginx:latest\n  affinity:\n    nodeAffinity:\n      requiredDuringSchedulingIgnoredDuringExecution:\n        nodeSelectorTerms:\n        - matchExpressions:\n          - key: disktype\n            operator: In\n            values:\n            - ssd\n      preferredDuringSchedulingIgnoredDuringExecution:\n      - weight: 1\n        preference:\n          matchExpressions:\n          - key: region\n            operator: In\n            values:\n            - us-east-1\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0cPod \u5fc5\u987b\u8c03\u5ea6\u5230 <code>disktype=ssd</code> \u7684\u8282\u70b9\u4e0a\uff0c\u5e76\u4e14\u4f18\u5148\u9009\u62e9 <code>region=us-east-1</code> \u7684\u8282\u70b9\u3002</p>"},{"location":"cloud/k8s/k8s/#414-pod","title":"4.1.4 Pod \u4eb2\u548c\u6027\u4e0e\u53cd\u4eb2\u548c\u6027","text":"<p>Pod \u4eb2\u548c\u6027\u7528\u4e8e\u5c06\u4e00\u4e2a Pod \u8c03\u5ea6\u5230\u4e0e\u67d0\u4e9b\u6307\u5b9a Pod \u4f4d\u4e8e\u540c\u4e00\u8282\u70b9\u6216\u4e0d\u540c\u8282\u70b9\u4e0a\u3002</p> <p>\u793a\u4f8b\uff1a</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  containers:\n  - name: my-container\n    image: nginx:latest\n  affinity:\n    podAffinity:\n      requiredDuringSchedulingIgnoredDuringExecution:\n      - labelSelector:\n          matchExpressions:\n          - key: app\n            operator: In\n            values:\n            - my-app\n        topologyKey: \"kubernetes.io/hostname\"\n    podAntiAffinity:\n      requiredDuringSchedulingIgnoredDuringExecution:\n      - labelSelector:\n          matchExpressions:\n          - key: app\n            operator: In\n            values:\n            - another-app\n        topologyKey: \"kubernetes.io/hostname\"\n</code></pre> <p>\u8fd9\u4e2a\u793a\u4f8b\u8868\u793a Pod \u9700\u8981\u4e0e <code>app=my-app</code> \u7684 Pod \u4f4d\u4e8e\u540c\u4e00\u8282\u70b9\uff0c\u4f46\u4e0d\u4e0e <code>app=another-app</code> \u7684 Pod \u4f4d\u4e8e\u540c\u4e00\u8282\u70b9\u3002</p>"},{"location":"cloud/k8s/k8s/#42-kubernetes","title":"4.2 Kubernetes \u7f51\u7edc\u63d2\u4ef6","text":"<p>Kubernetes \u7f51\u7edc\u6a21\u578b\u5141\u8bb8\u6bcf\u4e2a Pod \u62e5\u6709\u4e00\u4e2a\u72ec\u7acb\u7684 IP \u5730\u5740\uff0c\u5e76\u4e14\u4e0d\u540c Pod \u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u901a\u4fe1\u3002\u7f51\u7edc\u63d2\u4ef6\uff08CNI \u63d2\u4ef6\uff09\u7528\u4e8e\u5b9e\u73b0\u8fd9\u79cd\u7f51\u7edc\u6a21\u578b\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u7f51\u7edc\u63d2\u4ef6\uff1a</p> <ul> <li>Flannel\uff1a\u4e00\u4e2a\u7b80\u5355\u7684\u7f51\u7edc\u63d2\u4ef6\uff0c\u9002\u5408\u5c0f\u578b\u96c6\u7fa4\uff0c\u63d0\u4f9b\u57fa\u672c\u7684\u7f51\u7edc\u529f\u80fd\u3002</li> <li>Calico\uff1a\u652f\u6301\u7f51\u7edc\u7b56\u7565\u3001BGP \u8def\u7531\u7b49\u9ad8\u7ea7\u529f\u80fd\uff0c\u9002\u5408\u5927\u89c4\u6a21\u96c6\u7fa4\u3002</li> <li>Weave\uff1a\u652f\u6301\u8de8\u6570\u636e\u4e2d\u5fc3\u7684\u7f51\u7edc\u901a\u4fe1\uff0c\u9002\u5408\u5206\u5e03\u5f0f\u96c6\u7fa4\u3002</li> <li>Cilium\uff1a\u57fa\u4e8e eBPF \u7684\u7f51\u7edc\u63d2\u4ef6\uff0c\u63d0\u4f9b\u9ad8\u6027\u80fd\u7684\u7f51\u7edc\u7b56\u7565\u548c\u5b89\u5168\u6027\u529f\u80fd\u3002</li> </ul>"},{"location":"cloud/k8s/k8s/#421-flannel","title":"4.2.1 Flannel","text":"<p>Flannel \u662f\u4e00\u4e2a\u7b80\u5355\u7684\u8986\u76d6\u7f51\u7edc\u63d2\u4ef6\uff0c\u9002\u5408\u5c0f\u578b\u96c6\u7fa4\u3002\u5b83\u901a\u8fc7 VXLAN \u6280\u672f\u5b9e\u73b0\u8de8\u8282\u70b9\u7684\u5bb9\u5668\u7f51\u7edc\u3002</p> <p>\u5b89\u88c5 Flannel\uff1a</p> <pre><code>kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\n</code></pre>"},{"location":"cloud/k8s/k8s/#422-calico","title":"4.2.2 Calico","text":"<p>Calico \u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u7f51\u7edc\u7b56\u7565\u548c\u5b89\u5168\u529f\u80fd\uff0c\u9002\u5408\u5927\u89c4\u6a21\u96c6\u7fa4\u3002</p> <p>\u5b89\u88c5 Calico\uff1a</p> <pre><code>kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml\n</code></pre>"},{"location":"cloud/k8s/k8s/#43-kubernetes","title":"4.3 Kubernetes \u5b58\u50a8","text":"<p>Kubernetes \u652f\u6301\u591a\u79cd\u5b58\u50a8\u65b9\u6848\uff0c\u6ee1\u8db3\u4e0d\u540c\u5e94\u7528\u7684\u6570\u636e\u6301\u4e45\u5316\u9700\u6c42\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u5b58\u50a8\u7c7b\u578b\uff1a</p> <ul> <li>PersistentVolume\uff08PV\uff09\u548c PersistentVolumeClaim\uff08PVC\uff09\uff1aPV \u662f\u96c6\u7fa4\u7ba1\u7406\u5458\u914d\u7f6e\u7684\u5b58\u50a8\u8d44\u6e90\uff0cPVC \u662f\u7528\u6237\u7533\u8bf7\u4f7f\u7528\u8fd9\u4e9b\u8d44\u6e90\u7684\u8bf7\u6c42\u3002PV \u4e0e PVC \u7684\u7ed1\u5b9a\u662f\u6301\u4e45\u5b58\u50a8\u7684\u57fa\u7840\u3002</li> <li>StorageClass\uff1a\u7528\u4e8e\u5b9a\u4e49\u52a8\u6001\u521b\u5efa PV \u7684\u7b56\u7565\uff0c\u652f\u6301\u4e0d\u540c\u7684\u5b58\u50a8\u540e\u7aef\uff0c\u5982 NFS\u3001Ceph\u3001AWS EBS \u7b49\u3002</li> </ul>"},{"location":"cloud/k8s/k8s/#431-persistentvolume-persistentvolumeclaim","title":"4.3.1 PersistentVolume \u548c PersistentVolumeClaim","text":"<p>PV \u662f\u96c6\u7fa4\u4e2d\u7684\u5b9e\u9645\u5b58\u50a8\u8d44\u6e90\uff0cPVC \u662f\u7528\u6237\u5bf9\u5b58\u50a8\u7684\u8bf7\u6c42\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u521b\u5efa PV \u548c PVC \u7684\u793a\u4f8b\uff1a</p> <p>PersistentVolume \u793a\u4f8b\uff1a</p> <pre><code>apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: my-pv\nspec:\n  capacity:\n    storage: 10Gi\n  accessModes:\n    - ReadWriteOnce\n  nfs:\n    path: /mnt/data\n    server: nfs-server.example.com\n</code></pre> <p>PersistentVolumeClaim \u793a\u4f8b\uff1a</p> <pre><code>apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: my-pvc\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 10Gi\n</code></pre>"},{"location":"cloud/k8s/k8s/#432-storageclass","title":"4.3.2 StorageClass","text":"<p>StorageClass \u5b9a\u4e49\u4e86\u52a8\u6001\u521b\u5efa PV \u7684\u5b58\u50a8\u7b56\u7565\u3002</p> <p>StorageClass \u793a\u4f8b\uff1a</p> <pre><code>apiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: fast\nprovisioner: kubernetes.io/aws-ebs\nparameters:\n  type: gp2\n  fsType: ext4\n</code></pre>"},{"location":"cloud/k8s/k8s/#44-kubernetes","title":"4.4 Kubernetes \u5b89\u5168","text":"<p>\u5b89\u5168\u6027\u662f Kubernetes \u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u65b9\u9762\uff0c\u6d89\u53ca\u5230\u8ba4\u8bc1\u3001\u6388\u6743\u3001\u7f51\u7edc\u7b56\u7565\u7b49\u591a\u4e2a\u5c42\u9762\u3002</p>"},{"location":"cloud/k8s/k8s/#441","title":"4.4.1 \u8ba4\u8bc1\u4e0e\u6388\u6743","text":"<ul> <li>\u8ba4\u8bc1\uff08Authentication\uff09\uff1aKubernetes \u652f\u6301\u591a\u79cd\u8ba4\u8bc1\u65b9\u5f0f\uff0c\u5305\u62ec X.509 \u5ba2\u6237\u7aef\u8bc1\u4e66\u3001Bearer Token\u3001OpenID Connect \u7b49\u3002</li> <li>\u6388\u6743\uff08Authorization\uff09\uff1aKubernetes \u4f7f\u7528 RBAC\uff08\u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236\uff09\u6765\u7ba1\u7406\u5bf9\u8d44\u6e90\u7684\u8bbf\u95ee\u6743\u9650\u3002</li> </ul> <p>RBAC \u793a\u4f8b\uff1a</p> <pre><code>apiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  namespace: default\n  name: pod-reader\nrules:\n- apiGroups: [\"\"]\n  resources: [\"pods\"]\n  verbs: [\"get\", \"watch\", \"list\"]\n</code></pre> <pre><code>apiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: read-pods\n  namespace: default\nsubjects:\n- kind: User\n  name: \"jane\"\n  apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: Role\n  name: pod-reader\n  apiGroup: rbac.authorization.k8s.io\n</code></pre>"},{"location":"cloud/k8s/k8s/#442","title":"4.4.2 \u7f51\u7edc\u7b56\u7565","text":"<p>NetworkPolicy \u7528\u4e8e\u63a7\u5236 Pods \u4e4b\u95f4\u7684\u7f51\u7edc\u6d41\u91cf\u3002</p> <p>NetworkPolicy \u793a\u4f8b\uff1a</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: allow-http\nspec:\n  podSelector:\n    matchLabels:\n      app: my-app\n  policyTypes:\n  - Ingress\n  ingress:\n  - from:\n    - podSelector:\n        matchLabels:\n          role: frontend\n    ports:\n    - protocol: TCP\n      port: 80\n</code></pre>"},{"location":"cloud/k8s/k8s/#45-kubernetes","title":"4.5 Kubernetes \u65e5\u5fd7\u4e0e\u76d1\u63a7","text":"<p>\u76d1\u63a7\u548c\u65e5\u5fd7\u7ba1\u7406\u662f Kubernetes \u8fd0\u8425\u7684\u91cd\u8981\u90e8\u5206\u3002</p>"},{"location":"cloud/k8s/k8s/#451-prometheus-grafana","title":"4.5.1 Prometheus \u4e0e Grafana","text":"<p>Prometheus \u662f\u4e00\u4e2a\u7528\u4e8e\u76d1\u63a7\u548c\u62a5\u8b66\u7684\u7cfb\u7edf\uff0cGrafana \u662f\u4e00\u4e2a\u7528\u4e8e\u6570\u636e\u53ef\u89c6\u5316\u7684\u5de5\u5177\u3002\u4e8c\u8005\u7ed3\u5408\u53ef\u5b9e\u73b0\u5f3a\u5927\u7684\u76d1\u63a7\u548c\u53ef\u89c6\u5316\u529f\u80fd\u3002</p> <p>Prometheus \u90e8\u7f72\u793a\u4f8b\uff1a</p> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prometheus-config\n  namespace: monitoring\ndata:\n  prometheus.yml: |\n    global:\n      scrape_interval: 15s\n    scrape_configs:\n      - job_name: 'kubernetes-apiservers'\n        kubernetes_sd_configs:\n          - role: endpoints\n</code></pre> <p>Grafana \u90e8\u7f72\u793a\u4f8b \uff1a</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: grafana\n  namespace: monitoring\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: grafana\n  template:\n    metadata:\n      labels:\n        app: grafana\n    spec:\n      containers:\n      - name: grafana\n        image: grafana/grafana:latest\n        ports:\n        - containerPort: 3000\n</code></pre>"},{"location":"cloud/k8s/k8s/#452","title":"4.5.2 \u65e5\u5fd7\u7ba1\u7406","text":"<p>Kubernetes \u65e5\u5fd7\u7ba1\u7406\u901a\u5e38\u4f7f\u7528 ELK Stack\uff08Elasticsearch, Logstash, Kibana\uff09\u3002\u5b83\u53ef\u4ee5\u5b9e\u73b0\u96c6\u4e2d\u5f0f\u65e5\u5fd7\u7ba1\u7406\u548c\u5206\u6790\u3002</p> <p>Elasticsearch \u90e8\u7f72\u793a\u4f8b\uff1a</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: elasticsearch\n  namespace: logging\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: elasticsearch\n  template:\n    metadata:\n      labels:\n        app: elasticsearch\n    spec:\n      containers:\n      - name: elasticsearch\n        image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1\n        env:\n        - name: discovery.type\n          value: single-node\n        ports:\n        - containerPort: 9200\n</code></pre>"},{"location":"cloud/prometheus/alert/","title":"Prometheus \u544a\u8b66","text":"<p>Prometheus \u7684\u544a\u8b66\u5904\u7406\u7cfb\u7edf\u5305\u62ec\u4e24\u4e2a\u6838\u5fc3\u90e8\u5206\uff1a\u544a\u8b66\u89c4\u5219 (Alerting Rules) \u548c Alertmanager\u3002Prometheus \u901a\u8fc7\u544a\u8b66\u89c4\u5219\u89e6\u53d1\u544a\u8b66\uff0c\u5c06\u5176\u53d1\u9001\u5230 Alertmanager\uff0cAlertmanager \u5219\u8d1f\u8d23\u5904\u7406\u544a\u8b66\u901a\u77e5\u7684\u53d1\u9001\u3001\u5206\u7ec4\u3001\u53bb\u91cd\u3001\u6291\u5236\u7b49\u64cd\u4f5c\u3002</p> <p>\u4e0b\u9762\u5c06\u901a\u8fc7\u4e00\u4e2a\u5b8c\u6574\u7684\u544a\u8b66\u914d\u7f6e\u793a\u4f8b\uff0c\u8be6\u7ec6\u8bb2\u89e3 Prometheus \u544a\u8b66\u5904\u7406\u7684\u6d41\u7a0b\u3002</p>"},{"location":"cloud/prometheus/alert/#1-prometheus","title":"1. Prometheus \u544a\u8b66\u89c4\u5219\u914d\u7f6e","text":"<p>Prometheus \u544a\u8b66\u89c4\u5219\u7528\u4e8e\u5b9a\u4e49\u89e6\u53d1\u544a\u8b66\u7684\u6761\u4ef6\uff0c\u544a\u8b66\u89c4\u5219\u4f1a\u57fa\u4e8e Prometheus \u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u5b9a\u671f\u8fdb\u884c\u8bc4\u4f30\u3002</p>"},{"location":"cloud/prometheus/alert/#11","title":"1.1 \u544a\u8b66\u89c4\u5219\u793a\u4f8b","text":"<p>\u5047\u8bbe\u6211\u4eec\u6709\u4ee5\u4e0b\u51e0\u4e2a\u9700\u6c42\uff1a - \u5f53\u67d0\u4e2a\u5b9e\u4f8b\u5b95\u673a\u8d85\u8fc7 5 \u5206\u949f\u65f6\u89e6\u53d1\u544a\u8b66\u3002 - \u5f53\u67d0\u5b9e\u4f8b\u7684 CPU \u4f7f\u7528\u7387\u8d85\u8fc7 80% \u4e14\u6301\u7eed 2 \u5206\u949f\u65f6\u89e6\u53d1\u544a\u8b66\u3002 - \u5f53\u67d0\u5b9e\u4f8b\u7684\u5185\u5b58\u4f7f\u7528\u7387\u8d85\u8fc7 90% \u4e14\u6301\u7eed 5 \u5206\u949f\u65f6\u89e6\u53d1\u544a\u8b66\u3002</p> <p>\u544a\u8b66\u89c4\u5219\u53ef\u4ee5\u914d\u7f6e\u5728 Prometheus \u7684\u89c4\u5219\u6587\u4ef6\u4e2d\uff0c\u4f8b\u5982 <code>alert.rules.yml</code>\uff1a</p> <pre><code>groups:\n  - name: example_alerts  # \u544a\u8b66\u7ec4\u540d\u79f0\n    rules:\n      - alert: InstanceDown  # \u544a\u8b66\u540d\u79f0\n        expr: up == 0  # \u544a\u8b66\u89e6\u53d1\u6761\u4ef6\n        for: 5m  # \u544a\u8b66\u89e6\u53d1\u524d\u9700\u6301\u7eed 5 \u5206\u949f\n        labels:\n          severity: critical  # \u544a\u8b66\u6807\u7b7e\uff0c\u8868\u793a\u4e25\u91cd\u6027\n        annotations:\n          summary: \"Instance {{ $labels.instance }} down\"  # \u7b80\u8981\u63cf\u8ff0\n          description: \"Instance {{ $labels.instance }} has been down for more than 5 minutes.\"  # \u8be6\u7ec6\u63cf\u8ff0\n\n      - alert: HighCpuUsage  # \u544a\u8b66\u540d\u79f0\n        expr: sum(rate(node_cpu_seconds_total{mode!=\"idle\"}[5m])) by (instance) &gt; 0.8  # \u544a\u8b66\u6761\u4ef6\n        for: 2m  # \u6761\u4ef6\u9700\u6ee1\u8db3 2 \u5206\u949f\n        labels:\n          severity: warning\n        annotations:\n          summary: \"High CPU usage on {{ $labels.instance }}\"\n          description: \"CPU usage on instance {{ $labels.instance }} has been above 80% for more than 2 minutes.\"\n\n      - alert: HighMemoryUsage\n        expr: node_memory_Active_bytes / node_memory_MemTotal_bytes &gt; 0.9  # \u5185\u5b58\u4f7f\u7528\u7387\u8d85\u8fc7 90%\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: \"High memory usage on {{ $labels.instance }}\"\n          description: \"Memory usage on instance {{ $labels.instance }} has been above 90% for more than 5 minutes.\"\n</code></pre>"},{"location":"cloud/prometheus/alert/#12","title":"1.2 \u544a\u8b66\u89c4\u5219\u5b57\u6bb5\u89e3\u91ca","text":"<ul> <li>alert\uff1a\u544a\u8b66\u7684\u540d\u79f0\u3002</li> <li>expr\uff1a\u4f7f\u7528 PromQL \u8868\u8fbe\u5f0f\u5b9a\u4e49\u544a\u8b66\u6761\u4ef6\u3002</li> <li>for\uff1a\u6761\u4ef6\u9700\u8981\u6301\u7eed\u591a\u957f\u65f6\u95f4\u624d\u4f1a\u89e6\u53d1\u544a\u8b66\u3002</li> <li>labels\uff1a\u7528\u4e8e\u5bf9\u544a\u8b66\u6253\u6807\u7b7e\uff08\u5982 <code>severity</code> \u8868\u793a\u544a\u8b66\u4e25\u91cd\u6027\uff09\u3002</li> <li>annotations\uff1a\u9644\u52a0\u7684\u544a\u8b66\u63cf\u8ff0\u4fe1\u606f\uff0c\u901a\u5e38\u7528\u4e8e\u751f\u6210\u544a\u8b66\u901a\u77e5\u3002</li> </ul>"},{"location":"cloud/prometheus/alert/#13","title":"1.3 \u5f15\u7528\u544a\u8b66\u89c4\u5219","text":"<p>\u9700\u8981\u5728 Prometheus \u7684\u4e3b\u914d\u7f6e\u6587\u4ef6 <code>prometheus.yml</code> \u4e2d\u5f15\u7528\u544a\u8b66\u89c4\u5219\u6587\u4ef6\uff1a</p> <pre><code>rule_files:\n  - 'alert.rules.yml'\n</code></pre>"},{"location":"cloud/prometheus/alert/#2-alertmanager","title":"2. Alertmanager \u914d\u7f6e","text":"<p>Alertmanager \u8d1f\u8d23\u63a5\u6536 Prometheus \u53d1\u51fa\u7684\u544a\u8b66\uff0c\u5e76\u6839\u636e\u9884\u8bbe\u89c4\u5219\u5904\u7406\u544a\u8b66\u901a\u77e5\u3002\u4f60\u53ef\u4ee5\u4e3a\u4e0d\u540c\u7684\u544a\u8b66\u5b9a\u4e49\u4e0d\u540c\u7684\u901a\u77e5\u65b9\u5f0f\u548c\u63a5\u6536\u8005\u3002</p>"},{"location":"cloud/prometheus/alert/#21-alertmanager","title":"2.1 Alertmanager \u914d\u7f6e\u793a\u4f8b","text":"<p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u57fa\u672c\u7684 <code>alertmanager.yml</code> \u914d\u7f6e\u6587\u4ef6\u793a\u4f8b\uff0c\u5305\u542b\u90ae\u4ef6\u548c Slack \u4e24\u79cd\u901a\u77e5\u6e20\u9053\u3002</p> <pre><code>global:\n  resolve_timeout: 5m  # \u544a\u8b66\u89e3\u51b3\u7684\u8d85\u65f6\u65f6\u95f4\n\nroute:\n  receiver: 'default'  # \u9ed8\u8ba4\u63a5\u6536\u5668\n  group_by: ['alertname', 'instance']  # \u544a\u8b66\u5206\u7ec4\u4f9d\u636e\n  group_wait: 30s  # \u7b2c\u4e00\u6b21\u901a\u77e5\u524d\u7684\u7b49\u5f85\u65f6\u95f4\n  group_interval: 5m  # \u7ec4\u5185\u544a\u8b66\u53d1\u9001\u7684\u6700\u5c0f\u95f4\u9694\u65f6\u95f4\n  repeat_interval: 1h  # \u76f8\u540c\u544a\u8b66\u91cd\u590d\u53d1\u9001\u7684\u6700\u5c0f\u95f4\u9694\u65f6\u95f4\n\n  routes:\n    - match:\n        severity: critical  # \u5339\u914d\u544a\u8b66\u4e25\u91cd\u6027\u4e3a critical\n      receiver: 'critical-team'  # \u5c06\u4e25\u91cd\u544a\u8b66\u53d1\u9001\u5230\u7279\u5b9a\u63a5\u6536\u8005\n    - match:\n        severity: warning  # \u5339\u914d\u544a\u8b66\u4e25\u91cd\u6027\u4e3a warning\n      receiver: 'warning-team'  # \u5c06 warning \u544a\u8b66\u53d1\u9001\u5230\u53e6\u4e00\u4e2a\u63a5\u6536\u8005\n\nreceivers:\n  - name: 'default'\n    email_configs:\n      - to: 'admin@example.com'  # \u9ed8\u8ba4\u544a\u8b66\u63a5\u6536\u8005\u90ae\u7bb1\n        from: 'alertmanager@example.com'\n        smarthost: 'smtp.example.com:587'\n        auth_username: 'alertmanager@example.com'\n        auth_password: 'password'\n\n  - name: 'critical-team'\n    slack_configs:\n      - api_url: 'https://hooks.slack.com/services/T000/B000/XXXX'  # Slack Webhook URL\n        channel: '#critical-alerts'  # Slack \u9891\u9053\n\n  - name: 'warning-team'\n    slack_configs:\n      - api_url: 'https://hooks.slack.com/services/T000/B000/YYYY'\n        channel: '#warning-alerts'\n</code></pre>"},{"location":"cloud/prometheus/alert/#22","title":"2.2 \u5173\u952e\u5b57\u6bb5\u89e3\u91ca","text":"<ul> <li>global\uff1a\u5168\u5c40\u914d\u7f6e\uff0c\u5305\u542b\u544a\u8b66\u7684\u8d85\u65f6\u7b49\u8bbe\u7f6e\u3002</li> <li>route\uff1a\u544a\u8b66\u8def\u7531\u89c4\u5219\uff0c\u51b3\u5b9a\u5982\u4f55\u53d1\u9001\u544a\u8b66\u53ca\u5176\u5206\u7ec4\u65b9\u5f0f\u3002</li> <li>routes\uff1a\u5b9a\u4e49\u5b50\u8def\u7531\uff0c\u6839\u636e\u544a\u8b66\u7684\u6807\u7b7e\u5339\u914d\u4e0d\u540c\u7684\u63a5\u6536\u5668\u3002\u4f8b\u5982\uff0c<code>severity</code> \u4e3a <code>critical</code> \u7684\u544a\u8b66\u53ef\u4ee5\u53d1\u9001\u5230\u6307\u5b9a\u56e2\u961f\u3002</li> <li>receivers\uff1a\u5b9a\u4e49\u63a5\u6536\u544a\u8b66\u7684\u76ee\u6807\uff0c\u53ef\u4ee5\u914d\u7f6e\u591a\u4e2a\u63a5\u6536\u5668\uff0c\u4f8b\u5982\u7535\u5b50\u90ae\u4ef6\u3001Slack \u7b49\u3002</li> </ul>"},{"location":"cloud/prometheus/alert/#23","title":"2.3 \u914d\u7f6e\u591a\u4e2a\u63a5\u6536\u6e20\u9053","text":"<p>\u9664\u4e86\u90ae\u4ef6\uff0cAlertmanager \u8fd8\u652f\u6301\u5176\u4ed6\u6e20\u9053\uff0c\u6bd4\u5982 Slack\u3001PagerDuty\u3001Webhook \u7b49\u3002\u4f60\u53ef\u4ee5\u5728 <code>receivers</code> \u4e2d\u6839\u636e\u9700\u8981\u6dfb\u52a0\u591a\u79cd\u63a5\u6536\u65b9\u5f0f\u3002</p>"},{"location":"cloud/prometheus/alert/#3","title":"3. \u90e8\u7f72\u548c\u8fd0\u884c","text":""},{"location":"cloud/prometheus/alert/#31-prometheus","title":"3.1 \u542f\u52a8 Prometheus","text":"<p>\u786e\u4fdd Prometheus \u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u5f15\u7528\u4e86\u544a\u8b66\u89c4\u5219\u6587\u4ef6\uff0c\u5e76\u542f\u52a8 Prometheus\uff1a</p> <pre><code>./prometheus --config.file=prometheus.yml\n</code></pre>"},{"location":"cloud/prometheus/alert/#32-alertmanager","title":"3.2 \u542f\u52a8 Alertmanager","text":"<p>\u786e\u4fdd <code>alertmanager.yml</code> \u914d\u7f6e\u6b63\u786e\uff0c\u5e76\u542f\u52a8 Alertmanager\uff1a</p> <pre><code>./alertmanager --config.file=alertmanager.yml\n</code></pre>"},{"location":"cloud/prometheus/alert/#4","title":"4. \u9ad8\u7ea7\u529f\u80fd","text":""},{"location":"cloud/prometheus/alert/#41-silencing","title":"4.1 \u544a\u8b66\u6291\u5236\uff08Silencing\uff09","text":"<p>\u544a\u8b66\u6291\u5236\u7528\u4e8e\u5728\u7279\u5b9a\u65f6\u95f4\u6bb5\u5185\uff08\u4f8b\u5982\u7ef4\u62a4\u671f\u95f4\uff09\u9759\u9ed8\u544a\u8b66\uff0c\u907f\u514d\u6536\u5230\u4e0d\u5fc5\u8981\u7684\u544a\u8b66\u901a\u77e5\u3002\u4f60\u53ef\u4ee5\u5728 Alertmanager \u7684 UI \u4e2d\u624b\u52a8\u6dfb\u52a0\u9759\u9ed8\u89c4\u5219\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 API \u52a8\u6001\u521b\u5efa\u3002</p> <p>\u901a\u8fc7 API \u521b\u5efa\u9759\u9ed8\u89c4\u5219\u7684\u793a\u4f8b\uff1a</p> <pre><code>curl -XPOST \"http://alertmanager/api/v1/silences\" -d '{\n  \"matchers\": [{\"name\": \"instance\", \"value\": \"web-server-01\"}],\n  \"startsAt\": \"2024-09-24T10:00:00Z\",\n  \"endsAt\": \"2024-09-24T12:00:00Z\",\n  \"createdBy\": \"admin\",\n  \"comment\": \"Scheduled maintenance\"\n}'\n</code></pre>"},{"location":"cloud/prometheus/alert/#42","title":"4.2 \u544a\u8b66\u5206\u7ec4\u4e0e\u53bb\u91cd","text":"<p>Alertmanager \u652f\u6301\u544a\u8b66\u7684\u5206\u7ec4\u4e0e\u53bb\u91cd\u3002\u5728 <code>route</code> \u4e2d\u7684 <code>group_by</code> \u5b57\u6bb5\u5b9a\u4e49\u544a\u8b66\u7684\u5206\u7ec4\u4f9d\u636e\u3002\u4f8b\u5982\uff0c\u6309 <code>alertname</code> \u548c <code>instance</code> \u8fdb\u884c\u5206\u7ec4\u65f6\uff0c\u540c\u7c7b\u544a\u8b66\u5c06\u5408\u5e76\u4e3a\u4e00\u4e2a\u901a\u77e5\uff0c\u4ee5\u51cf\u5c11\u901a\u77e5\u6b21\u6570\u3002\u53bb\u91cd\u529f\u80fd\u786e\u4fdd\u76f8\u540c\u7684\u544a\u8b66\u4e0d\u4f1a\u88ab\u591a\u6b21\u901a\u77e5\u3002</p>"},{"location":"cloud/prometheus/alert/#5","title":"5. \u5b8c\u6574\u544a\u8b66\u5904\u7406\u6d41\u7a0b","text":"<ol> <li> <p>Prometheus \u89e6\u53d1\u544a\u8b66\uff1aPrometheus \u6839\u636e\u5b9a\u4e49\u7684\u544a\u8b66\u89c4\u5219\u5b9a\u671f\u8bc4\u4f30\u6307\u6807\u6570\u636e\u3002\u5f53\u544a\u8b66\u6761\u4ef6\u6ee1\u8db3\u65f6\uff0cPrometheus \u4f1a\u751f\u6210\u544a\u8b66\uff0c\u5e76\u5c06\u544a\u8b66\u4fe1\u606f\u53d1\u9001\u7ed9 Alertmanager\u3002</p> </li> <li> <p>Alertmanager \u5904\u7406\u544a\u8b66\uff1a</p> <ul> <li>\u53bb\u91cd\uff1aAlertmanager \u5bf9\u91cd\u590d\u7684\u544a\u8b66\u8fdb\u884c\u53bb\u91cd\u3002</li> <li>\u5206\u7ec4\uff1a\u6839\u636e\u914d\u7f6e\uff0c\u5c06\u76f8\u4f3c\u7684\u544a\u8b66\u8fdb\u884c\u5206\u7ec4\u3002</li> <li>\u6291\u5236\uff1a\u6839\u636e\u9759\u9ed8\u89c4\u5219\uff0c\u6291\u5236\u4e0d\u5fc5\u8981\u7684\u544a\u8b66\u3002</li> <li>\u53d1\u9001\u901a\u77e5\uff1a\u6839\u636e\u8def\u7531\u89c4\u5219\uff0cAlertmanager \u5c06\u544a\u8b66\u53d1\u9001\u5230\u9884\u5b9a\u4e49\u7684\u63a5\u6536\u8005\uff08\u5982\u90ae\u4ef6\u3001Slack \u7b49\uff09\u3002</li> </ul> </li> <li> <p>\u544a\u8b66\u6062\u590d\uff1a\u5f53\u95ee\u9898\u89e3\u51b3\u65f6\uff0cPrometheus \u4f1a\u81ea\u52a8\u66f4\u65b0\u544a\u8b66\u72b6\u6001\uff0cAlertmanager \u5c06\u544a\u8b66\u6062\u590d\u4fe1\u606f\u53d1\u9001\u7ed9\u76f8\u5173\u63a5\u6536\u8005\u3002</p> </li> </ol>"},{"location":"cloud/prometheus/alert/#6","title":"6. \u5b9e\u8df5\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u544a\u8b66\u89c4\u5219\u8bbe\u8ba1\uff1a\u8bbe\u8ba1\u544a\u8b66\u89c4\u5219\u65f6\uff0c\u5c3d\u91cf\u907f\u514d\u544a\u8b66\u98ce\u66b4\u3002\u5e94\u9002\u5f53\u4f7f\u7528 <code>for</code> \u786e\u4fdd\u77ed\u6682\u7684\u6307\u6807\u6ce2\u52a8\u4e0d\u4f1a\u89e6\u53d1\u544a\u8b66\u3002</li> <li>\u9759\u9ed8\u7b56\u7565\uff1a\u5728\u8fdb\u884c\u8ba1\u5212\u5185\u7ef4\u62a4\u6216\u5927\u89c4\u6a21\u90e8\u7f72\u65f6\uff0c\u53ef\u4ee5\u63d0\u524d\u8bbe\u7f6e\u9759\u9ed8\u89c4\u5219\uff0c\u907f\u514d\u6536\u5230\u5927\u91cf\u65e0\u7528\u7684\u544a\u8b66\u3002</li> <li>\u591a\u6e20\u9053\u544a\u8b66\uff1a\u5bf9\u4e8e\u91cd\u8981\u7684\u544a\u8b66\uff0c\u5efa\u8bae\u914d\u7f6e\u591a\u6e20\u9053\u901a\u77e5\uff08\u5982\u90ae\u4ef6\u3001\u77ed\u4fe1\u3001\u5373\u65f6\u901a\u8baf\u5de5\u5177\uff09\uff0c\u4ee5\u786e\u4fdd\u544a\u8b66\u4fe1\u606f\u80fd\u591f\u53ca\u65f6\u88ab\u5904\u7406\u3002</li> </ul>"},{"location":"cloud/prometheus/alert/#_1","title":"\u7ed3\u8bba","text":"<p>\u901a\u8fc7\u914d\u7f6e Prometheus \u7684\u544a\u8b66\u89c4\u5219\u548c Alertmanager\uff0c\u4f60\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a\u5f3a\u5927\u7684\u544a\u8b66\u7cfb\u7edf\uff0c\u5e2e\u52a9\u53ca\u65f6\u76d1\u63a7\u670d\u52a1\u72b6\u6001\u5e76\u5904\u7406\u5404\u79cd\u5f02\u5e38\u3002</p>"},{"location":"cloud/prometheus/basic/","title":"Prometheus \u6559\u7a0b","text":""},{"location":"cloud/prometheus/basic/#prometheus_1","title":"\u4e00\u3001Prometheus \u6982\u8ff0","text":"<p>Prometheus \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u7cfb\u7edf\u76d1\u63a7\u548c\u62a5\u8b66\u5de5\u5177\uff0c\u4e13\u6ce8\u4e8e\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u7684\u5b58\u50a8\u3001\u67e5\u8be2\u3001\u62a5\u8b66\u4ee5\u53ca\u53ef\u89c6\u5316\u3002</p>"},{"location":"cloud/prometheus/basic/#11-prometheus","title":"1.1 Prometheus \u7684\u4e3b\u8981\u7279\u70b9","text":"<ul> <li>\u591a\u7ef4\u6570\u636e\u6a21\u578b\uff1a\u4f7f\u7528\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u6a21\u578b\uff0c\u652f\u6301\u4e30\u5bcc\u7684\u6807\u7b7e\u7cfb\u7edf\u3002</li> <li>\u7075\u6d3b\u7684\u67e5\u8be2\u8bed\u8a00\uff08PromQL\uff09\uff1a\u63d0\u4f9b\u5f3a\u5927\u7684\u6570\u636e\u67e5\u8be2\u548c\u805a\u5408\u529f\u80fd\u3002</li> <li>\u65e0\u4f9d\u8d56\u7684\u5b58\u50a8\uff1a\u5185\u90e8\u5b58\u50a8\u65f6\u95f4\u5e8f\u5217\u6570\u636e\uff0c\u652f\u6301\u9ad8\u6548\u7684\u67e5\u8be2\u548c\u62a5\u8b66\u3002</li> <li>\u9ad8\u6548\u7684\u6293\u53d6\u673a\u5236\uff1a\u5468\u671f\u6027\u6293\u53d6\u76ee\u6807\u7684\u6307\u6807\u6570\u636e\u3002</li> </ul>"},{"location":"cloud/prometheus/basic/#12","title":"1.2 \u4e3b\u8981\u7ec4\u4ef6","text":"<ol> <li>Prometheus Server\uff1a\u8d1f\u8d23\u6293\u53d6\u3001\u5b58\u50a8\u3001\u67e5\u8be2\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u3002</li> <li>Exporters\uff1a\u5c06\u5e94\u7528\u7a0b\u5e8f\u548c\u7cfb\u7edf\u7684\u5185\u90e8\u72b6\u6001\u66b4\u9732\u7ed9 Prometheus\u3002</li> <li>Alertmanager\uff1a\u7ba1\u7406\u548c\u8def\u7531 Prometheus \u7684\u62a5\u8b66\u3002</li> <li>Grafana\uff1a\u53ef\u89c6\u5316\u5de5\u5177\uff0c\u901a\u8fc7 Prometheus \u6570\u636e\u6e90\u751f\u6210\u56fe\u8868\u548c\u4eea\u8868\u76d8\u3002</li> </ol>"},{"location":"cloud/prometheus/basic/#prometheus_2","title":"\u4e8c\u3001Prometheus \u5b89\u88c5\u4e0e\u914d\u7f6e","text":""},{"location":"cloud/prometheus/basic/#21-prometheus","title":"2.1 \u5b89\u88c5 Prometheus","text":""},{"location":"cloud/prometheus/basic/#211","title":"2.1.1 \u4ece\u6e90\u4ee3\u7801\u5b89\u88c5","text":"<ol> <li> <p>\u4e0b\u8f7d Prometheus\uff1a <pre><code>   wget https://github.com/prometheus/prometheus/releases/download/v2.44.0/prometheus-2.44.0.linux-amd64.tar.gz\n</code></pre></p> </li> <li> <p>\u89e3\u538b\u5e76\u8fdb\u5165\u76ee\u5f55\uff1a <pre><code>   tar -xzf prometheus-2.44.0.linux-amd64.tar.gz\n   cd prometheus-2.44.0.linux-amd64\n</code></pre></p> </li> <li> <p>\u542f\u52a8 Prometheus\uff1a <pre><code>   ./prometheus --config.file=prometheus.yml\n</code></pre></p> </li> </ol>"},{"location":"cloud/prometheus/basic/#212-docker","title":"2.1.2 \u4f7f\u7528 Docker \u5b89\u88c5","text":"<ol> <li> <p>\u62c9\u53d6 Prometheus \u955c\u50cf\uff1a <pre><code>   docker pull prom/prometheus\n</code></pre></p> </li> <li> <p>\u542f\u52a8 Prometheus \u5bb9\u5668\uff1a <pre><code>   docker run -d -p 9090:9090 --name prometheus prom/prometheus\n</code></pre></p> </li> </ol>"},{"location":"cloud/prometheus/basic/#22-prometheus","title":"2.2 \u914d\u7f6e Prometheus","text":"<p>\u914d\u7f6e\u6587\u4ef6 <code>prometheus.yml</code> \u7528\u4e8e\u5b9a\u4e49 Prometheus \u7684\u6293\u53d6\u76ee\u6807\u548c\u914d\u7f6e\u3002</p> <p>\u793a\u4f8b\u914d\u7f6e\uff1a <pre><code>global:\n  scrape_interval: 15s\n\nscrape_configs:\n  - job_name: 'prometheus'\n    static_configs:\n      - targets: ['localhost:9090']\n</code></pre></p>"},{"location":"cloud/prometheus/basic/#prometheus_3","title":"\u4e09\u3001Prometheus \u6570\u636e\u6a21\u578b\u4e0e\u67e5\u8be2\u8bed\u8a00","text":""},{"location":"cloud/prometheus/basic/#31","title":"3.1 \u6570\u636e\u6a21\u578b","text":"<p>Prometheus \u7684\u6570\u636e\u6a21\u578b\u5305\u62ec\uff1a</p> <ul> <li>\u6307\u6807\u540d\u79f0\uff1a\u4f8b\u5982 <code>http_requests_total</code>\u3002</li> <li>\u6807\u7b7e\uff1a\u7528\u4e8e\u6807\u8bc6\u4e0d\u540c\u7684\u65f6\u95f4\u5e8f\u5217\uff0c\u4f8b\u5982 <code>method=\"GET\"</code>, <code>status=\"200\"</code>\u3002</li> <li>\u65f6\u95f4\u6233\uff1a\u6837\u672c\u7684\u65f6\u95f4\u70b9\u3002</li> <li>\u503c\uff1a\u65f6\u95f4\u6233\u5bf9\u5e94\u7684\u5ea6\u91cf\u503c\u3002</li> </ul>"},{"location":"cloud/prometheus/basic/#32-promql","title":"3.2 PromQL \u67e5\u8be2\u8bed\u8a00","text":"<p>PromQL \u662f\u7528\u4e8e\u67e5\u8be2 Prometheus \u6570\u636e\u7684\u5f3a\u5927\u5de5\u5177\u3002</p> <p>\u57fa\u672c\u67e5\u8be2\u793a\u4f8b\uff1a</p> <ul> <li> <p>\u83b7\u53d6\u6240\u6709 <code>http_requests_total</code> \u6307\u6807\u6570\u636e\uff1a <pre><code>  http_requests_total\n</code></pre></p> </li> <li> <p>\u8ba1\u7b97\u6bcf\u79d2\u8bf7\u6c42\u901f\u7387\uff1a <pre><code>  rate(http_requests_total[5m])\n</code></pre></p> </li> <li> <p>\u8ba1\u7b97\u8bf7\u6c42\u603b\u6570\u7684\u5e73\u5747\u503c\uff1a <pre><code>  avg(http_requests_total)\n</code></pre></p> </li> <li> <p>\u8ba1\u7b97\u9519\u8bef\u7387\uff1a <pre><code>  rate(http_requests_total{status=\"500\"}[5m]) / rate(http_requests_total[5m])\n</code></pre></p> </li> </ul>"},{"location":"cloud/prometheus/basic/#33-promql","title":"3.3 PromQL \u51fd\u6570\u4e0e\u64cd\u4f5c\u7b26","text":"<p>PromQL \u63d0\u4f9b\u4e86\u591a\u79cd\u51fd\u6570\u548c\u64cd\u4f5c\u7b26\u7528\u4e8e\u6570\u636e\u5904\u7406\uff1a</p> <ul> <li>\u805a\u5408\u51fd\u6570\uff1a<code>sum()</code>, <code>avg()</code>, <code>max()</code>, <code>min()</code></li> <li>\u6570\u5b66\u8fd0\u7b97\uff1a<code>+</code>, <code>-</code>, <code>*</code>, <code>/</code></li> <li>\u65f6\u95f4\u51fd\u6570\uff1a<code>rate()</code>, <code>increase()</code>, <code>histogram_quantile()</code></li> </ul>"},{"location":"cloud/prometheus/basic/#prometheus-exporters","title":"\u56db\u3001Prometheus \u4e0e Exporters","text":""},{"location":"cloud/prometheus/basic/#41-exporters","title":"4.1 Exporters \u4ecb\u7ecd","text":"<p>Exporters \u5c06\u5e94\u7528\u7a0b\u5e8f\u548c\u7cfb\u7edf\u7684\u72b6\u6001\u6570\u636e\u8f6c\u5316\u4e3a Prometheus \u53ef\u4ee5\u6293\u53d6\u7684\u683c\u5f0f\u3002</p>"},{"location":"cloud/prometheus/basic/#42-exporters","title":"4.2 \u5e38\u7528 Exporters","text":"<ol> <li> <p>Node Exporter\uff1a\u76d1\u63a7\u64cd\u4f5c\u7cfb\u7edf\u7ea7\u522b\u7684\u6307\u6807\u3002</p> <ul> <li>\u5b89\u88c5\uff1a <pre><code>     wget https://github.com/prometheus/node_exporter/releases/download/v1.5.0/node_exporter-1.5.0.linux-amd64.tar.gz\n     tar -xzf node_exporter-1.5.0.linux-amd64.tar.gz\n     cd node_exporter-1.5.0.linux-amd64\n     ./node_exporter\n</code></pre></li> </ul> </li> <li> <p>Blackbox Exporter\uff1a\u76d1\u63a7\u7f51\u7edc\u670d\u52a1\u7684\u53ef\u7528\u6027\u3002</p> <ul> <li>\u5b89\u88c5\uff1a <pre><code>     docker run -d -p 9115:9115 --name blackbox_exporter prom/blackbox-exporter\n</code></pre></li> </ul> </li> <li> <p>MySQL Exporter\uff1a\u76d1\u63a7 MySQL \u6570\u636e\u5e93\u7684\u72b6\u6001\u3002</p> <ul> <li>\u5b89\u88c5\uff1a <pre><code>     docker run -d -p 9104:9104 --name mysql_exporter prom/mysqld_exporter\n</code></pre></li> </ul> </li> </ol>"},{"location":"cloud/prometheus/basic/#43-prometheus-exporter","title":"4.3 \u914d\u7f6e Prometheus \u6293\u53d6 Exporter \u6570\u636e","text":"<p>\u793a\u4f8b\u914d\u7f6e\uff1a <pre><code>scrape_configs:\n  - job_name: 'node_exporter'\n    static_configs:\n      - targets: ['localhost:9100']\n\n  - job_name: 'mysql_exporter'\n    static_configs:\n      - targets: ['localhost:9104']\n</code></pre></p>"},{"location":"cloud/prometheus/basic/#prometheus-grafana","title":"\u4e94\u3001Prometheus \u4e0e Grafana \u96c6\u6210","text":""},{"location":"cloud/prometheus/basic/#51-grafana","title":"5.1 \u5b89\u88c5 Grafana","text":""},{"location":"cloud/prometheus/basic/#511-docker","title":"5.1.1 \u4f7f\u7528 Docker \u5b89\u88c5","text":"<ol> <li> <p>\u62c9\u53d6 Grafana \u955c\u50cf\uff1a <pre><code>   docker pull grafana/grafana\n</code></pre></p> </li> <li> <p>\u542f\u52a8 Grafana \u5bb9\u5668\uff1a <pre><code>   docker run -d -p 3000:3000 --name grafana grafana/grafana\n</code></pre></p> </li> </ol>"},{"location":"cloud/prometheus/basic/#512","title":"5.1.2 \u4f7f\u7528\u4e8c\u8fdb\u5236\u6587\u4ef6\u5b89\u88c5","text":"<ol> <li> <p>\u4e0b\u8f7d\u5e76\u89e3\u538b Grafana\uff1a <pre><code>   wget https://dl.grafana.com/oss/release/grafana-9.5.1.linux-amd64.tar.gz\n   tar -zxvf grafana-9.5.1.linux-amd64.tar.gz\n</code></pre></p> </li> <li> <p>\u542f\u52a8 Grafana\uff1a <pre><code>   cd grafana-9.5.1\n   ./bin/grafana-server web\n</code></pre></p> </li> </ol>"},{"location":"cloud/prometheus/basic/#52-grafana","title":"5.2 \u914d\u7f6e Grafana \u6570\u636e\u6e90","text":"<ol> <li>\u767b\u5f55 Grafana Web \u754c\u9762\uff08\u9ed8\u8ba4\u7aef\u53e3 3000\uff09\u3002</li> <li>\u70b9\u51fb\u5de6\u4fa7\u201c\u9f7f\u8f6e\u201d\u56fe\u6807\uff0c\u9009\u62e9\u201cData Sources\u201d\u3002</li> <li>\u9009\u62e9 \u201cPrometheus\u201d \u4f5c\u4e3a\u6570\u636e\u6e90\uff0c\u5e76\u914d\u7f6e Prometheus \u670d\u52a1\u5668\u5730\u5740\uff08\u5982 <code>http://localhost:9090</code>\uff09\u3002</li> <li>\u70b9\u51fb\u201cSave &amp; Test\u201d\u4fdd\u5b58\u6570\u636e\u6e90\u914d\u7f6e\u3002</li> </ol>"},{"location":"cloud/prometheus/basic/#53","title":"5.3 \u521b\u5efa\u4eea\u8868\u76d8","text":"<ol> <li>\u5728 Grafana \u4e2d\uff0c\u70b9\u51fb\u5de6\u4fa7\u7684\u201c+\u201d\u56fe\u6807\uff0c\u9009\u62e9\u201cDashboard\u201d\u3002</li> <li>\u6dfb\u52a0\u9762\u677f\u5e76\u914d\u7f6e PromQL \u67e5\u8be2\u4ee5\u5c55\u793a\u6570\u636e\u3002</li> <li>\u6839\u636e\u9700\u8981\u8c03\u6574\u56fe\u8868\u7c7b\u578b\u3001\u65f6\u95f4\u8303\u56f4\u7b49\u8bbe\u7f6e\u3002</li> </ol>"},{"location":"cloud/prometheus/basic/#prometheus_4","title":"\u516d\u3001Prometheus \u544a\u8b66\u7ba1\u7406","text":""},{"location":"cloud/prometheus/basic/#61","title":"6.1 \u914d\u7f6e\u544a\u8b66\u89c4\u5219","text":"<p>\u544a\u8b66\u89c4\u5219\u7528\u4e8e\u5b9a\u4e49\u89e6\u53d1\u544a\u8b66\u7684\u6761\u4ef6\u3002</p> <p>\u793a\u4f8b\u544a\u8b66\u89c4\u5219\uff1a <pre><code>groups:\n  - name: example\n    rules:\n      - alert: HighErrorRate\n        expr: rate(http_requests_total{status=\"500\"}[5m]) &gt; 0.05\n        for: 10m\n        labels:\n          severity: critical\n        annotations:\n          summary: \"High error rate detected\"\n          description: \"The error rate is above 5% for the last 10 minutes.\"\n</code></pre></p>"},{"location":"cloud/prometheus/basic/#62-alertmanager","title":"6.2 \u914d\u7f6e Alertmanager","text":"<p>Alertmanager \u5904\u7406 Prometheus \u7684\u544a\u8b66\uff0c\u652f\u6301\u544a\u8b66\u5206\u7ec4\u3001\u6291\u5236\u548c\u901a\u77e5\u529f\u80fd\u3002</p> <p>\u793a\u4f8b Alertmanager \u914d\u7f6e\uff1a <pre><code>route:\n  receiver: 'email'\n\nreceivers:\n  - name: 'email'\n    email_configs:\n      - to: 'alerts@example.com'\n</code></pre></p>"},{"location":"cloud/prometheus/basic/#63","title":"6.3 \u96c6\u6210\u544a\u8b66\u901a\u77e5","text":"<ol> <li>\u914d\u7f6e Alertmanager \u7684\u901a\u77e5\u65b9\u5f0f\uff08\u5982\u90ae\u4ef6\u3001Slack\u3001Webhook\uff09\u3002</li> <li>\u5728 Prometheus \u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0 <code>alerting</code> \u90e8\u5206\uff0c\u6307\u5b9a Alertmanager \u7684\u5730\u5740\u3002</li> </ol> <p>\u793a\u4f8b\u914d\u7f6e\uff1a <pre><code>alerting:\n  alertmanagers:\n    - static_configs:\n      - targets: ['localhost:9093']\n</code></pre></p>"},{"location":"cloud/prometheus/basic/#prometheus_5","title":"\u4e03\u3001Prometheus \u7684\u9ad8\u7ea7\u5e94\u7528\u4e0e\u4f18\u5316","text":""},{"location":"cloud/prometheus/basic/#71","title":"7.1 \u9ad8\u53ef\u7528\u6027\u4e0e\u6269\u5c55","text":""},{"location":"cloud/prometheus/basic/#711-prometheus","title":"7.1.1 \u591a\u5b9e\u4f8b Prometheus","text":"<p>\u901a\u8fc7\u90e8\u7f72\u591a\u4e2a Prometheus \u5b9e\u4f8b\u6765\u63d0\u9ad8\u7cfb\u7edf\u7684\u53ef\u9760\u6027\u548c\u5904\u7406\u80fd\u529b\u3002</p>"},{"location":"cloud/prometheus/basic/#712-prometheus","title":"7.1.2 Prometheus \u8054\u90a6","text":"<p>Prometheus \u8054\u90a6\u7528\u4e8e\u5c06\u591a\u4e2a Prometheus \u5b9e\u4f8b\u7684\u6570\u636e\u6c47\u603b\u5230\u4e0a\u5c42 Prometheus \u5b9e\u4f8b\u4e2d\u3002</p> <p>\u8054\u90a6\u914d\u7f6e\u793a\u4f8b\uff1a <pre><code>scrape_configs:\n  - job_name: 'federate'\n    metrics_path: '/federate'\n    params:\n      'match[]':\n        - '{__name__=~\"job:.*\"}'\n    static_configs:\n      - targets: ['prometheus1:9090', 'prometheus2:9090']\n</code></pre></p>"},{"location":"cloud/prometheus/basic/#713","title":"7.1.3 \u4f7f\u7528\u5916\u90e8\u5b58\u50a8","text":"<p>\u5bf9\u4e8e\u957f\u65f6\u95f4\u5b58\u50a8\u9700\u6c42\uff0c\u53ef\u4ee5\u4f7f\u7528\u5916\u90e8\u5b58\u50a8\u63d2\u4ef6\uff08\u5982 Thanos\u3001Cortex\uff09\u6765\u6269\u5c55 Prometheus\u3002</p>"},{"location":"cloud/prometheus/basic/#72","title":"7.2 \u6027\u80fd\u4f18\u5316","text":""},{"location":"cloud/prometheus/basic/#721","title":"7.2.1 \u51cf\u5c11\u6807\u7b7e\u57fa\u6570","text":"<p>\u907f\u514d\u4f7f\u7528\u8fc7\u591a\u9ad8\u57fa\u6570\u6807\u7b7e\uff0c\u4ee5\u51cf\u5c11\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u91cf\u3002</p>"},{"location":"cloud/prometheus/basic/#722-recording-rules","title":"7.2.2 \u4f7f\u7528 Recording Rules","text":"<p>\u4f7f\u7528 recording rules \u5c06\u590d\u6742\u7684\u67e5\u8be2\u9884\u8ba1\u7b97\u5e76\u4fdd\u5b58\uff0c\u4ee5\u63d0\u9ad8\u67e5\u8be2\u6027\u80fd\u3002</p>"},{"location":"cloud/prometheus/basic/#723","title":"7.2.3 \u914d\u7f6e\u6570\u636e\u4fdd\u7559","text":"<p>\u8c03\u6574\u6570\u636e\u4fdd\u7559\u7b56\u7565\u4ee5\u6ee1\u8db3\u4e1a\u52a1\u9700\u6c42\uff0c\u5b9a\u671f\u6e05\u7406\u65e7\u6570\u636e\u3002</p>"},{"location":"cloud/prometheus/basic/#73","title":"7.3 \u6570\u636e\u5907\u4efd\u4e0e\u6062\u590d","text":"<p>\u4f7f\u7528 Prometheus \u7684\u5feb\u7167\u529f\u80fd\u5b9a\u671f\u5907\u4efd\u6570\u636e\u3002</p> <p>\u521b\u5efa\u5feb\u7167\uff1a <pre><code>curl -X POST http://localhost:9090/api/v1/admin/tsdb/snapshot\n</code></pre></p> <p>\u6062\u590d\u6570\u636e\uff1a \u5c06\u5feb\u7167\u76ee\u5f55\u590d\u5236\u5230 Prometheus \u6570\u636e\u76ee\u5f55\uff0c\u5e76\u91cd\u542f Prometheus \u5b9e\u4f8b\u3002</p>"},{"location":"cloud/prometheus/basic/#prometheus_6","title":"\u516b\u3001Prometheus \u7684\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"cloud/prometheus/basic/#81","title":"8.1 \u76d1\u63a7\u7b56\u7565","text":"<ol> <li>\u5b9a\u4e49\u5173\u952e\u6307\u6807\uff1a\u786e\u5b9a\u5e94\u7528\u548c\u7cfb\u7edf\u7684\u5173\u952e\u6027\u80fd\u6307\u6807\uff08KPI\uff09\uff0c\u5e76\u76d1\u63a7\u8fd9\u4e9b\u6307\u6807\u3002</li> <li>\u8bbe\u7f6e\u5408\u7406\u7684\u544a\u8b66\u9608\u503c\uff1a\u907f\u514d\u544a\u8b66\u8fc7\u591a\uff0c\u8bbe\u7f6e\u5408\u7406\u7684\u9608\u503c\u4ee5\u4fbf\u4e8e\u6709\u6548\u5730\u68c0\u6d4b\u95ee\u9898\u3002</li> <li>\u5b9a\u671f\u5ba1\u67e5\u4e0e\u4f18\u5316\uff1a\u5b9a\u671f\u5ba1\u67e5 Prometheus \u914d\u7f6e\u548c\u67e5\u8be2\u89c4\u5219\uff0c\u4f18\u5316\u6027\u80fd\u548c\u51c6\u786e\u6027\u3002</li> </ol>"},{"location":"cloud/prometheus/basic/#82","title":"8.2 \u9ad8\u6548\u7684\u6307\u6807\u7ba1\u7406","text":"<ol> <li>\u4f7f\u7528\u6807\u7b7e\uff1a\u5408\u7406\u4f7f\u7528\u6807\u7b7e\u6765\u533a\u5206\u4e0d\u540c\u7684\u65f6\u95f4\u5e8f\u5217\u3002</li> <li>\u907f\u514d\u9ad8\u57fa\u6570\u6807\u7b7e\uff1a\u51cf\u5c11\u9ad8\u57fa\u6570\u6807\u7b7e\u7684\u4f7f\u7528\uff0c\u4ee5\u514d\u4ea7\u751f\u8fc7\u591a\u7684\u65f6\u95f4\u5e8f\u5217\u3002</li> <li>\u8bb0\u5f55\u89c4\u5219\uff1a\u5c06\u9891\u7e41\u4f7f\u7528\u7684\u590d\u6742\u67e5\u8be2\u7ed3\u679c\u9884\u8ba1\u7b97\u5e76\u8bb0\u5f55\uff0c\u63d0\u5347\u67e5\u8be2\u6548\u7387\u3002</li> </ol>"},{"location":"cloud/prometheus/basic/#83","title":"8.3 \u5b89\u5168\u4e0e\u6743\u9650\u7ba1\u7406","text":"<ol> <li>Prometheus \u5b89\u5168\uff1a\u901a\u8fc7\u914d\u7f6e\u53cd\u5411\u4ee3\u7406\uff08\u5982 Nginx\uff09\u5b9e\u73b0\u8bbf\u95ee\u63a7\u5236\u548c\u8ba4\u8bc1\u3002</li> <li>Grafana \u5b89\u5168\uff1a\u914d\u7f6e\u591a\u79cd\u8ba4\u8bc1\u65b9\u5f0f\uff08\u5982 LDAP\u3001OAuth\uff09\uff0c\u8bbe\u7f6e\u7528\u6237\u8bbf\u95ee\u6743\u9650\u3002</li> </ol>"},{"location":"cloud/prometheus/basic/#prometheus-mysql","title":"Prometheus MySQL \u5b9e\u6218\u8be6\u89e3","text":"<p>\u5728\u5b9e\u9645\u7684\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u76d1\u63a7\u6570\u636e\u5e93\u7684\u5065\u5eb7\u72b6\u6001\u548c\u6027\u80fd\u8868\u73b0\u81f3\u5173\u91cd\u8981\uff0c\u5c24\u5176\u662f\u50cf MySQL \u8fd9\u6837\u7684\u5e38\u7528\u6570\u636e\u5e93\u3002\u4f7f\u7528 Prometheus \u7ed3\u5408 MySQL Exporter\uff0c\u53ef\u4ee5\u8f7b\u677e\u5b9e\u73b0\u5bf9 MySQL \u7684\u5168\u9762\u76d1\u63a7\u548c\u62a5\u8b66\u3002</p>"},{"location":"cloud/prometheus/basic/#prometheus-mysql_1","title":"\u4e00\u3001Prometheus \u76d1\u63a7 MySQL \u7684\u67b6\u6784","text":"<ol> <li>MySQL Exporter\uff1a\u7528\u4e8e\u4ece MySQL \u6570\u636e\u5e93\u4e2d\u91c7\u96c6\u6307\u6807\uff0c\u5e76\u4ee5 Prometheus \u683c\u5f0f\u66b4\u9732\u51fa\u6765\u3002</li> <li>Prometheus Server\uff1a\u5b9a\u671f\u6293\u53d6 MySQL Exporter \u66b4\u9732\u7684\u6307\u6807\uff0c\u5e76\u5b58\u50a8\u3001\u5206\u6790\u548c\u62a5\u8b66\u3002</li> <li>Grafana\uff1a\u7528\u4e8e\u53ef\u89c6\u5316 MySQL \u6027\u80fd\u6307\u6807\uff0c\u751f\u6210\u5b9e\u65f6\u4eea\u8868\u76d8\u3002</li> <li>Alertmanager\uff1a\u7528\u4e8e\u5904\u7406 Prometheus \u53d1\u9001\u7684 MySQL \u62a5\u8b66\u4fe1\u606f\u3002</li> </ol>"},{"location":"cloud/prometheus/basic/#mysql-exporter","title":"\u4e8c\u3001MySQL Exporter \u5b89\u88c5\u4e0e\u914d\u7f6e","text":""},{"location":"cloud/prometheus/basic/#21-mysql-exporter","title":"2.1 \u5b89\u88c5 MySQL Exporter","text":"<p>MySQL Exporter \u662f Prometheus \u5b98\u65b9\u63d0\u4f9b\u7684 MySQL \u6570\u636e\u5e93\u76d1\u63a7\u63d2\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\u5b89\u88c5\u3002</p>"},{"location":"cloud/prometheus/basic/#211-docker","title":"2.1.1 \u4f7f\u7528 Docker \u5b89\u88c5","text":"<ol> <li> <p>\u62c9\u53d6 MySQL Exporter \u955c\u50cf\uff1a <pre><code>   docker pull prom/mysqld-exporter\n</code></pre></p> </li> <li> <p>\u542f\u52a8\u5bb9\u5668\uff0c\u5e76\u8fde\u63a5\u5230 MySQL \u6570\u636e\u5e93\uff1a <pre><code>   docker run -d -p 9104:9104 \\\n     -e DATA_SOURCE_NAME=\"user:password@(db_host:3306)/\" \\\n     --name mysql_exporter \\\n     prom/mysqld-exporter\n</code></pre></p> </li> <li> <p><code>DATA_SOURCE_NAME</code> \u662f MySQL Exporter \u8fde\u63a5 MySQL \u6570\u636e\u5e93\u6240\u9700\u7684\u8fde\u63a5\u4fe1\u606f\u3002</p> <ul> <li><code>user</code>\uff1aMySQL \u7528\u6237\u540d</li> <li><code>password</code>\uff1aMySQL \u5bc6\u7801</li> <li><code>db_host</code>\uff1aMySQL \u4e3b\u673a\u5730\u5740\uff08\u901a\u5e38\u4e3a <code>localhost</code> \u6216\u6570\u636e\u5e93\u670d\u52a1 IP\uff09</li> </ul> </li> </ol>"},{"location":"cloud/prometheus/basic/#212","title":"2.1.2 \u4f7f\u7528\u4e8c\u8fdb\u5236\u6587\u4ef6\u5b89\u88c5","text":"<ol> <li> <p>\u4e0b\u8f7d MySQL Exporter\uff1a <pre><code>   wget https://github.com/prometheus/mysqld_exporter/releases/download/v0.14.0/mysqld_exporter-0.14.0.linux-amd64.tar.gz\n</code></pre></p> </li> <li> <p>\u89e3\u538b\u6587\u4ef6\uff1a <pre><code>   tar -xzf mysqld_exporter-0.14.0.linux-amd64.tar.gz\n   cd mysqld_exporter-0.14.0.linux-amd64\n</code></pre></p> </li> <li> <p>\u542f\u52a8 MySQL Exporter\uff1a <pre><code>   ./mysqld_exporter --config.my-cnf=\"/path/to/.my.cnf\"\n</code></pre></p> </li> <li> <p><code>.my.cnf</code> \u6587\u4ef6\u4e2d\u5305\u542b\u8fde\u63a5 MySQL \u6570\u636e\u5e93\u7684\u914d\u7f6e\u4fe1\u606f\uff1a <pre><code>   [client]\n   user=root\n   password=your_password\n</code></pre></p> </li> </ol>"},{"location":"cloud/prometheus/basic/#22-mysql","title":"2.2 MySQL \u7528\u6237\u6743\u9650\u8bbe\u7f6e","text":"<p>\u4e3a\u4e86\u8ba9 MySQL Exporter \u8bbf\u95ee MySQL \u7684\u6027\u80fd\u6307\u6807\uff0c\u9700\u8981\u4e3a\u5176\u521b\u5efa\u4e00\u4e2a\u4e13\u7528\u7528\u6237\u5e76\u5206\u914d\u9002\u5f53\u7684\u6743\u9650\uff1a</p> <ol> <li> <p>\u8fde\u63a5\u5230 MySQL \u6570\u636e\u5e93\uff1a <pre><code>   mysql -u root -p\n</code></pre></p> </li> <li> <p>\u521b\u5efa\u4e00\u4e2a\u7528\u4e8e\u76d1\u63a7\u7684\u7528\u6237\u5e76\u5206\u914d\u6743\u9650\uff1a <pre><code>   CREATE USER 'exporter'@'localhost' IDENTIFIED BY 'password';\n   GRANT PROCESS, REPLICATION CLIENT, SELECT ON *.* TO 'exporter'@'localhost';\n   FLUSH PRIVILEGES;\n</code></pre></p> </li> </ol>"},{"location":"cloud/prometheus/basic/#prometheus-mysql-exporter","title":"\u4e09\u3001Prometheus \u914d\u7f6e\u6293\u53d6 MySQL Exporter","text":"<p>\u5728 MySQL Exporter \u90e8\u7f72\u5b8c\u6210\u540e\uff0c\u9700\u8981\u5728 Prometheus \u4e2d\u914d\u7f6e\u6293\u53d6 MySQL Exporter \u91c7\u96c6\u5230\u7684\u6307\u6807\u3002</p>"},{"location":"cloud/prometheus/basic/#31-prometheus","title":"3.1 Prometheus \u914d\u7f6e","text":"<p>\u7f16\u8f91 Prometheus \u7684\u914d\u7f6e\u6587\u4ef6 <code>prometheus.yml</code>\uff0c\u589e\u52a0 MySQL Exporter \u7684\u6293\u53d6\u914d\u7f6e\uff1a</p> <pre><code>scrape_configs:\n  - job_name: 'mysql_exporter'\n    static_configs:\n      - targets: ['localhost:9104']\n</code></pre> <ul> <li><code>job_name</code>\uff1a\u6293\u53d6\u4efb\u52a1\u7684\u540d\u79f0\u3002</li> <li><code>targets</code>\uff1aMySQL Exporter \u66b4\u9732\u7684\u6307\u6807\u7aef\u70b9\uff08\u901a\u5e38\u4e3a <code>localhost:9104</code>\uff09\u3002</li> </ul>"},{"location":"cloud/prometheus/basic/#32-mysql-exporter","title":"3.2 \u9a8c\u8bc1 MySQL Exporter \u6307\u6807\u6293\u53d6","text":"<ol> <li> <p>\u91cd\u65b0\u542f\u52a8 Prometheus \u670d\u52a1\uff1a <pre><code>   systemctl restart prometheus\n</code></pre></p> </li> <li> <p>\u8bbf\u95ee Prometheus Web UI\uff08\u9ed8\u8ba4\u7aef\u53e3 9090\uff09\uff0c\u5728 \u201cTargets\u201d \u9875\u9762\u68c0\u67e5 MySQL Exporter \u662f\u5426\u6210\u529f\u6ce8\u518c\u3002</p> </li> <li> <p>\u6d4b\u8bd5\u6293\u53d6\u7684 MySQL \u6307\u6807\uff1a    \u5728 Prometheus Web UI \u4e2d\uff0c\u6267\u884c\u67e5\u8be2\uff1a <pre><code>   mysql_global_status_connections\n</code></pre></p> </li> </ol>"},{"location":"cloud/prometheus/basic/#grafana-mysql","title":"\u56db\u3001Grafana \u4e2d\u7684 MySQL \u53ef\u89c6\u5316","text":"<p>\u4e3a\u4e86\u66f4\u597d\u5730\u5c55\u793a MySQL \u7684\u6027\u80fd\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528 Grafana \u6765\u521b\u5efa\u81ea\u5b9a\u4e49\u7684\u76d1\u63a7\u4eea\u8868\u76d8\u3002</p>"},{"location":"cloud/prometheus/basic/#41-prometheus","title":"4.1 \u6dfb\u52a0 Prometheus \u6570\u636e\u6e90","text":"<ol> <li>\u767b\u5f55\u5230 Grafana\uff08\u9ed8\u8ba4\u7aef\u53e3\u4e3a <code>3000</code>\uff09\u3002</li> <li>\u5728\u5de6\u4fa7\u5bfc\u822a\u680f\u4e2d\u9009\u62e9 Data Sources\uff0c\u70b9\u51fb Add data source\u3002</li> <li>\u9009\u62e9 Prometheus \u4f5c\u4e3a\u6570\u636e\u6e90\uff0c\u5e76\u914d\u7f6e Prometheus \u670d\u52a1\u5668\u5730\u5740\uff08\u5982 <code>http://localhost:9090</code>\uff09\u3002</li> <li>\u70b9\u51fb Save &amp; Test\uff0c\u786e\u8ba4\u8fde\u63a5\u6210\u529f\u3002</li> </ol>"},{"location":"cloud/prometheus/basic/#42-mysql-exporter","title":"4.2 \u4f7f\u7528 MySQL Exporter \u7684\u9884\u5236\u4eea\u8868\u76d8","text":"<p>Grafana \u793e\u533a\u63d0\u4f9b\u4e86\u8bb8\u591a\u5f00\u7bb1\u5373\u7528\u7684 MySQL \u76d1\u63a7\u4eea\u8868\u76d8\uff0c\u60a8\u53ef\u4ee5\u76f4\u63a5\u5bfc\u5165\u4f7f\u7528\u3002</p> <ol> <li>\u5728 Grafana \u4eea\u8868\u76d8\u9875\u9762\uff0c\u70b9\u51fb\u5de6\u4e0a\u89d2\u7684 \"+\" \u56fe\u6807\uff0c\u9009\u62e9 Import\u3002</li> <li>\u5728 Grafana Dashboard ID \u4e2d\u8f93\u5165 7362\uff08\u4e00\u4e2a\u6d41\u884c\u7684 MySQL \u76d1\u63a7\u4eea\u8868\u76d8\uff09\uff0c\u7136\u540e\u70b9\u51fb Load\u3002</li> <li>\u9009\u62e9\u60a8\u7684 Prometheus \u6570\u636e\u6e90\uff0c\u70b9\u51fb Import\u3002</li> </ol> <p>\u6b64\u4eea\u8868\u76d8\u5305\u542b\u4e86 MySQL \u7684\u5e38\u89c1\u76d1\u63a7\u6307\u6807\uff0c\u5982\uff1a - \u8fde\u63a5\u6570\uff08<code>mysql_global_status_connections</code>\uff09 - \u67e5\u8be2\u901f\u7387\uff08<code>mysql_global_status_queries</code>\uff09 - InnoDB \u7f13\u51b2\u6c60\u4f7f\u7528\u60c5\u51b5\uff08<code>mysql_global_status_innodb_buffer_pool_pages_free</code>\uff09 - \u4e8b\u52a1\u6267\u884c\u901f\u7387\uff08<code>mysql_global_status_com_commit</code> \u548c <code>mysql_global_status_com_rollback</code>\uff09</p>"},{"location":"cloud/prometheus/basic/#mysql","title":"\u4e94\u3001\u5e38\u7528 MySQL \u76d1\u63a7\u6307\u6807\u89e3\u6790","text":"<p>\u901a\u8fc7 MySQL Exporter\uff0c\u53ef\u4ee5\u76d1\u63a7\u5927\u91cf\u7684\u6570\u636e\u5e93\u6307\u6807\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5173\u952e\u7684 MySQL \u76d1\u63a7\u6307\u6807\u53ca\u5176\u610f\u4e49\uff1a</p> <ol> <li> <p><code>mysql_global_status_connections</code>\uff1a</p> <ul> <li>\u63cf\u8ff0\uff1a\u5f53\u524d MySQL \u7684\u8fde\u63a5\u6570\u3002</li> <li>\u4f5c\u7528\uff1a\u4e86\u89e3\u6570\u636e\u5e93\u7684\u8fde\u63a5\u538b\u529b\uff0c\u5982\u679c\u8be5\u503c\u8fc7\u9ad8\uff0c\u53ef\u80fd\u610f\u5473\u7740\u8fde\u63a5\u6c60\u914d\u7f6e\u4e0d\u5408\u7406\u6216\u6709\u6f5c\u5728\u7684\u8fde\u63a5\u6cc4\u9732\u95ee\u9898\u3002</li> </ul> </li> <li> <p><code>mysql_global_status_queries</code>\uff1a</p> <ul> <li>\u63cf\u8ff0\uff1a\u67e5\u8be2\u603b\u6b21\u6570\u3002</li> <li>\u4f5c\u7528\uff1a\u76d1\u63a7\u6570\u636e\u5e93\u67e5\u8be2\u7684\u8d1f\u8f7d\u60c5\u51b5\uff0c\u7528\u4e8e\u68c0\u6d4b\u9ad8\u5cf0\u671f\u7684\u67e5\u8be2\u538b\u529b\u3002</li> </ul> </li> <li> <p><code>mysql_global_status_innodb_buffer_pool_pages_free</code>\uff1a</p> <ul> <li>\u63cf\u8ff0\uff1aInnoDB \u7f13\u51b2\u6c60\u4e2d\u7a7a\u95f2\u9875\u7684\u6570\u91cf\u3002</li> <li>\u4f5c\u7528\uff1a\u7528\u4e8e\u76d1\u63a7 InnoDB \u7f13\u51b2\u6c60\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u786e\u4fdd\u6570\u636e\u5e93\u7684\u5185\u5b58\u8d44\u6e90\u5f97\u5230\u5408\u7406\u5229\u7528\u3002</li> </ul> </li> <li> <p><code>mysql_global_status_threads_running</code>\uff1a</p> <ul> <li>\u63cf\u8ff0\uff1a\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570\u3002</li> <li>\u4f5c\u7528\uff1a\u8868\u793a\u5f53\u524d\u6570\u636e\u5e93\u7684\u5e76\u53d1\u5904\u7406\u80fd\u529b\uff0c\u9ad8\u5e76\u53d1\u7684\u60c5\u51b5\u4e0b\u8be5\u503c\u8fc7\u9ad8\uff0c\u53ef\u80fd\u4f1a\u5f71\u54cd\u6570\u636e\u5e93\u7684\u54cd\u5e94\u65f6\u95f4\u3002</li> </ul> </li> <li> <p><code>mysql_global_status_slow_queries</code>\uff1a</p> <ul> <li>\u63cf\u8ff0\uff1a\u6162\u67e5\u8be2\u7684\u6570\u91cf\u3002</li> <li>\u4f5c\u7528\uff1a\u8ddf\u8e2a\u6162\u67e5\u8be2\u7684\u53d1\u751f\u60c5\u51b5\uff0c\u901a\u8fc7\u4f18\u5316\u6162\u67e5\u8be2\u53ef\u4ee5\u63d0\u9ad8\u6570\u636e\u5e93\u7684\u6027\u80fd\u3002</li> </ul> </li> <li> <p><code>mysql_global_status_com_select</code>\uff1a</p> <ul> <li>\u63cf\u8ff0\uff1a\u6267\u884c <code>SELECT</code> \u67e5\u8be2\u7684\u6b21\u6570\u3002</li> <li>\u4f5c\u7528\uff1a\u8861\u91cf\u6570\u636e\u5e93\u8bfb\u53d6\u64cd\u4f5c\u7684\u9891\u7387\uff0c\u6709\u52a9\u4e8e\u4e86\u89e3\u8bfb\u8d1f\u8f7d\u60c5\u51b5\u3002</li> </ul> </li> <li> <p><code>mysql_global_status_com_insert</code>\u3001<code>com_update</code>\u3001<code>com_delete</code>\uff1a</p> <ul> <li>\u63cf\u8ff0\uff1a\u6267\u884c <code>INSERT</code>\u3001<code>UPDATE</code>\u3001<code>DELETE</code> \u64cd\u4f5c\u7684\u6b21\u6570\u3002</li> <li>\u4f5c\u7528\uff1a\u5206\u6790\u6570\u636e\u5e93\u7684\u5199\u64cd\u4f5c\u8d1f\u8f7d\uff0c\u5e2e\u52a9\u7406\u89e3\u5199\u5165\u6027\u80fd\u74f6\u9888\u3002</li> </ul> </li> </ol>"},{"location":"cloud/prometheus/basic/#mysql_1","title":"\u516d\u3001MySQL \u6027\u80fd\u4f18\u5316\u7b56\u7565\u4e0e\u544a\u8b66","text":"<p>\u5728\u76d1\u63a7 MySQL \u6027\u80fd\u6307\u6807\u7684\u540c\u65f6\uff0cPrometheus \u8fd8\u53ef\u4ee5\u5e2e\u52a9\u8bbe\u7f6e\u544a\u8b66\u7b56\u7565\uff0c\u53ca\u65f6\u53d1\u73b0\u6570\u636e\u5e93\u95ee\u9898\u3002</p>"},{"location":"cloud/prometheus/basic/#61_1","title":"6.1 \u8bbe\u7f6e\u544a\u8b66\u89c4\u5219","text":"<p>\u53ef\u4ee5\u6839\u636e MySQL \u7684\u6027\u80fd\u6307\u6807\u5b9a\u4e49\u544a\u8b66\u89c4\u5219\u3002\u4f8b\u5982\uff0c\u5f53\u6570\u636e\u5e93\u8fde\u63a5\u6570\u8fc7\u9ad8\u65f6\u89e6\u53d1\u544a\u8b66\uff1a</p> <pre><code>groups:\n  - name: mysql_alerts\n    rules:\n      - alert: MySQLHighConnections\n        expr: mysql_global_status_connections &gt; 200\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: \"High MySQL connections detected\"\n          description: \"MySQL connections have exceeded 200 for more than 5 minutes.\"\n</code></pre>"},{"location":"cloud/prometheus/basic/#62","title":"6.2 \u6027\u80fd\u4f18\u5316\u5efa\u8bae","text":"<ol> <li>\u4f18\u5316\u67e5\u8be2\uff1a\u901a\u8fc7\u6162\u67e5\u8be2\u65e5\u5fd7\uff0c\u8bc6\u522b\u5e76\u4f18\u5316\u6162\u67e5\u8be2\u8bed\u53e5\u3002</li> <li>\u8c03\u6574\u8fde\u63a5\u6c60\u5927\u5c0f\uff1a\u6839\u636e\u5e94\u7528\u7a0b\u5e8f\u7684\u8d1f\u8f7d\u8c03\u6574\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u7684\u914d\u7f6e\uff0c\u907f\u514d\u8fde\u63a5\u6570\u8fc7\u591a\u6216\u8fc7\u5c11\u3002</li> <li>\u5408\u7406\u914d\u7f6e InnoDB \u7f13\u51b2\u6c60\uff1a\u786e\u4fdd InnoDB \u7f13\u51b2\u6c60\u7684\u5927\u5c0f\u5408\u9002\uff0c\u4ee5\u4fbf\u9ad8\u6548\u7f13\u5b58\u6570\u636e\u3002</li> <li>\u76d1\u63a7\u78c1\u76d8 I/O\uff1a\u5982\u679c MySQL \u5b9e\u4f8b\u5904\u4e8e\u9ad8\u8d1f\u8f7d\u72b6\u6001\uff0c\u78c1\u76d8 I/O \u53ef\u80fd\u6210\u4e3a\u74f6\u9888\u3002</li> </ol>"},{"location":"cloud/prometheus/prometheus.yml/","title":"Prometheus \u914d\u7f6e\u6587\u4ef6","text":"<p><code>prometheus.yml</code> \u662f Prometheus \u7684\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6\uff0c\u5b83\u5b9a\u4e49\u4e86 Prometheus \u7684\u5168\u5c40\u914d\u7f6e\u3001\u6293\u53d6\u76d1\u63a7\u76ee\u6807\u3001\u544a\u8b66\u89c4\u5219\u548c\u544a\u8b66\u63a5\u6536\u5668\u7b49\u3002\u4e0b\u9762\u662f <code>prometheus.yml</code> \u914d\u7f6e\u6587\u4ef6\u7684\u8be6\u7ec6\u8bb2\u89e3\uff0c\u5305\u62ec\u5404\u4e2a\u90e8\u5206\u7684\u529f\u80fd\u548c\u793a\u4f8b\u914d\u7f6e\u3002</p>"},{"location":"cloud/prometheus/prometheus.yml/#_1","title":"\u4e00\u3001\u57fa\u672c\u7ed3\u6784","text":"<p>\u4e00\u4e2a\u5178\u578b\u7684 <code>prometheus.yml</code> \u914d\u7f6e\u6587\u4ef6\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\uff1a</p> <ol> <li>Global Config\uff08\u5168\u5c40\u914d\u7f6e\uff09\uff1a\u5b9a\u4e49\u5168\u5c40\u6293\u53d6\u95f4\u9694\u3001\u8bc4\u4f30\u89c4\u5219\u7b49\u3002</li> <li>Scrape Configs\uff08\u6293\u53d6\u914d\u7f6e\uff09\uff1a\u5b9a\u4e49 Prometheus \u5982\u4f55\u6293\u53d6\u76d1\u63a7\u76ee\u6807\u7684\u6570\u636e\u3002</li> <li>Rule Files\uff08\u544a\u8b66\u89c4\u5219\u6587\u4ef6\uff09\uff1a\u6307\u5b9a\u544a\u8b66\u89c4\u5219\u6240\u5728\u7684\u6587\u4ef6\u8def\u5f84\u3002</li> <li>Alerting Config\uff08\u544a\u8b66\u914d\u7f6e\uff09\uff1a\u5b9a\u4e49\u544a\u8b66\u7ba1\u7406\u5668\u7684\u63a5\u6536\u5730\u5740\u3002</li> <li>Remote Write &amp; Remote Read\uff08\u8fdc\u7a0b\u5b58\u50a8\u914d\u7f6e\uff09\uff1a\u5b9a\u4e49\u5982\u4f55\u5c06\u6570\u636e\u5199\u5165\u6216\u4ece\u8fdc\u7a0b\u5b58\u50a8\u8bfb\u53d6\u6570\u636e\u3002</li> </ol>"},{"location":"cloud/prometheus/prometheus.yml/#_2","title":"\u4e8c\u3001\u914d\u7f6e\u9879\u8be6\u89e3","text":""},{"location":"cloud/prometheus/prometheus.yml/#1-global-config","title":"1. \u5168\u5c40\u914d\u7f6e\uff08Global Config\uff09","text":"<p>\u5168\u5c40\u914d\u7f6e\u5b9a\u4e49\u4e86 Prometheus \u5982\u4f55\u4ee5\u9ed8\u8ba4\u65b9\u5f0f\u6267\u884c\u6293\u53d6\u548c\u8bc4\u4f30\u3002\u901a\u5e38\u5305\u62ec\u6293\u53d6\u95f4\u9694\u548c\u544a\u8b66\u89c4\u5219\u8bc4\u4f30\u95f4\u9694\u3002</p> <pre><code>global:\n  scrape_interval: 15s  # \u6293\u53d6\u95f4\u9694\uff0c\u9ed8\u8ba4\u4e3a 1m\n  evaluation_interval: 15s  # \u544a\u8b66\u89c4\u5219\u8bc4\u4f30\u95f4\u9694\uff0c\u9ed8\u8ba4\u4e3a 1m\n  scrape_timeout: 10s  # \u5355\u4e2a\u6293\u53d6\u4efb\u52a1\u7684\u8d85\u65f6\u65f6\u95f4\n  external_labels:\n    monitor: 'codelab-monitor'  # \u5f53\u591a\u4e2a Prometheus \u670d\u52a1\u5668\u6293\u53d6\u76f8\u540c\u6570\u636e\u65f6\uff0c\u7528\u4e8e\u6807\u8bc6\u6570\u636e\u6765\u6e90\n</code></pre> <ul> <li>scrape_interval\uff1a\u5b9a\u4e49 Prometheus \u6293\u53d6\u6240\u6709\u76ee\u6807\u7684\u9ed8\u8ba4\u65f6\u95f4\u95f4\u9694\u3002</li> <li>evaluation_interval\uff1a\u5b9a\u4e49 Prometheus \u8bc4\u4f30\u544a\u8b66\u89c4\u5219\u7684\u9ed8\u8ba4\u65f6\u95f4\u95f4\u9694\u3002</li> <li>scrape_timeout\uff1a\u8bbe\u7f6e\u6293\u53d6\u4efb\u52a1\u7684\u8d85\u65f6\u65f6\u95f4\u3002</li> <li>external_labels\uff1a\u5728\u5411\u5916\u90e8\u5b58\u50a8\u53d1\u9001\u6570\u636e\u65f6\u6dfb\u52a0\u7684\u6807\u7b7e\uff0c\u901a\u5e38\u7528\u4e8e\u533a\u5206\u591a\u4e2a Prometheus \u5b9e\u4f8b\u3002</li> </ul>"},{"location":"cloud/prometheus/prometheus.yml/#2-scrape-configs","title":"2. \u6293\u53d6\u914d\u7f6e\uff08Scrape Configs\uff09","text":"<p><code>scrape_configs</code> \u5b9a\u4e49\u4e86 Prometheus \u5e94\u6293\u53d6\u7684\u76ee\u6807\uff08\u5982\u8282\u70b9\u3001\u670d\u52a1\u3001\u5e94\u7528\u7a0b\u5e8f\uff09\u53ca\u5176\u6293\u53d6\u65b9\u6cd5\u3002\u53ef\u4ee5\u4f7f\u7528\u9759\u6001\u76ee\u6807\u6216\u52a8\u6001\u670d\u52a1\u53d1\u73b0\u65b9\u5f0f\u3002</p>"},{"location":"cloud/prometheus/prometheus.yml/#_3","title":"\u57fa\u672c\u7ed3\u6784\uff1a","text":"<pre><code>scrape_configs:\n  - job_name: 'prometheus'\n    static_configs:\n      - targets: ['localhost:9090']\n</code></pre>"},{"location":"cloud/prometheus/prometheus.yml/#_4","title":"\u53c2\u6570\u89e3\u91ca\uff1a","text":"<ul> <li>job_name\uff1a\u7528\u4e8e\u6807\u8bc6\u6293\u53d6\u4efb\u52a1\u7684\u540d\u79f0\uff0c\u6bcf\u4e2a\u4efb\u52a1\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u76ee\u6807\u3002</li> <li>static_configs\uff1a\u9759\u6001\u5b9a\u4e49\u6293\u53d6\u76ee\u6807\u3002</li> <li>targets\uff1a\u8981\u6293\u53d6\u7684\u76ee\u6807\u5730\u5740\u53ca\u7aef\u53e3\u3002</li> </ul>"},{"location":"cloud/prometheus/prometheus.yml/#_5","title":"\u793a\u4f8b\uff1a","text":"<pre><code>scrape_configs:\n  - job_name: 'node_exporter'  # \u4efb\u52a1\u540d\u79f0\n    scrape_interval: 10s  # \u4efb\u52a1\u7279\u5b9a\u7684\u6293\u53d6\u95f4\u9694\n    static_configs:\n      - targets: ['localhost:9100']  # \u8981\u76d1\u63a7\u7684\u76ee\u6807\u5730\u5740\n\n  - job_name: 'my-app'  # \u76d1\u63a7\u67d0\u4e2a\u81ea\u5b9a\u4e49\u5e94\u7528\n    metrics_path: '/metrics'  # \u76d1\u63a7\u76ee\u6807\u7684\u6307\u6807\u8def\u5f84\uff0c\u9ed8\u8ba4\u4e3a /metrics\n    static_configs:\n      - targets: ['192.168.1.10:8080', '192.168.1.11:8080']\n</code></pre>"},{"location":"cloud/prometheus/prometheus.yml/#3-rule-files","title":"3. \u89c4\u5219\u6587\u4ef6\uff08Rule Files\uff09","text":"<p><code>rule_files</code> \u7528\u4e8e\u5b9a\u4e49\u544a\u8b66\u89c4\u5219\u548c\u8bb0\u5f55\u89c4\u5219\u3002\u53ef\u4ee5\u5c06\u544a\u8b66\u89c4\u5219\u5b58\u653e\u5728\u4e00\u4e2a\u6216\u591a\u4e2a\u5916\u90e8\u6587\u4ef6\u4e2d\u3002</p>"},{"location":"cloud/prometheus/prometheus.yml/#_6","title":"\u8bed\u6cd5\uff1a","text":"<pre><code>rule_files:\n  - \"rules.yml\"  # \u5b9a\u4e49\u544a\u8b66\u89c4\u5219\u7684\u6587\u4ef6\n</code></pre> <p>\u4f8b\u5982\uff1a <pre><code>groups:\n  - name: example\n    rules:\n    - alert: HighMemoryUsage\n      expr: node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes &lt; 0.2\n      for: 5m\n      labels:\n        severity: critical\n      annotations:\n        summary: \"Instance {{ $labels.instance }} has high memory usage\"\n        description: \"Memory usage on {{ $labels.instance }} is above 80% for the last 5 minutes.\"\n</code></pre></p> <ul> <li>alert\uff1a\u544a\u8b66\u540d\u79f0\u3002</li> <li>expr\uff1a\u544a\u8b66\u6761\u4ef6\uff0c\u4f7f\u7528 PromQL \u8868\u8fbe\u5f0f\u3002</li> <li>for\uff1a\u6761\u4ef6\u6301\u7eed\u65f6\u95f4\u3002</li> <li>labels\uff1a\u544a\u8b66\u7684\u6807\u7b7e\u4fe1\u606f\uff0c\u7528\u4e8e\u5206\u7c7b\u544a\u8b66\u3002</li> <li>annotations\uff1a\u544a\u8b66\u6ce8\u91ca\uff0c\u63d0\u4f9b\u989d\u5916\u4fe1\u606f\u3002</li> </ul>"},{"location":"cloud/prometheus/prometheus.yml/#4-alerting-config","title":"4. \u544a\u8b66\u914d\u7f6e\uff08Alerting Config\uff09","text":"<p><code>alerting</code> \u914d\u7f6e\u7528\u4e8e\u5b9a\u4e49 Prometheus \u5982\u4f55\u4e0e <code>Alertmanager</code> \u8fdb\u884c\u901a\u4fe1\uff0c\u4ee5\u4fbf\u53d1\u9001\u544a\u8b66\u901a\u77e5\u3002</p>"},{"location":"cloud/prometheus/prometheus.yml/#_7","title":"\u914d\u7f6e\u793a\u4f8b\uff1a","text":"<pre><code>alerting:\n  alertmanagers:\n  - static_configs:\n      - targets: ['localhost:9093']  # Alertmanager \u670d\u52a1\u5668\u5730\u5740\n</code></pre> <p>\u8fd9\u91cc\uff0cPrometheus \u4f1a\u5c06\u544a\u8b66\u4e8b\u4ef6\u53d1\u9001\u5230\u4f4d\u4e8e <code>localhost:9093</code> \u7684 Alertmanager \u5b9e\u4f8b\u3002</p>"},{"location":"cloud/prometheus/prometheus.yml/#5-remote-write-remote-read","title":"5. \u8fdc\u7a0b\u5199\u5165\u548c\u8bfb\u53d6\uff08Remote Write &amp; Remote Read\uff09","text":"<p>Prometheus \u53ef\u4ee5\u5c06\u6570\u636e\u5199\u5165\u8fdc\u7a0b\u5b58\u50a8\uff0c\u6216\u4ece\u8fdc\u7a0b\u5b58\u50a8\u8bfb\u53d6\u5386\u53f2\u6570\u636e\u3002</p>"},{"location":"cloud/prometheus/prometheus.yml/#remote-write","title":"Remote Write\uff08\u8fdc\u7a0b\u5199\u5165\uff09\uff1a","text":"<pre><code>remote_write:\n  - url: \"http://remote-storage.local/api/v1/write\"\n</code></pre>"},{"location":"cloud/prometheus/prometheus.yml/#remote-read","title":"Remote Read\uff08\u8fdc\u7a0b\u8bfb\u53d6\uff09\uff1a","text":"<pre><code>remote_read:\n  - url: \"http://remote-storage.local/api/v1/read\"\n</code></pre>"},{"location":"cloud/prometheus/prometheus.yml/#_8","title":"\u4e09\u3001\u52a8\u6001\u670d\u52a1\u53d1\u73b0","text":"<p>\u9664\u4e86\u9759\u6001\u914d\u7f6e\u5916\uff0cPrometheus \u8fd8\u652f\u6301\u901a\u8fc7\u670d\u52a1\u53d1\u73b0\u52a8\u6001\u5730\u6293\u53d6\u76d1\u63a7\u76ee\u6807\u3002\u8fd9\u4e9b\u670d\u52a1\u53d1\u73b0\u673a\u5236\u5305\u62ec Kubernetes\u3001Consul\u3001EC2 \u7b49\u3002</p>"},{"location":"cloud/prometheus/prometheus.yml/#kubernetes","title":"Kubernetes \u670d\u52a1\u53d1\u73b0\uff1a","text":"<p>\u5f53 Prometheus \u5728 Kubernetes \u4e2d\u8fd0\u884c\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>kubernetes_sd_configs</code> \u52a8\u6001\u53d1\u73b0 Kubernetes Pods\u3001\u670d\u52a1\u6216\u8282\u70b9\u3002</p> <pre><code>scrape_configs:\n  - job_name: 'kubernetes-pods'\n    kubernetes_sd_configs:\n      - role: pod\n    relabel_configs:\n      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n        action: keep\n        regex: true\n      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n        action: replace\n        target_label: __metrics_path__\n        regex: (.+)\n      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port]\n        action: replace\n        target_label: __address__\n        regex: (.+)\n        replacement: $1\n</code></pre> <ul> <li>kubernetes_sd_configs\uff1a\u6307\u5b9a\u901a\u8fc7 Kubernetes API \u8fdb\u884c\u670d\u52a1\u53d1\u73b0\u3002</li> <li>role\uff1a\u5b9a\u4e49\u670d\u52a1\u53d1\u73b0\u7684\u89d2\u8272\uff0c\u5982 <code>pod</code>\uff08\u53d1\u73b0 Pod\uff09\u3001<code>service</code>\uff08\u53d1\u73b0\u670d\u52a1\uff09\u3002</li> <li>relabel_configs\uff1a\u7528\u4e8e\u8fc7\u6ee4\u6216\u4fee\u6539\u6293\u53d6\u7684\u76ee\u6807\uff0c\u53ef\u4ee5\u6839\u636e\u6807\u7b7e\u6216\u5143\u6570\u636e\u52a8\u6001\u8c03\u6574\u3002</li> </ul>"},{"location":"cloud/prometheus/prometheus.yml/#_9","title":"\u56db\u3001\u5b8c\u6574\u914d\u7f6e\u793a\u4f8b","text":"<pre><code>global:\n  scrape_interval: 15s\n  evaluation_interval: 15s\n  external_labels:\n    monitor: 'prometheus-monitor'\n\nscrape_configs:\n  - job_name: 'prometheus'\n    static_configs:\n      - targets: ['localhost:9090']\n\n  - job_name: 'node_exporter'\n    static_configs:\n      - targets: ['localhost:9100']\n\n  - job_name: 'kubernetes-pods'\n    kubernetes_sd_configs:\n      - role: pod\n    relabel_configs:\n      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n        action: keep\n        regex: true\n      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n        action: replace\n        target_label: __metrics_path__\n        regex: (.+)\n      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port]\n        action: replace\n        target_label: __address__\n        regex: (.+)\n        replacement: $1\n\nrule_files:\n  - 'rules.yml'\n\nalerting:\n  alertmanagers:\n  - static_configs:\n      - targets: ['localhost:9093']\n\nremote_write:\n  - url: 'http://remote-storage.local/api/v1/write'\n\nremote_read:\n  - url: 'http://remote-storage.local/api/v1/read'\n</code></pre>"},{"location":"cloud/prometheus/prometheus.yml/#_10","title":"\u4e94\u3001\u603b\u7ed3","text":"<p><code>prometheus.yml</code> \u662f Prometheus \u6700\u91cd\u8981\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5b83\u5b9a\u4e49\u4e86 Prometheus \u5982\u4f55\u4e0e\u5404\u4e2a\u76d1\u63a7\u76ee\u6807\u8fdb\u884c\u4ea4\u4e92\u3001\u5982\u4f55\u6293\u53d6\u6570\u636e\u3001\u5982\u4f55\u914d\u7f6e\u544a\u8b66\u7b49\u3002\u638c\u63e1\u5b83\u7684\u7ed3\u6784\u548c\u914d\u7f6e\u65b9\u5f0f\u80fd\u591f\u8ba9\u4f60\u7075\u6d3b\u5730\u76d1\u63a7\u5206\u5e03\u5f0f\u7cfb\u7edf\u548c\u5e94\u7528\u3002</p>"},{"location":"cloud/prometheus/promql/","title":"PromQL","text":"<p>PromQL\uff08Prometheus Query Language\uff09\u662f Prometheus \u7684\u67e5\u8be2\u8bed\u8a00\uff0c\u7528\u4e8e\u4ece Prometheus \u65f6\u5e8f\u6570\u636e\u5e93\u4e2d\u67e5\u8be2\u548c\u5206\u6790\u76d1\u63a7\u6570\u636e\u3002\u4ee5\u4e0b\u662f PromQL \u7684\u8be6\u7ec6\u6559\u7a0b\uff1a</p>"},{"location":"cloud/prometheus/promql/#1","title":"1. \u57fa\u672c\u6982\u5ff5","text":"<p>Prometheus \u4e2d\u5b58\u50a8\u7684\u662f\u65f6\u95f4\u5e8f\u5217\u6570\u636e\uff0c\u6570\u636e\u662f\u4ee5 metric \u540d\u79f0\u3001label \u548c\u65f6\u95f4\u6233\u4e3a\u4e3b\u7684\u952e\u503c\u5bf9\u3002PromQL \u7528\u4e8e\u67e5\u8be2\u8fd9\u4e9b\u65f6\u95f4\u5e8f\u5217\u6570\u636e\uff0c\u5e76\u53ef\u4ee5\u901a\u8fc7\u4e0d\u540c\u7684\u51fd\u6570\u8fdb\u884c\u805a\u5408\u3001\u5904\u7406\u548c\u8ba1\u7b97\u3002</p> <ul> <li>\u65f6\u95f4\u5e8f\u5217\uff1a\u7531\u4e00\u4e2a <code>metric</code>\uff08\u5ea6\u91cf\u540d\u79f0\uff09\u548c\u591a\u4e2a <code>label</code>\uff08\u6807\u7b7e\uff09\u552f\u4e00\u6807\u8bc6\u3002\u4f8b\u5982\uff1a<code>http_requests_total{job=\"api-server\", method=\"GET\"}</code>\u3002</li> <li>\u5ea6\u91cf\u7c7b\u578b\uff1a\u4e3b\u8981\u6709\u56db\u79cd\uff1a<ul> <li>Counter\uff1a\u7d2f\u52a0\u5668\uff0c\u53ea\u589e\u4e0d\u51cf\uff0c\u9002\u7528\u4e8e\u7d2f\u8ba1\u7684\u8ba1\u6570\u5668\uff08\u5982\u8bf7\u6c42\u6570\uff09\u3002</li> <li>Gauge\uff1a\u53ef\u589e\u53ef\u51cf\u7684\u6570\u503c\uff0c\u9002\u7528\u4e8e\u77ac\u65f6\u503c\uff08\u5982\u6e29\u5ea6\u3001CPU \u4f7f\u7528\u7387\uff09\u3002</li> <li>Histogram\uff1a\u76f4\u65b9\u56fe\uff0c\u7528\u4e8e\u8bb0\u5f55\u4e00\u7ec4\u6570\u636e\u7684\u5206\u5e03\u60c5\u51b5\uff08\u5982\u8bf7\u6c42\u5ef6\u65f6\u7684\u5206\u5e03\uff09\u3002</li> <li>Summary\uff1a\u4e0e Histogram \u7c7b\u4f3c\uff0c\u4f46\u5b83\u53ef\u4ee5\u8ba1\u7b97\u51fa\u767e\u5206\u4f4d\u6570\u3002</li> </ul> </li> </ul>"},{"location":"cloud/prometheus/promql/#2-promql","title":"2. PromQL \u57fa\u7840\u8bed\u6cd5","text":"<p>PromQL \u7684\u57fa\u672c\u7ec4\u6210\u6709\u56db\u79cd\u7c7b\u578b\u7684\u8868\u8fbe\u5f0f\uff1a\u77ac\u65f6\u5411\u91cf\u3001\u533a\u95f4\u5411\u91cf\u3001\u6807\u91cf\u3001\u5b57\u7b26\u4e32\u3002</p> <ul> <li> <p>\u77ac\u65f6\u5411\u91cf (Instant Vector)\uff1a\u8fd4\u56de\u5728\u6307\u5b9a\u65f6\u95f4\u70b9\u4e0a\u7684\u4e00\u7ec4\u65f6\u95f4\u5e8f\u5217\u3002\u4f8b\u5982\uff1a<code>up</code> \u67e5\u8be2\u5f53\u524d\u6240\u6709 <code>up</code> \u5ea6\u91cf\u3002</p> </li> <li> <p>\u533a\u95f4\u5411\u91cf (Range Vector)\uff1a\u8fd4\u56de\u5728\u6307\u5b9a\u65f6\u95f4\u8303\u56f4\u5185\u7684\u65f6\u95f4\u5e8f\u5217\u3002\u4f8b\u5982\uff1a<code>up[5m]</code> \u8868\u793a\u8fc7\u53bb 5 \u5206\u949f\u5185\u7684 <code>up</code> \u6570\u636e\u3002</p> </li> <li> <p>\u6807\u91cf (Scalar)\uff1a\u8fd4\u56de\u5355\u4e2a\u6570\u503c\uff0c\u4f8b\u5982\uff1a<code>5</code>\u3002</p> </li> <li> <p>\u5b57\u7b26\u4e32 (String)\uff1a\u8fd4\u56de\u6587\u672c\u5b57\u7b26\u4e32\u503c\uff0c\u4f46\u8f83\u5c11\u4f7f\u7528\u3002</p> </li> </ul>"},{"location":"cloud/prometheus/promql/#3","title":"3. \u67e5\u8be2\u793a\u4f8b","text":""},{"location":"cloud/prometheus/promql/#31","title":"3.1 \u67e5\u8be2\u67d0\u4e2a\u6307\u6807","text":"<p><pre><code>http_requests_total\n</code></pre> \u8fd4\u56de <code>http_requests_total</code> \u5ea6\u91cf\u7684\u6240\u6709\u65f6\u95f4\u5e8f\u5217\u3002</p>"},{"location":"cloud/prometheus/promql/#32","title":"3.2 \u8fc7\u6ee4\u6807\u7b7e","text":"<p><pre><code>http_requests_total{method=\"GET\", status=\"200\"}\n</code></pre> \u8fd4\u56de <code>method</code> \u4e3a <code>GET</code> \u4e14 <code>status</code> \u4e3a <code>200</code> \u7684\u65f6\u95f4\u5e8f\u5217\u3002</p>"},{"location":"cloud/prometheus/promql/#33","title":"3.3 \u4f7f\u7528\u533a\u95f4\u67e5\u8be2","text":"<p><pre><code>rate(http_requests_total[5m])\n</code></pre> \u8ba1\u7b97\u8fc7\u53bb 5 \u5206\u949f\u5185 HTTP \u8bf7\u6c42\u6570\u7684\u53d8\u5316\u901f\u7387\u3002</p>"},{"location":"cloud/prometheus/promql/#4-promql","title":"4. PromQL \u64cd\u4f5c\u7b26","text":"<p>PromQL \u652f\u6301\u4ee5\u4e0b\u51e0\u79cd\u64cd\u4f5c\u7b26\uff1a</p> <ul> <li> <p>\u7b97\u672f\u8fd0\u7b97\u7b26\uff1a<code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, <code>%</code>\uff08\u7528\u4e8e\u5ea6\u91cf\u4e4b\u95f4\u7684\u8ba1\u7b97\uff09\u3002   <pre><code>rate(http_requests_total[5m]) / rate(cpu_usage_seconds_total[5m])\n</code></pre></p> </li> <li> <p>\u6bd4\u8f83\u8fd0\u7b97\u7b26\uff1a<code>==</code>, <code>!=</code>, <code>&gt;</code>, <code>&lt;</code>, <code>&gt;=</code>, <code>&lt;=</code>\uff08\u53ef\u7528\u4e8e\u8fc7\u6ee4\u7b26\u5408\u6761\u4ef6\u7684\u65f6\u95f4\u5e8f\u5217\uff09\u3002   <pre><code>cpu_usage_seconds_total &gt; 0.5\n</code></pre></p> </li> <li> <p>\u903b\u8f91\u8fd0\u7b97\u7b26\uff1a<code>and</code>, <code>or</code>, <code>unless</code>\uff08\u7528\u4e8e\u4e24\u4e2a\u5ea6\u91cf\u4e4b\u95f4\u7684\u903b\u8f91\u7ec4\u5408\uff09\u3002   <pre><code>http_requests_total{status=\"200\"} and cpu_usage_seconds_total\n</code></pre></p> </li> </ul>"},{"location":"cloud/prometheus/promql/#5-promql","title":"5. PromQL \u805a\u5408\u51fd\u6570","text":"<p>PromQL \u652f\u6301\u591a\u79cd\u805a\u5408\u51fd\u6570\u6765\u5904\u7406\u67e5\u8be2\u7ed3\u679c\u3002\u5e38\u89c1\u7684\u805a\u5408\u51fd\u6570\u6709\uff1a</p> <ul> <li> <p>sum()\uff1a\u5bf9\u591a\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u503c\u8fdb\u884c\u6c42\u548c\u3002   <pre><code>sum(rate(http_requests_total[5m]))\n</code></pre></p> </li> <li> <p>avg()\uff1a\u5bf9\u591a\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u503c\u8fdb\u884c\u6c42\u5e73\u5747\u3002   <pre><code>avg(cpu_usage_seconds_total)\n</code></pre></p> </li> <li> <p>max() \u548c min()\uff1a\u5206\u522b\u8fd4\u56de\u6700\u5927\u548c\u6700\u5c0f\u503c\u3002   <pre><code>max(http_requests_total)\n</code></pre></p> </li> <li> <p>count()\uff1a\u7edf\u8ba1\u5339\u914d\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u91cf\u3002   <pre><code>count(http_requests_total)\n</code></pre></p> </li> </ul>"},{"location":"cloud/prometheus/promql/#6-promql","title":"6. \u5e38\u89c1 PromQL \u793a\u4f8b","text":""},{"location":"cloud/prometheus/promql/#61-cpu","title":"6.1 \u67e5\u8be2 CPU \u4f7f\u7528\u7387","text":"<p><pre><code>rate(cpu_usage_seconds_total[5m])\n</code></pre> \u67e5\u8be2\u8fc7\u53bb 5 \u5206\u949f\u5185 CPU \u4f7f\u7528\u7387\u7684\u53d8\u5316\u901f\u7387\u3002</p>"},{"location":"cloud/prometheus/promql/#62-http","title":"6.2 \u67e5\u8be2\u7279\u5b9a\u670d\u52a1\u7684 HTTP \u8bf7\u6c42\u6570","text":"<p><pre><code>sum(rate(http_requests_total{job=\"web\"}[5m])) by (method)\n</code></pre> \u67e5\u8be2 <code>web</code> \u670d\u52a1\u8fc7\u53bb 5 \u5206\u949f\u5185\u7684 HTTP \u8bf7\u6c42\u6570\uff0c\u5e76\u6309 HTTP \u65b9\u6cd5\u5206\u7ec4\u3002</p>"},{"location":"cloud/prometheus/promql/#63-80","title":"6.3 \u67e5\u8be2\u5185\u5b58\u4f7f\u7528\u7387\u8d85\u8fc7 80% \u7684\u4e3b\u673a","text":"<p><pre><code>node_memory_Active_bytes / node_memory_MemTotal_bytes &gt; 0.8\n</code></pre> \u67e5\u8be2\u5185\u5b58\u4f7f\u7528\u7387\u8d85\u8fc7 80% \u7684\u6240\u6709\u4e3b\u673a\u3002</p>"},{"location":"cloud/prometheus/promql/#7-promql","title":"7. PromQL \u51fd\u6570\u5217\u8868","text":"<p>PromQL \u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u5185\u7f6e\u51fd\u6570\uff0c\u7528\u4e8e\u5bf9\u65f6\u95f4\u5e8f\u5217\u8fdb\u884c\u590d\u6742\u64cd\u4f5c\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u7528\u51fd\u6570\uff1a</p> <ul> <li>rate()\uff1a\u8ba1\u7b97\u901f\u7387\uff0c\u5e38\u7528\u4e8e Counter \u7c7b\u578b\u7684\u65f6\u95f4\u5e8f\u5217\u3002</li> <li>irate()\uff1a\u7c7b\u4f3c <code>rate()</code>\uff0c\u4f46\u4ec5\u4f7f\u7528\u6700\u8fd1\u4e24\u4e2a\u6570\u636e\u70b9\u8ba1\u7b97\u901f\u7387\uff0c\u9002\u5408\u5bf9\u9ad8\u5206\u8fa8\u7387\u7684\u76d1\u63a7\u6570\u636e\u8fdb\u884c\u77ed\u671f\u89c2\u5bdf\u3002</li> <li>increase()\uff1a\u8ba1\u7b97 Counter \u5728\u7ed9\u5b9a\u65f6\u95f4\u8303\u56f4\u5185\u7684\u589e\u91cf\u3002</li> <li>delta()\uff1a\u8ba1\u7b97\u533a\u95f4\u5185\u7684\u6570\u503c\u53d8\u5316\uff0c\u9002\u7528\u4e8e Gauge \u7c7b\u578b\u7684\u65f6\u95f4\u5e8f\u5217\u3002</li> <li>histogram_quantile()\uff1a\u7528\u4e8e\u8ba1\u7b97 Histogram \u6570\u636e\u7684\u7279\u5b9a\u767e\u5206\u4f4d\u6570\u3002</li> </ul>"},{"location":"cloud/prometheus/promql/#8","title":"8. \u8fdb\u9636\u4f7f\u7528\uff1a\u5b50\u67e5\u8be2","text":"<p>PromQL \u652f\u6301\u5b50\u67e5\u8be2\uff0c\u5373\u53ef\u4ee5\u5bf9\u4e00\u4e2a\u67e5\u8be2\u7ed3\u679c\u518d\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u67e5\u8be2\u548c\u8ba1\u7b97\u3002\u5b50\u67e5\u8be2\u7684\u8bed\u6cd5\u662f <code>(&lt;expression&gt;)[&lt;range&gt;:&lt;resolution&gt;]</code>\u3002</p> <p><pre><code>avg_over_time(rate(http_requests_total[5m])[1h:])\n</code></pre> \u8be5\u67e5\u8be2\u9996\u5148\u8ba1\u7b97 HTTP \u8bf7\u6c42\u7684 5 \u5206\u949f\u53d8\u5316\u901f\u7387\uff0c\u7136\u540e\u5bf9\u8fc7\u53bb 1 \u5c0f\u65f6\u7684\u6570\u636e\u8fdb\u884c\u5e73\u5747\u3002</p>"},{"location":"cloud/prometheus/promql/#9","title":"9. \u603b\u7ed3","text":"<p>PromQL \u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u4e14\u7075\u6d3b\u7684\u67e5\u8be2\u8bed\u8a00\uff0c\u80fd\u591f\u5bf9 Prometheus \u4e2d\u5b58\u50a8\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u8fdb\u884c\u590d\u6742\u7684\u5206\u6790\u548c\u5904\u7406\u3002\u901a\u8fc7\u638c\u63e1\u57fa\u672c\u7684\u67e5\u8be2\u8bed\u6cd5\u3001\u64cd\u4f5c\u7b26\u3001\u805a\u5408\u51fd\u6570\u4ee5\u53ca\u9ad8\u7ea7\u7528\u6cd5\uff08\u5982\u5b50\u67e5\u8be2\uff09\uff0c\u4f60\u53ef\u4ee5\u4ece Prometheus \u4e2d\u83b7\u53d6\u4e30\u5bcc\u7684\u76d1\u63a7\u6570\u636e\u6d1e\u5bdf\u3002</p>"},{"location":"deeplearning/pytorch/activate/","title":"\u6fc0\u6d3b\u51fd\u6570","text":"<p>\u6fc0\u6d3b\u51fd\u6570\uff08Activation Function\uff09\u662f\u6df1\u5ea6\u5b66\u4e60\u4e2d\u975e\u7ebf\u6027\u53d8\u6362\u7684\u6838\u5fc3\u673a\u5236\uff0c\u7528\u4e8e\u63a7\u5236\u795e\u7ecf\u7f51\u7edc\u4e2d\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u3002</p>"},{"location":"deeplearning/pytorch/activate/#sigmoid","title":"\u4e00\u3001Sigmoid","text":"<p>Sigmoid\u51fd\u6570\u662f\u795e\u7ecf\u7f51\u7edc\u4e2d\u5e38\u7528\u7684\u6fc0\u6d3b\u51fd\u6570\u4e4b\u4e00\uff0c\u5c24\u5176\u5728\u4e8c\u5206\u7c7b\u95ee\u9898\u7684\u8f93\u51fa\u5c42\u4e2d\u5e7f\u6cdb\u5e94\u7528\u3002\u4e0b\u9762\u6211\u5c06\u4ece\u591a\u4e2a\u65b9\u9762\u8be6\u7ec6\u4ecb\u7ecdSigmoid\u51fd\u6570\u3002</p> <p>Sigmoid\u51fd\u6570\uff08\u53c8\u79f0Logistic\u51fd\u6570\uff09\u662f\u4e00\u79cdS\u578b\u66f2\u7ebf\u51fd\u6570\uff0c\u5b83\u5c06\u4efb\u610f\u5b9e\u6570\u8f93\u5165\u6620\u5c04\u5230(0,1)\u533a\u95f4\u3002\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u5b83\u66fe\u7ecf\u662f\u6700\u5e38\u7528\u7684\u6fc0\u6d3b\u51fd\u6570\u4e4b\u4e00\uff0c\u7279\u522b\u9002\u5408\u9700\u8981\u8f93\u51fa\u6982\u7387\u7684\u573a\u666f\u3002</p> <p></p>"},{"location":"deeplearning/pytorch/activate/#11","title":"1.1  \u6570\u5b66\u5b9a\u4e49","text":"<p>Sigmoid\u51fd\u6570\u7684\u6570\u5b66\u8868\u8fbe\u5f0f\u4e3a\uff1a\\(f(x) = \\frac{1}{1 + e^{-x}}\\) </p> <p>Info</p> <ul> <li>e\u662f\u81ea\u7136\u5bf9\u6570\u7684\u5e95\u6570(\u7ea62.71828)</li> <li>x\u662f\u51fd\u6570\u7684\u8f93\u5165\u503c</li> </ul>"},{"location":"deeplearning/pytorch/activate/#12","title":"1.2 \u4f18\u7f3a\u70b9","text":"<p>\u4f18\u70b9\uff1a</p> <ul> <li>\u6982\u7387\u89e3\u91ca\uff1a\u8f93\u51fa\u503c\u57280-1\u4e4b\u95f4\uff0c\u5929\u7136\u9002\u5408\u8868\u793a\u6982\u7387</li> <li>\u5e73\u6ed1\u6027\uff1a\u5904\u5904\u53ef\u5bfc\uff0c\u4fbf\u4e8e\u68af\u5ea6\u4e0b\u964d\u4f18\u5316</li> <li>\u5355\u8c03\u6027\uff1a\u4fdd\u8bc1\u8bef\u5dee\u66f2\u9762\u4e0d\u4f1a\u51fa\u73b0\u5c40\u90e8\u6781\u5c0f\u503c</li> <li>\u5386\u53f2\u5730\u4f4d\uff1a\u65e9\u671f\u795e\u7ecf\u7f51\u7edc\u7684\u57fa\u7840\u6fc0\u6d3b\u51fd\u6570</li> </ul> <p>\u7f3a\u70b9\uff1a</p> <ul> <li>\u68af\u5ea6\u6d88\u5931\uff1a\u5f53|x|\u8f83\u5927\u65f6\u68af\u5ea6\u63a5\u8fd10\uff0c\u5bfc\u81f4\u6df1\u5c42\u7f51\u7edc\u8bad\u7ec3\u56f0\u96be</li> <li>\u975e\u96f6\u4e2d\u5fc3\uff1a\u8f93\u51fa\u5168\u4e3a\u6b63\u6570\uff0c\u5f71\u54cd\u68af\u5ea6\u66f4\u65b0\u6548\u7387</li> <li>\u8ba1\u7b97\u6210\u672c\uff1a\u5305\u542b\u6307\u6570\u8fd0\u7b97\uff0c\u8ba1\u7b97\u91cf\u8f83\u5927</li> <li>\u654f\u611f\u533a\u95f4\u7a84\uff1a\u4ec5\u5728\u8f93\u5165\u63a5\u8fd10\u65f6\u654f\u611f\uff0c\u4e24\u7aef\u9971\u548c</li> </ul>"},{"location":"deeplearning/pytorch/activate/#13","title":"1.3 \u5b9e\u73b0\u4ee3\u7801","text":"<pre><code>import torch\nimport torch.nn.functional as F\nimport matplotlib.pyplot as plt\n\nx = torch.linspace(-5,5,100)\n\ny = F.sigmoid(x)\n\nplt.plot(x.numpy(),y.numpy(),label=\"sigmoid\")\n# plt.grid(True)\nplt.legend()\nplt.show()\n</code></pre>"},{"location":"deeplearning/pytorch/activate/#tanh","title":"\u4e8c\u3001Tanh","text":"<p>Tanh\uff08Hyperbolic Tangent\uff0c\u53cc\u66f2\u6b63\u5207\uff09\u51fd\u6570\u662f\u4e00\u79cdS\u578b\u66f2\u7ebf\u6fc0\u6d3b\u51fd\u6570\uff0c\u5b83\u5c06\u4efb\u610f\u5b9e\u6570\u8f93\u5165\u6620\u5c04\u5230(-1,1)\u533a\u95f4\u3002Tanh\u53ef\u4ee5\u770b\u4f5cSigmoid\u51fd\u6570\u7684\u7f29\u653e\u5e73\u79fb\u7248\u672c\uff0c\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\u5e38\u7528\u4e8e\u9690\u85cf\u5c42\u3002</p> <p></p>"},{"location":"deeplearning/pytorch/activate/#21","title":"2.1 \u6570\u5b66\u516c\u5f0f","text":"\\[ f(x) = \\tanh(x) \\]"},{"location":"deeplearning/pytorch/activate/#22","title":"2.2 \u4f18\u7f3a\u70b9","text":"<p>\u4f18\u70b9\uff1a</p> <ul> <li>\u96f6\u4e2d\u5fc3\u5316\uff1a\u8f93\u51fa\u5747\u503c\u4e3a0\uff0c\u4f7f\u4e0b\u4e00\u5c42\u5b66\u4e60\u66f4\u9ad8\u6548</li> <li>\u68af\u5ea6\u66f4\u5f3a\uff1a\u76f8\u6bd4Sigmoid\uff0c\u68af\u5ea6\u66f4\u5927\uff08\u6700\u5927\u68af\u5ea6\u4e3a1\uff09</li> <li>\u5e73\u6ed1\u6027\uff1a\u5904\u5904\u53ef\u5bfc\uff0c\u4fbf\u4e8e\u68af\u5ea6\u4e0b\u964d\u4f18\u5316</li> <li>\u5355\u8c03\u6027\uff1a\u4fdd\u8bc1\u8bef\u5dee\u66f2\u9762\u4e0d\u4f1a\u51fa\u73b0\u5c40\u90e8\u6781\u5c0f\u503c</li> </ul> <p>\u7f3a\u70b9\uff1a</p> <ul> <li>\u68af\u5ea6\u6d88\u5931\uff1a\u5f53|x|\u8f83\u5927\u65f6\u68af\u5ea6\u63a5\u8fd10\uff0c\u5bfc\u81f4\u6df1\u5c42\u7f51\u7edc\u8bad\u7ec3\u56f0\u96be</li> <li>\u8ba1\u7b97\u6210\u672c\uff1a\u5305\u542b\u6307\u6570\u8fd0\u7b97\uff0c\u8ba1\u7b97\u91cf\u8f83\u5927</li> <li>\u654f\u611f\u533a\u95f4\u7a84\uff1a\u4ec5\u5728\u8f93\u5165\u63a5\u8fd10\u65f6\u654f\u611f\uff0c\u4e24\u7aef\u9971\u548c</li> </ul>"},{"location":"deeplearning/pytorch/activate/#23","title":"2.3 \u4ee3\u7801\u5b9e\u73b0","text":"<pre><code>import torch\nimport torch.nn.functional as F\nimport matplotlib.pyplot as plt\n\nx = torch.linspace(-5,5,100)\n\ny = F.tanh(x)\n\nplt.plot(x.numpy(),y.numpy(),label=\"Tanh\")\nplt.grid(True)\nplt.legend()\nplt.show()\n</code></pre>"},{"location":"deeplearning/pytorch/activate/#relu","title":"\u4e09\u3001ReLU","text":"<p>ReLU\uff08\u4fee\u6b63\u7ebf\u6027\u5355\u5143\uff09\u662f\u76ee\u524d\u6df1\u5ea6\u5b66\u4e60\u4e2d\u6700\u5e38\u7528\u7684\u6fc0\u6d3b\u51fd\u6570\uff0c\u5b9a\u4e49\u4e3a\uff1a\\(f(x) = max(0, x)\\) \u5373\u5bf9\u4e8e\u8f93\u5165x\uff0c\u5f53x&gt;0\u65f6\u8f93\u51fax\uff0c\u5426\u5219\u8f93\u51fa0\u3002</p> <p></p>"},{"location":"deeplearning/pytorch/activate/#31","title":"3.1 \u6570\u5b66\u516c\u5f0f","text":"\\[ f(x) = \\max(0, x) \\]"},{"location":"deeplearning/pytorch/activate/#32","title":"3.2 \u4f18\u7f3a\u70b9","text":"<p>\u4f18\u70b9\uff1a</p> <ol> <li>\u8ba1\u7b97\u9ad8\u6548\uff1a<ul> <li>\u53ea\u9700\u7b80\u5355\u7684max\u64cd\u4f5c\uff0c\u8ba1\u7b97\u901f\u5ea6\u8fdc\u5feb\u4e8eSigmoid/Tanh\u7684\u6307\u6570\u8fd0\u7b97</li> <li>\u5728\u5927\u578b\u7f51\u7edc\u548c\u6df1\u5c42\u67b6\u6784\u4e2d\u4f18\u52bf\u660e\u663e</li> </ul> </li> <li>\u7f13\u89e3\u68af\u5ea6\u6d88\u5931\uff1a<ul> <li>\u6b63\u533a\u95f4\u7684\u68af\u5ea6\u6052\u4e3a1\uff0c\u6709\u6548\u89e3\u51b3\u6df1\u5c42\u7f51\u7edc\u7684\u68af\u5ea6\u6d88\u5931\u95ee\u9898</li> <li>\u4f7f\u7f51\u7edc\u53ef\u4ee5\u8bad\u7ec3\u5f97\u66f4\u6df1\uff08\u5982ResNet\u8d85\u8fc7100\u5c42\uff09</li> </ul> </li> <li>\u7a00\u758f\u6fc0\u6d3b\uff1a<ul> <li>\u8d1f\u8f93\u5165\u5b8c\u5168\u88ab\u6291\u5236\uff0c\u4ea7\u751f\u771f\u6b63\u7684\u96f6\u6fc0\u6d3b</li> <li>\u6a21\u62df\u751f\u7269\u795e\u7ecf\u5143\u7684\"\u5168\u6709\u6216\u5168\u65e0\"\u7279\u6027</li> <li>\u81ea\u52a8\u5b9e\u73b0\u7279\u5f81\u9009\u62e9\uff0c\u63d0\u9ad8\u6a21\u578b\u6cdb\u5316\u80fd\u529b</li> </ul> </li> <li>\u6536\u655b\u901f\u5ea6\u5feb\uff1a<ul> <li>\u76f8\u6bd4Sigmoid/Tanh\uff0cReLU\u80fd\u4f7f\u7f51\u7edc\u66f4\u5feb\u6536\u655b</li> <li>\u5b9e\u9a8c\u8868\u660e\u901a\u5e38\u5feb6\u500d\u5de6\u53f3</li> </ul> </li> </ol> <p>\u7f3a\u70b9\uff1a</p> <ol> <li>\u795e\u7ecf\u5143\u6b7b\u4ea1\u95ee\u9898\uff08Dying ReLU\uff09\uff1a<ul> <li>\u5f53\u8f93\u5165\u59cb\u7ec8\u4e3a\u8d1f\u65f6\uff0c\u68af\u5ea6\u6052\u4e3a0\uff0c\u795e\u7ecf\u5143\u6c38\u4e45\u5931\u6548</li> <li>\u5b66\u4e60\u7387\u8bbe\u7f6e\u8fc7\u9ad8\u65f6\u5c24\u5176\u660e\u663e</li> </ul> </li> <li>\u975e\u96f6\u4e2d\u5fc3\u6027\uff1a<ul> <li>\u8f93\u51fa\u59cb\u7ec8\u22650\uff0c\u4e0d\u662f\u4ee50\u4e3a\u4e2d\u5fc3</li> <li>\u53ef\u80fd\u5f71\u54cd\u68af\u5ea6\u4e0b\u964d\u6548\u7387</li> </ul> </li> <li>\u65e0\u8d1f\u503c\u8f93\u51fa\uff1a<ul> <li>\u5b8c\u5168\u6291\u5236\u8d1f\u503c\u4fe1\u606f\uff0c\u53ef\u80fd\u4e22\u5931\u91cd\u8981\u7279\u5f81</li> </ul> </li> <li>\u65e0\u754c\u8f93\u51fa\uff1a<ul> <li>\u6b63\u533a\u95f4\u7406\u8bba\u4e0a\u65e0\u4e0a\u9650</li> <li>\u53ef\u80fd\u5bfc\u81f4\u67d0\u4e9b\u60c5\u51b5\u4e0b\u6fc0\u6d3b\u503c\u8fc7\u5927</li> </ul> </li> </ol>"},{"location":"deeplearning/pytorch/activate/#33","title":"3.3 \u4ee3\u7801\u5b9e\u73b0","text":"<pre><code>import torch\nimport torch.nn.functional as F\nimport matplotlib.pyplot as plt\n\nx = torch.linspace(-5,5,100)\n\ny = F.relu(x)\n\nplt.plot(x.numpy(),y.numpy(),label=\"relu\")\nplt.grid(True)\nplt.legend()\nplt.show()\n</code></pre>"},{"location":"deeplearning/pytorch/activate/#leaky-relu","title":"\u56db\u3001Leaky ReLU","text":"<p>Leaky ReLU\u662fReLU\u6fc0\u6d3b\u51fd\u6570\u7684\u6539\u8fdb\u7248\u672c\uff0c\u65e8\u5728\u89e3\u51b3\"\u795e\u7ecf\u5143\u6b7b\u4ea1\"\u95ee\u9898\u3002</p> <p></p>"},{"location":"deeplearning/pytorch/activate/#41","title":"4.1 \u6570\u5b66\u516c\u5f0f","text":"\\[ f(x) = \\begin{cases} x, &amp; x&gt;0 \\\\ \\alpha x, &amp; x \\le 0 \\end{cases} (-\u221e, \u221e) \\]"},{"location":"deeplearning/pytorch/activate/#42","title":"4.2 \u6838\u5fc3\u7279\u70b9","text":"<ul> <li>\u8d1f\u533a\u95f4\u659c\u7387\uff1a\u4fdd\u7559\u8d1f\u503c\u533a\u57df\u7684\u5c0f\u659c\u7387\uff08\u03b1\uff09\uff0c\u800c\u4e0d\u662f\u5b8c\u5168\u7f6e\u96f6</li> <li>\u53c2\u6570\u8bbe\u7f6e\uff1a\u03b1\u901a\u5e38\u8bbe\u4e3a0.01\uff0c\u4e5f\u53ef\u4f5c\u4e3a\u53ef\u5b66\u4e60\u53c2\u6570\uff08\u6b64\u65f6\u79f0\u4e3aPReLU\uff09</li> <li>\u8ba1\u7b97\u6548\u7387\uff1a\u4f9d\u7136\u4fdd\u6301\u8f83\u9ad8\u7684\u8ba1\u7b97\u6548\u7387\uff0c\u53ea\u6bd4\u6807\u51c6ReLU\u7a0d\u590d\u6742</li> </ul>"},{"location":"deeplearning/pytorch/activate/#43","title":"4.3 \u4f18\u7f3a\u70b9","text":"<p>\u4f18\u70b9\uff1a</p> <ol> <li>\u89e3\u51b3\u795e\u7ecf\u5143\u6b7b\u4ea1\u95ee\u9898\uff1a<ul> <li>\u8d1f\u533a\u95f4\u4ecd\u6709\u5fae\u5c0f\u68af\u5ea6\uff08\u03b1\uff09\uff0c\u4f7f\u795e\u7ecf\u5143\u6709\u673a\u4f1a\u6062\u590d</li> <li>\u5b9e\u9a8c\u663e\u793a\u53ef\u51cf\u5c11\u7ea630%\u7684\"\u6b7b\u4ea1\u795e\u7ecf\u5143\"</li> </ul> </li> <li>\u4fdd\u7559ReLU\u4f18\u52bf\uff1a<ul> <li>\u6b63\u533a\u95f4\u4fdd\u6301\u7ebf\u6027\u7279\u6027\uff0c\u907f\u514d\u68af\u5ea6\u6d88\u5931</li> <li>\u8ba1\u7b97\u4ecd\u7136\u9ad8\u6548\uff0c\u9002\u5408\u6df1\u5c42\u7f51\u7edc</li> </ul> </li> <li>\u7a00\u758f\u6fc0\u6d3b\u4fdd\u7559\uff1a<ul> <li>\u867d\u7136\u8d1f\u503c\u4e0d\u5b8c\u5168\u5f52\u96f6\uff0c\u4f46\u4ecd\u4fdd\u6301\u9ad8\u5ea6\u7a00\u758f\u6027</li> <li>\u7ef4\u6301\u4e86ReLU\u7684\u7279\u5f81\u9009\u62e9\u80fd\u529b</li> </ul> </li> <li>\u5b9e\u8df5\u8868\u73b0\u4f18\u5f02\uff1a<ul> <li>\u5728\u56fe\u50cf\u5206\u7c7b\u7b49\u4efb\u52a1\u4e2d\u5e38\u4f18\u4e8e\u6807\u51c6ReLU</li> <li>\u7279\u522b\u9002\u5408\u566a\u58f0\u8f83\u591a\u7684\u6570\u636e\u96c6</li> </ul> </li> </ol> <p>\u7f3a\u70b9\uff1a</p> <ol> <li>\u6548\u679c\u4f9d\u8d56\u8d85\u53c2\u6570\uff1a<ul> <li>\u03b1\u503c\u9700\u8981\u8c28\u614e\u9009\u62e9\uff08\u592a\u5c0f\u65e0\u6548\uff0c\u592a\u5927\u4f1a\u4e27\u5931ReLU\u7279\u6027\uff09</li> <li>\u5e38\u7528\u03b1=0.01\uff0c\u4f46\u5e76\u975e\u6240\u6709\u573a\u666f\u6700\u4f18</li> </ul> </li> <li>\u7406\u8bba\u4fdd\u8bc1\u4e0d\u8db3\uff1a<ul> <li>\u4e0d\u50cfSELU\u6709\u6570\u5b66\u4e0a\u7684\u5f52\u4e00\u5316\u8bc1\u660e</li> <li>\u6027\u80fd\u63d0\u5347\u7f3a\u4e4f\u4e25\u683c\u7406\u8bba\u652f\u6301</li> </ul> </li> <li>\u975e\u96f6\u4e2d\u5fc3\u95ee\u9898\uff1a<ul> <li>\u8f93\u51fa\u5747\u503c\u4ecd\u4e0d\u4e3a\u96f6\uff0c\u5f71\u54cd\u68af\u5ea6\u66f4\u65b0\u6548\u7387</li> <li>\u6b64\u95ee\u9898\u5728ELU/SELU\u4e2d\u5f97\u5230\u66f4\u597d\u89e3\u51b3 4.\u8ba1\u7b97\u7a0d\u590d\u6742\uff1a</li> <li>\u6bd4\u6807\u51c6ReLU\u591a\u4e00\u6b21\u4e58\u6cd5\u8fd0\u7b97</li> <li>\u5728\u6781\u4f4e\u529f\u8017\u8bbe\u5907\u4e0a\u53ef\u80fd\u5f71\u54cd\u6548\u7387</li> </ul> </li> </ol>"},{"location":"deeplearning/pytorch/activate/#44","title":"4.4 \u4ee3\u7801\u5b9e\u73b0","text":"<pre><code>import torch\nimport torch.nn.functional as F\nimport matplotlib.pyplot as plt\n\nx = torch.linspace(-5,5,100)\n\ny = F.leaky_relu(x)\n\nplt.plot(x.numpy(),y.numpy(),label=\"Leaky ReLU\")\nplt.grid(True)\nplt.legend()\nplt.show()\n</code></pre>"},{"location":"deeplearning/pytorch/activate/#gelu","title":"\u4e94\u3001GELU","text":"<p>GELU\uff08\u9ad8\u65af\u8bef\u5dee\u7ebf\u6027\u5355\u5143\uff09\u662f\u4e00\u79cd\u8fd1\u5e74\u6765\u63d0\u51fa\u7684\u9ad8\u6027\u80fd\u6fc0\u6d3b\u51fd\u6570\uff0c\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8eTransformer\u67b6\u6784\uff08\u5982BERT\u3001GPT\u7b49\uff09\u3002\u5b83\u5c06\u795e\u7ecf\u5143\u7684\u975e\u7ebf\u6027\u4e0e\u968f\u673a\u6b63\u5219\u5316\u601d\u60f3\u76f8\u7ed3\u5408\uff0c\u901a\u8fc7\u9ad8\u65af\u5206\u5e03\u7684\u7d2f\u79ef\u5206\u5e03\u51fd\u6570\u5bf9\u8f93\u5165\u8fdb\u884c\u53d8\u6362\u3002</p> <p></p>"},{"location":"deeplearning/pytorch/activate/#51","title":"5.1 \u6570\u5b66\u516c\u5f0f","text":"\\[ GELU(x) = x\u03a6(x) = x\u00b71/2[1 + erf(x/\u221a2)] \\] <p>Info</p> <ul> <li> <p>\u03a6(x)\u662f\u6807\u51c6\u9ad8\u65af\u5206\u5e03\u7684\u7d2f\u79ef\u5206\u5e03\u51fd\u6570</p> </li> <li> <p>erf\u662f\u8bef\u5dee\u51fd\u6570\uff1a\\(erf(x) = 2/\u221a\u03c0 \u222b\u2080\u02e3 e\u207b\u1d57\u00b2 dt\\)</p> </li> </ul>"},{"location":"deeplearning/pytorch/activate/#52","title":"5.2 \u6838\u5fc3\u7279\u70b9","text":"<ul> <li>\u6982\u7387\u89c6\u89d2\uff1a\u5c06\u8f93\u5165\u4e58\u4ee5\u5176\"\u88ab\u4fdd\u7559\u7684\u6982\u7387\"\u03a6(x)</li> <li>\u5e73\u6ed1\u8fc7\u6e21\uff1a\u76f8\u6bd4ReLU\u7684\u786c\u8fb9\u754c\uff0c\u63d0\u4f9b\u5e73\u6ed1\u7684\u975e\u7ebf\u6027\u8fc7\u6e21</li> <li>\u81ea\u9002\u5e94\u6027\uff1a\u6839\u636e\u8f93\u5165\u5e45\u5ea6\u81ea\u52a8\u8c03\u6574\u6fc0\u6d3b\u5f3a\u5ea6</li> <li>\u53cc\u5411\u6fc0\u6d3b\uff1a\u540c\u65f6\u5904\u7406\u6b63\u8d1f\u8f93\u5165\uff08\u4e0d\u540c\u4e8eReLU\u7684\u5355\u5411\u6fc0\u6d3b\uff09</li> </ul>"},{"location":"deeplearning/pytorch/activate/#53","title":"5.3 \u4f18\u7f3a\u70b9","text":"<p>\u4f18\u70b9\uff1a</p> <ol> <li>\u5353\u8d8a\u7684\u6a21\u578b\u6027\u80fd\uff1a<ul> <li>\u5728\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4efb\u52a1\u4e2d\u8868\u73b0\u663e\u8457\u4f18\u4e8eReLU</li> <li>\u5728BERT\u3001GPT\u7b49SOTA\u6a21\u578b\u4e2d\u6210\u4e3a\u6807\u51c6\u914d\u7f6e</li> </ul> </li> <li>\u6570\u5b66\u7406\u8bba\u57fa\u7840\u5f3a\uff1a<ul> <li>\u57fa\u4e8e\u968f\u673a\u6b63\u5219\u5316\u7684\u6982\u7387\u89e3\u91ca\uff08Dropout\u7684\u786e\u5b9a\u6027\u7248\u672c\uff09</li> <li>\u4e0e\u795e\u7ecf\u7f51\u7edc\u7684\u968f\u673a\u6b63\u5219\u5316\u6709\u7406\u8bba\u8054\u7cfb</li> </ul> </li> <li>\u5e73\u6ed1\u68af\u5ea6\u6d41\uff1a<ul> <li>\u5904\u5904\u53ef\u5bfc\uff0c\u6ca1\u6709ReLU\u7684\u786c\u622a\u65ad</li> <li>\u7f13\u89e3\u68af\u5ea6\u6d88\u5931/\u7206\u70b8\u95ee\u9898</li> </ul> </li> <li>\u81ea\u9002\u5e94\u975e\u7ebf\u6027\uff1a<ul> <li>\u81ea\u52a8\u5e73\u8861\u7ebf\u6027\u548c\u975e\u7ebf\u6027\u884c\u4e3a</li> <li>\u5927\u8f93\u5165\u65f6\u63a5\u8fd1\u7ebf\u6027\uff0c\u5c0f\u8f93\u5165\u65f6\u8868\u73b0\u5f3a\u975e\u7ebf\u6027</li> </ul> </li> <li>\u96f6\u4e2d\u5fc3\u6027\uff1a<ul> <li>\u8f93\u51fa\u5747\u503c\u4e3a\u96f6\uff0c\u6709\u5229\u4e8e\u7f51\u7edc\u8bad\u7ec3\u52a8\u6001\u5e73\u8861</li> </ul> </li> </ol> <p>\u7f3a\u70b9\uff1a</p> <ol> <li>\u8ba1\u7b97\u590d\u6742\u5ea6\u9ad8\uff1a<ul> <li>\u6d89\u53ca\u7279\u6b8a\u51fd\u6570\uff08erf\uff09\u8ba1\u7b97</li> <li>\u6bd4ReLU\u8ba1\u7b97\u6210\u672c\u9ad8\u7ea63-5\u500d</li> </ul> </li> <li>\u5b9e\u73b0\u4e0d\u4e00\u81f4\u6027\uff1a<ul> <li>\u4e0d\u540c\u6846\u67b6\u4f7f\u7528\u4e0d\u540c\u8fd1\u4f3c\u516c\u5f0f</li> <li>\u53ef\u80fd\u5bfc\u81f4\u8de8\u5e73\u53f0\u7ed3\u679c\u5dee\u5f02</li> </ul> </li> <li>\u5c0f\u6570\u636e\u96c6\u8fc7\u62df\u5408\uff1a<ul> <li>\u5728\u5c0f\u578b\u6570\u636e\u96c6\u4e0a\u53ef\u80fd\u8868\u73b0\u4e0d\u5982ReLU</li> <li>\u9700\u8981\u8db3\u591f\u6570\u636e\u91cf\u624d\u80fd\u4f53\u73b0\u4f18\u52bf</li> </ul> </li> <li>\u7406\u8bba\u7406\u89e3\u95e8\u69db\u9ad8\uff1a<ul> <li>\u6982\u7387\u89e3\u91ca\u8f83\u62bd\u8c61\uff0c\u4e0d\u5982ReLU\u76f4\u89c2</li> <li>\u8d85\u53c2\u6570\u8c03\u8282\u7f3a\u4e4f\u660e\u786e\u6307\u5bfc</li> </ul> </li> </ol>"},{"location":"deeplearning/pytorch/activate/#54","title":"5.4 \u4ee3\u7801\u5b9e\u73b0","text":"<pre><code>import torch\nimport torch.nn.functional as F\nimport matplotlib.pyplot as plt\n\nx = torch.linspace(-5,5,100)\n\ny = F.gelu(x)\n\nplt.plot(x.numpy(),y.numpy(),label=\"Gelu\")\nplt.grid(True)\nplt.legend()\nplt.show()\n</code></pre>"},{"location":"deeplearning/pytorch/dataset/","title":"\u6570\u636e\u9884\u5904\u7406","text":"<p>\u4ee5\u4e0b\u662f PyTorch \u4e2d <code>Dataset</code>\u3001<code>DataLoader</code> \u548c <code>transforms</code> \u4e09\u4e2a\u6838\u5fc3 API \u7684\u4f7f\u7528\u6559\u7a0b\uff0c\u6db5\u76d6\u57fa\u7840\u7528\u6cd5\u548c\u5b9e\u9645\u793a\u4f8b\u3002</p>"},{"location":"deeplearning/pytorch/dataset/#1-dataset","title":"1. Dataset: \u6570\u636e\u5bb9\u5668","text":"<p><code>Dataset</code> \u662f PyTorch \u4e2d\u7528\u4e8e\u5c01\u88c5\u6570\u636e\u7684\u57fa\u7c7b\uff0c\u9700\u7ee7\u627f\u5e76\u5b9e\u73b0 <code>__len__</code> \u548c <code>__getitem__</code> \u65b9\u6cd5\u3002</p>"},{"location":"deeplearning/pytorch/dataset/#dataset","title":"\u81ea\u5b9a\u4e49 Dataset \u793a\u4f8b","text":"<pre><code>from torch.utils.data import Dataset\nimport os\nfrom PIL import Image\n\nclass CustomImageDataset(Dataset):\n    def __init__(self, img_dir, labels, transform=None):\n        self.img_dir = img_dir\n        self.labels = labels  # \u5047\u8bbe labels \u662f\u5217\u8868\u6216\u6570\u7ec4\n        self.transform = transform\n        self.img_names = os.listdir(img_dir)  # \u5047\u8bbe\u6240\u6709\u6587\u4ef6\u662f\u56fe\u50cf\n\n    def __len__(self):\n        return len(self.img_names)\n\n    def __getitem__(self, idx):\n        img_path = os.path.join(self.img_dir, self.img_names[idx])\n        image = Image.open(img_path).convert('RGB')\n        label = self.labels[idx]\n\n        if self.transform:\n            image = self.transform(image)\n\n        return image, label\n</code></pre>"},{"location":"deeplearning/pytorch/dataset/#2-transforms","title":"2. Transforms: \u6570\u636e\u9884\u5904\u7406","text":"<p><code>transforms</code> \u63d0\u4f9b\u56fe\u50cf\u9884\u5904\u7406\u5de5\u5177\uff0c\u5e38\u7528\u7ec4\u5408\u5982 <code>Compose</code>\u3002</p>"},{"location":"deeplearning/pytorch/dataset/#transforms","title":"\u5185\u7f6e Transforms \u793a\u4f8b","text":"<pre><code>from torchvision import transforms\n\n# \u5b9a\u4e49\u7ec4\u5408\u53d8\u6362\ntransform = transforms.Compose([\n    transforms.Resize(256),          # \u8c03\u6574\u5927\u5c0f\n    transforms.RandomCrop(224),      # \u968f\u673a\u88c1\u526a\n    transforms.RandomHorizontalFlip(),  # \u968f\u673a\u6c34\u5e73\u7ffb\u8f6c\uff08\u6570\u636e\u589e\u5f3a\uff09\n    transforms.ToTensor(),           # \u8f6c\u4e3a Tensor [0,1]\n    transforms.Normalize(            # \u6807\u51c6\u5316\uff08ImageNet \u5747\u503c\u65b9\u5dee\uff09\n        mean=[0.485, 0.456, 0.406],\n        std=[0.229, 0.224, 0.225]\n    )\n])\n\n# \u81ea\u5b9a\u4e49 Transform\uff08\u5982\u968f\u673a\u64e6\u9664\uff09\ntransform = transforms.Compose([\n    transforms.ToTensor(),\n    transforms.RandomErasing(p=0.5, scale=(0.02, 0.33), ratio=(0.3, 3.3)),\n])\n</code></pre>"},{"location":"deeplearning/pytorch/dataset/#3-dataloader","title":"3. DataLoader: \u6570\u636e\u6279\u91cf\u52a0\u8f7d","text":"<p><code>DataLoader</code> \u4ece <code>Dataset</code> \u4e2d\u52a0\u8f7d\u6570\u636e\uff0c\u652f\u6301\u6279\u91cf\u52a0\u8f7d\u3001\u591a\u8fdb\u7a0b\u52a0\u901f\u7b49\u3002</p>"},{"location":"deeplearning/pytorch/dataset/#_2","title":"\u57fa\u7840\u7528\u6cd5","text":"<pre><code>from torch.utils.data import DataLoader\n\n# \u521b\u5efa Dataset \u5b9e\u4f8b\ndataset = CustomImageDataset(\n    img_dir=\"data/images\",\n    labels=[0, 1, 0, 1],  # \u793a\u4f8b\u6807\u7b7e\n    transform=transform\n)\n\n# \u521b\u5efa DataLoader\ndataloader = DataLoader(\n    dataset,\n    batch_size=32,\n    shuffle=True,   # \u8bad\u7ec3\u65f6\u5efa\u8bae\u6253\u4e71\n    num_workers=4,  # \u591a\u8fdb\u7a0b\u52a0\u8f7d\uff08\u6839\u636e CPU \u6838\u5fc3\u6570\u8c03\u6574\uff09\n    drop_last=True  # \u4e22\u5f03\u6700\u540e\u4e0d\u8db3\u4e00\u4e2a batch \u7684\u6570\u636e\n)\n\n# \u5728\u8bad\u7ec3\u5faa\u73af\u4e2d\u4f7f\u7528\nfor epoch in range(num_epochs):\n    for batch_images, batch_labels in dataloader:\n        # \u5c06\u6570\u636e\u9001\u5165 GPU\n        batch_images = batch_images.to(device)\n        batch_labels = batch_labels.to(device)\n\n        # \u8bad\u7ec3\u4ee3\u7801...\n</code></pre>"},{"location":"deeplearning/pytorch/dataset/#4","title":"4. \u7efc\u5408\u793a\u4f8b\uff1a\u56fe\u50cf\u5206\u7c7b\u5168\u6d41\u7a0b","text":""},{"location":"deeplearning/pytorch/dataset/#1-dataset-transforms","title":"\u6b65\u9aa4 1: \u5b9a\u4e49 Dataset + Transforms","text":"<pre><code>train_transform = transforms.Compose([\n    transforms.RandomResizedCrop(224),\n    transforms.RandomHorizontalFlip(),\n    transforms.ToTensor(),\n    transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225])\n])\n\ntrain_dataset = CustomImageDataset(\n    img_dir=\"train_data\",\n    labels=train_labels,\n    transform=train_transform\n)\n</code></pre>"},{"location":"deeplearning/pytorch/dataset/#2-dataloader","title":"\u6b65\u9aa4 2: \u521b\u5efa DataLoader","text":"<pre><code>train_loader = DataLoader(\n    train_dataset,\n    batch_size=64,\n    shuffle=True,\n    num_workers=4\n)\n</code></pre>"},{"location":"deeplearning/pytorch/dataset/#3","title":"\u6b65\u9aa4 3: \u5728\u6a21\u578b\u8bad\u7ec3\u4e2d\u4f7f\u7528","text":"<pre><code>model = models.resnet18(pretrained=True)\noptimizer = torch.optim.Adam(model.parameters())\n\nfor epoch in range(10):\n    model.train()\n    for images, labels in train_loader:\n        images = images.to(device)\n        labels = labels.to(device)\n\n        outputs = model(images)\n        loss = torch.nn.CrossEntropyLoss()(outputs, labels)\n\n        optimizer.zero_grad()\n        loss.backward()\n        optimizer.step()\n</code></pre>"},{"location":"deeplearning/pytorch/dataset/#5","title":"5. \u9ad8\u7ea7\u6280\u5de7 &amp; \u6ce8\u610f\u4e8b\u9879","text":""},{"location":"deeplearning/pytorch/dataset/#transforms_1","title":"\u81ea\u5b9a\u4e49 Transforms","text":"<pre><code>class RandomRotation:\n    def __init__(self, degrees):\n        self.degrees = degrees\n\n    def __call__(self, img):\n        angle = torch.empty(1).uniform_(-self.degrees, self.degrees).item()\n        return transforms.functional.rotate(img, angle)\n\ntransform = transforms.Compose([\n    RandomRotation(30),\n    transforms.ToTensor()\n])\n</code></pre>"},{"location":"deeplearning/pytorch/dataset/#_3","title":"\u591a\u8fdb\u7a0b\u95ee\u9898","text":"<ul> <li><code>num_workers</code>: \u5efa\u8bae\u8bbe\u4e3a CPU \u6838\u5fc3\u6570\uff0c\u4f46\u9700\u907f\u514d\u5185\u5b58\u4e0d\u8db3\u3002</li> <li><code>pin_memory=True</code>: \u5f53\u4f7f\u7528 GPU \u65f6\u52a0\u901f\u6570\u636e\u4f20\u8f93\u3002</li> </ul>"},{"location":"deeplearning/pytorch/dataset/#_4","title":"\u5176\u4ed6\u6570\u636e\u7c7b\u578b","text":"<ul> <li>\u6587\u672c\u6570\u636e: \u9700\u81ea\u5b9a\u4e49 <code>Dataset</code> \u52a0\u8f7d\u6587\u672c\u6587\u4ef6\u6216 tokenize\u3002</li> <li>\u975e\u56fe\u50cf\u6570\u636e: \u79fb\u9664\u56fe\u50cf\u76f8\u5173 transforms\uff0c\u4f7f\u7528 <code>torch.FloatTensor</code> \u8f6c\u6362\u3002</li> </ul> <p>\u901a\u8fc7\u5408\u7406\u7ec4\u5408 <code>Dataset</code>\u3001<code>DataLoader</code> \u548c <code>transforms</code>\uff0c\u53ef\u4ee5\u9ad8\u6548\u7ba1\u7406\u6570\u636e\u6d41\u7a0b\uff0c\u63d0\u5347\u6a21\u578b\u8bad\u7ec3\u6548\u7387\u3002</p>"},{"location":"deeplearning/pytorch/loss/","title":"\u635f\u5931\u51fd\u6570","text":""},{"location":"deeplearning/pytorch/loss/#1-mse-loss","title":"1. \u5747\u65b9\u8bef\u5dee\u635f\u5931\uff08MSE Loss\uff09","text":"<p>\u6982\u5ff5\uff1a\u8ba1\u7b97\u9884\u6d4b\u503c\u4e0e\u771f\u5b9e\u503c\u7684\u5e73\u65b9\u5dee\u7684\u5e73\u5747\u503c\uff0c\u5bf9\u79bb\u7fa4\u503c\u654f\u611f\u3002 \u516c\u5f0f\uff1a  </p> \\[ L = \\frac{1}{N} \\sum_{i=1}^N (y_{\\text{pred}}^{(i)} - y_{\\text{true}}^{(i)})^2 \\] <p>\u9002\u7528\u573a\u666f\uff1a\u56de\u5f52\u4efb\u52a1\uff08\u5982\u623f\u4ef7\u9884\u6d4b\u3001\u6e29\u5ea6\u9884\u6d4b\uff09\u3002 \u4f18\u70b9\uff1a\u68af\u5ea6\u5e73\u6ed1\uff0c\u6536\u655b\u5feb\u3002 \u7f3a\u70b9\uff1a\u5bf9\u5f02\u5e38\u503c\u654f\u611f\uff0c\u53ef\u80fd\u5bfc\u81f4\u68af\u5ea6\u7206\u70b8\u3002 (\u6838\u5fc3\u5728\u4e8e\u5b83\u7684\u5e73\u65b9\u9879\u4f1a\u653e\u5927\u504f\u5dee\u5927\u7684\u6837\u672c\u7684\u5f71\u54cd) </p> <p>PyTorch \u5b9e\u73b0\uff1a <pre><code>import torch.nn as nn\n\nmse_loss = nn.MSELoss()\noutput = mse_loss(preds, targets)  # preds\u548ctargets\u5f62\u72b6\u76f8\u540c\n</code></pre></p>"},{"location":"deeplearning/pytorch/loss/#2-mae-loss","title":"2. \u5e73\u5747\u7edd\u5bf9\u8bef\u5dee\u635f\u5931\uff08MAE Loss\uff09","text":"<p>\u6982\u5ff5\uff1a\u8ba1\u7b97\u9884\u6d4b\u503c\u4e0e\u771f\u5b9e\u503c\u7684\u7edd\u5bf9\u5dee\u7684\u5e73\u5747\u503c\uff0c\u5bf9\u79bb\u7fa4\u503c\u9c81\u68d2\u3002 \u516c\u5f0f\uff1a  </p> \\[ L = \\frac{1}{N} \\sum_{i=1}^N |y_{\\text{pred}}^{(i)} - y_{\\text{true}}^{(i)}| \\] <p>\u9002\u7528\u573a\u666f\uff1a\u56de\u5f52\u4efb\u52a1\uff08\u6570\u636e\u5305\u542b\u566a\u58f0\u6216\u5f02\u5e38\u503c\uff09\u3002 \u4f18\u70b9\uff1a\u5bf9\u5f02\u5e38\u503c\u4e0d\u654f\u611f\uff0c\u68af\u5ea6\u7a33\u5b9a\u3002 \u7f3a\u70b9\uff1a\u6536\u655b\u901f\u5ea6\u6162\uff0c\u68af\u5ea6\u5728\u96f6\u70b9\u4e0d\u53ef\u5bfc\u3002 PyTorch \u5b9e\u73b0\uff1a <pre><code>mae_loss = nn.L1Loss()\noutput = mae_loss(preds, targets)\n</code></pre></p>"},{"location":"deeplearning/pytorch/loss/#3-huber-loss","title":"3. Huber Loss","text":"<p>\u6982\u5ff5\uff1aMSE \u548c MAE \u7684\u7ed3\u5408\uff0c\u5728\u8bef\u5dee\u8f83\u5c0f\u65f6\u4f7f\u7528\u5e73\u65b9\u9879\uff0c\u8f83\u5927\u65f6\u4f7f\u7528\u7ebf\u6027\u9879\u3002 \u516c\u5f0f\uff1a  </p> \\[ L = \\frac{1}{N} \\sum_{i=1}^N  \\begin{cases}  0.5 (y_{\\text{pred}}^{(i)} - y_{\\text{true}}^{(i)})^2, &amp; \\text{if } |y_{\\text{pred}} - y_{\\text{true}}| \\leq \\delta \\\\ \\delta |y_{\\text{pred}} - y_{\\text{true}}| - 0.5 \\delta^2, &amp; \\text{otherwise} \\end{cases} \\] <p>\u9002\u7528\u573a\u666f\uff1a\u56de\u5f52\u4efb\u52a1\uff08\u9700\u5e73\u8861\u5bf9\u5f02\u5e38\u503c\u7684\u654f\u611f\u6027\u548c\u6536\u655b\u901f\u5ea6\uff09\u3002 \u4f18\u70b9\uff1a\u7ed3\u5408 MSE \u548c MAE \u7684\u4f18\u70b9\uff0c\u9c81\u68d2\u6027\u5f3a\u3002 \u7f3a\u70b9\uff1a\u9700\u624b\u52a8\u8c03\u6574\u8d85\u53c2\u6570 \\(\\delta\\)\uff08\u901a\u5e38\u53d6 1.0\uff09\u3002 PyTorch \u5b9e\u73b0\uff1a <pre><code>def huber_loss(preds, targets, delta=1.0):\n    error = preds - targets\n    abs_error = torch.abs(error)\n    quadratic = torch.min(abs_error, delta)\n    linear = abs_error - quadratic\n    loss = 0.5 * quadratic ** 2 + delta * linear\n    return loss.mean()\n\noutput = huber_loss(preds, targets)\n</code></pre></p>"},{"location":"deeplearning/pytorch/loss/#4-cross-entropy-loss","title":"4. \u4ea4\u53c9\u71b5\u635f\u5931\uff08Cross-Entropy Loss\uff09","text":"<p>\u6982\u5ff5\uff1a\u8861\u91cf\u9884\u6d4b\u6982\u7387\u5206\u5e03\u4e0e\u771f\u5b9e\u5206\u5e03\u7684\u5dee\u5f02\uff0c\u5e38\u7528\u4f5c\u5206\u7c7b\u4efb\u52a1\u635f\u5931\u51fd\u6570\u3002 \u516c\u5f0f\uff08\u591a\u5206\u7c7b\uff09\uff1a  </p> \\[ L = -\\sum_{i=1}^N y_{\\text{true}}^{(i)} \\log \\left( \\text{Softmax}(y_{\\text{pred}}^{(i)}) \\right) \\] <p>\u9002\u7528\u573a\u666f\uff1a\u591a\u5206\u7c7b\u4efb\u52a1\uff08\u5982\u56fe\u50cf\u5206\u7c7b\uff09\u3002 \u4f18\u70b9\uff1a\u68af\u5ea6\u4f18\u5316\u65b9\u5411\u660e\u786e\uff0c\u5bf9\u9519\u8bef\u9884\u6d4b\u60e9\u7f5a\u5927\u3002 \u7f3a\u70b9\uff1a\u5bf9\u7c7b\u522b\u4e0d\u5e73\u8861\u654f\u611f\u3002 PyTorch \u5b9e\u73b0\uff1a <pre><code>ce_loss = nn.CrossEntropyLoss()  # \u8f93\u5165\u4e3a logits\uff08\u65e0\u9700 softmax\uff09\noutput = ce_loss(preds, targets)  # preds: (N, C), targets: (N,)\n</code></pre></p>"},{"location":"deeplearning/pytorch/loss/#5-bce-loss","title":"5. \u4e8c\u5143\u4ea4\u53c9\u71b5\u635f\u5931\uff08BCE Loss\uff09","text":"<p>\u6982\u5ff5\uff1a\u4e8c\u5206\u7c7b\u4efb\u52a1\u7684\u4ea4\u53c9\u71b5\u635f\u5931\uff0c\u4e5f\u53ef\u7528\u4e8e\u591a\u6807\u7b7e\u5206\u7c7b\u3002 \u516c\u5f0f\uff1a  </p> \\[ L = -\\frac{1}{N} \\sum_{i=1}^N \\left[ y_{\\text{true}}^{(i)} \\log \\sigma(y_{\\text{pred}}^{(i)}) + (1 - y_{\\text{true}}^{(i)}) \\log (1 - \\sigma(y_{\\text{pred}}^{(i)})) \\right] \\] <p>\u9002\u7528\u573a\u666f\uff1a\u4e8c\u5206\u7c7b\u3001\u591a\u6807\u7b7e\u5206\u7c7b\uff08\u5982\u533b\u5b66\u56fe\u50cf\u75c5\u7076\u68c0\u6d4b\uff09\u3002 \u4f18\u70b9\uff1a\u76f4\u63a5\u4f18\u5316\u6982\u7387\u8f93\u51fa\u3002 \u7f3a\u70b9\uff1a\u9700\u6ce8\u610f\u6570\u503c\u7a33\u5b9a\u6027\uff08\u5efa\u8bae\u4f7f\u7528 <code>BCEWithLogitsLoss</code>\uff09\u3002 PyTorch \u5b9e\u73b0\uff1a <pre><code>bce_loss = nn.BCEWithLogitsLoss()  # \u81ea\u52a8\u5e94\u7528 Sigmoid\noutput = bce_loss(preds, targets)  # preds\u548ctargets\u5f62\u72b6\u76f8\u540c\n</code></pre></p>"},{"location":"deeplearning/pytorch/loss/#6-hinge-loss","title":"6. Hinge Loss","text":"<p>\u6982\u5ff5\uff1a\u6700\u5927\u5316\u5206\u7c7b\u8fb9\u754c\uff0c\u5e38\u7528\u4e8e\u652f\u6301\u5411\u91cf\u673a\uff08SVM\uff09\u3002 \u516c\u5f0f\uff08\u4e8c\u5206\u7c7b\uff09\uff1a  </p> \\[ L = \\frac{1}{N} \\sum_{i=1}^N \\max(0, 1 - y_{\\text{true}}^{(i)} \\cdot y_{\\text{pred}}^{(i)}) \\] <p>\u9002\u7528\u573a\u666f\uff1a\u4e8c\u5206\u7c7b\u3001\u7ed3\u6784\u5316\u9884\u6d4b\u4efb\u52a1\u3002 \u4f18\u70b9\uff1a\u5bf9\u6b63\u786e\u5206\u7c7b\u7684\u70b9\u4e0d\u4ea7\u751f\u635f\u5931\uff0c\u5173\u6ce8\u8fb9\u754c\u9644\u8fd1\u7684\u6837\u672c\u3002 \u7f3a\u70b9\uff1a\u4e0d\u76f4\u63a5\u8f93\u51fa\u6982\u7387\u3002 PyTorch \u5b9e\u73b0\uff1a <pre><code>hinge_loss = nn.HingeEmbeddingLoss()\noutput = hinge_loss(preds, targets)  # targets\u53d6\u503c\u4e3a1\u6216-1\n</code></pre></p>"},{"location":"deeplearning/pytorch/loss/#7-kl-kullback-leibler-divergence","title":"7. KL \u6563\u5ea6\uff08Kullback-Leibler Divergence\uff09","text":"<p>\u6982\u5ff5\uff1a\u8861\u91cf\u4e24\u4e2a\u6982\u7387\u5206\u5e03\u7684\u5dee\u5f02\uff0c\u5e38\u7528\u4e8e\u751f\u6210\u6a21\u578b\u3002 \u516c\u5f0f\uff1a  </p> \\[ L = \\sum_{i=1}^N P(y_{\\text{true}}^{(i)}) \\log \\left( \\frac{P(y_{\\text{true}}^{(i)})}{P(y_{\\text{pred}}^{(i)})} \\right) \\] <p>\u9002\u7528\u573a\u666f\uff1a\u5206\u5e03\u5339\u914d\u4efb\u52a1\uff08\u5982\u53d8\u5206\u81ea\u7f16\u7801\u5668\uff09\u3002 \u4f18\u70b9\uff1a\u4e25\u683c\u8861\u91cf\u5206\u5e03\u5dee\u5f02\u3002 \u7f3a\u70b9\uff1a\u4e0d\u5bf9\u79f0\uff0c\u9700\u6ce8\u610f\u8f93\u5165\u4e3a\u6982\u7387\u5206\u5e03\u3002 PyTorch \u5b9e\u73b0\uff1a <pre><code>kl_loss = nn.KLDivLoss(reduction='batchmean')\nlog_probs = torch.log_softmax(preds, dim=1)  # \u8f93\u5165\u9700\u4e3a log \u6982\u7387\noutput = kl_loss(log_probs, targets_probs)  # targets_probs\u4e3a\u6982\u7387\u5206\u5e03\n</code></pre></p>"},{"location":"deeplearning/pytorch/loss/#_2","title":"\u603b\u7ed3\u4e0e\u9009\u62e9\u5efa\u8bae","text":"\u635f\u5931\u51fd\u6570 \u4efb\u52a1\u7c7b\u578b \u7279\u70b9 MSE \u56de\u5f52 \u5bf9\u5f02\u5e38\u654f\u611f\uff0c\u68af\u5ea6\u7a33\u5b9a MAE \u56de\u5f52 \u5bf9\u5f02\u5e38\u9c81\u68d2\uff0c\u6536\u655b\u6162 Huber Loss \u56de\u5f52 \u5e73\u8861\u9c81\u68d2\u6027\u4e0e\u6536\u655b\u901f\u5ea6 Cross-Entropy \u591a\u5206\u7c7b \u5206\u7c7b\u4efb\u52a1\u9996\u9009\uff0c\u68af\u5ea6\u9ad8\u6548 BCE \u4e8c\u5206\u7c7b/\u591a\u6807\u7b7e \u8f93\u51fa\u6982\u7387\uff0c\u9700\u6ce8\u610f\u6570\u503c\u7a33\u5b9a\u6027 Hinge Loss SVM/\u4e8c\u5206\u7c7b \u5173\u6ce8\u51b3\u7b56\u8fb9\u754c\uff0c\u4e0d\u8f93\u51fa\u6982\u7387 KL Divergence \u5206\u5e03\u5339\u914d \u8861\u91cf\u5206\u5e03\u5dee\u5f02\uff0c\u9700\u6982\u7387\u8f93\u5165 <p>\u6839\u636e\u4efb\u52a1\u7c7b\u578b\u548c\u6570\u636e\u7279\u6027\u9009\u62e9\u5408\u9002\u7684\u635f\u5931\u51fd\u6570\uff0c\u5e76\u6ce8\u610f PyTorch \u4e2d\u5404\u635f\u5931\u51fd\u6570\u7684\u8f93\u5165\u683c\u5f0f\uff08\u5982\u662f\u5426\u9700\u8981\u63d0\u524d\u5e94\u7528 Softmax/Sigmoid\uff09\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e8c\u5143\u4ea4\u53c9\u71b5\uff08BCE Loss\uff09\u548c\u4ea4\u53c9\u71b5\u635f\u5931\uff08Cross-Entropy Loss\uff09\u7684\u8be6\u7ec6\u5bf9\u6bd4\u4e0e\u539f\u7406\u8bb2\u89e3\uff0c\u7ed3\u5408\u516c\u5f0f\u3001\u793a\u4f8b\u548c\u4ee3\u7801\u5b9e\u73b0\u3002</p>"},{"location":"deeplearning/pytorch/loss/#1-cross-entropy-loss","title":"1. \u4ea4\u53c9\u71b5\u635f\u5931\uff08Cross-Entropy Loss\uff09","text":""},{"location":"deeplearning/pytorch/loss/#_3","title":"\u539f\u7406","text":"<p>\u4ea4\u53c9\u71b5\u8861\u91cf\u4e24\u4e2a\u6982\u7387\u5206\u5e03\u4e4b\u95f4\u7684\u5dee\u5f02\u3002 \u5728\u5206\u7c7b\u4efb\u52a1\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u6a21\u578b\u7684\u9884\u6d4b\u6982\u7387\u5206\u5e03 \\(P_{\\text{pred}}\\) \u5c3d\u53ef\u80fd\u63a5\u8fd1\u771f\u5b9e\u7684\u6982\u7387\u5206\u5e03 \\(P_{\\text{true}}\\)\u3002 \u516c\u5f0f\uff08\u591a\u5206\u7c7b\uff09\uff1a  </p> \\[ L = -\\sum_{i=1}^C y_{\\text{true}}^{(i)} \\log \\left( p_{\\text{pred}}^{(i)} \\right) \\] <ul> <li>\\(C\\)\uff1a\u7c7b\u522b\u603b\u6570  </li> <li>\\(y_{\\text{true}}^{(i)}\\)\uff1a\u771f\u5b9e\u6807\u7b7e\u7684 one-hot \u7f16\u7801\uff08\u7b2c \\(i\\) \u7c7b\u4e3a 1\uff0c\u5176\u4f59\u4e3a 0\uff09  </li> <li>\\(p_{\\text{pred}}^{(i)}\\)\uff1a\u6a21\u578b\u9884\u6d4b\u7684\u7b2c \\(i\\) \u7c7b\u7684\u6982\u7387\uff08\u901a\u8fc7 Softmax \u5f97\u5230\uff09</li> </ul>"},{"location":"deeplearning/pytorch/loss/#_4","title":"\u9002\u7528\u573a\u666f","text":"<ul> <li>\u591a\u5206\u7c7b\u4efb\u52a1\uff08\u6bcf\u4e2a\u6837\u672c\u53ea\u5c5e\u4e8e\u4e00\u4e2a\u7c7b\u522b\uff09\uff0c\u4f8b\u5982 MNIST \u624b\u5199\u6570\u5b57\u5206\u7c7b\uff0810 \u4e2a\u7c7b\u522b\uff09\u3002</li> </ul>"},{"location":"deeplearning/pytorch/loss/#pytorch","title":"PyTorch \u5b9e\u73b0","text":"<pre><code>import torch\nimport torch.nn as nn\n\n# \u5047\u8bbe\u9884\u6d4b\u503c preds \u662f\u672a\u5f52\u4e00\u5316\u7684 logits\uff08\u65e0\u9700\u624b\u52a8 Softmax\uff09\npreds = torch.tensor([[2.0, 1.0, 0.1], [0.5, 3.0, 0.3]])  # \u5f62\u72b6\uff1a(N, C)\ntargets = torch.tensor([0, 1])  # \u771f\u5b9e\u7c7b\u522b\u7d22\u5f15\uff0c\u5f62\u72b6\uff1a(N,)\n\nce_loss = nn.CrossEntropyLoss()\nloss = ce_loss(preds, targets)\nprint(loss.item())  # \u8f93\u51fa\uff1a0.8133\n</code></pre>"},{"location":"deeplearning/pytorch/loss/#_5","title":"\u8ba1\u7b97\u6b65\u9aa4","text":"<ol> <li>\u5bf9 <code>preds</code> \u5e94\u7528 Softmax\uff1a    $$    \\text{Softmax}(x_i) = \\frac{e^{x_i}}{\\sum_{j=1}^C e^{x_j}}    $$</li> <li>\u7b2c\u4e00\u4e2a\u6837\u672c <code>[2.0, 1.0, 0.1]</code> \u7684 Softmax \u7ed3\u679c\uff1a\u2248 <code>[0.659, 0.242, 0.099]</code></li> <li>\u53d6\u771f\u5b9e\u7c7b\u522b\u5bf9\u5e94\u7684\u6982\u7387\u7684\u5bf9\u6570\uff1a</li> <li>\u7b2c\u4e00\u4e2a\u6837\u672c\u7684\u771f\u5b9e\u7c7b\u522b\u662f 0 \u2192 \\(-\\log(0.659) \u2248 0.417\\)</li> <li>\u7b2c\u4e8c\u4e2a\u6837\u672c\u7684\u771f\u5b9e\u7c7b\u522b\u662f 1 \u2192 \\(-\\log(0.242) \u2248 1.418\\)</li> <li>\u5bf9\u6240\u6709\u6837\u672c\u6c42\u5e73\u5747\uff1a\\((0.417 + 1.418)/2 \u2248 0.9175\\)</li> </ol>"},{"location":"deeplearning/pytorch/loss/#2-bce-loss","title":"2. \u4e8c\u5143\u4ea4\u53c9\u71b5\u635f\u5931\uff08BCE Loss\uff09","text":""},{"location":"deeplearning/pytorch/loss/#_6","title":"\u539f\u7406","text":"<p>BCE \u662f\u4ea4\u53c9\u71b5\u5728\u4e8c\u5206\u7c7b\u6216\u591a\u6807\u7b7e\u5206\u7c7b\u4e2d\u7684\u7279\u4f8b\uff0c\u6bcf\u4e2a\u8f93\u51fa\u8282\u70b9\u72ec\u7acb\u8ba1\u7b97\u6982\u7387\u3002 \u516c\u5f0f\uff08\u5355\u4e2a\u6837\u672c\uff09\uff1a</p> \\[ L = -\\left[ y_{\\text{true}} \\log(p_{\\text{pred}}) + (1 - y_{\\text{true}}) \\log(1 - p_{\\text{pred}}) \\right] \\] <ul> <li>\\(y_{\\text{true}} \\in \\{0, 1\\}\\)\uff1a\u771f\u5b9e\u6807\u7b7e  </li> <li>\\(p_{\\text{pred}}\\)\uff1a\u6a21\u578b\u9884\u6d4b\u7684\u6b63\u7c7b\u6982\u7387\uff08\u901a\u8fc7 Sigmoid \u5f97\u5230\uff09</li> </ul>"},{"location":"deeplearning/pytorch/loss/#_7","title":"\u9002\u7528\u573a\u666f","text":"<ul> <li>\u4e8c\u5206\u7c7b\u4efb\u52a1\uff08\u5982\u732b\u72d7\u5206\u7c7b\uff09</li> <li>\u591a\u6807\u7b7e\u5206\u7c7b\uff08\u5982\u56fe\u50cf\u4e2d\u5b58\u5728\u591a\u4e2a\u7269\u4f53\uff0c\u6bcf\u4e2a\u6807\u7b7e\u72ec\u7acb\u5224\u65ad\uff09</li> </ul>"},{"location":"deeplearning/pytorch/loss/#pytorch_1","title":"PyTorch \u5b9e\u73b0","text":"<pre><code># \u4e8c\u5206\u7c7b\u793a\u4f8b\uff08\u5355\u6807\u7b7e\uff09\npreds = torch.tensor([0.8, -1.2, 2.1])  # \u672a\u5f52\u4e00\u5316\u7684 logits\uff08\u5f62\u72b6\uff1aN,\uff09\ntargets = torch.tensor([1.0, 0.0, 1.0])  # \u771f\u5b9e\u6807\u7b7e\uff08\u5f62\u72b6\uff1aN,\uff09\n\nbce_loss = nn.BCEWithLogitsLoss()  # \u81ea\u52a8\u5e94\u7528 Sigmoid\nloss = bce_loss(preds, targets)\nprint(loss.item())  # \u8f93\u51fa\uff1a0.6893\n\n# \u591a\u6807\u7b7e\u5206\u7c7b\u793a\u4f8b\uff08\u6bcf\u4e2a\u6837\u672c\u6709\u591a\u4e2a\u6807\u7b7e\uff09\npreds = torch.tensor([[1.2, -0.5], [0.3, 2.0]])  # \u5f62\u72b6\uff1a(N, C)\ntargets = torch.tensor([[1.0, 0.0], [0.0, 1.0]])  # \u5f62\u72b6\uff1a(N, C)\n\nbce_loss = nn.BCEWithLogitsLoss()\nloss = bce_loss(preds, targets)\nprint(loss.item())  # \u8f93\u51fa\uff1a0.4562\n</code></pre>"},{"location":"deeplearning/pytorch/loss/#_8","title":"\u8ba1\u7b97\u6b65\u9aa4","text":"<ol> <li>\u5bf9 <code>preds</code> \u5e94\u7528 Sigmoid\uff1a</li> </ol> <p>$$    \\sigma(x) = \\frac{1}{1 + e^{-x}}    $$ </p> <ul> <li>\u7b2c\u4e00\u4e2a\u6837\u672c\u7684\u9884\u6d4b\u503c <code>0.8</code> \u2192 Sigmoid \u7ed3\u679c\u4e3a \u2248 <code>0.690</code></li> <li>\u8ba1\u7b97\u635f\u5931\uff1a</li> <li>\u7b2c\u4e00\u4e2a\u6837\u672c\u7684\u771f\u5b9e\u6807\u7b7e\u4e3a 1 \u2192 \\(-\\log(0.690) \u2248 0.371\\)</li> <li>\u7b2c\u4e8c\u4e2a\u6837\u672c\u7684\u771f\u5b9e\u6807\u7b7e\u4e3a 0 \u2192 \\(-\\log(1 - \\sigma(-1.2)) = -\\log(0.769) \u2248 0.262\\)</li> <li>\u7b2c\u4e09\u4e2a\u6837\u672c\u7684\u771f\u5b9e\u6807\u7b7e\u4e3a 1 \u2192 \\(-\\log(\\sigma(2.1)) \u2248 0.122\\)</li> <li>\u5bf9\u6240\u6709\u6837\u672c\u6c42\u5e73\u5747\uff1a\\((0.371 + 0.262 + 0.122)/3 \u2248 0.2518\\)</li> </ul>"},{"location":"deeplearning/pytorch/loss/#3","title":"3. \u5173\u952e\u533a\u522b\u4e0e\u603b\u7ed3","text":"\u7279\u6027 Cross-Entropy Loss BCE Loss \u4efb\u52a1\u7c7b\u578b \u591a\u5206\u7c7b\uff08\u5355\u6807\u7b7e\uff09 \u4e8c\u5206\u7c7b/\u591a\u6807\u7b7e\u5206\u7c7b \u8f93\u51fa\u8282\u70b9\u6570 \\(C\\)\uff08\u7c7b\u522b\u603b\u6570\uff09 \u6bcf\u4e2a\u6807\u7b7e\u4e00\u4e2a\u8282\u70b9 \u6fc0\u6d3b\u51fd\u6570 Softmax\uff08\u5f52\u4e00\u5316\u4e3a\u6982\u7387\u5206\u5e03\uff09 Sigmoid\uff08\u72ec\u7acb\u6982\u7387\uff09 \u771f\u5b9e\u6807\u7b7e\u683c\u5f0f \u7c7b\u522b\u7d22\u5f15\u6216 one-hot \u7f16\u7801 0/1 \u6216\u6d6e\u70b9\u6982\u7387\uff08\u591a\u6807\u7b7e\u65f6\u4e3a\u5411\u91cf\uff09 \u6570\u503c\u7a33\u5b9a\u6027 \u5185\u7f6e\u5904\u7406\uff08\u65e0\u9700\u624b\u52a8\u5904\u7406\uff09 \u63a8\u8350\u4f7f\u7528 <code>BCEWithLogitsLoss</code>"},{"location":"deeplearning/pytorch/loss/#4","title":"4. \u5e38\u89c1\u95ee\u9898","text":""},{"location":"deeplearning/pytorch/loss/#q1-softmax-sigmoid","title":"Q1\uff1a\u4e3a\u4ec0\u4e48\u591a\u5206\u7c7b\u7528 Softmax\uff0c\u800c\u4e8c\u5206\u7c7b\u7528 Sigmoid\uff1f","text":"<ul> <li>Softmax\uff1a\u5c06\u8f93\u51fa\u5f52\u4e00\u5316\u4e3a\u6982\u7387\u5206\u5e03\uff08\u603b\u548c\u4e3a 1\uff09\uff0c\u9002\u7528\u4e8e\u4e92\u65a5\u7c7b\u522b\uff08\u5982 MNIST \u6570\u5b57\u5206\u7c7b\uff09\u3002  </li> <li>Sigmoid\uff1a\u72ec\u7acb\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u7684\u6982\u7387\uff0c\u9002\u7528\u4e8e\u975e\u4e92\u65a5\u6807\u7b7e\uff08\u5982\u591a\u6807\u7b7e\u5206\u7c7b\u4e2d\u7684\u201c\u540c\u65f6\u5305\u542b\u732b\u548c\u72d7\u201d\uff09\u3002</li> </ul>"},{"location":"deeplearning/pytorch/loss/#q2","title":"Q2\uff1a\u591a\u6807\u7b7e\u5206\u7c7b\u65f6\u5982\u4f55\u5904\u7406\uff1f","text":"<ul> <li>\u5bf9\u6bcf\u4e2a\u6807\u7b7e\u72ec\u7acb\u4f7f\u7528 Sigmoid\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u6807\u7b7e\u7684 BCE \u635f\u5931\u540e\u53d6\u5e73\u5747\u3002  </li> <li>\u793a\u4f8b\u4ee3\u7801\uff1a   <pre><code># \u591a\u6807\u7b7e\u5206\u7c7b\uff083 \u4e2a\u6807\u7b7e\uff09\npreds = torch.tensor([[1.2, -0.5, 2.1], [-0.3, 1.0, 0.5]])  # \u5f62\u72b6\uff1a(N, C)\ntargets = torch.tensor([[1.0, 0.0, 1.0], [0.0, 1.0, 0.0]])  # \u5f62\u72b6\uff1a(N, C)\nloss = nn.BCEWithLogitsLoss()(preds, targets)\n</code></pre></li> </ul>"},{"location":"deeplearning/pytorch/loss/#q3-bcewithlogitsloss","title":"Q3\uff1a\u4e3a\u4ec0\u4e48\u63a8\u8350 <code>BCEWithLogitsLoss</code>\uff1f","text":"<ul> <li>\u5b83\u7ed3\u5408\u4e86 Sigmoid \u548c BCE \u8ba1\u7b97\uff0c\u901a\u8fc7\u6570\u503c\u7a33\u5b9a\u5316\u7684\u5b9e\u73b0\u907f\u514d <code>log(0)</code> \u5bfc\u81f4\u7684 NaN \u9519\u8bef\u3002</li> </ul>"},{"location":"deeplearning/pytorch/loss/#5","title":"5. \u603b\u7ed3","text":"<ul> <li>Cross-Entropy Loss\uff1a\u591a\u5206\u7c7b\u4efb\u52a1\u7684\u6807\u914d\uff0c\u76f4\u63a5\u4f18\u5316\u6982\u7387\u5206\u5e03\u3002  </li> <li>BCE Loss\uff1a\u4e8c\u5206\u7c7b/\u591a\u6807\u7b7e\u4efb\u52a1\u7684\u6838\u5fc3\uff0c\u9700\u6ce8\u610f Sigmoid \u6fc0\u6d3b\u548c\u6570\u503c\u7a33\u5b9a\u6027\u3002  </li> <li>\u9009\u62e9\u4f9d\u636e\uff1a\u6839\u636e\u4efb\u52a1\u7c7b\u578b\uff08\u5355\u6807\u7b7e vs \u591a\u6807\u7b7e\uff09\u548c\u8f93\u51fa\u683c\u5f0f\uff08\u6982\u7387\u5206\u5e03 vs \u72ec\u7acb\u6982\u7387\uff09\u9009\u62e9\u635f\u5931\u51fd\u6570\u3002</li> </ul>"},{"location":"deeplearning/pytorch/optimizer/","title":"\u4f18\u5316\u5668","text":""},{"location":"deeplearning/pytorch/optimizer/#1","title":"1. \u4f18\u5316\u5668\u7684\u4f5c\u7528","text":"<p>\u4f18\u5316\u5668\uff08Optimizer\uff09\u662f\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u8bad\u7ec3\u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u901a\u8fc7\u53cd\u5411\u4f20\u64ad\u7684\u68af\u5ea6\u4fe1\u606f\u8c03\u6574\u6a21\u578b\u53c2\u6570\uff0c\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\u3002 - \u6838\u5fc3\u76ee\u6807\uff1a\u627e\u5230\u635f\u5931\u51fd\u6570\u7684\u5168\u5c40\u6700\u5c0f\u503c\uff08\u6216\u8db3\u591f\u597d\u7684\u5c40\u90e8\u6700\u5c0f\u503c\uff09 - \u5173\u952e\u95ee\u9898\uff1a\u5982\u4f55\u9ad8\u6548\u66f4\u65b0\u53c2\u6570\uff1f\u5982\u4f55\u5e73\u8861\u6536\u655b\u901f\u5ea6\u548c\u7a33\u5b9a\u6027\uff1f</p>"},{"location":"deeplearning/pytorch/optimizer/#2","title":"2. \u5e38\u89c1\u4f18\u5316\u5668\u8be6\u89e3","text":""},{"location":"deeplearning/pytorch/optimizer/#21-sgd","title":"2.1 \u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff08SGD\uff09","text":"<p>\u539f\u7406\uff1a\u6cbf\u5f53\u524d\u68af\u5ea6\u53cd\u65b9\u5411\u66f4\u65b0\u53c2\u6570\uff0c\u5b66\u4e60\u7387\uff08\\(\\eta\\)\uff09\u63a7\u5236\u6b65\u957f\u3002 \u516c\u5f0f\uff1a  </p> \\[ \\theta_{t+1} = \\theta_t - \\eta \\cdot \\nabla_\\theta J(\\theta_t) \\] <p>\u4f18\u70b9\uff1a - \u7b80\u5355\u76f4\u89c2\uff0c\u6613\u4e8e\u5b9e\u73b0 - \u5bf9\u51f8\u51fd\u6570\u4fdd\u8bc1\u6536\u655b  </p> <p>\u7f3a\u70b9\uff1a - \u5b66\u4e60\u7387\u56fa\u5b9a\uff0c\u5bb9\u6613\u9677\u5165\u5c40\u90e8\u6781\u5c0f\u503c\u6216\u978d\u70b9 - \u5728\u9ad8\u7ef4\u975e\u51f8\u4f18\u5316\u4e2d\u9707\u8361\u4e25\u91cd  </p> <p>PyTorch \u5b9e\u73b0\uff1a <pre><code>import torch.optim as optim\n\noptimizer = optim.SGD(model.parameters(), lr=0.01)  # \u57fa\u7840SGD\n</code></pre></p>"},{"location":"deeplearning/pytorch/optimizer/#22-sgd-with-momentum","title":"2.2 SGD with Momentum\uff08\u52a8\u91cf\u6cd5\uff09","text":"<p>\u539f\u7406\uff1a\u5f15\u5165\u52a8\u91cf\uff08\u52a8\u91cf\u7cfb\u6570 \\(\\beta\\)\uff09\uff0c\u7d2f\u79ef\u5386\u53f2\u68af\u5ea6\u65b9\u5411\uff0c\u6291\u5236\u9707\u8361\u3002 \u516c\u5f0f\uff1a  </p> \\[ v_{t} = \\beta \\cdot v_{t-1} + (1 - \\beta) \\cdot \\nabla_\\theta J(\\theta_t)   \\] \\[ \\theta_{t+1} = \\theta_t - \\eta \\cdot v_{t} \\] <p>\u4f18\u70b9\uff1a - \u52a0\u901f\u6536\u655b\uff0c\u51cf\u5c11\u53c2\u6570\u66f4\u65b0\u7684\u9707\u8361 - \u5e2e\u52a9\u8df3\u51fa\u5c40\u90e8\u6781\u5c0f\u503c  </p> <p>\u7f3a\u70b9\uff1a - \u9700\u624b\u52a8\u8c03\u6574 \\(\\beta\\)\uff08\u901a\u5e38\u53d6 0.9\uff09  </p> <p>PyTorch \u5b9e\u73b0\uff1a <pre><code>optimizer = optim.SGD(model.parameters(), lr=0.01, momentum=0.9)\n</code></pre></p>"},{"location":"deeplearning/pytorch/optimizer/#23-adagrad","title":"2.3 AdaGrad","text":"<p>\u539f\u7406\uff1a\u81ea\u9002\u5e94\u8c03\u6574\u5b66\u4e60\u7387\uff0c\u5bf9\u9891\u7e41\u66f4\u65b0\u7684\u53c2\u6570\u4f7f\u7528\u66f4\u5c0f\u7684\u5b66\u4e60\u7387\u3002 \u6838\u5fc3\u601d\u60f3\uff1a\u66f4\u65b0\u9891\u7e41\u7684\u53c2\u6570\uff0c\u6b65\u957f\u51cf\u5c0f\uff1b\u66f4\u65b0\u5c11\u7684\u53c2\u6570\uff0c\u6b65\u957f\u4fdd\u7559\u5927\u4e00\u70b9\u3002 \u516c\u5f0f\uff1a  </p> \\[ G_{t} = G_{t-1} + (\\nabla_\\theta J(\\theta_t))^2   \\] \\[ \\theta_{t+1} = \\theta_t - \\frac{\\eta}{\\sqrt{G_t + \\epsilon}} \\cdot \\nabla_\\theta J(\\theta_t) \\] <p>\u4f18\u70b9\uff1a - \u81ea\u52a8\u8c03\u6574\u5b66\u4e60\u7387\uff0c\u9002\u5408\u7a00\u758f\u6570\u636e\uff08\u5982 NLP \u4efb\u52a1\uff09  </p> <p>\u7f3a\u70b9\uff1a - \u7d2f\u79ef\u68af\u5ea6\u5e73\u65b9\u5bfc\u81f4\u5b66\u4e60\u7387\u8fc7\u65e9\u8870\u51cf\u81f3\u96f6  </p> <p>PyTorch \u5b9e\u73b0\uff1a <pre><code>optimizer = optim.Adagrad(model.parameters(), lr=0.01, eps=1e-8)\n</code></pre></p>"},{"location":"deeplearning/pytorch/optimizer/#24-rmsprop","title":"2.4 RMSProp","text":"<p>\u539f\u7406\uff1a\u6539\u8fdb AdaGrad\uff0c\u5f15\u5165\u8870\u51cf\u7cfb\u6570\uff08\\(\\beta\\)\uff09\uff0c\u907f\u514d\u5b66\u4e60\u7387\u8fc7\u5feb\u8870\u51cf\u3002 \u516c\u5f0f\uff1a  </p> \\[ G_{t} = \\beta \\cdot G_{t-1} + (1 - \\beta) \\cdot (\\nabla_\\theta J(\\theta_t))^2   \\] \\[ \\theta_{t+1} = \\theta_t - \\frac{\\eta}{\\sqrt{G_t + \\epsilon}} \\cdot \\nabla_\\theta J(\\theta_t) \\] <p>\u4f18\u70b9\uff1a - \u7f13\u89e3 AdaGrad \u7684\u5b66\u4e60\u7387\u8870\u51cf\u95ee\u9898 - \u9002\u5408\u975e\u5e73\u7a33\u76ee\u6807\u51fd\u6570\uff08\u5982 RNN\uff09  </p> <p>\u7f3a\u70b9\uff1a - \u5bf9\u521d\u59cb\u5b66\u4e60\u7387\u654f\u611f  </p> <p>PyTorch \u5b9e\u73b0\uff1a <pre><code>optimizer = optim.RMSprop(model.parameters(), lr=0.01, alpha=0.99, eps=1e-8)\n</code></pre></p>"},{"location":"deeplearning/pytorch/optimizer/#25-adamadaptive-moment-estimation","title":"2.5 Adam\uff08Adaptive Moment Estimation\uff09","text":"<p>\u539f\u7406\uff1a\u7ed3\u5408\u52a8\u91cf\u6cd5\u548c RMSProp\uff0c\u8ba1\u7b97\u68af\u5ea6\u7684\u4e00\u9636\u77e9\uff08\u5747\u503c\uff09\u548c\u4e8c\u9636\u77e9\uff08\u65b9\u5dee\uff09\u3002 \u516c\u5f0f\uff1a  </p> \\[ m_t = \\beta_1 \\cdot m_{t-1} + (1 - \\beta_1) \\cdot \\nabla_\\theta J(\\theta_t) \\quad (\\text{\u4e00\u9636\u77e9})   \\] \\[ v_t = \\beta_2 \\cdot v_{t-1} + (1 - \\beta_2) \\cdot (\\nabla_\\theta J(\\theta_t))^2 \\quad (\\text{\u4e8c\u9636\u77e9})   \\] \\[ \\hat{m}_t = \\frac{m_t}{1 - \\beta_1^t}, \\quad \\hat{v}_t = \\frac{v_t}{1 - \\beta_2^t} \\quad (\\text{\u504f\u5dee\u4fee\u6b63})   \\] \\[ \\theta_{t+1} = \\theta_t - \\frac{\\eta}{\\sqrt{\\hat{v}_t} + \\epsilon} \\cdot \\hat{m}_t \\] <p>\u4f18\u70b9\uff1a - \u81ea\u9002\u5e94\u5b66\u4e60\u7387\uff0c\u6536\u655b\u901f\u5ea6\u5feb - \u9ed8\u8ba4\u53c2\u6570\u901a\u5e38\u8868\u73b0\u826f\u597d\uff08\\(\\beta_1=0.9, \\beta_2=0.999\\)\uff09  </p> <p>\u7f3a\u70b9\uff1a - \u53ef\u80fd\u5728\u67d0\u4e9b\u4efb\u52a1\u4e0a\u4e0d\u5982 SGD + Momentum \u6cdb\u5316\u6027\u597d  </p> <p>PyTorch \u5b9e\u73b0\uff1a <pre><code>optimizer = optim.Adam(model.parameters(), lr=0.001, betas=(0.9, 0.999))\n</code></pre></p>"},{"location":"deeplearning/pytorch/optimizer/#3","title":"3. \u4f18\u5316\u5668\u5bf9\u6bd4\u4e0e\u9009\u62e9\u5efa\u8bae","text":"\u4f18\u5316\u5668 \u9002\u7528\u573a\u666f \u4f18\u70b9 \u7f3a\u70b9 SGD \u7b80\u5355\u4efb\u52a1\u3001\u51f8\u4f18\u5316 \u7a33\u5b9a\uff0c\u8c03\u53c2\u7b80\u5355 \u6536\u655b\u6162\uff0c\u6613\u9677\u5165\u5c40\u90e8\u6700\u4f18 SGD + Momentum \u56fe\u50cf\u5206\u7c7b\u3001\u975e\u51f8\u4f18\u5316 \u52a0\u901f\u6536\u655b\uff0c\u51cf\u5c11\u9707\u8361 \u9700\u8c03\u6574\u52a8\u91cf\u7cfb\u6570 AdaGrad \u7a00\u758f\u6570\u636e\uff08\u5982 NLP\uff09 \u81ea\u52a8\u8c03\u6574\u5b66\u4e60\u7387 \u5b66\u4e60\u7387\u8fc7\u65e9\u8870\u51cf RMSProp RNN\u3001\u975e\u5e73\u7a33\u76ee\u6807 \u7f13\u89e3 AdaGrad \u8870\u51cf\u95ee\u9898 \u5bf9\u521d\u59cb\u5b66\u4e60\u7387\u654f\u611f Adam \u901a\u7528\u4efb\u52a1\uff08\u9ed8\u8ba4\u9996\u9009\uff09 \u81ea\u9002\u5e94\u6027\u5f3a\uff0c\u6536\u655b\u5feb \u53ef\u80fd\u8fc7\u62df\u5408\uff0c\u5185\u5b58\u5360\u7528\u7a0d\u9ad8"},{"location":"deeplearning/pytorch/optimizer/#4-pytorch","title":"4. PyTorch \u4f18\u5316\u5668\u901a\u7528\u914d\u7f6e","text":""},{"location":"deeplearning/pytorch/optimizer/#_2","title":"\u57fa\u7840\u4f7f\u7528\u6a21\u677f","text":"<pre><code>model = MyModel()  # \u5b9a\u4e49\u6a21\u578b\ncriterion = nn.CrossEntropyLoss()  # \u5b9a\u4e49\u635f\u5931\u51fd\u6570\noptimizer = optim.Adam(model.parameters(), lr=0.001)  # \u9009\u62e9\u4f18\u5316\u5668\n\nfor epoch in range(num_epochs):\n    for inputs, targets in dataloader:\n        optimizer.zero_grad()  # \u6e05\u7a7a\u5386\u53f2\u68af\u5ea6\n        outputs = model(inputs)\n        loss = criterion(outputs, targets)\n        loss.backward()  # \u53cd\u5411\u4f20\u64ad\u8ba1\u7b97\u68af\u5ea6\n        optimizer.step()  # \u66f4\u65b0\u53c2\u6570\n</code></pre>"},{"location":"deeplearning/pytorch/optimizer/#_3","title":"\u5b66\u4e60\u7387\u8c03\u6574","text":"<pre><code># \u52a8\u6001\u8c03\u6574\u5b66\u4e60\u7387\uff08\u5982\u6bcf 30 \u4e2a epoch \u8870\u51cf 0.1 \u500d\uff09\nscheduler = optim.lr_scheduler.StepLR(optimizer, step_size=30, gamma=0.1)\nfor epoch in range(100):\n    train(...)\n    scheduler.step()  # \u66f4\u65b0\u5b66\u4e60\u7387\n</code></pre>"},{"location":"deeplearning/pytorch/optimizer/#5","title":"5. \u4f18\u5316\u5668\u8c03\u53c2\u6280\u5de7","text":"<ol> <li>\u5b66\u4e60\u7387\uff08lr\uff09\uff1a  </li> <li>\u521d\u59cb\u503c\u53c2\u8003\uff1aSGD (0.01~0.1)\uff0cAdam (0.001~0.0001)  </li> <li> <p>\u4f7f\u7528\u5b66\u4e60\u7387\u9884\u70ed\uff08Warmup\uff09\u6216\u5468\u671f\u6027\u8c03\u5ea6\uff08\u5982 Cosine \u9000\u706b\uff09  </p> </li> <li> <p>\u52a8\u91cf\u7cfb\u6570\uff08\\(\\beta\\)\uff09\uff1a  </p> </li> <li>Momentum \u4e2d\u901a\u5e38\u53d6 0.9  </li> <li> <p>Adam \u7684 \\(\\beta_1=0.9, \\beta_2=0.999\\) \u9002\u7528\u4e8e\u5927\u591a\u6570\u4efb\u52a1  </p> </li> <li> <p>\u6743\u91cd\u8870\u51cf\uff08Weight Decay\uff09\uff1a  </p> </li> <li>\u9632\u6b62\u8fc7\u62df\u5408\uff0c\u76f8\u5f53\u4e8e L2 \u6b63\u5219\u5316  </li> <li>\u793a\u4f8b\uff1a<code>optim.Adam(..., weight_decay=1e-4)</code></li> </ol>"},{"location":"deeplearning/pytorch/optimizer/#6","title":"6. \u603b\u7ed3","text":"<ul> <li>\u9ed8\u8ba4\u9009\u62e9\uff1a\u4f18\u5148\u5c1d\u8bd5 Adam\uff08\u5feb\u901f\u6536\u655b\uff0c\u8c03\u53c2\u7b80\u5355\uff09\uff0c\u590d\u6742\u4efb\u52a1\u53ef\u6362\u7528 SGD + Momentum\uff08\u9700\u7cbe\u7ec6\u8c03\u53c2\uff09\u3002  </li> <li>\u5b66\u4e60\u7387\u8c03\u6574\uff1a\u914d\u5408\u5b66\u4e60\u7387\u8c03\u5ea6\u5668\uff08\u5982 <code>StepLR</code> \u6216 <code>CosineAnnealingLR</code>\uff09\u53ef\u8fdb\u4e00\u6b65\u63d0\u5347\u6027\u80fd\u3002  </li> <li>\u5b9e\u8df5\u539f\u5219\uff1a\u4e0d\u540c\u4efb\u52a1\u9700\u5b9e\u9a8c\u5bf9\u6bd4\uff0c\u6ca1\u6709\u7edd\u5bf9\u6700\u4f18\u7684\u4f18\u5316\u5668\u3002</li> </ul>"},{"location":"deeplearning/pytorch/scheduler/","title":"\u5b66\u4e60\u7387\u8c03\u5ea6\u5668\uff08Learning Rate Scheduler\uff09","text":""},{"location":"deeplearning/pytorch/scheduler/#_1","title":"\u4e00\u3001\u6982\u5ff5","text":"<p>\u5b66\u4e60\u7387\u8c03\u5ea6\u5668\u662f\u6df1\u5ea6\u5b66\u4e60\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u52a8\u6001\u8c03\u6574\u5b66\u4e60\u7387\u7684\u5de5\u5177\u3002\u5b66\u4e60\u7387\uff08Learning Rate, LR\uff09\u662f\u63a7\u5236\u6a21\u578b\u53c2\u6570\u66f4\u65b0\u6b65\u957f\u7684\u8d85\u53c2\u6570\uff0c\u76f4\u63a5\u5f71\u54cd\u6a21\u578b\u6536\u655b\u901f\u5ea6\u548c\u6027\u80fd\u3002</p> <ul> <li>\u56fa\u5b9a\u5b66\u4e60\u7387\uff1a\u8bad\u7ec3\u5168\u7a0b\u4f7f\u7528\u76f8\u540c\u7684\u5b66\u4e60\u7387\uff0c\u53ef\u80fd\u5bfc\u81f4\u6536\u655b\u6162\uff08\u5b66\u4e60\u7387\u8fc7\u5c0f\uff09\u6216\u9707\u8361\uff08\u5b66\u4e60\u7387\u8fc7\u5927\uff09\u3002</li> <li>\u52a8\u6001\u5b66\u4e60\u7387\uff1a\u6839\u636e\u8bad\u7ec3\u8fdb\u5ea6\uff08\u5982 epoch\u3001batch \u6216\u6307\u6807\u53d8\u5316\uff09\u8c03\u6574\u5b66\u4e60\u7387\uff0c\u5e73\u8861\u6536\u655b\u901f\u5ea6\u4e0e\u7a33\u5b9a\u6027\u3002</li> </ul>"},{"location":"deeplearning/pytorch/scheduler/#_2","title":"\u4e8c\u3001\u5e38\u89c1\u8c03\u5ea6\u5668\u7c7b\u578b\u4e0e\u516c\u5f0f","text":"<p>\u4ee5\u4e0b\u662f\u51e0\u79cd\u7ecf\u5178\u7684\u5b66\u4e60\u7387\u8c03\u5ea6\u5668\u53ca\u5176\u6570\u5b66\u516c\u5f0f\uff1a</p>"},{"location":"deeplearning/pytorch/scheduler/#1-steplr","title":"1. StepLR\uff08\u9636\u68af\u4e0b\u964d\uff09","text":"<ul> <li>\u539f\u7406\uff1a\u6bcf\u9694\u56fa\u5b9a\u6b65\u957f\uff08\u5982\u6bcf <code>step_size</code> \u4e2a epoch\uff09\u5c06\u5b66\u4e60\u7387\u4e58\u4ee5\u8870\u51cf\u56e0\u5b50 <code>gamma</code>\u3002</li> <li>\u516c\u5f0f\uff1a</li> </ul> <p>$$   \\text{LR} = \\text{\u521d\u59cb\u5b66\u4e60\u7387} \\times \\gamma^{\\lfloor \\frac{\\text{epoch}}{\\text{step_size}} \\rfloor}   $$</p> <ul> <li>\u9002\u7528\u573a\u666f\uff1a\u7b80\u5355\u4efb\u52a1\u6216\u521d\u6b65\u5b9e\u9a8c\u3002</li> </ul>"},{"location":"deeplearning/pytorch/scheduler/#2-multisteplr","title":"2. MultiStepLR\uff08\u591a\u9636\u6bb5\u4e0b\u964d\uff09","text":"<ul> <li>\u539f\u7406\uff1a\u5728\u9884\u8bbe\u7684\u591a\u4e2a\u91cc\u7a0b\u7891\uff08\u5982 <code>milestones=[30, 80]</code>\uff09\u5904\u8870\u51cf\u5b66\u4e60\u7387\u3002</li> <li>\u516c\u5f0f\uff1a</li> </ul> <p>$$   \\text{LR} = \\text{\u521d\u59cb\u5b66\u4e60\u7387} \\times \\gamma^{\\text{\u5f53\u524d\u91cc\u7a0b\u7891\u6570}}   $$</p> <ul> <li>\u9002\u7528\u573a\u666f\uff1a\u590d\u6742\u4efb\u52a1\u5206\u9636\u6bb5\u4f18\u5316\u3002</li> </ul>"},{"location":"deeplearning/pytorch/scheduler/#3-exponentiallr","title":"3. ExponentialLR\uff08\u6307\u6570\u8870\u51cf\uff09","text":"<ul> <li>\u539f\u7406\uff1a\u6bcf\u4e2a epoch \u6309\u6307\u6570\u51fd\u6570\u6301\u7eed\u8870\u51cf\u5b66\u4e60\u7387\u3002</li> <li>\u516c\u5f0f\uff1a</li> </ul> <p>$$   \\text{LR} = \\text{\u521d\u59cb\u5b66\u4e60\u7387} \\times \\gamma^{\\text{epoch}}   $$</p> <ul> <li>\u9002\u7528\u573a\u666f\uff1a\u9700\u8981\u5e73\u6ed1\u8870\u51cf\u7684\u573a\u666f\u3002</li> </ul>"},{"location":"deeplearning/pytorch/scheduler/#4-cosineannealinglr","title":"4. CosineAnnealingLR\uff08\u4f59\u5f26\u9000\u706b\uff09","text":"<ul> <li>\u539f\u7406\uff1a\u6309\u4f59\u5f26\u51fd\u6570\u5468\u671f\u6027\u5730\u8c03\u6574\u5b66\u4e60\u7387\u3002</li> <li>\u516c\u5f0f\uff1a</li> </ul> \\[ \\text{LR} = \\text{LR}_{\\text{min}} + \\frac{1}{2}(\\text{LR}_{\\text{max}} - \\text{LR}_{\\text{min}})(1 + \\cos(\\frac{\\text{epoch}}{T_{\\text{max}}} \\pi)) \\] <ul> <li>\u9002\u7528\u573a\u666f\uff1a\u56fe\u50cf\u5206\u7c7b\u7b49\u590d\u6742\u4efb\u52a1\uff0c\u9003\u79bb\u5c40\u90e8\u6700\u4f18\u3002</li> </ul>"},{"location":"deeplearning/pytorch/scheduler/#5-reducelronplateau","title":"5. ReduceLROnPlateau\uff08\u52a8\u6001\u8c03\u6574\uff09","text":"<ul> <li>\u539f\u7406\uff1a\u5f53\u9a8c\u8bc1\u635f\u5931\u505c\u6ede\u65f6\u81ea\u52a8\u964d\u4f4e\u5b66\u4e60\u7387\u3002</li> <li>\u516c\u5f0f\uff1a\u65e0\u56fa\u5b9a\u516c\u5f0f\uff0c\u4f9d\u8d56\u76d1\u63a7\u6307\u6807\u7684\u53d8\u5316\u3002</li> <li>\u9002\u7528\u573a\u666f\uff1a\u9a8c\u8bc1\u96c6\u8868\u73b0\u505c\u6ede\u65f6\u7684\u81ea\u9002\u5e94\u8c03\u6574\u3002</li> </ul>"},{"location":"deeplearning/pytorch/scheduler/#_3","title":"\u4e09\u3001\u4f18\u7f3a\u70b9\u5bf9\u6bd4","text":"\u8c03\u5ea6\u5668 \u4f18\u70b9 \u7f3a\u70b9 StepLR \u7b80\u5355\u76f4\u89c2\uff0c\u8ba1\u7b97\u9ad8\u6548 \u9700\u624b\u52a8\u8bbe\u7f6e\u6b65\u957f\u548c\u8870\u51cf\u56e0\u5b50 MultiStepLR \u7075\u6d3b\u652f\u6301\u591a\u9636\u6bb5\u8c03\u6574 \u9700\u9884\u5b9a\u4e49\u91cc\u7a0b\u7891 ExponentialLR \u5e73\u6ed1\u8870\u51cf\uff0c\u907f\u514d\u7a81\u53d8 \u53ef\u80fd\u8fc7\u65e9\u964d\u81f3\u8fc7\u4f4e\u503c CosineAnnealing \u9003\u79bb\u5c40\u90e8\u6700\u4f18\uff0c\u6536\u655b\u7a33\u5b9a \u8ba1\u7b97\u6210\u672c\u7565\u9ad8 ReduceLROnPlateau \u81ea\u9002\u5e94\uff0c\u65e0\u9700\u9884\u8bbe\u5468\u671f \u4f9d\u8d56\u9a8c\u8bc1\u96c6\u6307\u6807\uff0c\u53ef\u80fd\u5ef6\u8fdf\u54cd\u5e94"},{"location":"deeplearning/pytorch/scheduler/#pytorch","title":"\u56db\u3001PyTorch \u5b9e\u73b0\u4ee3\u7801","text":"<p>\u4ee5\u4e0b\u662f PyTorch \u4e2d\u5e38\u7528\u8c03\u5ea6\u5668\u7684\u4ee3\u7801\u793a\u4f8b\uff1a</p>"},{"location":"deeplearning/pytorch/scheduler/#1-steplr_1","title":"1. StepLR","text":"<pre><code>import torch.optim as optim\nfrom torch.optim.lr_scheduler import StepLR\n\noptimizer = optim.SGD(model.parameters(), lr=0.1)\nscheduler = StepLR(optimizer, step_size=30, gamma=0.1)\n\nfor epoch in range(100):\n    train(...)\n    scheduler.step()  # \u6bcf\u4e2a epoch \u540e\u66f4\u65b0\n</code></pre>"},{"location":"deeplearning/pytorch/scheduler/#2-cosineannealinglr","title":"2. CosineAnnealingLR","text":"<pre><code>from torch.optim.lr_scheduler import CosineAnnealingLR\n\nscheduler = CosineAnnealingLR(optimizer, T_max=50, eta_min=1e-5)\n</code></pre>"},{"location":"deeplearning/pytorch/scheduler/#3-reducelronplateau","title":"3. ReduceLROnPlateau","text":"<pre><code>from torch.optim.lr_scheduler import ReduceLROnPlateau\n\nscheduler = ReduceLROnPlateau(optimizer, mode='min', factor=0.1, patience=5)\n\nval_loss = validate(...)\nscheduler.step(val_loss)  # \u9700\u4f20\u5165\u76d1\u63a7\u6307\u6807\n</code></pre>"},{"location":"deeplearning/pytorch/scheduler/#4-onecyclelr","title":"4. OneCycleLR\uff08\u9ad8\u7ea7\uff09","text":"<pre><code>from torch.optim.lr_scheduler import OneCycleLR\n\nscheduler = OneCycleLR(optimizer, max_lr=0.1, total_steps=100)\n\nfor batch in dataloader:\n    train_batch(...)\n    scheduler.step()  # \u6bcf\u4e2a batch \u540e\u66f4\u65b0\n</code></pre>"},{"location":"deeplearning/pytorch/scheduler/#_4","title":"\u4e94\u3001\u9009\u62e9\u5efa\u8bae","text":"<ul> <li>\u7b80\u5355\u4efb\u52a1\uff1a\u4f18\u5148\u5c1d\u8bd5 <code>StepLR</code> \u6216 <code>MultiStepLR</code>\u3002</li> <li>\u590d\u6742\u4efb\u52a1\uff1a\u4f7f\u7528 <code>CosineAnnealingLR</code> \u6216 <code>OneCycleLR</code>\u3002</li> <li>\u9a8c\u8bc1\u96c6\u4f9d\u8d56\uff1a\u9009\u62e9 <code>ReduceLROnPlateau</code>\u3002</li> <li>\u5c0f\u6570\u636e\u96c6\uff1a\u8c28\u614e\u4f7f\u7528\u52a8\u6001\u8c03\u5ea6\uff0c\u907f\u514d\u8fc7\u62df\u5408\u3002</li> </ul>"},{"location":"deeplearning/pytorch/scheduler/#_5","title":"\u516d\u3001\u603b\u7ed3","text":"<p>\u5b66\u4e60\u7387\u8c03\u5ea6\u5668\u901a\u8fc7\u52a8\u6001\u8c03\u6574\u8bad\u7ec3\u6b65\u957f\uff0c\u663e\u8457\u63d0\u5347\u6a21\u578b\u6536\u655b\u901f\u5ea6\u548c\u6027\u80fd\u3002\u5b9e\u9645\u5e94\u7528\u4e2d\u9700\u7ed3\u5408\u4efb\u52a1\u7279\u70b9\u9009\u62e9\u7b56\u7565\uff0c\u5e76\u901a\u8fc7\u5b9e\u9a8c\u9a8c\u8bc1\u6548\u679c\u3002</p>"},{"location":"deeplearning/pytorch/tensor/","title":"Pytorch\u5f20\u91cf\u3001\u81ea\u52a8\u6c42\u5bfc\u548cGPU","text":""},{"location":"deeplearning/pytorch/tensor/#_1","title":"\u4e00\u3001\u5f20\u91cf","text":""},{"location":"deeplearning/pytorch/tensor/#11-tensor","title":"1.1 \u6784\u9020Tensor","text":"<p>dtype\u7c7b\u578b\uff1adtype=torch.long,torch.float,torch.double</p> <p>\u5e38\u89c1\u7684\u6784\u9020Tensor\u7684\u51fd\u6570\uff1a</p> \u51fd\u6570 \u529f\u80fd \u793a\u4f8b <code>torch.Tensor(sizes)</code> \u57fa\u7840\u6784\u9020\u51fd\u6570 <code>torch.Tensor(4,3)</code> <code>torch.tensor()</code> \u4ece\u6570\u636e\u6784\u9020 Tensor <code>torch.tensor([1, 2, 3])</code> <code>torch.zeros()</code> \u6784\u9020\u5168 0 \u7684 Tensor <code>torch.zeros(2, 3)</code> <code>torch.ones()</code> \u6784\u9020\u5168 1 \u7684 Tensor <code>torch.ones(3, 2)</code> <code>torch.full()</code> \u6784\u9020\u586b\u5145\u503c\u4e3a\u6307\u5b9a\u503c\u7684 Tensor <code>torch.full((2, 2), 7)</code> <code>torch.arange()</code> \u6784\u9020\u4ece\u8d77\u59cb\u5230\u7ec8\u6b62\u7684\u6574\u6570\u5e8f\u5217 Tensor <code>torch.arange(0, 10, 2)</code> <code>torch.linspace()</code> \u6784\u9020\u7ebf\u6027\u95f4\u9694\u7684 Tensor <code>torch.linspace(0, 1, 5)</code> <code>torch.logspace()</code> \u6784\u9020\u5bf9\u6570\u95f4\u9694\u7684 Tensor <code>torch.logspace(1, 3, steps=3)</code> <code>torch.eye()</code> \u6784\u9020\u5355\u4f4d\u77e9\u9635 <code>torch.eye(3)</code> <code>torch.rand()</code> \u6784\u9020 0~1 \u533a\u95f4\u7684\u5747\u5300\u5206\u5e03\u968f\u673a\u6570 <code>torch.rand(2, 2)</code> <code>torch.randn()</code> \u6784\u9020\u6807\u51c6\u6b63\u6001\u5206\u5e03\u7684\u968f\u673a\u6570 <code>torch.randn(2, 2)</code> <code>torch.randint()</code> \u6784\u9020\u6574\u6570\u8303\u56f4\u5185\u7684\u968f\u673a Tensor <code>torch.randint(0, 10, (2, 3))</code> <code>torch.empty()</code> \u6784\u9020\u672a\u521d\u59cb\u5316\u7684 Tensor <code>torch.empty(2, 2)</code> <code>torch.from_numpy()</code> \u4ece NumPy \u6570\u7ec4\u6784\u9020 Tensor <code>torch.from_numpy(np.array([1, 2, 3]))</code> <code>torch.as_tensor()</code> \u5c06\u6570\u636e\u8f6c\u6362\u4e3a Tensor\uff0c\u5c3d\u91cf\u907f\u514d\u590d\u5236 <code>torch.as_tensor([1, 2, 3])</code> <code>torch.clone()</code> \u514b\u9686\u4e00\u4e2a Tensor\uff08\u590d\u5236\uff09 <code>a.clone()</code> <code>torch.empty_like()</code> \u521b\u5efa\u548c\u7ed9\u5b9a Tensor \u76f8\u540c\u5f62\u72b6\u4f46\u672a\u521d\u59cb\u5316\u7684 Tensor <code>torch.empty_like(a)</code> <code>torch.zeros_like()</code> \u521b\u5efa\u548c\u7ed9\u5b9a Tensor \u76f8\u540c\u5f62\u72b6\u7684\u5168 0 Tensor <code>torch.zeros_like(a)</code> <code>torch.ones_like()</code> \u521b\u5efa\u548c\u7ed9\u5b9a Tensor \u76f8\u540c\u5f62\u72b6\u7684\u5168 1 Tensor <code>torch.ones_like(a)</code>"},{"location":"deeplearning/pytorch/tensor/#12","title":"1.2 \u5f20\u91cf\u7684\u5c5e\u6027","text":"<pre><code>x.size() # \u65e9\u671f PyTorch \u7248\u672c\u4f7f\u7528  \nx.shape # \u63a8\u8350\uff0c\u66f4\u73b0\u4ee3\u8bed\u6cd5\n</code></pre>"},{"location":"deeplearning/pytorch/tensor/#13","title":"1.3 \u5e38\u7528\u65b9\u6cd5","text":""},{"location":"deeplearning/pytorch/tensor/#tensorviewshape","title":"tensor.view(*shape)","text":"<p>\u6539\u53d8\u4e00\u4e2a tensor \u7684\u5927\u5c0f\u6216\u8005\u5f62\u72b6\uff0c\u53ef\u4ee5\u4f7f\u7528 torch.view\uff1aview() \u8fd4\u56de\u7684\u65b0tensor\u4e0e\u6e90tensor\u5171\u4eab\u5185\u5b58(\u5176\u5b9e\u662f\u540c\u4e00\u4e2atensor)\uff0c\u4e5f\u5373\uf901\u6539\u5176\u4e2d\u7684\u4e00\u4e2a\uff0c\u53e6 \u5916\u4e00\u4e2a\u4e5f\u4f1a\u8ddf\u7740\u6539\u53d8\u3002</p> <pre><code>x = torch.randn(4, 4)\ny = x.view(16)\nz = x.view(-1, 8)\n</code></pre> <p>Warning</p> <p>tensor \u5fc5\u987b\u662f contiguous \u7684\uff0c\u5426\u5219\u9700\u5148\u8c03\u7528 .contiguous() <pre><code>x = torch.randn(2, 3)\ny = x.transpose(0, 1)  # \u975e\u8fde\u7eed\u5185\u5b58\nz = y.contiguous().view(-1)  # \u5148 contiguous\n</code></pre></p>"},{"location":"deeplearning/pytorch/tensor/#transposepermute","title":"\u8f6c\u7f6etranspose/\u7ef4\u5ea6\u4ea4\u6362permute","text":"<p>\u5728PyTorch\u4e2d\uff0c<code>transpose</code>\u548c<code>permute</code>\u90fd\u662f\u7528\u4e8e\u8c03\u6574\u5f20\u91cf\u7ef4\u5ea6\u987a\u5e8f\u7684\u51fd\u6570\uff0c\u4f46\u5b83\u4eec\u5728\u529f\u80fd\u548c\u4f7f\u7528\u573a\u666f\u4e0a\u6709\u663e\u8457\u533a\u522b\u3002</p>"},{"location":"deeplearning/pytorch/tensor/#1","title":"1. \u529f\u80fd\u533a\u522b","text":"<ul> <li> <p><code>transpose(dim0, dim1)</code>   \u4ea4\u6362\u5f20\u91cf\u7684\u4e24\u4e2a\u6307\u5b9a\u7ef4\u5ea6\uff08<code>dim0</code>\u548c<code>dim1</code>\uff09\uff0c\u5176\u4ed6\u7ef4\u5ea6\u4fdd\u6301\u4e0d\u53d8\u3002 \u793a\u4f8b\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u5f62\u72b6\u4e3a <code>(2, 3, 4)</code> \u7684\u4e09\u7ef4\u5f20\u91cf\uff0c\u6267\u884c <code>transpose(0, 2)</code> \u540e\uff0c\u7ef4\u5ea6\u53d8\u4e3a <code>(4, 3, 2)</code>\u3002</p> </li> <li> <p><code>permute(*dims)</code>   \u91cd\u65b0\u6392\u5217\u6240\u6709\u7ef4\u5ea6\u7684\u987a\u5e8f\uff0c\u53c2\u6570\u662f\u4e00\u4e2a\u5305\u542b\u6240\u6709\u7ef4\u5ea6\u7d22\u5f15\u7684\u5143\u7ec4\u3002 \u793a\u4f8b\uff1a\u5c06\u5f62\u72b6\u4e3a <code>(2, 3, 4)</code> \u7684\u5f20\u91cf\u8c03\u6574\u4e3a <code>(4, 2, 3)</code>\uff0c\u9700\u4f7f\u7528 <code>permute(2, 0, 1)</code>\u3002</p> </li> </ul>"},{"location":"deeplearning/pytorch/tensor/#2","title":"2. \u53c2\u6570\u4e0e\u7075\u6d3b\u6027","text":"<ul> <li><code>transpose</code> \u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff0c\u8868\u793a\u8981\u4ea4\u6362\u7684\u7ef4\u5ea6\u7d22\u5f15\uff0c\u4ec5\u9002\u7528\u4e8e\u4e24\u4e2a\u7ef4\u5ea6\u7684\u4ea4\u6362\u3002</li> <li><code>permute</code> \u63a5\u53d7\u4e00\u4e2a\u5b8c\u6574\u7684\u7ef4\u5ea6\u987a\u5e8f\u5143\u7ec4\uff0c\u53ef\u7075\u6d3b\u8c03\u6574\u4efb\u610f\u591a\u4e2a\u7ef4\u5ea6\u7684\u987a\u5e8f\uff0c\u4f46\u5fc5\u987b\u6307\u5b9a\u6240\u6709\u7ef4\u5ea6\u3002</li> </ul>"},{"location":"deeplearning/pytorch/tensor/#3","title":"3. \u793a\u4f8b\u4ee3\u7801","text":""},{"location":"deeplearning/pytorch/tensor/#transpose","title":"\u4f7f\u7528 <code>transpose</code>","text":"<pre><code>import torch\n\n# \u4e8c\u7ef4\u5f20\u91cf\uff08\u77e9\u9635\u8f6c\u7f6e\uff09\nx = torch.tensor([[1, 2], [3, 4]])\nprint(x.transpose(0, 1))  # \u8f93\u51fa\uff1atensor([[1, 3], [2, 4]])\n\n# \u4e09\u7ef4\u5f20\u91cf\u4ea4\u6362\u7ef4\u5ea6\nx = torch.randn(2, 3, 4)\ny = x.transpose(0, 2)     # \u5f62\u72b6\u53d8\u4e3a (4, 3, 2)\n</code></pre>"},{"location":"deeplearning/pytorch/tensor/#permute","title":"\u4f7f\u7528 <code>permute</code>","text":"<pre><code># \u4e09\u7ef4\u5f20\u91cf\u91cd\u65b0\u6392\u5217\u7ef4\u5ea6\nx = torch.randn(2, 3, 4)\nz = x.permute(2, 0, 1)    # \u5f62\u72b6\u53d8\u4e3a (4, 2, 3)\n\n# \u56db\u7ef4\u5f20\u91cf\u8c03\u6574\u901a\u9053\u4f4d\u7f6e\uff08NCHW \u2192 NHWC\uff09\nbatch = torch.randn(4, 5, 6, 7)       # \u5f62\u72b6 (4, 5, 6, 7)\nbatch_permuted = batch.permute(0, 2, 3, 1)  # \u5f62\u72b6\u53d8\u4e3a (4, 6, 7, 5)\n</code></pre>"},{"location":"deeplearning/pytorch/tensor/#4","title":"4. \u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u89c6\u56fe\uff08View\uff09\u673a\u5236\uff1a\u4e24\u8005\u5747\u8fd4\u56de\u539f\u59cb\u5f20\u91cf\u7684\u89c6\u56fe\uff0c\u5171\u4eab\u5b58\u50a8\u7a7a\u95f4\uff0c\u4fee\u6539\u4e00\u4e2a\u4f1a\u5f71\u54cd\u53e6\u4e00\u4e2a\u3002</li> <li>\u8fde\u7eed\u6027\uff08Contiguity\uff09\uff1a\u8c03\u6574\u7ef4\u5ea6\u53ef\u80fd\u5bfc\u81f4\u5f20\u91cf\u5185\u5b58\u4e0d\u8fde\u7eed\uff0c\u540e\u7eed\u64cd\u4f5c\uff08\u5982 <code>view()</code>\uff09\u9700\u5148\u8c03\u7528 <code>contiguous()</code>\u3002   <pre><code>y = x.transpose(0, 2).contiguous()  # \u786e\u4fdd\u8fde\u7eed\n</code></pre></li> </ul>"},{"location":"deeplearning/pytorch/tensor/#5","title":"5. \u5e94\u7528\u573a\u666f","text":"<ul> <li><code>transpose</code>\uff1a\u9002\u7528\u4e8e\u4ec5\u9700\u4ea4\u6362\u4e24\u4e2a\u7ef4\u5ea6\u7684\u7b80\u5355\u64cd\u4f5c\uff08\u5982\u77e9\u9635\u8f6c\u7f6e\uff09\u3002</li> <li><code>permute</code>\uff1a\u9002\u7528\u4e8e\u590d\u6742\u7684\u591a\u7ef4\u5ea6\u91cd\u6392\uff08\u5982\u8c03\u6574\u56fe\u50cf\u6570\u636e\u7684\u901a\u9053\u987a\u5e8f\uff09\u3002</li> </ul>"},{"location":"deeplearning/pytorch/tensor/#_2","title":"\u603b\u7ed3","text":"\u7279\u6027 <code>transpose</code> <code>permute</code> \u529f\u80fd \u4ea4\u6362\u4e24\u4e2a\u7ef4\u5ea6 \u4efb\u610f\u7ef4\u5ea6\u91cd\u6392 \u53c2\u6570 <code>dim0</code>, <code>dim1</code> \u5b8c\u6574\u7ef4\u5ea6\u987a\u5e8f\u7684\u5143\u7ec4 \u7075\u6d3b\u6027 \u4f4e\uff08\u4ec5\u4e24\u7ef4\u5ea6\uff09 \u9ad8\uff08\u591a\u7ef4\u5ea6\uff09 \u5178\u578b\u5e94\u7528\u573a\u666f \u77e9\u9635\u8f6c\u7f6e\u3001\u7b80\u5355\u7ef4\u5ea6\u4ea4\u6362 \u590d\u6742\u7ef4\u5ea6\u8c03\u6574\uff08\u5982\u901a\u9053\u91cd\u6392\uff09"},{"location":"deeplearning/pytorch/tensor/#expand","title":"\u6269\u5c55expand","text":"<pre><code>#\u8fd4\u56de\u5f53\u524d\u5f20\u91cf\u5728\u67d0\u4e2a\u7ef4\u5ea6\u4e3a1\u6269\u5c55\u4e3a\u66f4\u5927\u7684\u5f20\u91cf\nx = torch.Tensor([[1], [2], [3]])#shape=[3,1]\nt=x.expand(3, 4)\nprint(t)\n'''\ntensor([[1., 1., 1., 1.],\n[2., 2., 2., 2.],\n[3., 3., 3., 3.]])\n'''\n</code></pre>"},{"location":"deeplearning/pytorch/tensor/#repeat","title":"\u91cd\u590drepeat","text":"<pre><code>#\u6cbf\u7740\u7279\u5b9a\u7684\u7ef4\u5ea6\u91cd\u590d\u8fd9\u4e2a\u5f20\u91cf\nx=torch.Tensor([[1,2,3]])\nt=x.repeat(3, 2)\nprint(t)\n'''\ntensor([[1., 2., 3., 1., 2., 3.],\n[1., 2., 3., 1., 2., 3.],\n[1., 2., 3., 1., 2., 3.]])\n'''\n</code></pre>"},{"location":"deeplearning/pytorch/tensor/#cat","title":"\u62fc\u63a5cat","text":"<pre><code>x = torch.randn(2,3,6)\ny = torch.randn(2,4,6)\nc=torch.cat((x,y),1)\n#c=(2*7*6)\n</code></pre>"},{"location":"deeplearning/pytorch/tensor/#stack","title":"\u5806\u53e0stack","text":"<pre><code>\"\"\"\n\u800cstack\u5219\u4f1a\u589e\u52a0\u65b0\u7684\u7ef4\u5ea6\u3002\n\u5982\u5bf9\u4e24\u4e2a1*2\u7ef4\u7684tensor\u5728\u7b2c0\u4e2a\u7ef4\u5ea6\u4e0astack\uff0c\u5219\u4f1a\u53d8\u4e3a2*1*2\u7684tensor\uff1b\u5728\u7b2c1\u4e2a\u7ef4\u5ea6\u4e0astack\uff0c\u5219\u4f1a\u53d8\u4e3a1*2*2\u7684tensor\u3002\n\"\"\"\na = torch.rand((1, 2))\nb = torch.rand((1, 2))\nc = torch.stack((a, b), 0)\n</code></pre>"},{"location":"deeplearning/pytorch/tensor/#tensor1tensor","title":"\u538b\u7f29\u548c\u6269\u5c55\u7ef4\u5ea6\uff1a\u6539\u53d8tensor\u4e2d\u53ea\u67091\u4e2a\u7ef4\u5ea6\u7684tensor","text":"<pre><code>x = torch.Tensor(1,3)\ny=torch.squeeze(x, 0) # squeeze(tensor, dim)\uff1a\u79fb\u9664\u6307\u5b9a\u7ef4\u5ea6\u4e2d \u5927\u5c0f\u4e3a 1 \u7684\u7ef4\u5ea6\u3002\ny=torch.unsqueeze(y, 1) # unsqueeze(tensor, dim)\uff1a\u5728\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165 \u5927\u5c0f\u4e3a 1 \u7684\u65b0\u7ef4\u5ea6\u3002\n</code></pre>"},{"location":"deeplearning/pytorch/tensor/#_3","title":"\u77e9\u9635\u4e58\u6cd5","text":"<p>\u505a\u77e9\u9635a*b\u4ee5\u4e0b\u64cd\u4f5c\u4e00\u6837\u3002</p> <p>\u5982\u679ca\u662f\u4e00\u4e2an\u00d7m\u5f20\u91cf\uff0cb\u662f\u4e00\u4e2a m\u00d7p \u5f20\u91cf\uff0c\u5c06\u4f1a\u8f93\u51fa\u4e00\u4e2a n\u00d7p \u5f20\u91cfc\u3002</p> <pre><code>a = torch.rand(2,4) \nb = torch.rand(4,3) \nc = a.mm(b) \nc = torch.mm(a, b) \nc = torch.matmul(a, b) \nc = a @ b\n</code></pre>"},{"location":"deeplearning/pytorch/tensor/#pytorch","title":"\u4e8c\u3001pytorch\u81ea\u52a8\u6c42\u5bfc\u673a\u5236\u53ca\u4f7f\u7528","text":""},{"location":"deeplearning/pytorch/tensor/#21-pytorch","title":"2.1 pytorch\u81ea\u52a8\u6c42\u5bfc\u673a\u5236","text":"<p>PyTorch \u4e2dautograd\u5305\u4e3a\u5f20\u91cf\u4e0a\u7684\u6240\u6709\u64cd\u4f5c\u63d0\u4f9b\u4e86\u81ea\u52a8\u6c42\u5bfc\u673a\u5236\u3002torch.Tensor\u662f\u8fd9\u4e2a\u5305\u7684\u6838\u5fc3\u7c7b\u3002\u5982\u679c\u8bbe\u7f6e\u5b83\u7684\u5c5e\u6027.requires_grad \u4e3a True\uff0c\u90a3\u4e48\u5b83\u5c06\u4f1a\u8ffd\u8e2a\u5bf9\u4e8e\u8be5\u5f20\u91cf\u7684\u6240\u6709\u64cd\u4f5c\u3002\u5f53\u5b8c\u6210\u8ba1\u7b97\u540e\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528.backward()\uff0c\u6765\u81ea\u52a8\u8ba1\u7b97\u6240\u6709\u7684\u68af\u5ea6\u3002\u8fd9\u4e2a\u5f20\u91cf\u7684\u6240\u6709\u68af\u5ea6\u5c06\u4f1a\u81ea\u52a8\u7d2f\u52a0\u5230.grad\u5c5e\u6027\u3002</p> <pre><code>x = torch.arange(0, 100, 0.01,dtype=torch.double,requires_grad=True)\ny = sum(10 * x + 5 )\ny.backward()\nprint(x.grad)\n#tensor([10,10,....10],dtype=torch.float64)\n</code></pre>"},{"location":"deeplearning/pytorch/tensor/#gpu","title":"\u4e09\u3001GPU\u914d\u7f6e","text":""},{"location":"deeplearning/pytorch/tensor/#31-gpu","title":"3.1 GPU\u7684\u8bbe\u7f6e","text":"<pre><code># \u65b9\u6cd5\u4e00\uff1a\u4f7f\u7528os.environ\uff0c\u8fd9\u79cd\u60c5\u51b5\u5982\u679c\u4f7f\u7528GPU\u4e0d\u9700\u8981\u8bbe\u7f6e\nos.environ['CUDA_VISIBLE_DEVICES'] = '0,1'\n\n# \u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528\u201cdevice\u201d\uff0c\u540e\u7eed\u5bf9\u8981\u4f7f\u7528GPU\u7684\u53d8\u91cf\u7528.to(device)\u5373\u53ef\ndevice = torch.device(\"cuda:0\" if torch.cuda.is_available() else \"cpu\")\n</code></pre>"},{"location":"deeplearning/pytorch/tensor/#32-gpucpu","title":"3.2 \u6570\u636e/\u6a21\u578b\u62f7\u8d1d\u5230GPU\u4e0a/\u62f7\u8d1d\u5230CPU\u4e0a","text":""},{"location":"deeplearning/pytorch/visual/","title":"\u53ef\u89c6\u5316","text":""},{"location":"deeplearning/pytorch/visual/#torchinfo","title":"\u4e00\u3001torchinfo","text":""},{"location":"deeplearning/pytorch/visual/#11","title":"1.1 \u5b89\u88c5","text":"<pre><code>pip install torchinfo \n</code></pre>"},{"location":"deeplearning/pytorch/visual/#12-torchinfo","title":"1.2 \u4f7f\u7528torchinfo","text":"<pre><code>from torchinfo import summary\nimport torch.nn as nn\n\nmodel = nn.Sequential(\n    nn.Conv2d(3, 16, kernel_size=3, stride=1, padding=1),\n    nn.ReLU(),\n    nn.MaxPool2d(2),\n    nn.Flatten(),\n    nn.Linear(16*16*16, 10)\n)\n\nsummary(model, input_size=(1, 3, 32, 32))  # batch_size=1, channel=3, height=32, width=32\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c\uff1a <pre><code>==========================================================================================\nLayer (type:depth-idx)                   Output Shape              Param #\n==========================================================================================\nSequential                               [1, 10]                   --\n\u251c\u2500Conv2d: 1-1                            [1, 16, 32, 32]           448\n\u251c\u2500ReLU: 1-2                              [1, 16, 32, 32]           --\n\u251c\u2500MaxPool2d: 1-3                         [1, 16, 16, 16]           --\n\u251c\u2500Flatten: 1-4                           [1, 4096]                 --\n\u251c\u2500Linear: 1-5                            [1, 10]                   40,970\n==========================================================================================\nTotal params: 41,418\nTrainable params: 41,418\nNon-trainable params: 0\nTotal mult-adds (M): 0.50\n==========================================================================================\nInput size (MB): 0.01\nForward/backward pass size (MB): 0.13\nParams size (MB): 0.17\nEstimated Total Size (MB): 0.31\n==========================================================================================\n</code></pre></p> <p>Info</p>"},{"location":"deeplearning/pytorch/visual/#torchinfosummary","title":"\ud83d\udccb \u53c2\u6570\u8be6\u89e3\uff08<code>torchinfo.summary</code>\uff09","text":"\u53c2\u6570\u540d \u7c7b\u578b \u9ed8\u8ba4\u503c \u4f5c\u7528 <code>model</code> <code>nn.Module</code> \u5fc5\u987b \u8981\u5206\u6790\u7684 PyTorch \u6a21\u578b <code>input_size</code> tuple / list <code>None</code> \u8f93\u5165\u5f20\u91cf\u7684\u5c3a\u5bf8\uff0c\u5982 <code>(1, 3, 224, 224)</code> <code>input_data</code> tensor / list <code>None</code> \u7528\u771f\u5b9e\u5f20\u91cf\u4ee3\u66ff <code>input_size</code>\uff0c\u9002\u5408\u590d\u6742\u8f93\u5165 <code>batch_dim</code> int <code>0</code> \u6307\u5b9a batch \u7684\u7ef4\u5ea6\u7d22\u5f15\uff0c\u901a\u5e38\u662f\u7b2c 0 \u7ef4 <code>col_names</code> tuple <code>(\"output_size\", \"num_params\")</code> \u63a7\u5236\u8f93\u51fa\u5217\u5b57\u6bb5\uff0c\u5e38\u89c1\u503c\u5305\u62ec <code>\"input_size\"</code>, <code>\"output_size\"</code>, <code>\"num_params\"</code>, <code>\"mult_adds\"</code> <code>col_width</code> int <code>25</code> \u63a7\u5236\u8f93\u51fa\u5217\u7684\u5bbd\u5ea6\uff0c\u5f71\u54cd\u6253\u5370\u65f6\u5bf9\u9f50\u6548\u679c <code>depth</code> int / None <code>3</code> \u63a7\u5236\u663e\u793a\u7684\u6a21\u5757\u5d4c\u5957\u5c42\u6570\uff0c\u8bbe\u4e3a <code>None</code> \u663e\u793a\u5168\u90e8 <code>device</code> <code>\"cpu\"</code> / <code>\"cuda\"</code> <code>\"cpu\"</code> \u6307\u5b9a\u8fd0\u884c\u6a21\u578b\u7684\u8bbe\u5907\uff0c\u7528\u4e8e\u8ba1\u7b97\u5185\u5b58\u548c\u5f62\u72b6 <code>dtypes</code> list of <code>torch.dtype</code> <code>None</code> \u6307\u5b9a\u6bcf\u4e2a\u8f93\u5165\u5f20\u91cf\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982 <code>[torch.float32]</code> <code>verbose</code> int <code>1</code> \u63a7\u5236\u662f\u5426\u6253\u5370\u8f93\u51fa\uff0c\u8bbe\u4e3a <code>0</code> \u53ef\u9759\u9ed8 <code>row_settings</code> tuple <code>(\"var_names\", \"depth\")</code> \u63a7\u5236\u884c\u663e\u793a\u683c\u5f0f\uff0c\u4f8b\u5982\u53d8\u91cf\u540d\u3001\u7f29\u8fdb\u98ce\u683c"},{"location":"deeplearning/pytorch/visual/#_2","title":"\u2705 \u793a\u4f8b\u7528\u6cd5","text":"<pre><code>from torchinfo import summary\nsummary(\n    model,\n    input_size=(1, 3, 224, 224),\n    col_names=(\"input_size\", \"output_size\", \"num_params\"),\n    depth=2,\n    device=\"cuda\",\n    verbose=1\n)\n</code></pre>"},{"location":"deeplearning/pytorch/visual/#tensorboard","title":"\u4e8c\u3001TensorBoard","text":""},{"location":"deeplearning/pytorch/visual/#1-pytorch-tensorboard","title":"1. \u4e3a\u4ec0\u4e48\u5728 PyTorch \u4e2d\u4f7f\u7528 TensorBoard\uff1f","text":"<ul> <li>\u529f\u80fd\u9700\u6c42\uff1aTensorBoard \u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u53ef\u89c6\u5316\u529f\u80fd\uff08\u5982\u6807\u91cf\u66f2\u7ebf\u3001\u56fe\u50cf\u3001\u6a21\u578b\u7ed3\u6784\u3001\u76f4\u65b9\u56fe\u3001\u5d4c\u5165\u6295\u5f71\u7b49\uff09\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u7406\u89e3\u6a21\u578b\u884c\u4e3a\u548c\u8c03\u8bd5\u8bad\u7ec3\u8fc7\u7a0b\u3002</li> <li>PyTorch \u652f\u6301\uff1aPyTorch \u901a\u8fc7 <code>torch.utils.tensorboard</code> \u6a21\u5757\u539f\u751f\u652f\u6301 TensorBoard\uff0c\u65e0\u9700\u4f9d\u8d56 TensorFlow\u3002</li> <li>\u6838\u5fc3\u4f18\u52bf\uff1a\u5b9e\u65f6\u76d1\u63a7\u8bad\u7ec3\u6307\u6807\u3001\u5bf9\u6bd4\u4e0d\u540c\u5b9e\u9a8c\u3001\u5206\u6790\u6a21\u578b\u6027\u80fd\u3002</li> </ul>"},{"location":"deeplearning/pytorch/visual/#2","title":"2. \u5b89\u88c5\u4e0e\u51c6\u5907","text":""},{"location":"deeplearning/pytorch/visual/#_3","title":"\u5b89\u88c5\u4f9d\u8d56","text":"<p>\u786e\u4fdd\u5df2\u5b89\u88c5 PyTorch \u548c TensorBoard\uff1a <pre><code>pip install torch torchvision tensorboard\n</code></pre></p>"},{"location":"deeplearning/pytorch/visual/#_4","title":"\u5bfc\u5165\u5173\u952e\u6a21\u5757","text":"<pre><code>import torch\nimport torch.nn as nn\nimport torch.optim as optim\nfrom torch.utils.tensorboard import SummaryWriter  # \u6838\u5fc3\u5199\u5165\u5668\nfrom torchvision import datasets, transforms\nfrom torch.utils.data import DataLoader\n</code></pre>"},{"location":"deeplearning/pytorch/visual/#3","title":"3. \u57fa\u7840\u4f7f\u7528\u6d41\u7a0b","text":""},{"location":"deeplearning/pytorch/visual/#31-summarywriter","title":"3.1 \u521b\u5efa SummaryWriter","text":"<p><code>SummaryWriter</code> \u662f PyTorch \u4e2d\u5411 TensorBoard \u5199\u5165\u6570\u636e\u7684\u4e3b\u8981\u63a5\u53e3\u3002 <pre><code># \u521b\u5efa\u5199\u5165\u5668\uff0c\u6307\u5b9a\u65e5\u5fd7\u4fdd\u5b58\u76ee\u5f55\nwriter = SummaryWriter(log_dir=\"logs/experiment_1\")\n</code></pre></p>"},{"location":"deeplearning/pytorch/visual/#32-scalars","title":"3.2 \u8bb0\u5f55\u6807\u91cf\uff08Scalars\uff09","text":"<p>\u8bb0\u5f55\u8bad\u7ec3\u635f\u5931\u3001\u51c6\u786e\u7387\u7b49\u6807\u91cf\u6570\u636e\uff1a <pre><code>for epoch in range(100):\n    # \u6a21\u62df\u8bad\u7ec3\u8fc7\u7a0b\n    train_loss = 0.1 * (0.9 ** epoch)\n    val_accuracy = 0.8 + 0.1 * (1 - 0.9 ** epoch)\n\n    # \u8bb0\u5f55\u6807\u91cf\u5230 TensorBoard\n    writer.add_scalar('Loss/Train', train_loss, epoch)\n    writer.add_scalar('Accuracy/Val', val_accuracy, epoch)\n</code></pre></p>"},{"location":"deeplearning/pytorch/visual/#33-tensorboard","title":"3.3 \u542f\u52a8 TensorBoard","text":"<p>\u5728\u7ec8\u7aef\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a <pre><code>tensorboard --logdir=logs/experiment_1 --port=6006\n</code></pre> \u8bbf\u95ee <code>http://localhost:6006</code> \u67e5\u770b\u53ef\u89c6\u5316\u754c\u9762\u3002</p>"},{"location":"deeplearning/pytorch/visual/#4","title":"4. \u6838\u5fc3\u529f\u80fd\u8be6\u89e3","text":""},{"location":"deeplearning/pytorch/visual/#41","title":"4.1 \u56fe\u50cf\u53ef\u89c6\u5316","text":"<p>\u8bb0\u5f55\u8f93\u5165\u6570\u636e\u3001\u7279\u5f81\u56fe\u6216\u751f\u6210\u56fe\u50cf\uff1a <pre><code># \u793a\u4f8b\uff1a\u8bb0\u5f55\u4e00\u6279 MNIST \u56fe\u50cf\ntransform = transforms.Compose([transforms.ToTensor()])\ntrain_set = datasets.MNIST(root='./data', train=True, download=True, transform=transform)\ntrain_loader = DataLoader(train_set, batch_size=8, shuffle=True)\n\n# \u83b7\u53d6\u4e00\u6279\u56fe\u50cf\nimages, labels = next(iter(train_loader))\ngrid = torchvision.utils.make_grid(images)  # \u5c06\u56fe\u50cf\u62fc\u63a5\u4e3a\u7f51\u683c\n\n# \u8bb0\u5f55\u56fe\u50cf\nwriter.add_image('MNIST Samples', grid, 0)\n</code></pre></p>"},{"location":"deeplearning/pytorch/visual/#42","title":"4.2 \u6a21\u578b\u7ed3\u6784\u53ef\u89c6\u5316","text":"<p>\u53ef\u89c6\u5316\u795e\u7ecf\u7f51\u7edc\u7684\u8ba1\u7b97\u56fe\uff1a <pre><code># \u5b9a\u4e49\u7b80\u5355\u6a21\u578b\nclass Net(nn.Module):\n    def __init__(self):\n        super(Net, self).__init__()\n        self.fc1 = nn.Linear(784, 256)\n        self.fc2 = nn.Linear(256, 10)\n\n    def forward(self, x):\n        x = x.view(-1, 784)\n        x = torch.relu(self.fc1(x))\n        x = self.fc2(x)\n        return x\n\nmodel = Net()\n\n# \u8bb0\u5f55\u6a21\u578b\u7ed3\u6784\ndummy_input = torch.rand(1, 1, 28, 28)  # \u865a\u62df\u8f93\u5165\uff08\u4e0e MNIST \u56fe\u50cf\u5c3a\u5bf8\u5339\u914d\uff09\nwriter.add_graph(model, dummy_input)\n</code></pre></p>"},{"location":"deeplearning/pytorch/visual/#43","title":"4.3 \u76f4\u65b9\u56fe\u4e0e\u5206\u5e03","text":"<p>\u76d1\u63a7\u6743\u91cd\u6216\u6fc0\u6d3b\u503c\u7684\u5206\u5e03\u53d8\u5316\uff1a <pre><code># \u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u6743\u91cd\nfor name, param in model.named_parameters():\n    writer.add_histogram(f'Weights/{name}', param, epoch)\n    writer.add_histogram(f'Gradients/{name}', param.grad, epoch)\n</code></pre></p>"},{"location":"deeplearning/pytorch/visual/#44-pr-roc","title":"4.4 PR \u66f2\u7ebf\u4e0e ROC \u66f2\u7ebf","text":"<p>\u8bb0\u5f55\u5206\u7c7b\u6a21\u578b\u7684\u6027\u80fd\u66f2\u7ebf\uff1a <pre><code>from sklearn.metrics import precision_recall_curve, roc_curve\nimport numpy as np\n\n# \u6a21\u62df\u9884\u6d4b\u6982\u7387\u548c\u771f\u5b9e\u6807\u7b7e\ny_true = np.random.randint(0, 2, size=100)\ny_scores = np.random.rand(100)\n\n# \u8ba1\u7b97 PR \u66f2\u7ebf\nprecision, recall, _ = precision_recall_curve(y_true, y_scores)\nwriter.add_pr_curve('PR Curve', y_true, y_scores, 0)\n\n# \u8ba1\u7b97 ROC \u66f2\u7ebf\nfpr, tpr, _ = roc_curve(y_true, y_scores)\nwriter.add_roc_curve('ROC Curve', y_true, y_scores, 0)\n</code></pre></p>"},{"location":"deeplearning/pytorch/visual/#45-embedding-projector","title":"4.5 \u5d4c\u5165\u6295\u5f71\uff08Embedding Projector\uff09","text":"<p>\u53ef\u89c6\u5316\u9ad8\u7ef4\u6570\u636e\uff08\u5982\u7279\u5f81\u5411\u91cf\uff09\uff1a <pre><code># \u751f\u6210\u7279\u5f81\u548c\u6807\u7b7e\nfeatures = torch.randn(100, 256)  # 100\u4e2a\u6837\u672c\uff0c256\u7ef4\u7279\u5f81\nlabels = torch.randint(0, 10, (100,))\n\n# \u8bb0\u5f55\u5d4c\u5165\u5411\u91cf\nwriter.add_embedding(\n    features,\n    metadata=labels,\n    tag='MNIST Embeddings',\n    global_step=epoch\n)\n</code></pre></p>"},{"location":"deeplearning/pytorch/visual/#5","title":"5. \u9ad8\u7ea7\u529f\u80fd","text":""},{"location":"deeplearning/pytorch/visual/#51","title":"5.1 \u5bf9\u6bd4\u591a\u4e2a\u5b9e\u9a8c","text":"<p>\u901a\u8fc7\u4e0d\u540c\u65e5\u5fd7\u76ee\u5f55\u533a\u5206\u5b9e\u9a8c\uff1a <pre><code># \u5b9e\u9a8c1\nwriter_exp1 = SummaryWriter(log_dir=\"logs/exp1_lr0.01\")\n# \u5b9e\u9a8c2\nwriter_exp2 = SummaryWriter(log_dir=\"logs/exp2_lr0.001\")\n</code></pre> \u542f\u52a8 TensorBoard \u65f6\u6307\u5b9a\u7236\u76ee\u5f55\uff1a <pre><code>tensorboard --logdir=logs --port=6006\n</code></pre></p>"},{"location":"deeplearning/pytorch/visual/#52-hparams","title":"5.2 \u8d85\u53c2\u6570\u8c03\u4f18\uff08HParams\uff09","text":"<p>\u4f7f\u7528 TensorBoard \u7684 HParams \u63d2\u4ef6\u5bf9\u6bd4\u8d85\u53c2\u6570\uff1a <pre><code># \u8bb0\u5f55\u8d85\u53c2\u6570\u548c\u6307\u6807\nwith SummaryWriter(log_dir=\"logs/hparams\") as w:\n    # \u5b9a\u4e49\u8d85\u53c2\u6570\n    hparams = {'lr': 0.01, 'batch_size': 64}\n    metrics = {'accuracy': 0.85}\n\n    # \u5199\u5165 HParams\n    w.add_hparams(hparams, metrics)\n</code></pre></p>"},{"location":"deeplearning/pytorch/visual/#53-profiler","title":"5.3 \u6027\u80fd\u5206\u6790\uff08Profiler\uff09","text":"<p>\u4f7f\u7528 PyTorch Profiler \u5206\u6790\u6a21\u578b\u6027\u80fd\uff1a <pre><code>from torch.profiler import profile, record_function, ProfilerActivity\n\nwith profile(activities=[ProfilerActivity.CPU], record_shapes=True) as prof:\n    with record_function(\"model_inference\"):\n        model(dummy_input)\n\n# \u8bb0\u5f55\u5206\u6790\u7ed3\u679c\u5230 TensorBoard\nwriter.add_profiler_trace(prof)\n</code></pre></p>"},{"location":"deeplearning/pytorch/visual/#6","title":"6. \u5b8c\u6574\u8bad\u7ec3\u793a\u4f8b","text":"<pre><code># \u5b8c\u6574\u8bad\u7ec3\u6d41\u7a0b\u793a\u4f8b\nmodel = Net()\ncriterion = nn.CrossEntropyLoss()\noptimizer = optim.Adam(model.parameters(), lr=0.001)\n\nfor epoch in range(10):\n    for i, (images, labels) in enumerate(train_loader):\n        # \u524d\u5411\u4f20\u64ad\n        outputs = model(images)\n        loss = criterion(outputs, labels)\n\n        # \u53cd\u5411\u4f20\u64ad\n        optimizer.zero_grad()\n        loss.backward()\n        optimizer.step()\n\n        # \u8bb0\u5f55\u635f\u5931\n        writer.add_scalar('Loss/Train', loss.item(), epoch * len(train_loader) + i)\n\n    # \u8bb0\u5f55\u6a21\u578b\u6743\u91cd\n    for name, param in model.named_parameters():\n        writer.add_histogram(f'Weights/{name}', param, epoch)\n        writer.add_histogram(f'Gradients/{name}', param.grad, epoch)\n\nwriter.close()  # \u5173\u95ed\u5199\u5165\u5668\n</code></pre>"},{"location":"deeplearning/pytorch/visual/#7","title":"7. \u5e38\u89c1\u95ee\u9898","text":"<ol> <li>TensorBoard \u4e0d\u663e\u793a\u6570\u636e\uff1a<ul> <li>\u68c0\u67e5\u65e5\u5fd7\u8def\u5f84\u662f\u5426\u4e0e <code>SummaryWriter</code> \u6307\u5b9a\u7684\u8def\u5f84\u4e00\u81f4\u3002</li> <li>\u786e\u4fdd <code>writer.close()</code> \u88ab\u8c03\u7528\u6216\u4f7f\u7528 <code>with</code> \u8bed\u53e5\u81ea\u52a8\u5173\u95ed\u3002</li> </ul> </li> <li>\u591a GPU \u8bad\u7ec3\uff1a<ul> <li>\u5728\u5206\u5e03\u5f0f\u8bad\u7ec3\u4e2d\uff0c\u786e\u4fdd\u53ea\u5728\u4e3b\u8fdb\u7a0b\u8bb0\u5f55\u6570\u636e\u3002</li> </ul> </li> <li>\u8fdc\u7a0b\u8bbf\u95ee\uff1a<ul> <li>\u4f7f\u7528 <code>tensorboard --logdir=logs --host 0.0.0.0</code> \u5141\u8bb8\u8fdc\u7a0b\u8bbf\u95ee\u3002</li> </ul> </li> </ol>"},{"location":"deeplearning/pytorch/visual/#8","title":"8. \u603b\u7ed3","text":"<p>\u901a\u8fc7 <code>SummaryWriter</code>\uff0cPyTorch \u53ef\u4ee5\u65e0\u7f1d\u96c6\u6210 TensorBoard\uff0c\u5b9e\u73b0\u4ee5\u4e0b\u529f\u80fd\uff1a</p> <ul> <li>\u8bad\u7ec3\u76d1\u63a7\uff1a\u5b9e\u65f6\u8ddf\u8e2a\u635f\u5931\u3001\u51c6\u786e\u7387\u7b49\u6307\u6807\u3002</li> <li>\u6a21\u578b\u8c03\u8bd5\uff1a\u53ef\u89c6\u5316\u6743\u91cd\u5206\u5e03\u3001\u68af\u5ea6\u6d41\u52a8\u3002</li> <li>\u6570\u636e\u68c0\u67e5\uff1a\u67e5\u770b\u8f93\u5165\u6570\u636e\u3001\u7279\u5f81\u56fe\u3002</li> <li>\u6027\u80fd\u4f18\u5316\uff1a\u5206\u6790\u8ba1\u7b97\u74f6\u9888\u548c\u8d85\u53c2\u6570\u5f71\u54cd\u3002</li> </ul> <p>\u638c\u63e1\u8fd9\u4e9b\u64cd\u4f5c\u540e\uff0c\u60a8\u53ef\u4ee5\u66f4\u9ad8\u6548\u5730\u5f00\u53d1\u548c\u4f18\u5316 PyTorch \u6a21\u578b\uff01</p>"},{"location":"deeplearning/pytorch/visual/#prroc","title":"\u4e09\u3001PR\u66f2\u7ebf\u548cROC\u66f2\u7ebf","text":""},{"location":"deeplearning/pytorch/visual/#1-pr-precision-recall-curve","title":"1. PR \u66f2\u7ebf\uff08Precision-Recall Curve\uff09","text":""},{"location":"deeplearning/pytorch/visual/#11_1","title":"1.1 \u6838\u5fc3\u6982\u5ff5","text":"<ul> <li>\u7cbe\u786e\u7387\uff08Precision\uff09\uff1a \u9884\u6d4b\u4e3a\u6b63\u7c7b\u7684\u6837\u672c\u4e2d\uff0c\u771f\u5b9e\u4e3a\u6b63\u7c7b\u7684\u6bd4\u4f8b\u3002   $$   \\text{Precision} = \\frac{\\text{TP}}{\\text{TP} + \\text{FP}}   $$</li> <li>\u53ec\u56de\u7387\uff08Recall\uff09\uff1a \u771f\u5b9e\u4e3a\u6b63\u7c7b\u7684\u6837\u672c\u4e2d\uff0c\u88ab\u6b63\u786e\u9884\u6d4b\u4e3a\u6b63\u7c7b\u7684\u6bd4\u4f8b\u3002   $$   \\text{Recall} = \\frac{\\text{TP}}{\\text{TP} + \\text{FN}}   $$</li> </ul>"},{"location":"deeplearning/pytorch/visual/#12-pr","title":"1.2 PR \u66f2\u7ebf\u7684\u7ed8\u5236","text":"<ol> <li>\u9608\u503c\u8c03\u6574\uff1a    \u5206\u7c7b\u6a21\u578b\u8f93\u51fa\u6982\u7387\uff08\u5982\u903b\u8f91\u56de\u5f52\u7684\u9884\u6d4b\u6982\u7387\uff09\uff0c\u901a\u8fc7\u8c03\u6574\u5206\u7c7b\u9608\u503c\uff08\u5982\u4ece 1 \u5230 0\uff09\uff0c\u8ba1\u7b97\u4e0d\u540c\u9608\u503c\u4e0b\u7684 Precision \u548c Recall\u3002</li> <li>\u8fde\u63a5\u70b9\uff1a    \u5c06\u6240\u6709\uff08Recall, Precision\uff09\u70b9\u6309\u9608\u503c\u4ece\u9ad8\u5230\u4f4e\u8fde\u63a5\uff0c\u5f62\u6210 PR \u66f2\u7ebf\u3002</li> </ol>"},{"location":"deeplearning/pytorch/visual/#13","title":"1.3 \u5e94\u7528\u573a\u666f","text":"<ul> <li>\u7c7b\u522b\u4e0d\u5e73\u8861\u95ee\u9898\uff1a\u5f53\u8d1f\u6837\u672c\u8fdc\u591a\u4e8e\u6b63\u6837\u672c\u65f6\uff0cPR \u66f2\u7ebf\u6bd4 ROC \u66f2\u7ebf\u66f4\u654f\u611f\u3002</li> <li>\u5173\u6ce8\u6b63\u7c7b\u7cbe\u5ea6\uff1a\u4f8b\u5982\u533b\u7597\u8bca\u65ad\uff08\u51cf\u5c11\u8bef\u8bca\uff09\u3001\u6b3a\u8bc8\u68c0\u6d4b\uff08\u51cf\u5c11\u6f0f\u68c0\uff09\u3002</li> </ul>"},{"location":"deeplearning/pytorch/visual/#14","title":"1.4 \u4ee3\u7801\u793a\u4f8b","text":"<pre><code>from sklearn.metrics import precision_recall_curve\nimport matplotlib.pyplot as plt\n\n# \u6a21\u62df\u6570\u636e\uff08\u771f\u5b9e\u6807\u7b7e\u548c\u9884\u6d4b\u6982\u7387\uff09\ny_true = [1, 0, 1, 1, 0, 1, 0, 1]    # \u771f\u5b9e\u6807\u7b7e\ny_scores = [0.8, 0.3, 0.6, 0.7, 0.4, 0.9, 0.2, 0.5]  # \u9884\u6d4b\u6982\u7387\n\n# \u8ba1\u7b97 PR \u66f2\u7ebf\nprecision, recall, thresholds = precision_recall_curve(y_true, y_scores)\n\n# \u7ed8\u5236 PR \u66f2\u7ebf\nplt.figure()\nplt.plot(recall, precision, marker='.')\nplt.xlabel('Recall')\nplt.ylabel('Precision')\nplt.title('PR Curve')\nplt.show()\n</code></pre>"},{"location":"deeplearning/pytorch/visual/#2-roc-receiver-operating-characteristic-curve","title":"2. ROC \u66f2\u7ebf\uff08Receiver Operating Characteristic Curve\uff09","text":""},{"location":"deeplearning/pytorch/visual/#21","title":"2.1 \u6838\u5fc3\u6982\u5ff5","text":"<ul> <li>\u771f\u6b63\u4f8b\u7387\uff08TPR, True Positive Rate\uff09\uff1a   \u7b49\u540c\u53ec\u56de\u7387\uff08Recall\uff09\u3002   $$   \\text{TPR} = \\frac{\\text{TP}}{\\text{TP} + \\text{FN}}   $$</li> <li>\u5047\u6b63\u4f8b\u7387\uff08FPR, False Positive Rate\uff09\uff1a \u771f\u5b9e\u4e3a\u8d1f\u7c7b\u7684\u6837\u672c\u4e2d\uff0c\u88ab\u9519\u8bef\u9884\u6d4b\u4e3a\u6b63\u7c7b\u7684\u6bd4\u4f8b\u3002   $$   \\text{FPR} = \\frac{\\text{FP}}{\\text{FP} + \\text{TN}}   $$</li> </ul>"},{"location":"deeplearning/pytorch/visual/#22-roc","title":"2.2 ROC \u66f2\u7ebf\u7684\u7ed8\u5236","text":"<ol> <li>\u9608\u503c\u8c03\u6574\uff1a    \u8c03\u6574\u5206\u7c7b\u9608\u503c\uff08\u4ece 1 \u5230 0\uff09\uff0c\u8ba1\u7b97\u4e0d\u540c\u9608\u503c\u4e0b\u7684 TPR \u548c FPR\u3002</li> <li>\u8fde\u63a5\u70b9\uff1a    \u5c06\u6240\u6709\uff08FPR, TPR\uff09\u70b9\u6309\u9608\u503c\u4ece\u9ad8\u5230\u4f4e\u8fde\u63a5\uff0c\u5f62\u6210 ROC \u66f2\u7ebf\u3002</li> </ol>"},{"location":"deeplearning/pytorch/visual/#23","title":"2.3 \u5e94\u7528\u573a\u666f","text":"<ul> <li>\u5e73\u8861\u5206\u7c7b\u4efb\u52a1\uff1a\u5f53\u6b63\u8d1f\u6837\u672c\u6570\u91cf\u63a5\u8fd1\u65f6\uff0cROC \u66f2\u7ebf\u66f4\u76f4\u89c2\u3002</li> <li>\u5173\u6ce8\u6574\u4f53\u6027\u80fd\uff1a\u4f8b\u5982\u5e7f\u544a\u70b9\u51fb\u7387\u9884\u6d4b\u3001\u4fe1\u7528\u8bc4\u5206\u3002</li> </ul>"},{"location":"deeplearning/pytorch/visual/#24","title":"2.4 \u4ee3\u7801\u793a\u4f8b","text":"<pre><code>from sklearn.metrics import roc_curve, roc_auc_score\n\n# \u8ba1\u7b97 ROC \u66f2\u7ebf\nfpr, tpr, thresholds = roc_curve(y_true, y_scores)\n\n# \u8ba1\u7b97 AUC \u503c\uff08\u66f2\u7ebf\u4e0b\u9762\u79ef\uff09\nauc = roc_auc_score(y_true, y_scores)\n\n# \u7ed8\u5236 ROC \u66f2\u7ebf\nplt.figure()\nplt.plot(fpr, tpr, label=f'ROC Curve (AUC = {auc:.2f})')\nplt.plot([0, 1], [0, 1], 'k--')  # \u7ed8\u5236\u5bf9\u89d2\u7ebf\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('ROC Curve')\nplt.legend()\nplt.show()\n</code></pre>"},{"location":"deeplearning/pytorch/visual/#3-pr-vs-roc","title":"3. PR \u66f2\u7ebf vs. ROC \u66f2\u7ebf","text":"\u7279\u6027 PR \u66f2\u7ebf ROC \u66f2\u7ebf \u5173\u6ce8\u70b9 \u6b63\u7c7b\u7684\u7cbe\u5ea6\u548c\u53ec\u56de\u7387 \u6574\u4f53\u5206\u7c7b\u6027\u80fd\uff08TPR \u548c FPR\uff09 \u7c7b\u522b\u4e0d\u5e73\u8861\u654f\u611f\u5ea6 \u9ad8\uff08\u8d1f\u6837\u672c\u591a\u65f6\u66f4\u654f\u611f\uff09 \u4f4e\uff08\u53d7\u8d1f\u6837\u672c\u6570\u91cf\u5f71\u54cd\u8f83\u5c0f\uff09 AUC \u610f\u4e49 \u9ad8 AUC \u8868\u793a\u9ad8 Precision \u548c Recall \u9ad8 AUC \u8868\u793a\u9ad8 TPR \u548c\u4f4e FPR \u9002\u7528\u573a\u666f \u7c7b\u522b\u9ad8\u5ea6\u4e0d\u5e73\u8861\uff08\u5982\u6b3a\u8bc8\u68c0\u6d4b\uff09 \u7c7b\u522b\u5e73\u8861\u6216\u5173\u6ce8\u6574\u4f53\u6027\u80fd\uff08\u5982\u5e7f\u544a\u63a8\u8350\uff09"},{"location":"deeplearning/pytorch/visual/#4-auc","title":"4. \u5173\u952e\u6307\u6807\uff1aAUC","text":"<ul> <li>AUC-PR\uff1aPR \u66f2\u7ebf\u4e0b\u7684\u9762\u79ef\uff0c\u503c\u8d8a\u63a5\u8fd1 1 \u8d8a\u597d\u3002  </li> <li>AUC-ROC\uff1aROC \u66f2\u7ebf\u4e0b\u7684\u9762\u79ef\uff0c\u503c\u8d8a\u63a5\u8fd1 1 \u8d8a\u597d\u3002 AUC-ROC &gt; 0.5 \u8868\u793a\u6a21\u578b\u4f18\u4e8e\u968f\u673a\u731c\u6d4b\u3002</li> </ul>"},{"location":"deeplearning/pytorch/visual/#5_1","title":"5. \u5b9e\u9645\u5e94\u7528\u4e2d\u7684\u9009\u62e9","text":""},{"location":"deeplearning/pytorch/visual/#51-pr-roc","title":"5.1 \u5982\u4f55\u9009\u62e9 PR \u6216 ROC\uff1f","text":"<ul> <li>\u7c7b\u522b\u4e0d\u5e73\u8861\uff1a\u4f18\u5148\u4f7f\u7528 PR \u66f2\u7ebf\uff08\u5982\u6b63\u6837\u672c\u5360\u6bd4 &lt; 20%\uff09\u3002</li> <li>\u7c7b\u522b\u5e73\u8861\uff1a\u4f18\u5148\u4f7f\u7528 ROC \u66f2\u7ebf\u3002</li> </ul>"},{"location":"deeplearning/pytorch/visual/#52","title":"5.2 \u9608\u503c\u9009\u62e9","text":"<ul> <li>PR \u66f2\u7ebf\uff1a\u9009\u62e9 Precision \u548c Recall \u7684\u5e73\u8861\u70b9\uff08\u5982 F1 \u5206\u6570\u6700\u5927\uff09\u3002</li> <li>ROC \u66f2\u7ebf\uff1a\u9009\u62e9 TPR \u9ad8\u4e14 FPR \u4f4e\u7684\u9608\u503c\uff08\u9760\u8fd1\u5de6\u4e0a\u89d2\uff09\u3002</li> </ul>"},{"location":"deeplearning/pytorch/visual/#6-pytorch-prroc-tensorboard","title":"6. \u5728 PyTorch \u4e2d\u8bb0\u5f55 PR/ROC \u5230 TensorBoard","text":"<pre><code>from torch.utils.tensorboard import SummaryWriter\nfrom sklearn.metrics import precision_recall_curve, roc_curve\nimport numpy as np\n\nwriter = SummaryWriter()\n\n# \u6a21\u62df\u6a21\u578b\u8f93\u51fa\u548c\u771f\u5b9e\u6807\u7b7e\ny_true = np.random.randint(0, 2, size=100)       # \u771f\u5b9e\u6807\u7b7e\ny_scores = np.random.rand(100)                   # \u9884\u6d4b\u6982\u7387\n\n# \u8bb0\u5f55 PR \u66f2\u7ebf\nprecision, recall, _ = precision_recall_curve(y_true, y_scores)\nwriter.add_pr_curve('PR Curve', y_true, y_scores, 0)\n\n# \u8bb0\u5f55 ROC \u66f2\u7ebf\nfpr, tpr, _ = roc_curve(y_true, y_scores)\nwriter.add_roc_curve('ROC Curve', y_true, y_scores, 0)\n\nwriter.close()\n</code></pre>"},{"location":"deeplearning/pytorch/visual/#7_1","title":"7. \u603b\u7ed3","text":"<ul> <li>PR \u66f2\u7ebf\uff1a\u805a\u7126\u6b63\u7c7b\u7684\u7cbe\u5ea6\u548c\u53ec\u56de\u7387\uff0c\u9002\u5408\u7c7b\u522b\u4e0d\u5e73\u8861\u4efb\u52a1\u3002  </li> <li>ROC \u66f2\u7ebf\uff1a\u53cd\u6620\u6a21\u578b\u6574\u4f53\u5206\u7c7b\u80fd\u529b\uff0c\u9002\u5408\u5e73\u8861\u4efb\u52a1\u3002  </li> <li>AUC \u503c\uff1a\u91cf\u5316\u66f2\u7ebf\u4e0b\u9762\u79ef\uff0c\u7528\u4e8e\u6a21\u578b\u6027\u80fd\u5bf9\u6bd4\u3002  </li> <li>\u5b9e\u9645\u5e94\u7528\uff1a\u6839\u636e\u6570\u636e\u5206\u5e03\u548c\u4e1a\u52a1\u9700\u6c42\u9009\u62e9\u5408\u9002\u6307\u6807\u3002</li> </ul>"},{"location":"langs/c%2B%2B/basic/","title":"C++ \u57fa\u7840\u6559\u7a0b","text":""},{"location":"langs/python/Pydantic/","title":"Pydantic \u6559\u7a0b","text":""},{"location":"langs/python/basic/","title":"Python \u57fa\u7840\u6559\u7a0b","text":""},{"location":"llm/chapter00/attention/","title":"\u6ce8\u610f\u529b\u673a\u5236","text":""},{"location":"llm/chapter00/attention/#sdpa","title":"\u4e00\u3001\u7f29\u653e\u70b9\u79ef\u6ce8\u610f\u529b\uff08SDPA\uff09","text":"<p>2014 \u5e74\u300aNeural Machine Translation by Jointly Learning to Align and Translate\u300b\u63d0\u51fa\u7684\u5355\u5934\u6ce8\u610f\u529b\uff0c\u8f93\u5165\u7684 Query\u3001Key \u548c Value \u77e9\u9635\u90fd\u662f\u5b8c\u6574\u7684\u5f20\u91cf\u3002</p> <p>\u7f29\u653e\u70b9\u79ef\u6ce8\u610f\u529b\u65e9\u4e8e Transformer \u88ab\u63d0\u51fa\uff0c\u53d7\u5230\u7684\u5173\u6ce8\u5e76\u4e0d\u591a\uff0c\u5176\u5185\u90e8\u53ea\u5b9e\u73b0\u4e86 \\(q,k,v\\) \u7684\u6ce8\u610f\u529b\u8ba1\u7b97\u3002</p> <ul> <li>\u8f93\u5165\u662f query \u548c key-value\uff0c\u6ce8\u610f\u529b\u673a\u5236\u9996\u5148\u8ba1\u7b97 query \u4e0e\u6bcf\u4e2a key \u7684\u5173\u8054\u6027</li> <li>\u6bcf\u4e2a\u5173\u8054\u6027\u4f5c\u4e3a\u6bcf\u4e2a value \u7684\u6743\u91cd (weight)\uff0c\u5404\u4e2a\u6743\u91cd\u4e0e value \u7684\u4e58\u79ef\u76f8\u52a0\u5f97\u5230\u8f93\u51fa\u3002</li> <li>SDPA \u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f MHA \u7684\u4e2d\u95f4\u6b65\u9aa4\uff01</li> </ul>"},{"location":"llm/chapter00/attention/#11","title":"1.1 \u6ce8\u610f\u529b\u673a\u5236\u7684\u57fa\u672c\u6570\u5b66\u5f62\u5f0f","text":"<p>\u6700\u57fa\u7840\u7684\u6ce8\u610f\u529b\u673a\u5236\u662f Scaled Dot-Product Attention\uff08\u7f29\u653e\u70b9\u79ef\u6ce8\u610f\u529b\uff09\uff0c\u516c\u5f0f\u5982\u4e0b\uff1a</p> \\[ \\text{Attention}(Q, K, V) = \\text{softmax} \\left( \\frac{QK^T}{\\sqrt{d_k}} \\right)V \\] <ul> <li>Q\uff1aQuery\uff08\u67e5\u8be2\uff09</li> <li>K\uff1aKey\uff08\u952e\uff09</li> <li>V\uff1aValue\uff08\u503c\uff09</li> <li>d_k\uff1aKey \u7684\u7ef4\u5ea6\uff08\u7528\u4e8e\u7f29\u653e\uff09</li> </ul>"},{"location":"llm/chapter00/attention/#12-attention-mask","title":"1.2 \u6ce8\u610f\u529b\u63a9\u7801\uff08Attention Mask\uff09","text":"<p>\u5728\u6ce8\u610f\u529b\u673a\u5236\u4e2d\uff0c\u63a9\u7801\uff08Mask\uff09\u7528\u4e8e\u63a7\u5236\u6ce8\u610f\u529b\u7684\u8ba1\u7b97\u8303\u56f4\uff0c\u4ee5\u4fbf\u6a21\u578b\u80fd\u591f\u5ffd\u7565\u67d0\u4e9b token\uff0c\u6216\u907f\u514d\u8bbf\u95ee\u672a\u6765\u7684\u4fe1\u606f\u3002</p>"},{"location":"llm/chapter00/attention/#_2","title":"\ud83e\udde9 \u6838\u5fc3\u4f5c\u7528\uff1a","text":"<p>\u5728\u6ce8\u610f\u529b\u516c\u5f0f\u4e2d\u52a0\u5165 mask\uff0c\u4f7f\u5f97\u67d0\u4e9b\u4f4d\u7f6e\u7684\u6ce8\u610f\u529b\u5206\u6570\u53d8\u4e3a\u6781\u5c0f\u503c\uff08\u8d1f\u65e0\u7a77\uff09\uff0c\u4ece\u800c\u5728 softmax \u540e\u53d8\u6210 0\uff0c\u4e0d\u53c2\u4e0e\u52a0\u6743\u6c42\u548c\uff1a</p> \\[ \\text{Attention}(Q, K, V) = \\text{softmax} \\left( \\frac{QK^T}{\\sqrt{d_k}} + \\text{mask} \\right) V \\]"},{"location":"llm/chapter00/attention/#_3","title":"\ud83d\udcda \u5e38\u89c1\u7c7b\u578b","text":"Mask \u540d\u79f0 \u4f5c\u7528 \u5e94\u7528\u573a\u666f\uff08\u6a21\u578b\uff09 <code>padding_mask</code> \u5ffd\u7565\u586b\u5145\u7b26\\(\uff08&lt;PAD&gt;\uff09\\)\u7684\u4f4d\u7f6e \u6240\u6709 Encoder/Decoder \u6a21\u578b <code>causal_mask</code> \u9632\u6b62\u6ce8\u610f\u529b\u201c\u5077\u770b\u201d\u672a\u6765\u7684\u4fe1\u606f GPT / Transformer Decoder <code>combined_mask</code> \u540c\u65f6\u8003\u8651 padding \u548c causal \u89e3\u7801\u5668\u4e2d\u7684\u81ea\u6ce8\u610f\u529b\u5c42 <code>cross_attention_mask</code> \u63a7\u5236 cross-attention \u4e2d key \u7684\u6709\u6548\u6027 Transformer \u89e3\u7801\u5668\u4ea4\u53c9\u6ce8\u610f\u529b"},{"location":"llm/chapter00/attention/#padding-mask","title":"\ud83d\udd0e \u4e00\u3001Padding Mask\uff08\u586b\u5145\u63a9\u7801\uff09","text":"<p>\u5728 NLP \u4e2d\uff0c\u8f93\u5165\u957f\u5ea6\u5e38\u4e0d\u540c\uff0c\u9700\u8981\u7edf\u4e00\u6210\u5b9a\u957f\uff0c\u7528  \u8fdb\u884c\u586b\u5145\u3002\u4e3a\u4e86\u4e0d\u8ba9\u6a21\u578b\u5173\u6ce8\u8fd9\u4e9b\u586b\u5145\u503c\uff0c\u9700\u8981\u5c4f\u853d\u6389\u5b83\u4eec\u3002 <p>\u539f\u59cb\u8f93\u5165\uff1a</p> <pre><code>input_1 = [\u6211, \u7231, \u4f60]\ninput_2 = [\u4f60, \u597d]\n</code></pre> <p>\u586b\u5145\u540e\uff08\u957f\u5ea6\u7edf\u4e00\u4e3a 4\uff09\uff1a</p> <pre><code>input_1 = [\u6211, \u7231, \u4f60, &lt; PAD &gt;]\ninput_2 = [\u4f60, \u597d, &lt; PAD &gt;, &lt; PAD &gt;]\n</code></pre> <p>\u5bf9\u5e94\u7684 padding_mask\uff1a</p> <pre><code>mask_1 = [1, 1, 1, 0]\nmask_2 = [1, 1, 0, 0]\n</code></pre>"},{"location":"llm/chapter00/attention/#causal-mask","title":"\u23f3 \u4e8c\u3001Causal Mask\uff08\u56e0\u679c\u63a9\u7801\uff09","text":"<p>\u5728\u81ea\u56de\u5f52\u751f\u6210\u4efb\u52a1\u4e2d\uff08\u5982 GPT\uff09\uff0c\u5f53\u524d\u5355\u8bcd\u4e0d\u80fd\u770b\u5230\u672a\u6765\u5355\u8bcd\u3002Causal Mask \u4fdd\u8bc1\u4e86\u4fe1\u606f\u53ea\u4ece\u8fc7\u53bb\u6d41\u5411\u73b0\u5728\uff0c\u907f\u514d\u201c\u672a\u6765\u6cc4\u6f0f\u201d\u3002</p> <p>\u751f\u6210\u4e00\u4e2a \u4e0b\u4e09\u89d2\u77e9\u9635\uff08Lower Triangular Mask\uff09\uff1a</p> <pre><code>[[1, 0, 0, 0],\n [1, 1, 0, 0],\n [1, 1, 1, 0],\n [1, 1, 1, 1]]\n</code></pre> <p>\u6ce8\u610f\u529b\u8ba1\u7b97\u4e2d\uff0c\u4f1a\u5c06\u4e0a\u4e09\u89d2\u533a\u57df\u7684 attention scores \u8bbe\u7f6e\u4e3a -\u221e\u3002</p> <pre><code>seq_len = 4\ncausal_mask = torch.tril(torch.ones(seq_len, seq_len)).bool()\n</code></pre>"},{"location":"llm/chapter00/attention/#combined-mask","title":"\ud83d\udd00 \u4e09\u3001Combined Mask\uff08\u8054\u5408\u63a9\u7801\uff09","text":"<p>\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u5e38\u5e38\u9700\u8981\u540c\u65f6\u4f7f\u7528 padding mask \u548c causal mask\uff0c\u5c24\u5176\u662f\u5728 Transformer \u7684\u89e3\u7801\u5668\u4e2d\u3002</p> <p>\u5047\u8bbe\u6709\u4e00\u4e2a\u53e5\u5b50\uff1a</p> <pre><code>input = [\u6211, \u7231, &lt; PAD &gt;]\npadding_mask = [1, 1, 0]\n\ncausal_mask =\n[[1, 0, 0],\n [1, 1, 0],\n [1, 1, 1]]\n</code></pre> <p>\u5408\u5e76\u540e\uff1a</p> <pre><code>combined_mask = causal_mask &amp; padding_mask_broadcast\n</code></pre> <p>\u5b9e\u73b0\u65b9\u5f0f\u5982\u4e0b\uff1a</p> <pre><code>combined_mask = causal_mask &amp; padding_mask.unsqueeze(1).expand(-1, seq_len, -1)\n</code></pre>"},{"location":"llm/chapter00/attention/#13","title":"1.3 \u5b9e\u73b0\u4ee3\u7801","text":"<pre><code>import torch\nimport torch.nn as nn\n\n\nclass ScaledDotProductAttention(nn.Module):\n    def __init__(self):\n        super(ScaledDotProductAttention, self).__init__()\n\n    def forward(self, query, key, value, casual_mask=None, padding_mask=None):\n        '''\n        query, key, value \u5f62\u72b6: (batch_size, seq_len, hidden_size)\n        :param query:\n        :param key:\n        :param value:\n        :param casual_mask: \u56e0\u679c\u63a9\u7801\n        :param padding_mask: \u586b\u5145\u63a9\u7801\n        :return:\n        '''\n\n        d_k = query.size(-1)  # \u83b7\u53d6 hidden_size\n\n        # \u8ba1\u7b97\u6ce8\u610f\u529b\u5206\u6570\n        # key.transpose(-1, -2) \u5c06\u6700\u540e\u4e24\u4e2a\u7ef4\u5ea6\u8fdb\u884c\u8f6c\u7f6e\uff0c\u4ee5\u8fdb\u884c\u70b9\u79ef\n        # attention_scores \u5f62\u72b6: (batch_size, seq_len, seq_len)\n        attention_scores = torch.matmul(query, key.transpose(-1, -2)) / torch.sqrt(\n            torch.tensor(d_k, dtype=torch.float32))\n\n        # \u6dfb\u52a0\u6ce8\u610f\u529b\u63a9\u7801\uff08seq_len, seq_len\uff09\uff0c\u63a9\u7801\u4f4d\u7f6e\uff081\uff09\u7684\u503c\u4e3a\u8d1f\u65e0\u7a77\n        if casual_mask is not None:\n            attention_scores += casual_mask * -1e9  # -1e9 \u4ee3\u8868\u8d1f\u65e0\u7a77\n\n        # \u6dfb\u52a0\u586b\u5145\u4f4d\u7f6e\u7684\u63a9\u7801\uff0c\u6bcf\u4e2a\u53e5\u5b50\u4e0d\u4e00\u6837\uff08batch_size, seq_len)\n        if padding_mask is not None:\n            padding_mask = padding_mask.unsqueeze(1).unsqueeze(1)  # \u6269\u5c55\u6210\u4e0e\u6ce8\u610f\u529b\u6743\u91cd\u77e9\u9635\u53ef\u5e7f\u64ad\u7684\u5f62\u72b6\n            attention_scores += padding_mask * -1e9\n\n        # \u5bf9\u6ce8\u610f\u529b\u5206\u6570\u8fdb\u884c\u5f52\u4e00\u5316\uff0c\u5f97\u5230\u6ce8\u610f\u529b\u6982\u7387\n        attention_probs = torch.softmax(attention_scores, dim=-1)  # (batch_size, num_heads, seq_len, seq_len)\n        # \u8ba1\u7b97\u6ce8\u610f\u529b\u8f93\u51fa\uff0c\u901a\u8fc7\u6ce8\u610f\u529b\u6982\u7387\u52a0\u6743\u503c\n\n        attention_output = torch.matmul(attention_probs, value)  # (batch_size, num_heads, seq_len, hidden_size)\n\n        return attention_output\n</code></pre> <p>\u9a8c\u8bc1attention</p> <pre><code>def test_attention():\n    batch_size = 16\n    seq_length = 32\n    hidden_size = 512\n\n    query = torch.randn(batch_size, seq_length, hidden_size)\n    key = torch.randn(batch_size, seq_length, hidden_size)\n    value = torch.randn(batch_size, seq_length, hidden_size)\n\n    attention = ScaledDotProductAttention()\n    output = attention(query, key, value, casual_mask=None, padding_mask=None)\n\n    print(\"Query shape:\", query.shape)\n    print(\"Key shape:\", key.shape)\n    print(\"Value shape:\", value.shape)\n    print(\"Output shape:\", output.shape)\n\n\ntest_attention()\n</code></pre> <p>\u8f93\u51fa</p> <pre><code>Query shape: torch.Size([16, 32, 512])\nKey shape: torch.Size([16, 32, 512])\nValue shape: torch.Size([16, 32, 512])\nOutput shape: torch.Size([16, 32, 512])\n</code></pre>"},{"location":"llm/chapter00/attention/#mha","title":"\u4e8c\u3001\u591a\u5934\u6ce8\u610f\u529b\uff08MHA\uff09","text":"<p>\u591a\u5934\u6ce8\u610f\u529b\u673a\u5236\u662f Transformer \u6a21\u578b\u4e2d\u7684\u6838\u5fc3\u7ec4\u4ef6\u3002\u5728\u5176\u8bbe\u8ba1\u4e2d\uff0c\u300c\u591a\u5934\u300d\u610f\u5473\u7740\u8be5\u673a\u5236\u5e76\u4e0d\u53ea\u8ba1\u7b97\u4e00\u79cd\u6ce8\u610f\u529b\u6743\u91cd\uff0c\u800c\u662f\u5e76\u884c\u8ba1\u7b97\u591a\u79cd\u6743\u91cd\uff0c\u6bcf\u79cd\u6743\u91cd\u90fd\u4ece\u4e0d\u540c\u7684\u300c\u89c6\u89d2\u300d\u6355\u83b7\u8f93\u5165\u7684\u4e0d\u540c\u4fe1\u606f\u3002\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <p>1\u3001\u4e3a\u8f93\u5165\u5e8f\u5217\u4e2d\u8ba1\u7b97 Q, K, V \uff0c\u8fd9\u662f\u901a\u8fc7\u5c06\u8f93\u5165\u8bcd\u5411\u91cf\u4e0e\u4e09\u4e2a\u6743\u91cd\u77e9\u9635\u76f8\u4e58\u5b9e\u73b0\u7684:</p> \\[ \\begin{aligned} &amp; Q = X W_q \\\\ &amp; K = X W_k \\\\ &amp; V = X W_v \\end{aligned} \\] <p>2\u3001\u8ba1\u7b97 Q, K \u6ce8\u610f\u529b\u5f97\u5206\uff0c\u5176\u4e2d\uff0c \\(d_k\\) \u662f\\(k\\)\u7684\u7ef4\u5ea6\uff1a</p> \\[ \\operatorname{score}(Q, K) = \\frac{Q \\cdot K^T}{\\sqrt{d_k}} \\] <p>3\u3001\u4f7f\u7528 Softmax \u5f97\u5230\u6ce8\u610f\u529b\u6743\u91cd\uff1a</p> \\[ \\operatorname{Attention}(Q, K) = \\operatorname{softmax}(\\operatorname{score}(Q, K))=\\operatorname{softmax}\\left(\\frac{Q \\cdot K^T}{\\sqrt{d_k}}\\right) \\] <p>4\u3001\u4f7f\u7528\u6ce8\u610f\u529b\u6743\u91cd\u548cV \uff0c\u8ba1\u7b97\u8f93\u51fa\uff1a</p> \\[ \\text{Output} = \\operatorname{Attention}(Q, K) \\cdot V = \\operatorname{softmax}\\left(\\frac{Q \\cdot K^T}{\\sqrt{d_k}}\\right) \\cdot V \\] <p>5\u3001 \u62fc\u63a5\u591a\u5934\u8f93\u51fa\uff0c\u4e58\u4ee5 \\(W_O\\)\uff0c\u5f97\u5230\u6700\u7ec8\u8f93\u51fa\uff1a</p> \\[ \\text{MultiHeadOutput} = \\text{Concat} (\\text{Output}^1, \\text{Output}^2, \\ldots, \\text{Output}^H) W_O \\] <pre><code>import torch\nfrom torch import nn\n\nclass MultiHeadAttention(torch.nn.Module):\n    def __init__(self, hidden_size, num_heads):\n        super().__init__()\n        self.num_heads = num_heads\n        self.head_dim = hidden_size // num_heads  # \u6bcf\u4e2a\u5934\u7684\u7ef4\u5ea6\uff0c\u4e8c\u8005\u5fc5\u987b\u6574\u9664\n\n        # \u521d\u59cb\u5316 Q\u3001K\u3001V \u7684\u6295\u5f71\u77e9\u9635\uff0c\u5c06\u8f93\u5165\u8bcd\u5411\u91cf\u7ebf\u6027\u53d8\u6362\u4e3a Q\u3001K\u3001V\uff0c\u7ef4\u5ea6\u4fdd\u6301\u4e00\u81f4\n        self.q_linear = nn.Linear(hidden_size, hidden_size) \n        self.k_linear = nn.Linear(hidden_size, hidden_size)\n        self.v_linear = nn.Linear(hidden_size, hidden_size)\n\n        # \u8f93\u51fa\u7ebf\u6027\u5c42\uff0c\u5c06\u62fc\u63a5\u540e\u7684\u591a\u5934\u6ce8\u610f\u529b\u8f93\u51fa\u53d8\u6362\u4e3a\u6240\u9700\u7684\u8f93\u51fa\u7ef4\u5ea6\uff0c\u8fd9\u91cc\u7ef4\u5ea6\u4fdd\u6301\u4e00\u81f4\n        self.o_linear = nn.Linear(hidden_size, hidden_size)\n\n    def forward(self, hidden_state, causal_mask=None, padding_mask=None):\n        # hidden_state \u5f62\u72b6: (batch_size, seq_len, hidden_size)\n        batch_size = hidden_state.size(0)  # \u83b7\u53d6\u6279\u91cf\u5927\u5c0f\n\n        # \u8ba1\u7b97 Q\u3001K\u3001V\uff0c\u7ebf\u6027\u53d8\u6362\uff0c\u5f97\u5230\u5f62\u72b6\uff1a(batch_size, seq_len, hidden_size)\n        query = self.q_linear(hidden_state)\n        key = self.k_linear(hidden_state)\n        value = self.v_linear(hidden_state)\n\n        # \u5c06\u6bcf\u4e2a\u5934\u7684\u7ef4\u5ea6\u62c6\u5206\u51fa\u6765\uff0c\u5f97\u5230\u5f62\u72b6\uff1a(batch_size, num_heads, seq_len, head_dim)\n        query = query.view(batch_size, -1, self.num_heads, self.head_dim).transpose(1, 2)\n        key = key.view(batch_size, -1, self.num_heads, self.head_dim).transpose(1, 2)\n        value = value.view(batch_size, -1, self.num_heads, self.head_dim).transpose(1, 2)\n\n        # \u8ba1\u7b97\u6ce8\u610f\u529b\u5206\u6570\uff0cattention_scores \u5f62\u72b6: (batch_size, num_heads, seq_len, seq_len)\n        attention_scores = torch.matmul(query, key.transpose(-1, -2)) \\\n        / torch.sqrt(torch.tensor(self.head_dim, dtype=torch.float32))\n\n        # \u6dfb\u52a0\u56e0\u679c\u6ce8\u610f\u529b\u63a9\u7801\uff08seq_len, seq_len\uff09\uff0c\u63a9\u7801\u4f4d\u7f6e\uff081\uff09\u7684\u503c\u4e3a\u8d1f\u65e0\u7a77\uff0c\u81ea\u52a8\u5e7f\u64ad\n        if causal_mask is not None:\n            attention_scores += causal_mask * -1e9\n\n        # \u6dfb\u52a0\u586b\u5145\u4f4d\u7f6e\u7684\u63a9\u7801\uff0c\u6bcf\u4e2a\u53e5\u5b50\u4e0d\u4e00\u6837\uff08batch_size, seq_len)\n        if padding_mask is not None:\n            padding_mask = padding_mask.unsqueeze(1).unsqueeze(1)  # (batch_size, 1, 1, seq_len)\n            attention_scores += padding_mask * -1e9\n\n        # \u5bf9\u6ce8\u610f\u529b\u5206\u6570\u8fdb\u884c\u5f52\u4e00\u5316\uff0c\u5f97\u5230\u6ce8\u610f\u529b\u6982\u7387\n        attention_probs = torch.softmax(attention_scores, dim=-1)  # (batch_size, num_heads, seq_len, seq_len)\n        # \u5982\u679c\u6709 dropout \u64cd\u4f5c\u5c31\u52a0\u5728\u8fd9\uff0cself.dropout(attention_probs)\uff0c\u4e5f\u53ef\u4ee5\u5728\u51fd\u6570\u5916\u9762\u52a0\n\n        # \u8ba1\u7b97\u6ce8\u610f\u529b\u8f93\u51fa\uff0c\u901a\u8fc7\u6ce8\u610f\u529b\u6982\u7387\u52a0\u6743\u503c\n        output = torch.matmul(attention_probs, value)  # (batch_size, num_heads, seq_len, head_dim)\n\n        # \u5bf9\u591a\u5934\u6ce8\u610f\u529b\u8f93\u51fa\u8fdb\u884c\u62fc\u63a5\uff0c\u5c06\u5f62\u72b6\u8c03\u6574\u4e3a (batch_size, seq_len, hidden_size)\n        # \u5148 output.transpose(1, 2) \u5c06 num_heads \u548c seq_len \u7ef4\u5ea6\u8f6c\u7f6e\n        output = output.transpose(1, 2).view(batch_size, -1, self.head_dim * self.num_heads)\n\n        # \u901a\u8fc7\u7ebf\u6027\u5c42\u5c06\u62fc\u63a5\u540e\u7684\u8f93\u51fa\u53d8\u6362\u4e3a\u6240\u9700\u7684\u8f93\u51fa\u7ef4\u5ea6\n        output = self.o_linear(output)  # (batch_size, seq_len, hidden_size)\n        return output\n\ndef test_MHA():\n    batch_size = 128\n    seq_len = 512\n    hidden_size = 1024\n    num_heads = 8\n\n    # \u968f\u673a\u751f\u6210\u8f93\u5165\u6570\u636e\n    hidden_state = torch.randn(batch_size, seq_len, hidden_size)  # (batch_size, seq_len, hidden_size)\n\n    # \u751f\u6210\u56e0\u679c\u63a9\u7801\uff08\u4e0b\u4e09\u89d2\u77e9\u9635\uff09\uff0c\u8fd9\u91cc\u5c31\u4e0d\u523b\u610f\u751f\u6210 padding_mask\n    causal_mask = torch.triu(torch.ones(seq_len, seq_len), diagonal=1).bool()\n\n    # \u521b\u5efa\u591a\u5934\u6ce8\u610f\u529b\u6a21\u5757\n    mha = MultiHeadAttention(hidden_size, num_heads)\n\n    # \u8ba1\u7b97\u591a\u5934\u6ce8\u610f\u529b\u8f93\u51fa\n    output = mha(hidden_state, causal_mask=causal_mask)\n\n    print(\"Input shape:\", hidden_state.shape)\n    print(\"Output shape:\", output.shape)\n\nif __name__ == \"__main__\":\n    test_MHA()\n</code></pre>"},{"location":"llm/chapter00/attention/#mha-with-kv-cache","title":"\u4e09\u3001MHA with KV Cache","text":"<p>\u952e\u503c\u7f13\u5b58\uff08KV Cache\uff09\u4e3b\u8981\u7528\u4e8e Decoder \u7684 Next Token Prediction \u65f6\u51cf\u5c11\u91cd\u590d\u8ba1\u7b97\uff0c\u901a\u8fc7\u7f13\u5b58\u5e76\u9010\u6b65\u66f4\u65b0\u952e\uff08Key\uff09\u548c\u503c\uff08Value\uff09\uff0c\u6765\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\u3002</p> <p>\u4f46\u8981\u6ce8\u610f\u5373\u4f7f\u662f Decoder-only \u7684\u6a21\u578b\uff0c\u5728\u9884\u5904\u7406\u8f93\u5165\uff08Prefill\uff09\u7684\u65f6\u5019\u4e5f\u4e0d\u9700\u8981\u5229\u7528 KV Cache\uff08P/D \u5206\u79bb\uff09\uff0c\u672c\u4ee3\u7801\u53ea\u4f5c\u4e3a\u793a\u4f8b\uff1a</p> <pre><code>import torch\nfrom torch import nn\n\nclass MultiHeadAttention(torch.nn.Module):\n    def __init__(self, hidden_size, num_heads):\n        super().__init__()\n        self.num_heads = num_heads\n        self.head_dim = hidden_size // num_heads\n\n        self.q_linear = nn.Linear(hidden_size, hidden_size) \n        self.k_linear = nn.Linear(hidden_size, hidden_size)\n        self.v_linear = nn.Linear(hidden_size, hidden_size)\n        self.o_linear = nn.Linear(hidden_size, hidden_size)\n\n    def forward(self, hidden_state, causal_mask=None, past_key_value=None, use_cache=False):\n        batch_size = hidden_state.size(0)\n\n        # \u8ba1\u7b97 Q\u3001K\u3001V\uff0c\u6ce8\u610f\u6b64\u65f6\u53ea\u6709\u4e00\u4e2a Token\n        query = self.q_linear(hidden_state)  # (batch_size, 1, hidden_size)\n        key = self.k_linear(hidden_state)\n        value = self.v_linear(hidden_state)\n\n        # \u5206\u5272\u591a\u5934\uff0c\u5f97\u5230\u5f62\u72b6\uff1a(batch_size, num_heads, 1, head_dim)\n        query = query.view(batch_size, -1, self.num_heads, self.head_dim).transpose(1, 2)\n        key = key.view(batch_size, -1, self.num_heads, self.head_dim).transpose(1, 2)\n        value = value.view(batch_size, -1, self.num_heads, self.head_dim).transpose(1, 2)\n\n        # \u82e5\u5b58\u5728\u7f13\u5b58\uff0c\u62fc\u63a5\u5f53\u524d K\u3001V\n        if past_key_value is not None:\n            past_key, past_value = past_key_value\n            key = torch.cat([past_key, key], dim=2)   # (batch_size, num_heads, seq_len, head_dim)\n            value = torch.cat([past_value, value], dim=2)\n\n        # \u4fdd\u5b58\u65b0\u7684\u7f13\u5b58\n        new_past_key_value = (key, value) if use_cache else None\n\n        # \u8ba1\u7b97\u6ce8\u610f\u529b\u5206\u6570\uff0cattention_scores \u5f62\u72b6: (batch_size, num_heads, 1, seq_len)\n        attention_scores = torch.matmul(query, key.transpose(-1, -2)) \\\n        / torch.sqrt(torch.tensor(self.head_dim, dtype=torch.float32))\n\n        # \u5e94\u7528\u56e0\u679c\u63a9\u7801\uff08\u82e5\u9700\u8981\uff09\n        if causal_mask is not None:\n            attention_scores += causal_mask * -1e9\n\n        # \u8ba1\u7b97\u6ce8\u610f\u529b\u8f93\u51fa\n        attention_probs = torch.softmax(attention_scores, dim=-1)\n        output = torch.matmul(attention_probs, value)\n\n        # \u5408\u5e76\u591a\u5934\u5e76\u7ebf\u6027\u53d8\u6362\n        output = output.transpose(1, 2).view(batch_size, -1, self.num_heads * self.head_dim)\n        output = self.o_linear(output)\n\n        return (output, new_past_key_value) if use_cache else output\n\ndef test_MHA_with_cache():\n    batch_size = 2\n    seq_len = 5\n    hidden_size = 64\n    num_heads = 4\n\n    # \u6784\u9020\u8f93\u5165\uff0c\u6a21\u62df\u6574\u4e2a\u5e8f\u5217\n    hidden_state = torch.randn(batch_size, seq_len, hidden_size)\n    causal_mask = torch.triu(torch.ones(seq_len, seq_len), diagonal=1).bool()\n\n    # \u523b\u610f\u5206\u6b65\u5904\u7406\uff0c\u4f7f\u7528 KV \u7f13\u5b58\n    past_key_value = None\n    outputs = []\n    for i in range(seq_len):\n        # \u5f53\u524d\u6b65\u9aa4\u7684\u8f93\u5165\uff08\u5355\u4e2a token\uff09\n        current_input = hidden_state[:, i:i+1, :]\n        # \u751f\u6210\u5f53\u524d\u6b65\u9aa4\u7684\u56e0\u679c\u63a9\u7801\uff08\u4ec5\u5141\u8bb8\u5173\u6ce8\u5230\u5f53\u524d\u4f4d\u7f6e\u53ca\u4e4b\u524d\u7684\uff09\n        current_causal_mask = causal_mask[i:i+1, :i+1]  # (1, i+1)\n        # \u524d\u5411\u4f20\u64ad\n        output_step, past_key_value = mha(\n            current_input,\n            causal_mask=current_causal_mask,\n            past_key_value=past_key_value,\n            use_cache=True\n        )\n        outputs.append(output_step)\n\n    # \u5408\u5e76\u5206\u5e03\u8f93\u51fa\n    output = torch.cat(outputs, dim=1)\n\n    print(\"Input shape:\", hidden_state.shape)\n    print(\"Output shape:\", output.shape)\n\nif __name__ == \"__main__\":\n    test_MHA_with_cache()\n</code></pre>"},{"location":"llm/chapter00/attention/#mqa","title":"\u56db\u3001\u591a\u67e5\u8be2\u6ce8\u610f\u529b\uff08MQA)","text":"<p>\u56f4\u7ed5\u300c\u5982\u4f55\u51cf\u5c11 KV Cache \u540c\u65f6\u5c3d\u53ef\u80fd\u5730\u4fdd\u8bc1\u6548\u679c\u300d\u8fd9\u4e2a\u4e3b\u9898\u53d1\u5c55\u800c\u6765\u7684\u4ea7\u7269\u3002\u53ea\u6709\u4e00\u7ec4 key-value \u5bf9\uff0c\u7531\u300aFast Transformer Decoding: One Write-Head is All You Need\u300b\u5728 2019 \u5e74\u63d0\u51fa\u3002</p> <p>\u4e0e MHA \u4e0d\u540c\u7684\u662f\uff0cMQA \u8ba9\u6240\u6709\u7684\u5934\u4e4b\u95f4\u5171\u4eab\u540c\u4e00\u4efd Key \u548c Value \u77e9\u9635\uff0c\u6bcf\u4e2a\u5934\u53ea\u5355\u72ec\u4fdd\u7559\u4e86\u4e00\u4efd Query \u53c2\u6570\uff0c\u4ece\u800c\u5927\u5927\u51cf\u5c11 Key \u548c Value \u77e9\u9635\u7684\u53c2\u6570\u91cf\u3002\u4f7f\u7528 MQA \u7684\u6a21\u578b\u5305\u62ec PaLM\u3001StarCoder\u3001Gemini \u7b49\u3002</p> <pre><code>import torch\nfrom torch import nn\n\nclass MultiQueryAttention(torch.nn.Module):\n    def __init__(self, hidden_size, num_heads):\n        super().__init__()\n        self.num_heads = num_heads\n        self.head_dim = hidden_size // num_heads\n\n        # \u521d\u59cb\u5316 Q\u3001K\u3001V \u6295\u5f71\u77e9\u9635\uff0c\u6ce8\u610f\u8fd9\u91cc\u7684 K V \u6bd4\u539f\u6765\u66f4\u5c0f\n        self.q_linear = nn.Linear(hidden_size, hidden_size)\n        self.k_linear = nn.Linear(hidden_size, self.head_dim)\n        self.v_linear = nn.Linear(hidden_size, self.head_dim)\n\n        self.o_linear = nn.Linear(hidden_size, hidden_size)\n\n    def forward(self, hidden_state, causal_mask=None, padding_mask=None):\n        batch_size = hidden_state.size(0)\n\n        query = self.q_linear(hidden_state)  # (batch_size, seq_len, hidden_size)\n        key = self.k_linear(hidden_state)    # (batch_size, seq_len, head_dim)\n        value = self.v_linear(hidden_state)  # (batch_size, seq_len, head_dim)\n\n        # \u5206\u5272\u5934\u90e8\uff0cK V \u77e9\u9635\u4e5f\u8981\u52a0\u4e0a\u4e00\u4e2a\u7ef4\u5ea6\n        query = self.split_head(query)  # (batch_size, num_heads, seq_len, head_dim)\n        key = self.split_head(key, 1)   # (batch_size, 1, seq_len, head_dim)\n        value = self.split_head(value, 1) # (batch_size, 1, seq_len, head_dim)\n\n        # \u8ba1\u7b97\u6ce8\u610f\u529b\u5206\u6570\uff0c\u81ea\u52a8\u5e7f\u64ad\uff0c(batch_size, num_heads, seq_len, seq_len)\n        attention_scores = torch.matmul(query, key.transpose(-1, -2)) / torch.sqrt(torch.tensor(self.head_dim, dtype=torch.float32))\n\n        if causal_mask is not None:\n            attention_scores += causal_mask * -1e9  \n\n        if padding_mask is not None:\n            padding_mask = padding_mask.unsqueeze(1).unsqueeze(1)\n            attention_scores += padding_mask * -1e9\n\n        attention_probs = torch.softmax(attention_scores, dim=-1)  # (batch_size, num_heads, seq_len, seq_len)\n\n        output = torch.matmul(attention_probs, value)  # (batch_size, num_heads, seq_len, head_dim)\n\n        # \u5bf9\u6ce8\u610f\u529b\u8f93\u51fa\u8fdb\u884c\u62fc\u63a5\uff0c(batch_size, seq_len, hidden_size)\n        output = output.transpose(1, 2).view(batch_size, -1, self.head_dim * self.num_heads)\n\n        output = self.o_linear(output)  # (batch_size, seq_len, hidden_size)\n\n        return output\n\n    def split_head(self, x, head_num=None):\n        batch_size = x.size(0)  # \u83b7\u53d6\u6279\u91cf\u5927\u5c0f\n        if head_num is None:\n            head_num = self.num_heads  # \u9ed8\u8ba4\u4f7f\u7528\u7c7b\u4e2d\u7684 num_heads\n\n        # \u8fd4\u56de\u5f62\u72b6: (batch_size, head_num, seq_len, head_dim)\n        return x.reshape(batch_size, -1, head_num, self.head_dim).transpose(1, 2)\n</code></pre>"},{"location":"llm/chapter00/attention/#gqa","title":"\u4e94\u3001\u5206\u7ec4\u67e5\u8be2\u6ce8\u610f\u529b\uff08GQA\uff09","text":"<p>\u6709\u4eba\u62c5\u5fc3 MQA \u5bf9 KV Cache \u7684\u538b\u7f29\u592a\u4e25\u91cd\uff0c\u4e8e\u662f\u63d0\u51fa\u4e86\u4e00\u4e2a\u6298\u4e2d\u7248\u672c\uff0c\u51fa\u81ea 2023 \u5e74\u8bba\u6587\u300aGQA: Training Generalized Multi-Query Transformer Models from Multi-Head Checkpoints\u300b\u3002</p> <pre><code>import torch\nfrom torch import nn\n\nclass GroupQueryAttention(torch.nn.Module):\n    def __init__(self, hidden_size, num_heads, group_num):\n        super().__init__()\n        self.num_heads = num_heads\n        self.head_dim = hidden_size // num_heads\n        self.group_num = group_num  # \u7ec4\u7684\u6570\u91cf\n\n        # \u521d\u59cb\u5316 Q\u3001K\u3001V \u6295\u5f71\u77e9\u9635\uff0c\u6ce8\u610f\u8fd9\u91cc\u7684 K V \u505a\u4e86\u6298\u8877\n        self.q_linear = nn.Linear(hidden_size, hidden_size)  # (hidden_size, hidden_size)\n        self.k_linear = nn.Linear(hidden_size, self.group_num * self.head_dim)  # (hidden_size, group_num * head_dim)\n        self.v_linear = nn.Linear(hidden_size, self.group_num * self.head_dim)  # (hidden_size, group_num * head_dim)\n\n        self.o_linear = nn.Linear(hidden_size, hidden_size)  # (hidden_size, hidden_size)\n\n    def forward(self, hidden_state, causal_mask=None, padding_mask=None):\n        batch_size = hidden_state.size(0)\n\n        query = self.q_linear(hidden_state)  # (batch_size, seq_len, hidden_size)\n        key = self.k_linear(hidden_state)    # (batch_size, seq_len, group_num * head_dim)\n        value = self.v_linear(hidden_state)  # (batch_size, seq_len, group_num * head_dim)\n\n        # \u5206\u5272\u5934\u90e8\uff0c\u5c06\u6bcf\u4e2a\u5934\u7684\u7ef4\u5ea6\u62c6\u5206\u51fa\u6765\n        query = self.split_head(query)  # (batch_size, num_heads, seq_len, head_dim)\n        key = self.split_head(key, self.group_num)  # (batch_size, num_heads, seq_len, head_dim)\n        value = self.split_head(value, self.group_num)  # (batch_size, num_heads, seq_len, head_dim)\n\n        # \u8ba1\u7b97\u6ce8\u610f\u529b\u5206\u6570\uff0c\u81ea\u52a8\u5e7f\u64ad\uff0c(batch_size, num_heads, seq_len, seq_len)\n        attention_scores = torch.matmul(query, key.transpose(-1, -2)) / torch.sqrt(torch.tensor(self.head_dim, dtype=torch.float32))\n\n        if causal_mask is not None:\n            attention_scores += causal_mask * -1e9  \n\n        if padding_mask is not None:\n            padding_mask = padding_mask.unsqueeze(1).unsqueeze(1)\n            attention_scores += padding_mask * -1e9\n\n        attention_probs = torch.softmax(attention_scores, dim=-1)  # (batch_size, num_heads, seq_len, seq_len)\n\n        output = torch.matmul(attention_probs, value)  # (batch_size, num_heads, seq_len, head_dim)\n\n        # \u5bf9\u6ce8\u610f\u529b\u8f93\u51fa\u8fdb\u884c\u62fc\u63a5\uff0c\u5f62\u72b6: (batch_size, seq_len, hidden_size)\n        output = output.transpose(1, 2).view(batch_size, -1, self.head_dim * self.num_heads)\n\n        # \u901a\u8fc7\u7ebf\u6027\u5c42\u5c06\u62fc\u63a5\u540e\u7684\u8f93\u51fa\u53d8\u6362\u4e3a\u6240\u9700\u7684\u8f93\u51fa\u7ef4\u5ea6\n        output = self.o_linear(output)  # (batch_size, seq_len, hidden_size)\n\n        return output\n\n    def split_head(self, x, group_num=None):\n        batch_size, seq_len = x.size()[:2]  # \u83b7\u53d6\u6279\u91cf\u5927\u5c0f\u548c\u5e8f\u5217\u957f\u5ea6\n\n        if group_num is None:\n            return x.view(batch_size, -1, self.num_heads, self.head_dim).transpose(1, 2)\n        else:\n            # \u5c06 hidden_size \u5206\u5272\u4e3a group_num \u548c head_dim\n            x = x.view(batch_size, -1, group_num, self.head_dim).transpose(1, 2)\n            # \u518d\u5c06\u5176\u624b\u52a8 expand \u5230\u76f8\u540c\u5927\u5c0f\n            x = x[:, :, None, :, :].expand(batch_size, group_num, self.num_heads // group_num, seq_len, self.head_dim).view(batch_size, self.num_heads, seq_len, self.head_dim)\n            return x    # \u5f62\u72b6: (batch_size, num_heads, seq_len, head_dim)\n</code></pre>"},{"location":"llm/chapter00/bert/","title":"BERT","text":""},{"location":"llm/chapter00/bert/#_1","title":"\u53c2\u8003\u6587\u7ae0","text":"<p>Bert\u6a21\u578b\u67b6\u6784\u8be6\u89e3</p>"},{"location":"llm/chapter00/transformer/","title":"Transformer\u6a21\u578b\u67b6\u6784","text":""},{"location":"llm/chapter00/transformer/#_1","title":"\u53c2\u8003\u6587\u7ae0","text":"<p>Transformer\u67b6\u6784\u57fa\u7840\u6982\u5ff5</p>"},{"location":"llm/chapter00/transformer/#transformer_1","title":"Transformer \u5b9e\u73b0\u4ee3\u7801","text":""},{"location":"llm/chapter00/transformer/#_2","title":"\u4e00\u3001\u6a21\u578b\u8f93\u5165","text":""},{"location":"llm/chapter00/transformer/#11-embedding","title":"1.1  Embedding\uff08\u8bcd\u5d4c\u5165\uff09","text":"<p>Embedding\u5c42\u7684\u4f5c\u7528\u662f\u5c06\u67d0\u79cd\u683c\u5f0f\u7684\u8f93\u5165\u6570\u636e\uff0c\u4f8b\u5982\u6587\u672c\uff0c\u8f6c\u53d8\u4e3a\u6a21\u578b\u53ef\u4ee5\u5904\u7406\u7684\u5411\u91cf\u8868\u793a\uff0c\u6765\u63cf\u8ff0\u539f\u59cb\u6570\u636e\u6240\u5305\u542b\u7684\u4fe1\u606f\u3002</p> <p>Embedding\u5c42\u8f93\u51fa\u7684\u53ef\u4ee5\u7406\u89e3\u4e3a\u5f53\u524d\u65f6\u95f4\u6b65\u7684\u7279\u5f81\uff0c\u5982\u679c\u662f\u6587\u672c\u4efb\u52a1\uff0c\u8fd9\u91cc\u5c31\u53ef\u4ee5\u662fWord Embedding\uff0c\u5982\u679c\u662f\u5176\u4ed6\u4efb\u52a1\uff0c\u5c31\u53ef\u4ee5\u662f\u4efb\u4f55\u5408\u7406\u65b9\u6cd5\u6240\u63d0\u53d6\u7684\u7279\u5f81\u3002</p> <p>\u6784\u5efaEmbedding\u5c42\u7684\u4ee3\u7801\u5f88\u7b80\u5355\uff0c\u6838\u5fc3\u662f\u501f\u52a9torch\u63d0\u4f9b\u7684nn.Embedding\uff0c\u5982\u4e0b\uff1a</p> <pre><code>import torch.nn as nn\n\n\nclass Embeddings(nn.Module):\n    def __init__(self, vocab_size, embed_size):\n        '''\n        \u5d4c\u5165\u5c42\n        :param vocab_size:  \u6307\u8bcd\u8868\u7684\u5927\u5c0f\n        :param embed_size: \u6307\u8bcd\u5d4c\u5165\u7684\u7ef4\u5ea6\n        '''\n        super(Embeddings, self).__init__()\n        # \u5d4c\u5165\n        self.embedding = nn.Embedding(num_embeddings=vocab_size, embedding_dim=embed_size)\n\n    def forward(self, x):\n        '''\n        :param x: \u8fd9\u91cc\u4ee3\u8868\u8f93\u5165\u7ed9\u6a21\u578b\u7684\u5355\u8bcd\u6587\u672c\u901a\u8fc7\u8bcd\u8868\u6620\u5c04\u540e\u7684one-hot\u5411\u91cf\n        :return:\n        '''\n        return self.embedding(x)\n</code></pre> <p>Info</p> <ul> <li>num_embeddings: \u8bcd\u6c47\u8868\u7684\u5927\u5c0f\uff08\u5373\u8bcd\u7684\u79cd\u7c7b\u6570\uff09</li> <li>embedding_dim: \u6bcf\u4e2a\u8bcd\u88ab\u6620\u5c04\u6210\u7684\u5411\u91cf\u7ef4\u5ea6\uff08\u5373\u5d4c\u5165\u7ef4\u5ea6\uff09</li> </ul>"},{"location":"llm/chapter00/transformer/#12","title":"1.2 \u4f4d\u7f6e\u7f16\u7801","text":"<p>\u4f4d\u7f6e\u7f16\u7801\u7528\u4ee5\u8868\u8fbe\u5143\u7d20\u5728\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\u7279\u5f81\uff0c\u6bd4\u5982\u540d\u8bcd\u7ecf\u5e38\u51fa\u73b0\u5728\u53e5\u5b50\u5f00\u5934\u3002</p> <p>\u4f4d\u7f6e\u7f16\u7801\u76f4\u63a5\u4e0e\u5143\u7d20\u7684embedding\u76f8\u52a0\u3002</p> <p>\u4ee3\u7801\u4e2d\u9700\u8981\u6ce8\u610f\uff1aX_\u53ea\u662f\u521d\u59cb\u5316\u7684\u77e9\u9635\uff1b\u5b8c\u6210\u4f4d\u7f6e\u7f16\u7801\u4e4b\u540e\u4f1a\u52a0\u4e00\u4e2adropout\u3002\u53e6\u5916\uff0c\u4f4d\u7f6e\u7f16\u7801\u662f\u6700\u540e\u52a0\u4e0a\u53bb\u7684\uff0c\u56e0\u6b64\u8f93\u5165\u8f93\u51fa\u5f62\u72b6\u4e0d\u53d8\u3002</p> <p>\u6570\u5b66\u516c\u5f0f</p> <p>\u5bf9\u4e8e\u4f4d\u7f6e \\(pos\\) \u548c\u7ef4\u5ea6 \\(i\\)\uff1a</p> \\[ PE_{(pos, 2i)} = \\sin\\left(\\frac{pos}{10000^{2i/d_{model}}}\\right) \\] \\[ PE_{(pos, 2i+1)} = \\cos\\left(\\frac{pos}{10000^{2i/d_{model}}}\\right) \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\(pos\\) \u662f\u8bcd\u5728\u53e5\u5b50\u4e2d\u7684\u4f4d\u7f6e\uff08\u4ece 0 \u5f00\u59cb\uff09</li> <li>\\(i\\) \u662f\u4f4d\u7f6e\u5411\u91cf\u7684\u7ef4\u5ea6\u7d22\u5f15</li> <li>\\(d_{model}\\) \u662f\u5d4c\u5165\u5411\u91cf\u7684\u7ef4\u5ea6</li> </ul> <pre><code>import math\nimport torch\nimport torch.nn as nn\n\nclass PositionalEncoding(nn.Module):\n    def __init__(self, d_model, dropout, max_len=5000):\n        '''\n        \u4f4d\u7f6e\u7f16\u7801\n        :param d_model: \u8bcd\u5d4c\u5165\u7ef4\u5ea6\n        :param dropout: dropout\u89e6\u53d1\u6bd4\u7387\n        :param max_len: \u6bcf\u4e2a\u53e5\u5b50\u7684\u6700\u5927\u957f\u5ea6\n        '''\n        super(PositionalEncoding, self).__init__()\n        self.dropout = nn.Dropout(p=dropout)\n\n        pe = torch.zeros(max_len, d_model) #  \u5355\u8bcd\u4f4d\u7f6e\u77e9\u9635\uff08\u521d\u59cb\u503c\uff09\n        position = torch.arange(0, max_len).unsqueeze(1) # \u5355\u8bcd\u5bf9\u5e94\u7684\u4f4d\u7f6e\n\n        div_term = torch.exp(torch.arange(0, d_model, 2) *\n                             -(math.log(10000.0) / d_model))\n        pe[:, 0::2] = torch.sin(position * div_term)\n        pe[:, 1::2] = torch.cos(position * div_term)\n        pe = pe.unsqueeze(0)\n        self.register_buffer('pe', pe)\n\n    def forward(self, x):\n        x = x + self.pe[:, :x.size(1)]\n        return self.dropout(x)\n</code></pre> <p>Info</p> <p>register_buffer \u662f PyTorch \u4e2d nn.Module \u7684\u4e00\u4e2a\u65b9\u6cd5\uff0c\u7528\u6765 \u6ce8\u518c\u4e00\u4e2a\u4e0d\u662f\u53c2\u6570\uff08\u4e0d\u53c2\u4e0e\u68af\u5ea6\u66f4\u65b0\uff09\u4f46\u5728\u6a21\u578b\u4fdd\u5b58\u548c\u79fb\u52a8\uff08\u5982 .cuda()\u3001.to()\uff09\u65f6\u8ddf\u968f\u7684\u5f20\u91cf\u3002</p>"},{"location":"llm/chapter00/transformer/#encoder","title":"\u4e8c\u3001Encoder","text":""},{"location":"llm/chapter00/transformer/#21","title":"2.1 \u7f16\u7801\u5668","text":"<p>\u7f16\u7801\u5668\u4f5c\u7528\u662f\u7528\u4e8e\u5bf9\u8f93\u5165\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u4e3a\u89e3\u7801\u73af\u8282\u63d0\u4f9b\u6709\u6548\u7684\u8bed\u4e49\u4fe1\u606f</p> <p>\u6574\u4f53\u6765\u770b\u7f16\u7801\u5668\u7531N\u4e2a\u7f16\u7801\u5668\u5c42\u7b80\u5355\u5806\u53e0\u800c\u6210\uff0c\u56e0\u6b64\u5b9e\u73b0\u975e\u5e38\u7b80\u5355\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code># \u5b9a\u4e49\u4e00\u4e2aclones\u51fd\u6570\uff0c\u6765\u66f4\u65b9\u4fbf\u7684\u5c06\u67d0\u4e2a\u7ed3\u6784\u590d\u5236\u82e5\u5e72\u4efd\ndef clones(module, N):\n    \"Produce N identical layers.\"\n    return nn.ModuleList([copy.deepcopy(module) for _ in range(N)])\n\n\nclass Encoder(nn.Module):\n    \"\"\"\n    Encoder\n    The encoder is composed of a stack of N=6 identical layers.\n    \"\"\"\n    def __init__(self, layer, N):\n        super(Encoder, self).__init__()\n        # \u8c03\u7528\u65f6\u4f1a\u5c06\u7f16\u7801\u5668\u5c42\u4f20\u8fdb\u6765\uff0c\u6211\u4eec\u7b80\u5355\u514b\u9686N\u5206\uff0c\u53e0\u52a0\u5728\u4e00\u8d77\uff0c\u7ec4\u6210\u5b8c\u6574\u7684Encoder\n        self.layers = clones(layer, N)\n        self.norm = LayerNorm(layer.size)\n\n    def forward(self, x, mask):\n        \"Pass the input (and mask) through each layer in turn.\"\n        for layer in self.layers:\n            x = layer(x, mask)\n        return self.norm(x)\n</code></pre> <p>\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u6709\u4e00\u4e2a\u5c0f\u7ec6\u8282\uff0c\u5c31\u662f\u7f16\u7801\u5668\u7684\u8f93\u5165\u9664\u4e86x\uff0c\u4e5f\u5c31\u662fembedding\u4ee5\u5916\uff0c\u8fd8\u6709\u4e00\u4e2amask\uff0c\u4e3a\u4e86\u4ecb\u7ecd\u8fde\u7eed\u6027\uff0c\u8fd9\u91cc\u5148\u5ffd\u7565\uff0c\u540e\u9762\u4f1a\u8bb2\u89e3\u3002</p> <p>\u4e0b\u9762\u6211\u4eec\u6765\u770b\u770b\u5355\u4e2a\u7684\u7f16\u7801\u5668\u5c42\u90fd\u5305\u542b\u4ec0\u4e48\uff0c\u5982\u4f55\u5b9e\u73b0\u3002</p>"},{"location":"llm/chapter00/transformer/#22","title":"2.2 \u7f16\u7801\u5668\u5c42","text":"<p>\u6bcf\u4e2a\u7f16\u7801\u5668\u5c42\u7531\u4e24\u4e2a\u5b50\u5c42\u8fde\u63a5\u7ed3\u6784\u7ec4\u6210\uff1a</p> <p>\u7b2c\u4e00\u4e2a\u5b50\u5c42\u5305\u62ec\u4e00\u4e2a\u591a\u5934\u81ea\u6ce8\u610f\u529b\u5c42\u548c\u89c4\u8303\u5316\u5c42\u4ee5\u53ca\u4e00\u4e2a\u6b8b\u5dee\u8fde\u63a5\uff1b</p> <p>\u7b2c\u4e8c\u4e2a\u5b50\u5c42\u5305\u62ec\u4e00\u4e2a\u524d\u9988\u5168\u8fde\u63a5\u5c42\u548c\u89c4\u8303\u5316\u5c42\u4ee5\u53ca\u4e00\u4e2a\u6b8b\u5dee\u8fde\u63a5\uff1b</p> <p>\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u6211\u4eec\u5148\u5b9a\u4e49\u4e00\u4e2aSubLayerConnection\u7c7b\u6765\u63cf\u8ff0\u8fd9\u79cd\u7ed3\u6784\u5173\u7cfb</p> <pre><code>class SublayerConnection(nn.Module):\n    \"\"\" \n    \u5b9e\u73b0\u5b50\u5c42\u8fde\u63a5\u7ed3\u6784\u7684\u7c7b\n    \"\"\"\n    def __init__(self, size, dropout):\n        super(SublayerConnection, self).__init__()\n        self.norm = LayerNorm(size)\n        self.dropout = nn.Dropout(dropout)\n\n    def forward(self, x, sublayer):\n\n        # \u539fpaper\u7684\u65b9\u6848\n        #sublayer_out = sublayer(x)\n        #x_norm = self.norm(x + self.dropout(sublayer_out))\n\n        # \u7a0d\u52a0\u8c03\u6574\u7684\u7248\u672c\n        sublayer_out = sublayer(x)\n        sublayer_out = self.dropout(sublayer_out)\n        x_norm = x + self.norm(sublayer_out)\n        return x_norm\n</code></pre> <p>\u6ce8\uff1a\u4e0a\u9762\u7684\u5b9e\u73b0\u4e2d\uff0c\u6211\u5bf9\u6b8b\u5dee\u7684\u94fe\u63a5\u65b9\u6848\u8fdb\u884c\u4e86\u5c0f\u5c0f\u7684\u8c03\u6574\uff0c\u548c\u539f\u8bba\u6587\u6709\u6240\u4e0d\u540c\u3002\u628ax\u4ecenorm\u4e2d\u62ff\u51fa\u6765\uff0c\u4fdd\u8bc1\u6c38\u8fdc\u6709\u4e00\u6761\u201c\u9ad8\u901f\u516c\u8def\u201d\uff0c\u8fd9\u6837\u7406\u8bba\u4e0a\u4f1a\u6536\u655b\u7684\u5feb\u4e00\u4e9b\uff0c\u4f46\u6211\u65e0\u6cd5\u786e\u4fdd\u8fd9\u6837\u505a\u4e00\u5b9a\u662f\u5bf9\u7684\uff0c\u8bf7\u4e00\u5b9a\u6ce8\u610f\u3002</p> <p>\u5b9a\u4e49\u597d\u4e86SubLayerConnection\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9e\u73b0EncoderLayer\u7684\u7ed3\u6784\u4e86</p> <pre><code>class EncoderLayer(nn.Module):\n    \"EncoderLayer is made up of two sublayer: self-attn and feed forward\"                                                                                                         \n    def __init__(self, size, self_attn, feed_forward, dropout):\n        super(EncoderLayer, self).__init__()\n        self.self_attn = self_attn\n        self.feed_forward = feed_forward\n        self.sublayer = clones(SublayerConnection(size, dropout), 2)\n        self.size = size   # embedding's dimention of model, \u9ed8\u8ba4512\n\n    def forward(self, x, mask):\n        # attention sub layer\n        x = self.sublayer[0](x, lambda x: self.self_attn(x, x, x, mask))\n        # feed forward sub layer\n        z = self.sublayer[1](x, self.feed_forward)\n        return z\n</code></pre>"},{"location":"llm/chapter00/transformer/#23","title":"2.3  \u6ce8\u610f\u529b\u673a\u5236","text":"<p>\u4eba\u7c7b\u5728\u89c2\u5bdf\u4e8b\u7269\u65f6\uff0c\u65e0\u6cd5\u540c\u65f6\u4ed4\u7ec6\u89c2\u5bdf\u773c\u524d\u7684\u4e00\u5207\uff0c\u53ea\u80fd\u805a\u7126\u5230\u67d0\u4e00\u4e2a\u5c40\u90e8\u3002\u901a\u5e38\u6211\u4eec\u5927\u8111\u5728\u7b80\u5355\u4e86\u89e3\u773c\u524d\u7684\u573a\u666f\u540e\uff0c\u80fd\u591f\u5f88\u5feb\u628a\u6ce8\u610f\u529b\u805a\u7126\u5230\u6700\u6709\u4ef7\u503c\u7684\u5c40\u90e8\u6765\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u4ece\u800c\u4f5c\u51fa\u6709\u6548\u5224\u65ad\u3002\u6216\u8bb8\u662f\u57fa\u4e8e\u8fd9\u6837\u7684\u542f\u53d1\uff0c\u5927\u5bb6\u60f3\u5230\u4e86\u5728\u7b97\u6cd5\u4e2d\u5229\u7528\u6ce8\u610f\u529b\u673a\u5236\u3002</p> <p>\u6ce8\u610f\u529b\u8ba1\u7b97\uff1a\u5b83\u9700\u8981\u4e09\u4e2a\u6307\u5b9a\u7684\u8f93\u5165Q\uff08query\uff09\uff0cK\uff08key\uff09\uff0cV\uff08value\uff09\uff0c\u7136\u540e\u901a\u8fc7\u4e0b\u9762\u516c\u5f0f\u5f97\u5230\u6ce8\u610f\u529b\u7684\u8ba1\u7b97\u7ed3\u679c\u3002</p> <p></p> <p>\u8ba1\u7b97\u6d41\u7a0b\u56fe\u5982\u4e0b\uff1a</p> <p></p> <p>\u4e0b\u9762\u662f\u6ce8\u610f\u529b\u6a21\u5757\u7684\u5b9e\u73b0\u4ee3\u7801\uff1a</p> <pre><code>def attention(query, key, value, mask=None, dropout=None):\n    \"Compute 'Scaled Dot Product Attention'\"\n\n    #\u9996\u5148\u53d6query\u7684\u6700\u540e\u4e00\u7ef4\u7684\u5927\u5c0f\uff0c\u5bf9\u5e94\u8bcd\u5d4c\u5165\u7ef4\u5ea6\n    d_k = query.size(-1)\n    #\u6309\u7167\u6ce8\u610f\u529b\u516c\u5f0f\uff0c\u5c06query\u4e0ekey\u7684\u8f6c\u7f6e\u76f8\u4e58\uff0c\u8fd9\u91cc\u9762key\u662f\u5c06\u6700\u540e\u4e24\u4e2a\u7ef4\u5ea6\u8fdb\u884c\u8f6c\u7f6e\uff0c\u518d\u9664\u4ee5\u7f29\u653e\u7cfb\u6570\u5f97\u5230\u6ce8\u610f\u529b\u5f97\u5206\u5f20\u91cfscores\n    scores = torch.matmul(query, key.transpose(-2, -1)) / math.sqrt(d_k)\n\n    #\u63a5\u7740\u5224\u65ad\u662f\u5426\u4f7f\u7528\u63a9\u7801\u5f20\u91cf\n    if mask is not None:\n        #\u4f7f\u7528tensor\u7684masked_fill\u65b9\u6cd5\uff0c\u5c06\u63a9\u7801\u5f20\u91cf\u548cscores\u5f20\u91cf\u6bcf\u4e2a\u4f4d\u7f6e\u4e00\u4e00\u6bd4\u8f83\uff0c\u5982\u679c\u63a9\u7801\u5f20\u91cf\u5219\u5bf9\u5e94\u7684scores\u5f20\u91cf\u7528-1e9\u8fd9\u4e2a\u7f6e\u6765\u66ff\u6362\n        scores = scores.masked_fill(mask == 0, -1e9)\n\n    #\u5bf9scores\u7684\u6700\u540e\u4e00\u7ef4\u8fdb\u884csoftmax\u64cd\u4f5c\uff0c\u4f7f\u7528F.softmax\u65b9\u6cd5\uff0c\u8fd9\u6837\u83b7\u5f97\u6700\u7ec8\u7684\u6ce8\u610f\u529b\u5f20\u91cf\n    p_attn = F.softmax(scores, dim = -1)\n\n    #\u4e4b\u540e\u5224\u65ad\u662f\u5426\u4f7f\u7528dropout\u8fdb\u884c\u968f\u673a\u7f6e0\n    if dropout is not None:\n        p_attn = dropout(p_attn)\n\n    #\u6700\u540e\uff0c\u6839\u636e\u516c\u5f0f\u5c06p_attn\u4e0evalue\u5f20\u91cf\u76f8\u4e58\u83b7\u5f97\u6700\u7ec8\u7684query\u6ce8\u610f\u529b\u8868\u793a\uff0c\u540c\u65f6\u8fd4\u56de\u6ce8\u610f\u529b\u5f20\u91cf\n    return torch.matmul(p_attn, value), p_attn\n</code></pre> <p>Info</p> <pre><code>tensor.masked_fill(mask, value)    \n</code></pre> <ul> <li>mask\uff1a\u4e00\u4e2a\u5e03\u5c14\u7c7b\u578b\uff08bool\uff09\u7684\u5f20\u91cf\uff0c\u5f62\u72b6\u8981\u4e0e tensor \u5e7f\u64ad\u517c\u5bb9</li> <li>value\uff1a\u8981\u586b\u5145\u8fdb\u53bb\u7684\u503c\uff08\u901a\u5e38\u662f\u8d1f\u65e0\u7a77 -inf\uff0c\u6216 0\uff09</li> </ul>"},{"location":"llm/chapter00/transformer/#24","title":"2.4 \u591a\u5934\u6ce8\u610f\u529b\u673a\u5236","text":"<p>\u521a\u521a\u4ecb\u7ecd\u4e86attention\u673a\u5236\uff0c\u5728\u642d\u5efaEncoderLayer\u65f6\u5019\u6240\u4f7f\u7528\u7684Attention\u6a21\u5757\uff0c\u5b9e\u9645\u4f7f\u7528\u7684\u662f\u591a\u5934\u6ce8\u610f\u529b\uff0c\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u591a\u4e2a\u6ce8\u610f\u529b\u6a21\u5757\u7ec4\u5408\u5728\u4e00\u8d77\u3002</p> <p></p> <p>\u591a\u5934\u6ce8\u610f\u529b\u673a\u5236\u7684\u4f5c\u7528\uff1a\u8fd9\u79cd\u7ed3\u6784\u8bbe\u8ba1\u80fd\u8ba9\u6bcf\u4e2a\u6ce8\u610f\u529b\u673a\u5236\u53bb\u4f18\u5316\u6bcf\u4e2a\u8bcd\u6c47\u7684\u4e0d\u540c\u7279\u5f81\u90e8\u5206\uff0c\u4ece\u800c\u5747\u8861\u540c\u4e00\u79cd\u6ce8\u610f\u529b\u673a\u5236\u53ef\u80fd\u4ea7\u751f\u7684\u504f\u5dee\uff0c\u8ba9\u8bcd\u4e49\u62e5\u6709\u6765\u81ea\u66f4\u591a\u5143\u8868\u8fbe\uff0c\u5b9e\u9a8c\u8868\u660e\u53ef\u4ee5\u4ece\u800c\u63d0\u5347\u6a21\u578b\u6548\u679c\u3002</p> <p>\u4e3e\u4e2a\u66f4\u5f62\u8c61\u7684\u4f8b\u5b50\uff0cbank\u662f\u94f6\u884c\u7684\u610f\u601d\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u6ce8\u610f\u529b\u6a21\u5757\uff0c\u90a3\u4e48\u5b83\u5927\u6982\u7387\u4f1a\u5b66\u4e60\u53bb\u5173\u6ce8\u7c7b\u4f3cmoney\u3001loan\u8d37\u6b3e\u8fd9\u6837\u7684\u8bcd\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u591a\u4e2a\u591a\u5934\u673a\u5236\uff0c\u90a3\u4e48\u4e0d\u540c\u7684\u5934\u5c31\u4f1a\u53bb\u5173\u6ce8\u4e0d\u540c\u7684\u8bed\u4e49\uff0c\u6bd4\u5982bank\u8fd8\u6709\u4e00\u79cd\u542b\u4e49\u662f\u6cb3\u5cb8\uff0c\u90a3\u4e48\u53ef\u80fd\u6709\u4e00\u4e2a\u5934\u5c31\u4f1a\u53bb\u5173\u6ce8\u7c7b\u4f3criver\u8fd9\u6837\u7684\u8bcd\u6c47\uff0c\u8fd9\u65f6\u591a\u5934\u6ce8\u610f\u529b\u7684\u4ef7\u503c\u5c31\u4f53\u73b0\u51fa\u6765\u4e86\u3002</p> <p>\u4e0b\u9762\u662f\u591a\u5934\u6ce8\u610f\u529b\u673a\u5236\u7684\u5b9e\u73b0\u4ee3\u7801\uff1a</p> <pre><code>class MultiHeadedAttention(nn.Module):\n    def __init__(self, h, d_model, dropout=0.1):\n        #\u5728\u7c7b\u7684\u521d\u59cb\u5316\u65f6\uff0c\u4f1a\u4f20\u5165\u4e09\u4e2a\u53c2\u6570\uff0ch\u4ee3\u8868\u5934\u6570\uff0cd_model\u4ee3\u8868\u8bcd\u5d4c\u5165\u7684\u7ef4\u5ea6\uff0cdropout\u4ee3\u8868\u8fdb\u884cdropout\u64cd\u4f5c\u65f6\u7f6e0\u6bd4\u7387\uff0c\u9ed8\u8ba4\u662f0.1\n        super(MultiHeadedAttention, self).__init__()\n        #\u5728\u51fd\u6570\u4e2d\uff0c\u9996\u5148\u4f7f\u7528\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u4e2d\u5e38\u7528\u7684assert\u8bed\u53e5\uff0c\u5224\u65adh\u662f\u5426\u80fd\u88abd_model\u6574\u9664\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u4e4b\u540e\u8981\u7ed9\u6bcf\u4e2a\u5934\u5206\u914d\u7b49\u91cf\u7684\u8bcd\u7279\u5f81\uff0c\u4e5f\u5c31\u662fembedding_dim/head\u4e2a\n        assert d_model % h == 0\n        #\u5f97\u5230\u6bcf\u4e2a\u5934\u83b7\u5f97\u7684\u5206\u5272\u8bcd\u5411\u91cf\u7ef4\u5ea6d_k\n        self.d_k = d_model // h\n        #\u4f20\u5165\u5934\u6570h\n        self.h = h\n\n        #\u521b\u5efalinear\u5c42\uff0c\u901a\u8fc7nn\u7684Linear\u5b9e\u4f8b\u5316\uff0c\u5b83\u7684\u5185\u90e8\u53d8\u6362\u77e9\u9635\u662fembedding_dim x embedding_dim\uff0c\u7136\u540e\u4f7f\u7528\uff0c\u4e3a\u4ec0\u4e48\u662f\u56db\u4e2a\u5462\uff0c\u8fd9\u662f\u56e0\u4e3a\u5728\u591a\u5934\u6ce8\u610f\u529b\u4e2d\uff0cQ,K,V\u5404\u9700\u8981\u4e00\u4e2a\uff0c\u6700\u540e\u62fc\u63a5\u7684\u77e9\u9635\u8fd8\u9700\u8981\u4e00\u4e2a\uff0c\u56e0\u6b64\u4e00\u5171\u662f\u56db\u4e2a\n        self.linears = clones(nn.Linear(d_model, d_model), 4)\n        #self.attn\u4e3aNone\uff0c\u5b83\u4ee3\u8868\u6700\u540e\u5f97\u5230\u7684\u6ce8\u610f\u529b\u5f20\u91cf\uff0c\u73b0\u5728\u8fd8\u6ca1\u6709\u7ed3\u679c\u6240\u4ee5\u4e3aNone\n        self.attn = None\n        self.dropout = nn.Dropout(p=dropout)\n\n    def forward(self, query, key, value, mask=None):\n        #\u524d\u5411\u903b\u8f91\u51fd\u6570\uff0c\u5b83\u8f93\u5165\u53c2\u6570\u6709\u56db\u4e2a\uff0c\u524d\u4e09\u4e2a\u5c31\u662f\u6ce8\u610f\u529b\u673a\u5236\u9700\u8981\u7684Q,K,V\uff0c\u6700\u540e\u4e00\u4e2a\u662f\u6ce8\u610f\u529b\u673a\u5236\u4e2d\u53ef\u80fd\u9700\u8981\u7684mask\u63a9\u7801\u5f20\u91cf\uff0c\u9ed8\u8ba4\u662fNone\n        if mask is not None:\n            # Same mask applied to all h heads.\n            #\u4f7f\u7528unsqueeze\u6269\u5c55\u7ef4\u5ea6\uff0c\u4ee3\u8868\u591a\u5934\u4e2d\u7684\u7b2cn\u5934\n            mask = mask.unsqueeze(1)\n        #\u63a5\u7740\uff0c\u6211\u4eec\u83b7\u5f97\u4e00\u4e2abatch_size\u7684\u53d8\u91cf\uff0c\u4ed6\u662fquery\u5c3a\u5bf8\u7684\u7b2c1\u4e2a\u6570\u5b57\uff0c\u4ee3\u8868\u6709\u591a\u5c11\u6761\u6837\u672c\n        nbatches = query.size(0)\n\n        # 1) Do all the linear projections in batch from d_model =&gt; h x d_k \n        # \u9996\u5148\u5229\u7528zip\u5c06\u8f93\u5165QKV\u4e0e\u4e09\u4e2a\u7ebf\u6027\u5c42\u7ec4\u5230\u4e00\u8d77\uff0c\u7136\u540e\u5229\u7528for\u5faa\u73af\uff0c\u5c06\u8f93\u5165QKV\u5206\u522b\u4f20\u5230\u7ebf\u6027\u5c42\u4e2d\uff0c\u505a\u5b8c\u7ebf\u6027\u53d8\u6362\u540e\uff0c\u5f00\u59cb\u4e3a\u6bcf\u4e2a\u5934\u5206\u5272\u8f93\u5165\uff0c\u8fd9\u91cc\u4f7f\u7528view\u65b9\u6cd5\u5bf9\u7ebf\u6027\u53d8\u6362\u7684\u7ed3\u6784\u8fdb\u884c\u7ef4\u5ea6\u91cd\u5851\uff0c\u591a\u52a0\u4e86\u4e00\u4e2a\u7ef4\u5ea6h\u4ee3\u8868\u5934\uff0c\u8fd9\u6837\u5c31\u610f\u5473\u7740\u6bcf\u4e2a\u5934\u53ef\u4ee5\u83b7\u5f97\u4e00\u90e8\u5206\u8bcd\u7279\u5f81\u7ec4\u6210\u7684\u53e5\u5b50\uff0c\u5176\u4e2d\u7684-1\u4ee3\u8868\u81ea\u9002\u5e94\u7ef4\u5ea6\uff0c\u8ba1\u7b97\u673a\u4f1a\u6839\u636e\u8fd9\u79cd\u53d8\u6362\u81ea\u52a8\u8ba1\u7b97\u8fd9\u91cc\u7684\u503c\uff0c\u7136\u540e\u5bf9\u7b2c\u4e8c\u7ef4\u548c\u7b2c\u4e09\u7ef4\u8fdb\u884c\u8f6c\u7f6e\u64cd\u4f5c\uff0c\u4e3a\u4e86\u8ba9\u4ee3\u8868\u53e5\u5b50\u957f\u5ea6\u7ef4\u5ea6\u548c\u8bcd\u5411\u91cf\u7ef4\u5ea6\u80fd\u591f\u76f8\u90bb\uff0c\u8fd9\u6837\u6ce8\u610f\u529b\u673a\u5236\u624d\u80fd\u627e\u5230\u8bcd\u4e49\u4e0e\u53e5\u5b50\u4f4d\u7f6e\u7684\u5173\u7cfb\uff0c\u4eceattention\u51fd\u6570\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u5229\u7528\u7684\u662f\u539f\u59cb\u8f93\u5165\u7684\u5012\u6570\u7b2c\u4e00\u548c\u7b2c\u4e8c\u7ef4\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u6bcf\u4e2a\u5934\u7684\u8f93\u5165\n        query, key, value = \\\n            [l(x).view(nbatches, -1, self.h, self.d_k).transpose(1, 2)\n             for l, x in zip(self.linears, (query, key, value))]\n\n        # 2) Apply attention on all the projected vectors in batch. \n        # \u5f97\u5230\u6bcf\u4e2a\u5934\u7684\u8f93\u5165\u540e\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u5c06\u4ed6\u4eec\u4f20\u5165\u5230attention\u4e2d\uff0c\u8fd9\u91cc\u76f4\u63a5\u8c03\u7528\u6211\u4eec\u4e4b\u524d\u5b9e\u73b0\u7684attention\u51fd\u6570\uff0c\u540c\u65f6\u4e5f\u5c06mask\u548cdropout\u4f20\u5165\u5176\u4e2d\n        x, self.attn = attention(query, key, value, mask=mask, \n                                 dropout=self.dropout)\n\n        # 3) \"Concat\" using a view and apply a final linear. \n        # \u901a\u8fc7\u591a\u5934\u6ce8\u610f\u529b\u8ba1\u7b97\u540e\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u6bcf\u4e2a\u5934\u8ba1\u7b97\u7ed3\u679c\u7ec4\u6210\u76844\u7ef4\u5f20\u91cf\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u8f6c\u6362\u4e3a\u8f93\u5165\u7684\u5f62\u72b6\u4ee5\u65b9\u4fbf\u540e\u7eed\u7684\u8ba1\u7b97\uff0c\u56e0\u6b64\u8fd9\u91cc\u5f00\u59cb\u8fdb\u884c\u7b2c\u4e00\u6b65\u5904\u7406\u73af\u8282\u7684\u9006\u64cd\u4f5c\uff0c\u5148\u5bf9\u7b2c\u4e8c\u548c\u7b2c\u4e09\u7ef4\u8fdb\u884c\u8f6c\u7f6e\uff0c\u7136\u540e\u4f7f\u7528contiguous\u65b9\u6cd5\u3002\u8fd9\u4e2a\u65b9\u6cd5\u7684\u4f5c\u7528\u5c31\u662f\u80fd\u591f\u8ba9\u8f6c\u7f6e\u540e\u7684\u5f20\u91cf\u5e94\u7528view\u65b9\u6cd5\uff0c\u5426\u5219\u5c06\u65e0\u6cd5\u76f4\u63a5\u4f7f\u7528\uff0c\u6240\u4ee5\uff0c\u4e0b\u4e00\u6b65\u5c31\u662f\u4f7f\u7528view\u91cd\u5851\u5f62\u72b6\uff0c\u53d8\u6210\u548c\u8f93\u5165\u5f62\u72b6\u76f8\u540c\u3002  \n        x = x.transpose(1, 2).contiguous() \\\n             .view(nbatches, -1, self.h * self.d_k)\n        #\u6700\u540e\u4f7f\u7528\u7ebf\u6027\u5c42\u5217\u8868\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u7ebf\u6027\u53d8\u6362\u5f97\u5230\u6700\u7ec8\u7684\u591a\u5934\u6ce8\u610f\u529b\u7ed3\u6784\u7684\u8f93\u51fa\n        return self.linears[-1](x)\n</code></pre>"},{"location":"llm/chapter00/transformer/#25","title":"2.5  \u524d\u9988\u5168\u8fde\u63a5\u5c42","text":"<p>EncoderLayer\u4e2d\u53e6\u4e00\u4e2a\u6838\u5fc3\u7684\u5b50\u5c42\u662f Feed Forward Layer\uff0c\u6211\u4eec\u8fd9\u5c31\u4ecb\u7ecd\u4e00\u4e0b\u3002</p> <p>\u5728\u8fdb\u884c\u4e86Attention\u64cd\u4f5c\u4e4b\u540e\uff0cencoder\u548cdecoder\u4e2d\u7684\u6bcf\u4e00\u5c42\u90fd\u5305\u542b\u4e86\u4e00\u4e2a\u5168\u8fde\u63a5\u524d\u5411\u7f51\u7edc\uff0c\u5bf9\u6bcf\u4e2aposition\u7684\u5411\u91cf\u5206\u522b\u8fdb\u884c\u76f8\u540c\u7684\u64cd\u4f5c\uff0c\u5305\u62ec\u4e24\u4e2a\u7ebf\u6027\u53d8\u6362\u548c\u4e00\u4e2aReLU\u6fc0\u6d3b\u8f93\u51fa\uff1a</p> <p></p> <p>Feed Forward Layer \u5176\u5b9e\u5c31\u662f\u7b80\u5355\u7684\u7531\u4e24\u4e2a\u524d\u5411\u5168\u8fde\u63a5\u5c42\u7ec4\u6210\uff0c\u6838\u5fc3\u5728\u4e8e\uff0cAttention\u6a21\u5757\u6bcf\u4e2a\u65f6\u95f4\u6b65\u7684\u8f93\u51fa\u90fd\u6574\u5408\u4e86\u6240\u6709\u65f6\u95f4\u6b65\u7684\u4fe1\u606f\uff0c\u800cFeed Forward Layer\u6bcf\u4e2a\u65f6\u95f4\u6b65\u53ea\u662f\u5bf9\u81ea\u5df1\u7684\u7279\u5f81\u7684\u4e00\u4e2a\u8fdb\u4e00\u6b65\u6574\u5408\uff0c\u4e0e\u5176\u4ed6\u65f6\u95f4\u6b65\u65e0\u5173\u3002</p> <pre><code>class PositionwiseFeedForward(nn.Module):\n    def __init__(self, d_model, d_ff, dropout=0.1):\n        #\u521d\u59cb\u5316\u51fd\u6570\u6709\u4e09\u4e2a\u8f93\u5165\u53c2\u6570\u5206\u522b\u662fd_model\uff0cd_ff\uff0c\u548cdropout=0.1\uff0c\u7b2c\u4e00\u4e2a\u662f\u7ebf\u6027\u5c42\u7684\u8f93\u5165\u7ef4\u5ea6\u4e5f\u662f\u7b2c\u4e8c\u4e2a\u7ebf\u6027\u5c42\u7684\u8f93\u51fa\u7ef4\u5ea6\uff0c\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u8f93\u5165\u901a\u8fc7\u524d\u9988\u5168\u8fde\u63a5\u5c42\u540e\u8f93\u5165\u548c\u8f93\u51fa\u7684\u7ef4\u5ea6\u4e0d\u53d8\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570d_ff\u5c31\u662f\u7b2c\u4e8c\u4e2a\u7ebf\u6027\u5c42\u7684\u8f93\u5165\u7ef4\u5ea6\u548c\u7b2c\u4e00\u4e2a\u7ebf\u6027\u5c42\u7684\u8f93\u51fa\uff0c\u6700\u540e\u4e00\u4e2a\u662fdropout\u7f6e0\u6bd4\u7387\u3002\n        super(PositionwiseFeedForward, self).__init__()\n        self.w_1 = nn.Linear(d_model, d_ff)\n        self.w_2 = nn.Linear(d_ff, d_model)\n        self.dropout = nn.Dropout(dropout)\n\n    def forward(self, x):\n        #\u8f93\u5165\u53c2\u6570\u4e3ax\uff0c\u4ee3\u8868\u6765\u81ea\u4e0a\u4e00\u5c42\u7684\u8f93\u51fa\uff0c\u9996\u5148\u7ecf\u8fc7\u7b2c\u4e00\u4e2a\u7ebf\u6027\u5c42\uff0c\u7136\u540e\u4f7f\u7528F\u4e2d\u7684relu\u51fd\u6570\u8fdb\u884c\u6fc0\u6d3b\uff0c\u4e4b\u540e\u518d\u4f7f\u7528dropout\u8fdb\u884c\u968f\u673a\u7f6e0\uff0c\u6700\u540e\u901a\u8fc7\u7b2c\u4e8c\u4e2a\u7ebf\u6027\u5c42w2\uff0c\u8fd4\u56de\u6700\u7ec8\u7ed3\u679c\n        return self.w_2(self.dropout(F.relu(self.w_1(x))))\n</code></pre>"},{"location":"llm/chapter00/transformer/#26","title":"2.6 \u89c4\u8303\u5316\u5c42","text":"<p>\u89c4\u8303\u5316\u5c42\u7684\u4f5c\u7528\uff1a\u5b83\u662f\u6240\u6709\u6df1\u5c42\u7f51\u7edc\u6a21\u578b\u90fd\u9700\u8981\u7684\u6807\u51c6\u7f51\u7edc\u5c42\uff0c\u56e0\u4e3a\u968f\u7740\u7f51\u7edc\u5c42\u6570\u7684\u589e\u52a0\uff0c\u901a\u8fc7\u591a\u5c42\u7684\u8ba1\u7b97\u540e\u8f93\u51fa\u53ef\u80fd\u5f00\u59cb\u51fa\u73b0\u8fc7\u5927\u6216\u8fc7\u5c0f\u7684\u60c5\u51b5\uff0c\u8fd9\u6837\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5b66\u4e60\u8fc7\u7a0b\u51fa\u73b0\u5f02\u5e38\uff0c\u6a21\u578b\u53ef\u80fd\u6536\u655b\u975e\u5e38\u6162\u3002\u56e0\u6b64\u90fd\u4f1a\u5728\u4e00\u5b9a\u5c42\u540e\u63a5\u89c4\u8303\u5316\u5c42\u8fdb\u884c\u6570\u503c\u7684\u89c4\u8303\u5316\uff0c\u4f7f\u5176\u7279\u5f81\u6570\u503c\u5728\u5408\u7406\u8303\u56f4\u5185\u3002</p> <p>Transformer\u4e2d\u4f7f\u7528\u7684normalization\u624b\u6bb5\u662flayer norm\uff0c\u5b9e\u73b0\u4ee3\u7801\u5f88\u7b80\u5355\uff0c\u5982\u4e0b\uff1a</p> <pre><code>class LayerNorm(nn.Module):\n    \"Construct a layernorm module (See citation for details).\"\n    def __init__(self, feature_size, eps=1e-6):\n        #\u521d\u59cb\u5316\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662ffeatures,\u8868\u793a\u8bcd\u5d4c\u5165\u7684\u7ef4\u5ea6,\u53e6\u4e00\u4e2a\u662feps\u5b83\u662f\u4e00\u4e2a\u8db3\u591f\u5c0f\u7684\u6570\uff0c\u5728\u89c4\u8303\u5316\u516c\u5f0f\u7684\u5206\u6bcd\u4e2d\u51fa\u73b0,\u9632\u6b62\u5206\u6bcd\u4e3a0\uff0c\u9ed8\u8ba4\u662f1e-6\u3002\n        super(LayerNorm, self).__init__()\n        #\u6839\u636efeatures\u7684\u5f62\u72b6\u521d\u59cb\u5316\u4e24\u4e2a\u53c2\u6570\u5f20\u91cfa2\uff0c\u548cb2\uff0c\u7b2c\u4e00\u521d\u59cb\u5316\u4e3a1\u5f20\u91cf\uff0c\u4e5f\u5c31\u662f\u91cc\u9762\u7684\u5143\u7d20\u90fd\u662f1\uff0c\u7b2c\u4e8c\u4e2a\u521d\u59cb\u5316\u4e3a0\u5f20\u91cf\uff0c\u4e5f\u5c31\u662f\u91cc\u9762\u7684\u5143\u7d20\u90fd\u662f0\uff0c\u8fd9\u4e24\u4e2a\u5f20\u91cf\u5c31\u662f\u89c4\u8303\u5316\u5c42\u7684\u53c2\u6570\u3002\u56e0\u4e3a\u76f4\u63a5\u5bf9\u4e0a\u4e00\u5c42\u5f97\u5230\u7684\u7ed3\u679c\u505a\u89c4\u8303\u5316\u516c\u5f0f\u8ba1\u7b97\uff0c\u5c06\u6539\u53d8\u7ed3\u679c\u7684\u6b63\u5e38\u8868\u5f81\uff0c\u56e0\u6b64\u5c31\u9700\u8981\u6709\u53c2\u6570\u4f5c\u4e3a\u8c03\u8282\u56e0\u5b50\uff0c\u4f7f\u5176\u5373\u80fd\u6ee1\u8db3\u89c4\u8303\u5316\u8981\u6c42\uff0c\u53c8\u80fd\u4e0d\u6539\u53d8\u9488\u5bf9\u76ee\u6807\u7684\u8868\u5f81\uff0c\u6700\u540e\u4f7f\u7528nn.parameter\u5c01\u88c5\uff0c\u4ee3\u8868\u4ed6\u4eec\u662f\u6a21\u578b\u7684\u53c2\u6570\n        self.a_2 = nn.Parameter(torch.ones(feature_size))\n        self.b_2 = nn.Parameter(torch.zeros(feature_size))\n        #\u628aeps\u4f20\u5230\u7c7b\u4e2d\n        self.eps = eps\n\n    def forward(self, x):\n    #\u8f93\u5165\u53c2\u6570x\u4ee3\u8868\u6765\u81ea\u4e0a\u4e00\u5c42\u7684\u8f93\u51fa\uff0c\u5728\u51fd\u6570\u4e2d\uff0c\u9996\u5148\u5bf9\u8f93\u5165\u53d8\u91cfx\u6c42\u5176\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u7684\u5747\u503c\uff0c\u5e76\u4fdd\u6301\u8f93\u51fa\u7ef4\u5ea6\u4e0e\u8f93\u5165\u7ef4\u5ea6\u4e00\u81f4\uff0c\u63a5\u7740\u518d\u6c42\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u7684\u6807\u51c6\u5dee\uff0c\u7136\u540e\u5c31\u662f\u6839\u636e\u89c4\u8303\u5316\u516c\u5f0f\uff0c\u7528x\u51cf\u53bb\u5747\u503c\u9664\u4ee5\u6807\u51c6\u5dee\u83b7\u5f97\u89c4\u8303\u5316\u7684\u7ed3\u679c\u3002\n    #\u6700\u540e\u5bf9\u7ed3\u679c\u4e58\u4ee5\u6211\u4eec\u7684\u7f29\u653e\u53c2\u6570\uff0c\u5373a2,*\u53f7\u4ee3\u8868\u540c\u578b\u70b9\u4e58\uff0c\u5373\u5bf9\u5e94\u4f4d\u7f6e\u8fdb\u884c\u4e58\u6cd5\u64cd\u4f5c\uff0c\u52a0\u4e0a\u4f4d\u79fb\u53c2b2\uff0c\u8fd4\u56de\u5373\u53ef\n        mean = x.mean(-1, keepdim=True)\n        std = x.std(-1, keepdim=True)\n        return self.a_2 * (x - mean) / (std + self.eps) + self.b_2\n</code></pre>"},{"location":"llm/chapter00/transformer/#27","title":"2.7 \u63a9\u7801\u53ca\u5176\u4f5c\u7528","text":"<p>\u63a9\u7801\uff1a\u63a9\u4ee3\u8868\u906e\u63a9\uff0c\u7801\u5c31\u662f\u6211\u4eec\u5f20\u91cf\u4e2d\u7684\u6570\u503c\uff0c\u5b83\u7684\u5c3a\u5bf8\u4e0d\u5b9a\uff0c\u91cc\u9762\u4e00\u822c\u53ea\u67090\u548c1\uff1b\u4ee3\u8868\u4f4d\u7f6e\u88ab\u906e\u63a9\u6216\u8005\u4e0d\u88ab\u906e\u63a9\u3002</p> <p>\u63a9\u7801\u7684\u4f5c\u7528\uff1a\u5728transformer\u4e2d\uff0c\u63a9\u7801\u4e3b\u8981\u7684\u4f5c\u7528\u6709\u4e24\u4e2a\uff0c\u4e00\u4e2a\u662f\u5c4f\u853d\u6389\u65e0\u6548\u7684padding\u533a\u57df\uff0c\u4e00\u4e2a\u662f\u5c4f\u853d\u6389\u6765\u81ea\u201c\u672a\u6765\u201d\u7684\u4fe1\u606f\u3002Encoder\u4e2d\u7684\u63a9\u7801\u4e3b\u8981\u662f\u8d77\u5230\u7b2c\u4e00\u4e2a\u4f5c\u7528\uff0cDecoder\u4e2d\u7684\u63a9\u7801\u5219\u540c\u65f6\u53d1\u6325\u7740\u4e24\u79cd\u4f5c\u7528\u3002</p> <p>\u5c4f\u853d\u6389\u65e0\u6548\u7684padding\u533a\u57df\uff1a\u6211\u4eec\u8bad\u7ec3\u9700\u8981\u7ec4batch\u8fdb\u884c\uff0c\u5c31\u4ee5\u673a\u5668\u7ffb\u8bd1\u4efb\u52a1\u4e3a\u4f8b\uff0c\u4e00\u4e2abatch\u4e2d\u4e0d\u540c\u6837\u672c\u7684\u8f93\u5165\u957f\u5ea6\u5f88\u53ef\u80fd\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6b64\u65f6\u6211\u4eec\u8981\u8bbe\u7f6e\u4e00\u4e2a\u6700\u5927\u53e5\u5b50\u957f\u5ea6\uff0c\u7136\u540e\u5bf9\u7a7a\u767d\u533a\u57df\u8fdb\u884cpadding\u586b\u5145\uff0c\u800c\u586b\u5145\u7684\u533a\u57df\u65e0\u8bba\u5728Encoder\u8fd8\u662fDecoder\u7684\u8ba1\u7b97\u4e2d\u90fd\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u56e0\u6b64\u9700\u8981\u7528mask\u8fdb\u884c\u6807\u8bc6\uff0c\u5c4f\u853d\u6389\u5bf9\u5e94\u533a\u57df\u7684\u54cd\u5e94\u3002</p> <p>\u5c4f\u853d\u6389\u6765\u81ea\u672a\u6765\u7684\u4fe1\u606f\uff1a\u6211\u4eec\u5df2\u7ecf\u5b66\u4e60\u4e86attention\u7684\u8ba1\u7b97\u6d41\u7a0b\uff0c\u5b83\u662f\u4f1a\u7efc\u5408\u6240\u6709\u65f6\u95f4\u6b65\u7684\u8ba1\u7b97\u7684\uff0c\u90a3\u4e48\u5728\u89e3\u7801\u7684\u65f6\u5019\uff0c\u5c31\u6709\u53ef\u80fd\u83b7\u53d6\u5230\u672a\u6765\u7684\u4fe1\u606f\uff0c\u8fd9\u662f\u4e0d\u884c\u7684\u3002\u56e0\u6b64\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e5f\u9700\u8981\u6211\u4eec\u4f7f\u7528mask\u8fdb\u884c\u5c4f\u853d\u3002\u73b0\u5728\u8fd8\u6ca1\u4ecb\u7ecd\u5230Decoder\uff0c\u5982\u679c\u6ca1\u5b8c\u5168\u7406\u89e3\uff0c\u53ef\u4ee5\u4e4b\u540e\u518d\u56de\u8fc7\u5934\u6765\u601d\u8003\u4e0b\u3002</p> <p>mask\u7684\u6784\u9020\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>def subsequent_mask(size):\n    #\u751f\u6210\u5411\u540e\u906e\u63a9\u7684\u63a9\u7801\u5f20\u91cf\uff0c\u53c2\u6570size\u662f\u63a9\u7801\u5f20\u91cf\u6700\u540e\u4e24\u4e2a\u7ef4\u5ea6\u7684\u5927\u5c0f\uff0c\u5b83\u6700\u540e\u4e24\u7ef4\u5f62\u6210\u4e00\u4e2a\u65b9\u9635\n\n    \"Mask out subsequent positions.\"\n    attn_shape = (1, size, size)\n\n    #\u7136\u540e\u4f7f\u7528np.ones\u65b9\u6cd5\u5411\u8fd9\u4e2a\u5f62\u72b6\u4e2d\u6dfb\u52a01\u5143\u7d20\uff0c\u5f62\u6210\u4e0a\u4e09\u89d2\u9635\n    subsequent_mask = np.triu(np.ones(attn_shape), k=1).astype('uint8')\n\n    #\u6700\u540e\u5c06numpy\u7c7b\u578b\u8f6c\u5316\u4e3atorch\u4e2d\u7684tensor\uff0c\u5185\u90e8\u505a\u4e00\u4e2a1- \u7684\u64cd\u4f5c\u3002\u8fd9\u4e2a\u5176\u5b9e\u662f\u505a\u4e86\u4e00\u4e2a\u4e09\u89d2\u9635\u7684\u53cd\u8f6c\uff0csubsequent_mask\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u4f1a\u88ab1\u51cf\u3002\n    #\u5982\u679c\u662f0\uff0csubsequent_mask\u4e2d\u7684\u8be5\u4f4d\u7f6e\u75310\u53d8\u62101\n    #\u5982\u679c\u662f1\uff0csubsequect_mask\u4e2d\u7684\u8be5\u4f4d\u7f6e\u75311\u53d8\u62100\n    return torch.from_numpy(subsequent_mask) == 0\n</code></pre>"},{"location":"llm/chapter00/transformer/#decoder","title":"\u4e09\u3001Decoder","text":""},{"location":"llm/chapter00/transformer/#31","title":"3.1 \u89e3\u7801\u5668\u6574\u4f53\u7ed3\u6784","text":"<p>\u89e3\u7801\u5668\u7684\u4f5c\u7528\uff1a\u6839\u636e\u7f16\u7801\u5668\u7684\u7ed3\u679c\u4ee5\u53ca\u4e0a\u4e00\u6b21\u9884\u6d4b\u7684\u7ed3\u679c\uff0c\u8f93\u51fa\u5e8f\u5217\u7684\u4e0b\u4e00\u4e2a\u7ed3\u679c\u3002</p> <p>\u6574\u4f53\u7ed3\u6784\u4e0a\uff0c\u89e3\u7801\u5668\u4e5f\u662f\u7531N\u4e2a\u76f8\u540c\u5c42\u5806\u53e0\u800c\u6210\u3002\u6784\u9020\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>#\u4f7f\u7528\u7c7bDecoder\u6765\u5b9e\u73b0\u89e3\u7801\u5668\nclass Decoder(nn.Module):\n    \"Generic N layer decoder with masking.\"\n    def __init__(self, layer, N):\n        #\u521d\u59cb\u5316\u51fd\u6570\u7684\u53c2\u6570\u6709\u4e24\u4e2a\uff0c\u7b2c\u4e00\u4e2a\u5c31\u662f\u89e3\u7801\u5668\u5c42layer\uff0c\u7b2c\u4e8c\u4e2a\u662f\u89e3\u7801\u5668\u5c42\u7684\u4e2a\u6570N\n        super(Decoder, self).__init__()\n        #\u9996\u5148\u4f7f\u7528clones\u65b9\u6cd5\u514b\u9686\u4e86N\u4e2alayer\uff0c\u7136\u540e\u5b9e\u4f8b\u5316\u4e00\u4e2a\u89c4\u8303\u5316\u5c42\uff0c\u56e0\u4e3a\u6570\u636e\u8d70\u8fc7\u4e86\u6240\u6709\u7684\u89e3\u7801\u5668\u5c42\u540e\u6700\u540e\u8981\u505a\u89c4\u8303\u5316\u5904\u7406\u3002\n        self.layers = clones(layer, N)\n        self.norm = LayerNorm(layer.size)\n\n    def forward(self, x, memory, src_mask, tgt_mask):\n        #forward\u51fd\u6570\u4e2d\u7684\u53c2\u6570\u67094\u4e2a\uff0cx\u4ee3\u8868\u76ee\u6807\u6570\u636e\u7684\u5d4c\u5165\u8868\u793a\uff0cmemory\u662f\u7f16\u7801\u5668\u5c42\u7684\u8f93\u51fa\uff0csource_mask\uff0ctarget_mask\u4ee3\u8868\u6e90\u6570\u636e\u548c\u76ee\u6807\u6570\u636e\u7684\u63a9\u7801\u5f20\u91cf\uff0c\u7136\u540e\u5c31\u662f\u5bf9\u6bcf\u4e2a\u5c42\u8fdb\u884c\u5faa\u73af\uff0c\u5f53\u7136\u8fd9\u4e2a\u5faa\u73af\u5c31\u662f\u53d8\u91cfx\u901a\u8fc7\u6bcf\u4e00\u4e2a\u5c42\u7684\u5904\u7406\uff0c\u5f97\u51fa\u6700\u540e\u7684\u7ed3\u679c\uff0c\u518d\u8fdb\u884c\u4e00\u6b21\u89c4\u8303\u5316\u8fd4\u56de\u5373\u53ef\u3002\n        for layer in self.layers:\n            x = layer(x, memory, src_mask, tgt_mask)\n        return self.norm(x)\n</code></pre>"},{"location":"llm/chapter00/transformer/#32","title":"3.2 \u89e3\u7801\u5668\u5c42","text":"<p>\u6bcf\u4e2a\u89e3\u7801\u5668\u5c42\u7531\u4e09\u4e2a\u5b50\u5c42\u8fde\u63a5\u7ed3\u6784\u7ec4\u6210\uff0c\u7b2c\u4e00\u4e2a\u5b50\u5c42\u8fde\u63a5\u7ed3\u6784\u5305\u62ec\u4e00\u4e2a\u591a\u5934\u81ea\u6ce8\u610f\u529b\u5b50\u5c42\u548c\u89c4\u8303\u5316\u5c42\u4ee5\u53ca\u4e00\u4e2a\u6b8b\u5dee\u8fde\u63a5\uff0c\u7b2c\u4e8c\u4e2a\u5b50\u5c42\u8fde\u63a5\u7ed3\u6784\u5305\u62ec\u4e00\u4e2a\u591a\u5934\u6ce8\u610f\u529b\u5b50\u5c42\u548c\u89c4\u8303\u5316\u5c42\u4ee5\u53ca\u4e00\u4e2a\u6b8b\u5dee\u8fde\u63a5\uff0c\u7b2c\u4e09\u4e2a\u5b50\u5c42\u8fde\u63a5\u7ed3\u6784\u5305\u62ec\u4e00\u4e2a\u524d\u9988\u5168\u8fde\u63a5\u5b50\u5c42\u548c\u89c4\u8303\u5316\u5c42\u4ee5\u53ca\u4e00\u4e2a\u6b8b\u5dee\u8fde\u63a5\u3002</p> <p></p> <p>\u89e3\u7801\u5668\u5c42\u4e2d\u7684\u5404\u4e2a\u5b50\u6a21\u5757\uff0c\u5982\uff0c\u591a\u5934\u6ce8\u610f\u529b\u673a\u5236\uff0c\u89c4\u8303\u5316\u5c42\uff0c\u524d\u9988\u5168\u8fde\u63a5\u90fd\u4e0e\u7f16\u7801\u5668\u4e2d\u7684\u5b9e\u73b0\u76f8\u540c\u3002</p> <p>\u6709\u4e00\u4e2a\u7ec6\u8282\u9700\u8981\u6ce8\u610f\uff0c\u7b2c\u4e00\u4e2a\u5b50\u5c42\u7684\u591a\u5934\u6ce8\u610f\u529b\u548c\u7f16\u7801\u5668\u4e2d\u5b8c\u5168\u4e00\u81f4\uff0c\u7b2c\u4e8c\u4e2a\u5b50\u5c42\uff0c\u5b83\u7684\u591a\u5934\u6ce8\u610f\u529b\u6a21\u5757\u4e2d\uff0cquery\u6765\u81ea\u4e0a\u4e00\u4e2a\u5b50\u5c42\uff0ckey \u548c value \u6765\u81ea\u7f16\u7801\u5668\u7684\u8f93\u51fa\u3002\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff0c\u5c31\u662f\u7b2c\u4e8c\u5c42\u8d1f\u8d23\uff0c\u5229\u7528\u89e3\u7801\u5668\u5df2\u7ecf\u9884\u6d4b\u51fa\u7684\u4fe1\u606f\u4f5c\u4e3aquery\uff0c\u53bb\u7f16\u7801\u5668\u63d0\u53d6\u7684\u5404\u79cd\u7279\u5f81\u4e2d\uff0c\u67e5\u627e\u76f8\u5173\u4fe1\u606f\u5e76\u878d\u5408\u5230\u5f53\u524d\u7279\u5f81\u4e2d\uff0c\u6765\u5b8c\u6210\u9884\u6d4b\u3002</p> <pre><code>#\u4f7f\u7528DecoderLayer\u7684\u7c7b\u5b9e\u73b0\u89e3\u7801\u5668\u5c42\nclass DecoderLayer(nn.Module):\n    \"Decoder is made of self-attn, src-attn, and feed forward (defined below)\"\n    def __init__(self, size, self_attn, src_attn, feed_forward, dropout):\n        #\u521d\u59cb\u5316\u51fd\u6570\u7684\u53c2\u6570\u67095\u4e2a\uff0c\u5206\u522b\u662fsize\uff0c\u4ee3\u8868\u8bcd\u5d4c\u5165\u7684\u7ef4\u5ea6\u5927\u5c0f\uff0c\u540c\u65f6\u4e5f\u4ee3\u8868\u89e3\u7801\u5668\u7684\u5c3a\u5bf8\uff0c\u7b2c\u4e8c\u4e2a\u662fself_attn\uff0c\u591a\u5934\u81ea\u6ce8\u610f\u529b\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u6ce8\u610f\u529b\u673a\u5236\u9700\u8981Q=K=V\uff0c\u7b2c\u4e09\u4e2a\u662fsrc_attn,\u591a\u5934\u6ce8\u610f\u529b\u5bf9\u8c61\uff0c\u8fd9\u91ccQ!=K=V\uff0c\u7b2c\u56db\u4e2a\u662f\u524d\u9988\u5168\u8fde\u63a5\u5c42\u5bf9\u8c61\uff0c\u6700\u540e\u5c31\u662fdropout\u7f6e0\u6bd4\u7387\n        super(DecoderLayer, self).__init__()\n        self.size = size\n        self.self_attn = self_attn\n        self.src_attn = src_attn\n        self.feed_forward = feed_forward\n        #\u6309\u7167\u7ed3\u6784\u56fe\u4f7f\u7528clones\u51fd\u6570\u514b\u9686\u4e09\u4e2a\u5b50\u5c42\u8fde\u63a5\u5bf9\u8c61\n        self.sublayer = clones(SublayerConnection(size, dropout), 3)\n\n    def forward(self, x, memory, src_mask, tgt_mask):\n        #forward\u51fd\u6570\u4e2d\u7684\u53c2\u6570\u67094\u4e2a\uff0c\u5206\u522b\u662f\u6765\u81ea\u4e0a\u4e00\u5c42\u7684\u8f93\u5165x\uff0c\u6765\u81ea\u7f16\u7801\u5668\u5c42\u7684\u8bed\u4e49\u5b58\u50a8\u53d8\u91cfmemory\uff0c\u4ee5\u53ca\u6e90\u6570\u636e\u63a9\u7801\u5f20\u91cf\u548c\u76ee\u6807\u6570\u636e\u63a9\u7801\u5f20\u91cf\uff0c\u5c06memory\u8868\u793a\u6210m\u4e4b\u540e\u65b9\u4fbf\u4f7f\u7528\u3002\n        \"Follow Figure 1 (right) for connections.\"\n        m = memory\n        #\u5c06x\u4f20\u5165\u7b2c\u4e00\u4e2a\u5b50\u5c42\u7ed3\u6784\uff0c\u7b2c\u4e00\u4e2a\u5b50\u5c42\u7ed3\u6784\u7684\u8f93\u5165\u5206\u522b\u662fx\u548cself-attn\u51fd\u6570\uff0c\u56e0\u4e3a\u662f\u81ea\u6ce8\u610f\u529b\u673a\u5236\uff0c\u6240\u4ee5Q,K,V\u90fd\u662fx\uff0c\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u65f6\u76ee\u6807\u6570\u636e\u63a9\u7801\u5f20\u91cf\uff0c\u8fd9\u65f6\u8981\u5bf9\u76ee\u6807\u6570\u636e\u8fdb\u884c\u906e\u63a9\uff0c\u56e0\u4e3a\u6b64\u65f6\u6a21\u578b\u53ef\u80fd\u8fd8\u6ca1\u6709\u751f\u6210\u4efb\u4f55\u76ee\u6807\u6570\u636e\u3002\n        #\u6bd4\u5982\u5728\u89e3\u7801\u5668\u51c6\u5907\u751f\u6210\u7b2c\u4e00\u4e2a\u5b57\u7b26\u6216\u8bcd\u6c47\u65f6\uff0c\u6211\u4eec\u5176\u5b9e\u5df2\u7ecf\u4f20\u5165\u4e86\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4ee5\u4fbf\u8ba1\u7b97\u635f\u5931\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u5e0c\u671b\u5728\u751f\u6210\u7b2c\u4e00\u4e2a\u5b57\u7b26\u65f6\u6a21\u578b\u80fd\u5229\u7528\u8fd9\u4e2a\u4fe1\u606f\uff0c\u56e0\u6b64\u6211\u4eec\u4f1a\u5c06\u5176\u906e\u63a9\uff0c\u540c\u6837\u751f\u6210\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u6216\u8bcd\u6c47\u65f6\uff0c\u6a21\u578b\u53ea\u80fd\u4f7f\u7528\u7b2c\u4e00\u4e2a\u5b57\u7b26\u6216\u8bcd\u6c47\u4fe1\u606f\uff0c\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4ee5\u53ca\u4e4b\u540e\u7684\u4fe1\u606f\u90fd\u4e0d\u5141\u8bb8\u88ab\u6a21\u578b\u4f7f\u7528\u3002\n        x = self.sublayer[0](x, lambda x: self.self_attn(x, x, x, tgt_mask))\n        #\u63a5\u7740\u8fdb\u5165\u7b2c\u4e8c\u4e2a\u5b50\u5c42\uff0c\u8fd9\u4e2a\u5b50\u5c42\u4e2d\u5e38\u89c4\u7684\u6ce8\u610f\u529b\u673a\u5236\uff0cq\u662f\u8f93\u5165x;k,v\u662f\u7f16\u7801\u5c42\u8f93\u51famemory\uff0c\u540c\u6837\u4e5f\u4f20\u5165source_mask\uff0c\u4f46\u662f\u8fdb\u884c\u6e90\u6570\u636e\u906e\u63a9\u7684\u539f\u56e0\u5e76\u975e\u662f\u6291\u5236\u4fe1\u606f\u6cc4\u9732\uff0c\u800c\u662f\u906e\u853d\u6389\u5bf9\u7ed3\u679c\u6ca1\u6709\u610f\u4e49\u7684padding\u3002\n        x = self.sublayer[1](x, lambda x: self.src_attn(x, m, m, src_mask))\n\n        #\u6700\u540e\u4e00\u4e2a\u5b50\u5c42\u5c31\u662f\u524d\u9988\u5168\u8fde\u63a5\u5b50\u5c42\uff0c\u7ecf\u8fc7\u5b83\u7684\u5904\u7406\u540e\u5c31\u53ef\u4ee5\u8fd4\u56de\u7ed3\u679c\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u7684\u89e3\u7801\u5668\u7ed3\u6784\n        return self.sublayer[2](x, self.feed_forward)\n</code></pre>"},{"location":"llm/chapter00/transformer/#_3","title":"\u56db\u3001\u6a21\u578b\u8f93\u51fa","text":"<p>\u8f93\u51fa\u90e8\u5206\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u6bcf\u4e2a\u65f6\u95f4\u6b65\u90fd\u8fc7\u4e00\u4e2a \u7ebf\u6027\u5c42 + softmax\u5c42</p> <p></p> <p>\u7ebf\u6027\u5c42\u7684\u4f5c\u7528\uff1a\u901a\u8fc7\u5bf9\u4e0a\u4e00\u6b65\u7684\u7ebf\u6027\u53d8\u5316\u5f97\u5230\u6307\u5b9a\u7ef4\u5ea6\u7684\u8f93\u51fa\uff0c\u4e5f\u5c31\u662f\u8f6c\u6362\u7ef4\u5ea6\u7684\u4f5c\u7528\u3002\u8f6c\u6362\u540e\u7684\u7ef4\u5ea6\u5bf9\u5e94\u7740\u8f93\u51fa\u7c7b\u522b\u7684\u4e2a\u6570\uff0c\u5982\u679c\u662f\u7ffb\u8bd1\u4efb\u52a1\uff0c\u90a3\u5c31\u5bf9\u5e94\u7684\u662f\u6587\u5b57\u5b57\u5178\u7684\u5927\u5c0f\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>#\u5c06\u7ebf\u6027\u5c42\u548csoftmax\u8ba1\u7b97\u5c42\u4e00\u8d77\u5b9e\u73b0\uff0c\u56e0\u4e3a\u4e8c\u8005\u7684\u5171\u540c\u76ee\u6807\u662f\u751f\u6210\u6700\u540e\u7684\u7ed3\u6784\n#\u56e0\u6b64\u628a\u7c7b\u7684\u540d\u5b57\u53eb\u505aGenerator\uff0c\u751f\u6210\u5668\u7c7b\nclass Generator(nn.Module):\n    \"Define standard linear + softmax generation step.\"\n    def __init__(self, d_model, vocab):\n        #\u521d\u59cb\u5316\u51fd\u6570\u7684\u8f93\u5165\u53c2\u6570\u6709\u4e24\u4e2a\uff0cd_model\u4ee3\u8868\u8bcd\u5d4c\u5165\u7ef4\u5ea6\uff0cvocab.size\u4ee3\u8868\u8bcd\u8868\u5927\u5c0f\n        super(Generator, self).__init__()\n        #\u9996\u5148\u5c31\u662f\u4f7f\u7528nn\u4e2d\u7684\u9884\u5b9a\u4e49\u7ebf\u6027\u5c42\u8fdb\u884c\u5b9e\u4f8b\u5316\uff0c\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61self.proj\u7b49\u5f85\u4f7f\u7528\n        #\u8fd9\u4e2a\u7ebf\u6027\u5c42\u7684\u53c2\u6570\u6709\u4e24\u4e2a\uff0c\u5c31\u662f\u521d\u59cb\u5316\u51fd\u6570\u4f20\u8fdb\u6765\u7684\u4e24\u4e2a\u53c2\u6570\uff1ad_model\uff0cvocab_size\n        self.proj = nn.Linear(d_model, vocab)\n\n    def forward(self, x):\n        #\u524d\u5411\u903b\u8f91\u51fd\u6570\u4e2d\u8f93\u5165\u662f\u4e0a\u4e00\u5c42\u7684\u8f93\u51fa\u5f20\u91cfx,\u5728\u51fd\u6570\u4e2d\uff0c\u9996\u5148\u4f7f\u7528\u4e0a\u4e00\u6b65\u5f97\u5230\u7684self.proj\u5bf9x\u8fdb\u884c\u7ebf\u6027\u53d8\u5316,\u7136\u540e\u4f7f\u7528F\u4e2d\u5df2\u7ecf\u5b9e\u73b0\u7684log_softmax\u8fdb\u884csoftmax\u5904\u7406\u3002\n        return F.log_softmax(self.proj(x), dim=-1)\n</code></pre>"},{"location":"llm/chapter00/transformer/#_4","title":"\u4e94\u3001\u6a21\u578b\u6784\u5efa","text":"<p>\u4e0b\u9762\u662fTransformer\u603b\u4f53\u67b6\u6784\u56fe\uff0c\u56de\u987e\u4e00\u4e0b\uff0c\u518d\u770b\u8fd9\u5f20\u56fe\uff0c\u662f\u4e0d\u662f\u6bcf\u4e2a\u6a21\u5757\u7684\u4f5c\u7528\u90fd\u6709\u4e86\u57fa\u672c\u7684\u8ba4\u77e5\u3002</p> <p></p> <p>\u4e0b\u9762\u6211\u4eec\u5c31\u53ef\u4ee5\u642d\u5efa\u51fa\u6574\u4e2a\u7f51\u7edc\u7684\u7ed3\u6784</p> <pre><code># Model Architecture\n#\u4f7f\u7528EncoderDecoder\u7c7b\u6765\u5b9e\u73b0\u7f16\u7801\u5668-\u89e3\u7801\u5668\u7ed3\u6784\nclass EncoderDecoder(nn.Module):\n    \"\"\"\n    A standard Encoder-Decoder architecture. \n    Base for this and many other models.\n    \"\"\"\n    def __init__(self, encoder, decoder, src_embed, tgt_embed, generator):\n        #\u521d\u59cb\u5316\u51fd\u6570\u4e2d\u67095\u4e2a\u53c2\u6570\uff0c\u5206\u522b\u662f\u7f16\u7801\u5668\u5bf9\u8c61\uff0c\u89e3\u7801\u5668\u5bf9\u8c61,\u6e90\u6570\u636e\u5d4c\u5165\u51fd\u6570\uff0c\u76ee\u6807\u6570\u636e\u5d4c\u5165\u51fd\u6570\uff0c\u4ee5\u53ca\u8f93\u51fa\u90e8\u5206\u7684\u7c7b\u522b\u751f\u6210\u5668\u5bf9\u8c61.\n        super(EncoderDecoder, self).__init__()\n        self.encoder = encoder\n        self.decoder = decoder\n        self.src_embed = src_embed    # input embedding module(input embedding + positional encode)\n        self.tgt_embed = tgt_embed    # ouput embedding module\n        self.generator = generator    # output generation module\n\n    def forward(self, src, tgt, src_mask, tgt_mask):\n        \"Take in and process masked src and target sequences.\"\n        #\u5728forward\u51fd\u6570\u4e2d\uff0c\u6709\u56db\u4e2a\u53c2\u6570\uff0csource\u4ee3\u8868\u6e90\u6570\u636e\uff0ctarget\u4ee3\u8868\u76ee\u6807\u6570\u636e,source_mask\u548ctarget_mask\u4ee3\u8868\u5bf9\u5e94\u7684\u63a9\u7801\u5f20\u91cf,\u5728\u51fd\u6570\u4e2d\uff0c\u5c06source source_mask\u4f20\u5165\u7f16\u7801\u51fd\u6570\uff0c\u5f97\u5230\u7ed3\u679c\u540e\u4e0esource_mask target \u548ctarget_mask\u4e00\u540c\u4f20\u7ed9\u89e3\u7801\u51fd\u6570\n        memory = self.encode(src, src_mask)\n        res = self.decode(memory, src_mask, tgt, tgt_mask)\n        return res\n\n    def encode(self, src, src_mask):\n        #\u7f16\u7801\u51fd\u6570\uff0c\u4ee5source\u548csource_mask\u4e3a\u53c2\u6570,\u4f7f\u7528src_embed\u5bf9source\u505a\u5904\u7406\uff0c\u7136\u540e\u548csource_mask\u4e00\u8d77\u4f20\u7ed9self.encoder\n        src_embedds = self.src_embed(src)\n        return self.encoder(src_embedds, src_mask)\n\n    def decode(self, memory, src_mask, tgt, tgt_mask):\n        #\u89e3\u7801\u51fd\u6570\uff0c\u4ee5memory\u5373\u7f16\u7801\u5668\u7684\u8f93\u51fa\uff0csource_mask target target_mask\u4e3a\u53c2\u6570,\u4f7f\u7528tgt_embed\u5bf9target\u505a\u5904\u7406\uff0c\u7136\u540e\u548csource_mask,target_mask,memory\u4e00\u8d77\u4f20\u7ed9self.decoder\n        target_embedds = self.tgt_embed(tgt)\n        return self.decoder(target_embedds, memory, src_mask, tgt_mask)\n\n\n# Full Model\ndef make_model(src_vocab, tgt_vocab, N=6, d_model=512, d_ff=2048, h=8, dropout=0.1):\n    \"\"\"\n    \u6784\u5efa\u6a21\u578b\n    params:\n        src_vocab:\n        tgt_vocab:\n        N: \u7f16\u7801\u5668\u548c\u89e3\u7801\u5668\u5806\u53e0\u57fa\u7840\u6a21\u5757\u7684\u4e2a\u6570\n        d_model: \u6a21\u578b\u4e2dembedding\u7684size\uff0c\u9ed8\u8ba4512\n        d_ff: FeedForward Layer\u5c42\u4e2dembedding\u7684size\uff0c\u9ed8\u8ba42048\n        h: MultiHeadAttention\u4e2d\u591a\u5934\u7684\u4e2a\u6570\uff0c\u5fc5\u987b\u88abd_model\u6574\u9664\n        dropout:\n    \"\"\"\n    c = copy.deepcopy\n    attn = MultiHeadedAttention(h, d_model)\n    ff = PositionwiseFeedForward(d_model, d_ff, dropout)\n    position = PositionalEncoding(d_model, dropout)\n    model = EncoderDecoder(\n        Encoder(EncoderLayer(d_model, c(attn), c(ff), dropout), N),\n        Decoder(DecoderLayer(d_model, c(attn), c(attn), c(ff), dropout), N),\n        nn.Sequential(Embeddings(d_model, src_vocab), c(position)),\n        nn.Sequential(Embeddings(d_model, tgt_vocab), c(position)),\n        Generator(d_model, tgt_vocab))\n\n    # This was important from their code. \n    # Initialize parameters with Glorot / fan_avg.\n    for p in model.parameters():\n        if p.dim() &gt; 1:\n            nn.init.xavier_uniform_(p)\n    return model\n</code></pre>"},{"location":"llm/chapter01/optimizer/","title":"\u4f18\u5316\u5668 \uff08optimizer\uff09","text":""},{"location":"llm/chapter01/optimizer/#01","title":"01\u3001\u6982\u8ff0","text":"<p>\u4f18\u5316\u5668\u6982\u8ff0</p>"},{"location":"llm/chapter01/optimizer/#02sgd","title":"02\u3001SGD","text":"<p>SGD\u6982\u5ff5\u8be6\u89e3</p> <p>\u8fd9\u662f\u6211\u7684\u7528\u6237\u8868\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u5f20\u4e09 \u7528\u6237 \u666e\u901a\u7528\u6237 admin \u7ba1\u7406\u5458 \u7cfb\u7edf\u7ba1\u7406\u5458"},{"location":"llm/huggingface/accelerate/","title":"accelerate","text":"<p>\u4ee5\u4e0b\u662f HuggingFace Accelerate \u5e93\u7684\u8be6\u7ec6\u4f7f\u7528\u6307\u5357\uff0c\u6db5\u76d6\u57fa\u7840\u914d\u7f6e\u3001\u5206\u5e03\u5f0f\u8bad\u7ec3\u3001\u6df7\u5408\u7cbe\u5ea6\u7b49\u6838\u5fc3\u529f\u80fd\uff1a</p>"},{"location":"llm/huggingface/accelerate/#_1","title":"\u76ee\u5f55","text":"<ol> <li>Accelerate \u7684\u6838\u5fc3\u4f5c\u7528</li> <li>\u5b89\u88c5\u4e0e\u73af\u5883\u914d\u7f6e</li> <li>\u5feb\u901f\u5165\u95e8\uff1a\u5355GPU \u2192 \u591aGPU/TPU\u8fc1\u79fb</li> <li>\u914d\u7f6e\u7cfb\u7edf\u53c2\u6570</li> <li>\u5173\u952e\u529f\u80fd\u8be6\u89e3</li> <li>\u5b9e\u6218\u6848\u4f8b</li> <li>\u8c03\u8bd5\u4e0e\u5e38\u89c1\u95ee\u9898</li> </ol>"},{"location":"llm/huggingface/accelerate/#1-accelerate","title":"1. Accelerate \u7684\u6838\u5fc3\u4f5c\u7528","text":"<ul> <li>\u5206\u5e03\u5f0f\u8bad\u7ec3\u7b80\u5316\uff1a\u65e0\u9700\u4fee\u6539\u4ee3\u7801\u5373\u53ef\u5728\u5355\u673a\u591a\u5361\u3001\u591a\u673a\u591a\u5361\u6216TPU\u4e0a\u8fd0\u884cPyTorch\u4ee3\u7801</li> <li>\u7edf\u4e00\u63a5\u53e3\uff1a\u81ea\u52a8\u5904\u7406\u591a\u8fdb\u7a0b\u542f\u52a8\u3001\u6570\u636e\u5e76\u884c\u3001\u6df7\u5408\u7cbe\u5ea6\u7b49\u590d\u6742\u903b\u8f91</li> <li>\u517c\u5bb9\u6027\uff1a\u4e0e<code>transformers</code>\u3001<code>datasets</code>\u7b49HuggingFace\u751f\u6001\u65e0\u7f1d\u96c6\u6210</li> </ul>"},{"location":"llm/huggingface/accelerate/#2","title":"2. \u5b89\u88c5\u4e0e\u521d\u59cb\u5316","text":"<pre><code>pip install accelerate\n</code></pre> <p>\u521d\u59cb\u5316\u914d\u7f6e\uff08\u9996\u6b21\u4f7f\u7528\uff09\uff1a <pre><code>accelerate config  # \u4ea4\u4e92\u5f0f\u751f\u6210\u914d\u7f6e\u6587\u4ef6\n</code></pre> \u914d\u7f6e\u6587\u4ef6\u4f1a\u4fdd\u5b58\u5728 <code>~/.cache/huggingface/accelerate/default_config.yaml</code></p>"},{"location":"llm/huggingface/accelerate/#3","title":"3. \u5feb\u901f\u5165\u95e8\uff1a\u6539\u9020\u73b0\u6709\u4ee3\u7801","text":""},{"location":"llm/huggingface/accelerate/#pytorch","title":"\u539f\u59cbPyTorch\u4ee3\u7801","text":"<pre><code>import torch\nmodel = torch.nn.Linear(2, 1)\noptimizer = torch.optim.Adam(model.parameters())\ndataset = [...]  # \u4f60\u7684\u6570\u636e\u96c6\ndataloader = torch.utils.data.DataLoader(dataset, batch_size=32)\n\nfor epoch in range(10):\n    for batch in dataloader:\n        optimizer.zero_grad()\n        inputs, targets = batch\n        outputs = model(inputs)\n        loss = torch.nn.functional.mse_loss(outputs, targets)\n        loss.backward()\n        optimizer.step()\n</code></pre>"},{"location":"llm/huggingface/accelerate/#accelerate","title":"\u4f7f\u7528Accelerate\u6539\u9020\u540e","text":"<pre><code>from accelerate import Accelerator\n\naccelerator = Accelerator()  # \u6838\u5fc3\u5bf9\u8c61\nmodel, optimizer, dataloader = accelerator.prepare(\n    model, optimizer, dataloader\n)\n\nfor epoch in range(10):\n    for batch in dataloader:\n        optimizer.zero_grad()\n        inputs, targets = batch\n        outputs = model(inputs)\n        loss = torch.nn.functional.mse_loss(outputs, targets)\n        accelerator.backward(loss)  # \u66ff\u6362loss.backward()\n        optimizer.step()\n</code></pre>"},{"location":"llm/huggingface/accelerate/#4","title":"4. \u6838\u5fc3\u914d\u7f6e\u8be6\u89e3","text":""},{"location":"llm/huggingface/accelerate/#default_configyaml","title":"\u914d\u7f6e\u6587\u4ef6\u793a\u4f8b (<code>default_config.yaml</code>)","text":"<pre><code>compute_environment: LOCAL_MACHINE\ndistributed_type: MULTI_GPU  # \u5206\u5e03\u5f0f\u7c7b\u578b\nnum_processes: 4             # \u603b\u8fdb\u7a0b\u6570\nmixed_precision: fp16        # \u6df7\u5408\u7cbe\u5ea6\nmachine_rank: 0              # \u673a\u5668\u5e8f\u53f7\uff08\u591a\u673a\u65f6\u91cd\u8981\uff09\nmain_process_ip: null\nmain_process_port: null\n</code></pre>"},{"location":"llm/huggingface/accelerate/#_2","title":"\u5173\u952e\u53c2\u6570\u8bf4\u660e","text":"\u53c2\u6570 \u53ef\u9009\u503c \u4f5c\u7528 <code>distributed_type</code> <code>NO</code>/<code>MULTI_GPU</code>/<code>MULTI_CPU</code>/<code>TPU</code> \u5206\u5e03\u5f0f\u7c7b\u578b <code>num_processes</code> int \u603b\u8fdb\u7a0b\u6570\uff08\u901a\u5e38=GPU\u6570\u91cf\uff09 <code>mixed_precision</code> <code>no</code>/<code>fp16</code>/<code>bf16</code> \u6df7\u5408\u7cbe\u5ea6\u6a21\u5f0f <code>gradient_accumulation_steps</code> int \u68af\u5ea6\u7d2f\u79ef\u6b65\u6570"},{"location":"llm/huggingface/accelerate/#5","title":"5. \u5173\u952e\u529f\u80fd\u8be6\u89e3","text":""},{"location":"llm/huggingface/accelerate/#51-ddp","title":"5.1 \u5206\u5e03\u5f0f\u6570\u636e\u5e76\u884c (DDP)","text":"<p><pre><code>model, optimizer, dataloader = accelerator.prepare(\n    model, optimizer, dataloader\n)\n</code></pre> - \u81ea\u52a8\u5207\u5206\u6570\u636e\uff1a\u6bcf\u4e2a\u8fdb\u7a0b\u83b7\u5f97\u4e0d\u540c\u7684\u6570\u636e\u5206\u7247 - \u540c\u6b65\u68af\u5ea6\uff1a\u81ea\u52a8\u5904\u7406<code>all_reduce</code>\u64cd\u4f5c</p>"},{"location":"llm/huggingface/accelerate/#52","title":"5.2 \u6df7\u5408\u7cbe\u5ea6\u8bad\u7ec3","text":"<p><pre><code>accelerator = Accelerator(mixed_precision=\"fp16\")\n</code></pre> - \u81ea\u52a8\u7ba1\u7406<code>autocast</code>\u4e0a\u4e0b\u6587\u548c\u68af\u5ea6\u7f29\u653e</p>"},{"location":"llm/huggingface/accelerate/#53","title":"5.3 \u68af\u5ea6\u7d2f\u79ef","text":"<p><pre><code>accelerator = Accelerator(gradient_accumulation_steps=4)\n</code></pre> - \u5728\u5c0f\u6279\u91cf\u573a\u666f\u4e0b\u6a21\u62df\u5927\u6279\u91cf\u8bad\u7ec3</p>"},{"location":"llm/huggingface/accelerate/#54","title":"5.4 \u591a\u673a\u5668\u8bad\u7ec3","text":"<p>\u542f\u52a8\u547d\u4ee4\uff08\u6bcf\u4e2a\u8282\u70b9\u6267\u884c\uff09\uff1a <pre><code>accelerate launch --num_processes 8 --num_machines 2 --machine_rank 0 main.py\n</code></pre></p>"},{"location":"llm/huggingface/accelerate/#55","title":"5.5 \u4fdd\u5b58/\u52a0\u8f7d\u72b6\u6001","text":"<pre><code># \u4fdd\u5b58\naccelerator.save_state(\"checkpoint/\")\n\n# \u52a0\u8f7d\naccelerator.load_state(\"checkpoint/\")\n</code></pre>"},{"location":"llm/huggingface/accelerate/#6-transformers","title":"6. \u5b9e\u6218\u6848\u4f8b\uff1a\u7ed3\u5408Transformers\u8bad\u7ec3\u6a21\u578b","text":"<pre><code>from accelerate import Accelerator\nfrom transformers import AutoModelForSequenceClassification, AutoTokenizer\n\naccelerator = Accelerator()\n\n# \u521d\u59cb\u5316\u6a21\u578b\u548c\u5206\u8bcd\u5668\nmodel = AutoModelForSequenceClassification.from_pretrained(\"bert-base-uncased\")\ntokenizer = AutoTokenizer.from_pretrained(\"bert-base-uncased\")\n\n# \u51c6\u5907\u6570\u636e\ndef tokenize_function(examples):\n    return tokenizer(examples[\"text\"], padding=\"max_length\", truncation=True)\n\ndataset = load_dataset(\"imdb\")\ndataset = dataset.map(tokenize_function, batched=True)\ndataloader = DataLoader(dataset[\"train\"], batch_size=16, shuffle=True)\n\n# \u51c6\u5907\u5206\u5e03\u5f0f\u7ec4\u4ef6\noptimizer = AdamW(model.parameters(), lr=5e-5)\nmodel, optimizer, dataloader = accelerator.prepare(model, optimizer, dataloader)\n\n# \u8bad\u7ec3\u5faa\u73af\nfor epoch in range(3):\n    for batch in dataloader:\n        outputs = model(**batch)\n        loss = outputs.loss\n        accelerator.backward(loss)\n        optimizer.step()\n        optimizer.zero_grad()\n</code></pre>"},{"location":"llm/huggingface/accelerate/#7","title":"7. \u8c03\u8bd5\u4e0e\u5e38\u89c1\u95ee\u9898","text":""},{"location":"llm/huggingface/accelerate/#q1","title":"Q1: \u5982\u4f55\u5224\u65ad\u662f\u5426\u542f\u7528\u5206\u5e03\u5f0f\uff1f","text":"<pre><code>print(accelerator.distributed_type)  # \u67e5\u770b\u5f53\u524d\u5206\u5e03\u5f0f\u6a21\u5f0f\nprint(accelerator.is_local_main_process)  # \u662f\u5426\u4e3a\u4e3b\u8fdb\u7a0b\n</code></pre>"},{"location":"llm/huggingface/accelerate/#q2","title":"Q2: \u591a\u8fdb\u7a0b\u4e0b\u5982\u4f55\u5b89\u5168\u6253\u5370\u65e5\u5fd7\uff1f","text":"<pre><code>if accelerator.is_local_main_process:\n    print(\"\u4ec5\u4e3b\u8fdb\u7a0b\u6253\u5370\")\n</code></pre>"},{"location":"llm/huggingface/accelerate/#q3","title":"Q3: \u5982\u4f55\u5904\u7406\u8fdb\u7a0b\u95f4\u540c\u6b65\uff1f","text":"<pre><code>accelerator.wait_for_everyone()  # \u963b\u585e\u76f4\u5230\u6240\u6709\u8fdb\u7a0b\u5b8c\u6210\n</code></pre>"},{"location":"llm/huggingface/accelerate/#q4","title":"Q4: \u5185\u5b58\u4e0d\u8db3\u600e\u4e48\u529e\uff1f","text":"<ul> <li>\u542f\u7528\u68af\u5ea6\u68c0\u67e5\u70b9\uff1a   <pre><code>model.gradient_checkpointing_enable()\n</code></pre></li> <li>\u4f7f\u7528<code>fp16</code>/<code>bf16</code>\u6df7\u5408\u7cbe\u5ea6</li> <li>\u51cf\u5c11<code>batch_size</code></li> </ul>"},{"location":"llm/huggingface/accelerate/#8","title":"8. \u5e38\u7528\u547d\u4ee4","text":""},{"location":"llm/huggingface/accelerate/#_3","title":"\u76f4\u63a5\u542f\u52a8\u811a\u672c","text":"<pre><code>accelerate launch --num_processes 4 train.py  # \u542f\u52a84\u8fdb\u7a0b\n</code></pre>"},{"location":"llm/huggingface/accelerate/#_4","title":"\u67e5\u770b\u914d\u7f6e","text":"<pre><code>accelerate env  # \u663e\u793a\u5f53\u524d\u73af\u5883\u4fe1\u606f\n</code></pre> <p>\u901a\u8fc7 Accelerate\uff0c\u4f60\u53ef\u4ee5\u7528 \u540c\u4e00\u4efd\u4ee3\u7801 \u65e0\u7f1d\u8fd0\u884c\u5728\u4ee5\u4e0b\u573a\u666f\uff1a - \u5355CPU - \u5355GPU - \u591aGPU\u5355\u673a - \u591aGPU\u591a\u673a - TPU</p> <p>\u5b98\u65b9\u6587\u6863\u53c2\u8003\uff1aAccelerate Documentation</p>"},{"location":"llm/huggingface/autoclass/","title":"AutoModel\u548cAutoTokenizer","text":""},{"location":"llm/huggingface/autoclass/#1","title":"1. \u6838\u5fc3\u6982\u5ff5","text":"<ul> <li><code>AutoModel</code>: \u6839\u636e\u6a21\u578b\u540d\u79f0\u81ea\u52a8\u52a0\u8f7d\u9884\u8bad\u7ec3\u6a21\u578b\u7684\u57fa\u7c7b\uff08\u5982BERT\u3001GPT-2\u7b49\uff09\u3002</li> <li><code>Tokenizer</code>: \u8d1f\u8d23\u5c06\u6587\u672c\u8f6c\u6362\u4e3a\u6a21\u578b\u53ef\u63a5\u53d7\u7684\u6570\u503c\u8f93\u5165\uff08\u5982\u5206\u8bcd\u3001\u6dfb\u52a0\u7279\u6b8a\u6807\u8bb0\u7b49\uff09\u3002</li> </ul>"},{"location":"llm/huggingface/autoclass/#2","title":"2. \u57fa\u672c\u7528\u6cd5","text":""},{"location":"llm/huggingface/autoclass/#1_1","title":"\u6b65\u9aa4 1\uff1a\u5b89\u88c5\u5e93","text":"<pre><code>pip install transformers torch\n</code></pre>"},{"location":"llm/huggingface/autoclass/#2_1","title":"\u6b65\u9aa4 2\uff1a\u52a0\u8f7d\u6a21\u578b\u548c\u5206\u8bcd\u5668","text":"<pre><code>from transformers import AutoModel, AutoTokenizer\n\n# \u6307\u5b9a\u6a21\u578b\u540d\u79f0\uff08Hugging Face Hub \u4e2d\u7684\u540d\u79f0\uff09\nmodel_name = \"bert-base-uncased\"\n\n# \u52a0\u8f7d\u9884\u8bad\u7ec3\u7684\u5206\u8bcd\u5668\u548c\u6a21\u578b\ntokenizer = AutoTokenizer.from_pretrained(model_name)\nmodel = AutoModel.from_pretrained(model_name)\n</code></pre>"},{"location":"llm/huggingface/autoclass/#3-tokenizer","title":"3. \u6587\u672c\u9884\u5904\u7406\uff08Tokenizer \u7684\u7528\u6cd5\uff09","text":""},{"location":"llm/huggingface/autoclass/#1_2","title":"\u793a\u4f8b 1\uff1a\u57fa\u7840\u5206\u8bcd","text":"<pre><code>text = \"Hugging Face Transformers is amazing!\"\n\n# \u5206\u8bcd\u5e76\u8f6c\u6362\u4e3a\u6a21\u578b\u8f93\u5165\u683c\u5f0f\ninputs = tokenizer(text, return_tensors=\"pt\")  # \u8fd4\u56dePyTorch\u5f20\u91cf\n\nprint(inputs)\n# \u8f93\u51fa:\n# {'input_ids': tensor([[ 101, 17662,  1437, 11303,  ... ]]),\n#  'attention_mask': tensor([[1, 1, 1, ..., 1]])}\n</code></pre>"},{"location":"llm/huggingface/autoclass/#_1","title":"\u91cd\u8981\u53c2\u6570","text":"<ul> <li><code>padding=True</code>: \u81ea\u52a8\u586b\u5145\u5230\u6279\u6b21\u5185\u6700\u957f\u957f\u5ea6</li> <li><code>truncation=True</code>: \u622a\u65ad\u8d85\u8fc7\u6a21\u578b\u6700\u5927\u957f\u5ea6\u7684\u6587\u672c</li> <li><code>max_length=512</code>: \u6307\u5b9a\u6700\u5927\u957f\u5ea6</li> <li><code>return_tensors=\"pt\"</code>: \u8fd4\u56dePyTorch\u5f20\u91cf\uff08\u53ef\u9009 <code>\"tf\"</code> \u4e3aTensorFlow\uff09</li> </ul>"},{"location":"llm/huggingface/autoclass/#2_2","title":"\u793a\u4f8b 2\uff1a\u6279\u91cf\u5904\u7406","text":"<pre><code>texts = [\"Hello, world!\", \"How are you?\"]\ninputs = tokenizer(\n    texts, \n    padding=True, \n    truncation=True, \n    return_tensors=\"pt\"\n)\n</code></pre>"},{"location":"llm/huggingface/autoclass/#4-automodel","title":"4. \u6a21\u578b\u63a8\u7406\uff08AutoModel \u7684\u7528\u6cd5\uff09","text":""},{"location":"llm/huggingface/autoclass/#1_3","title":"\u793a\u4f8b 1\uff1a\u83b7\u53d6\u9690\u85cf\u72b6\u6001","text":"<pre><code># \u5c06\u8f93\u5165\u4f20\u9012\u7ed9\u6a21\u578b\noutputs = model(**inputs)\n\n# \u63d0\u53d6\u6700\u540e\u4e00\u5c42\u9690\u85cf\u72b6\u6001\nlast_hidden_states = outputs.last_hidden_state\nprint(last_hidden_states.shape)  # (batch_size, sequence_length, hidden_dim)\n</code></pre>"},{"location":"llm/huggingface/autoclass/#2_3","title":"\u793a\u4f8b 2\uff1a\u7279\u5b9a\u4efb\u52a1\u6a21\u578b","text":"<p>\u9488\u5bf9\u4e0d\u540c\u4efb\u52a1\u9700\u4f7f\u7528\u5bf9\u5e94\u7684 <code>AutoModelForXXX</code> \u7c7b\uff1a <pre><code>from transformers import AutoModelForSequenceClassification\n\n# \u52a0\u8f7d\u6587\u672c\u5206\u7c7b\u6a21\u578b\nmodel = AutoModelForSequenceClassification.from_pretrained(\"distilbert-base-uncased-finetuned-sst-2-english\")\n\n# \u63a8\u7406\ninputs = tokenizer(\"I love this movie!\", return_tensors=\"pt\")\noutputs = model(**inputs)\n\n# \u8f93\u51falogits\nlogits = outputs.logits\nprint(logits)  # tensor([[ 4.1234, -3.4567]])\n</code></pre></p>"},{"location":"llm/huggingface/autoclass/#5","title":"5. \u8fdb\u9636\u7528\u6cd5","text":""},{"location":"llm/huggingface/autoclass/#_2","title":"\u81ea\u5b9a\u4e49\u8f93\u5165\u683c\u5f0f","text":"<pre><code># \u624b\u52a8\u6dfb\u52a0\u7279\u6b8a\u6807\u8bb0\uff08\u5982BERT\u7684[CLS]\u548c[SEP]\uff09\ntext = \"[CLS] \" + text + \" [SEP]\"\ntokens = tokenizer.tokenize(text)\n</code></pre>"},{"location":"llm/huggingface/autoclass/#_3","title":"\u4fdd\u5b58\u4e0e\u52a0\u8f7d\u672c\u5730\u6a21\u578b","text":"<pre><code># \u4fdd\u5b58\u5230\u672c\u5730\nmodel.save_pretrained(\"./my_model\")\ntokenizer.save_pretrained(\"./my_model\")\n\n# \u4ece\u672c\u5730\u52a0\u8f7d\nmodel = AutoModel.from_pretrained(\"./my_model\")\ntokenizer = AutoTokenizer.from_pretrained(\"./my_model\")\n</code></pre>"},{"location":"llm/huggingface/autoclass/#gpu","title":"GPU\u52a0\u901f","text":"<pre><code>model = model.to(\"cuda\")  # \u5c06\u6a21\u578b\u79fb\u52a8\u5230GPU\ninputs = {k: v.to(\"cuda\") for k, v in inputs.items()}  # \u8f93\u5165\u6570\u636e\u79fb\u52a8\u5230GPU\n</code></pre>"},{"location":"llm/huggingface/autoclass/#6","title":"6. \u5b8c\u6574\u6d41\u7a0b\u793a\u4f8b\uff08\u60c5\u611f\u5206\u6790\uff09","text":"<pre><code>from transformers import AutoModelForSequenceClassification, AutoTokenizer\nimport torch\n\n# \u52a0\u8f7d\u6a21\u578b\u548c\u5206\u8bcd\u5668\nmodel_name = \"distilbert-base-uncased-finetuned-sst-2-english\"\ntokenizer = AutoTokenizer.from_pretrained(model_name)\nmodel = AutoModelForSequenceClassification.from_pretrained(model_name)\n\n# \u8f93\u5165\u6587\u672c\ntext = \"Hugging Face makes NLP easy and fun!\"\n\n# \u9884\u5904\u7406\ninputs = tokenizer(text, return_tensors=\"pt\")\n\n# \u63a8\u7406\nwith torch.no_grad():\n    outputs = model(**inputs)\n\n# \u540e\u5904\u7406\npredictions = torch.nn.functional.softmax(outputs.logits, dim=-1)\nlabels = [\"NEGATIVE\", \"POSITIVE\"]\nprint(f\"Prediction: {labels[predictions.argmax()]} ({predictions.max().item():.2f})\")\n# \u8f93\u51fa: Prediction: POSITIVE (0.99)\n</code></pre>"},{"location":"llm/huggingface/autoclass/#7","title":"7. \u5173\u952e\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>\u6a21\u578b\u4e0e\u4efb\u52a1\u5339\u914d\uff1a\u786e\u4fdd\u4f7f\u7528\u6b63\u786e\u7684 <code>AutoModelForXXX</code> \u7c7b\uff08\u5982 <code>AutoModelForQuestionAnswering</code> \u7528\u4e8e\u95ee\u7b54\u4efb\u52a1\uff09\u3002</li> <li>\u8f93\u5165\u683c\u5f0f\uff1a\u4e0d\u540c\u6a21\u578b\u53ef\u80fd\u9700\u8981\u4e0d\u540c\u7684\u7279\u6b8a\u6807\u8bb0\uff08\u5982BERT\u9700\u8981 <code>[CLS]</code> \u548c <code>[SEP]</code>\uff0c\u4f46Tokenizer\u4f1a\u81ea\u52a8\u5904\u7406\uff09\u3002</li> <li>\u5185\u5b58\u7ba1\u7406\uff1a\u5927\u6a21\u578b\u53ef\u80fd\u9700\u8981 <code>from_pretrained(..., device_map=\"auto\")</code> \u8fdb\u884c\u5206\u5e03\u5f0f\u52a0\u8f7d\u3002</li> <li>\u5fae\u8c03\u8bad\u7ec3\uff1a\u5728\u6a21\u578b\u4e0a\u6dfb\u52a0\u81ea\u5b9a\u4e49\u5206\u7c7b\u5934\u5e76\u8c03\u7528 <code>model.train()</code>\u3002</li> </ol>"},{"location":"llm/huggingface/autoclass/#8","title":"8. \u5e38\u89c1\u95ee\u9898\u89e3\u51b3","text":"<ul> <li><code>CUDA out of memory</code>: \u51cf\u5c0f\u6279\u6b21\u5927\u5c0f\u6216\u4f7f\u7528\u68af\u5ea6\u7d2f\u79ef\u3002</li> <li><code>Input length exceeds max_length</code>: \u8bbe\u7f6e <code>truncation=True</code> \u6216\u589e\u5927 <code>max_length</code>\u3002</li> <li><code>No module named 'transformers'</code>: \u68c0\u67e5\u662f\u5426\u5b89\u88c5\u4e86\u6b63\u786e\u7684\u5e93\u7248\u672c\u3002</li> </ul> <p>\u901a\u8fc7\u638c\u63e1 <code>AutoModel</code> \u548c <code>Tokenizer</code> \u7684\u7528\u6cd5\uff0c\u4f60\u53ef\u4ee5\u7075\u6d3b\u5b9e\u73b0\u4ece\u6587\u672c\u9884\u5904\u7406\u5230\u6a21\u578b\u63a8\u7406\u7684\u5b8c\u6574\u6d41\u7a0b\uff0c\u5e76\u4e3a\u540e\u7eed\u7684\u6a21\u578b\u5fae\u8c03\u5960\u5b9a\u57fa\u7840\u3002</p>"},{"location":"llm/huggingface/datasets/","title":"datasets","text":"<p>\u4ee5\u4e0b\u662f Hugging Face <code>datasets</code> \u5e93 \u7684\u8be6\u7ec6\u4f7f\u7528\u6559\u7a0b\uff0c\u6db5\u76d6\u6570\u636e\u52a0\u8f7d\u3001\u5904\u7406\u3001\u6d41\u5f0f\u52a0\u8f7d\u53ca\u5b9e\u6218\u793a\u4f8b\u3002</p>"},{"location":"llm/huggingface/datasets/#1","title":"1. \u5b89\u88c5\u4e0e\u57fa\u7840\u7528\u6cd5","text":""},{"location":"llm/huggingface/datasets/#_1","title":"\u5b89\u88c5\u5e93","text":"<pre><code>pip install datasets\n</code></pre>"},{"location":"llm/huggingface/datasets/#_2","title":"\u52a0\u8f7d\u5185\u7f6e\u6570\u636e\u96c6","text":"<pre><code>from datasets import load_dataset\n\n# \u52a0\u8f7d\u5e38\u89c1\u6570\u636e\u96c6\uff08\u5982 GLUE \u4e2d\u7684 MNLI\uff09\ndataset = load_dataset(\"glue\", \"mnli\")  # \u8fd4\u56de DatasetDict \u5bf9\u8c61\n\n# \u67e5\u770b\u6570\u636e\u96c6\u7ed3\u6784\nprint(dataset)  # \u8f93\u51fa\u6570\u636e\u96c6\u5212\u5206\uff08train/validation/test\uff09\nprint(dataset[\"train\"][0])  # \u67e5\u770b\u7b2c\u4e00\u6761\u8bad\u7ec3\u6570\u636e\n</code></pre>"},{"location":"llm/huggingface/datasets/#2","title":"2. \u6570\u636e\u96c6\u64cd\u4f5c","text":""},{"location":"llm/huggingface/datasets/#_3","title":"\u8bbf\u95ee\u6570\u636e","text":"<pre><code># \u83b7\u53d6\u8bad\u7ec3\u96c6\u3001\u9a8c\u8bc1\u96c6\u3001\u6d4b\u8bd5\u96c6\ntrain_data = dataset[\"train\"]\nval_data = dataset[\"validation_matched\"]  # MNLI \u7684\u7279\u6b8a\u9a8c\u8bc1\u96c6\n\n# \u8bbf\u95ee\u5355\u6761\u6570\u636e\nprint(train_data[0])\n\n# \u6279\u91cf\u8bbf\u95ee\nfor batch in train_data.select(range(10)):  # \u524d10\u6761\n    print(batch[\"premise\"], batch[\"hypothesis\"], batch[\"label\"])\n</code></pre>"},{"location":"llm/huggingface/datasets/#_4","title":"\u6570\u636e\u96c6\u5212\u5206","text":"<pre><code># \u5206\u5272\u8bad\u7ec3\u96c6\u4e3a train \u548c test\uff08\u81ea\u5b9a\u4e49\u6bd4\u4f8b\uff09\nsplit_dataset = dataset[\"train\"].train_test_split(test_size=0.1)\nprint(split_dataset)  # \u5305\u542b train \u548c test \u5b50\u96c6\n</code></pre>"},{"location":"llm/huggingface/datasets/#3","title":"3. \u5904\u7406\u81ea\u5b9a\u4e49\u6570\u636e","text":""},{"location":"llm/huggingface/datasets/#_5","title":"\u52a0\u8f7d\u672c\u5730\u6587\u4ef6","text":"<p>\u652f\u6301 CSV\u3001JSON\u3001\u6587\u672c\u7b49\u683c\u5f0f\uff1a <pre><code># \u52a0\u8f7d CSV \u6587\u4ef6\ncustom_dataset = load_dataset(\"csv\", data_files={\"train\": \"data/train.csv\", \"test\": \"data/test.csv\"})\n\n# \u52a0\u8f7d JSON\ncustom_dataset = load_dataset(\"json\", data_files=\"data/*.json\")\n\n# \u52a0\u8f7d\u6587\u672c\uff08\u6bcf\u884c\u4e00\u4e2a\u6837\u672c\uff09\ntext_dataset = load_dataset(\"text\", data_files=\"data/texts.txt\")\n</code></pre></p>"},{"location":"llm/huggingface/datasets/#_6","title":"\u81ea\u5b9a\u4e49\u6570\u636e\u751f\u6210\u5668","text":"<pre><code>from datasets import Dataset\n\n# \u4ece Python \u5b57\u5178\u6216\u5217\u8868\u521b\u5efa\ndata = {\"text\": [\"Hello!\", \"How are you?\"], \"label\": [0, 1]}\ncustom_ds = Dataset.from_dict(data)\n\n# \u4ece\u751f\u6210\u5668\u521b\u5efa\uff08\u9002\u5408\u5927\u578b\u6570\u636e\uff09\ndef data_generator():\n    for i in range(1000):\n        yield {\"text\": f\"Sample {i}\", \"label\": i % 2}\n\nstreaming_ds = Dataset.from_generator(data_generator)\n</code></pre>"},{"location":"llm/huggingface/datasets/#4","title":"4. \u6570\u636e\u9884\u5904\u7406","text":""},{"location":"llm/huggingface/datasets/#map","title":"\u4f7f\u7528 <code>map</code> \u51fd\u6570","text":"<pre><code># \u793a\u4f8b\uff1a\u5206\u8bcd\u5904\u7406\nfrom transformers import AutoTokenizer\ntokenizer = AutoTokenizer.from_pretrained(\"bert-base-uncased\")\n\ndef tokenize_function(examples):\n    return tokenizer(\n        examples[\"premise\"],\n        examples[\"hypothesis\"],\n        truncation=True,\n        max_length=128,\n        padding=\"max_length\"\n    )\n\ntokenized_dataset = dataset.map(tokenize_function, batched=True)\n</code></pre>"},{"location":"llm/huggingface/datasets/#_7","title":"\u8fc7\u6ee4\u6570\u636e","text":"<pre><code># \u8fc7\u6ee4\u957f\u5ea6\u8fc7\u77ed\u7684\u6587\u672c\nfiltered_dataset = dataset.filter(\n    lambda example: len(example[\"premise\"].split()) &gt; 5\n)\n</code></pre>"},{"location":"llm/huggingface/datasets/#5","title":"5. \u6d41\u5f0f\u6a21\u5f0f\u5904\u7406\u5927\u6570\u636e","text":"<p>\u5bf9\u4e8e\u8d85\u5927\u6570\u636e\u96c6\uff08\u5982 &gt;100GB\uff09\uff0c\u4f7f\u7528\u6d41\u5f0f\u52a0\u8f7d\u907f\u514d\u5185\u5b58\u6ea2\u51fa\uff1a <pre><code># \u6d41\u5f0f\u52a0\u8f7d\uff08\u9010\u6761\u8bfb\u53d6\uff09\nstream_dataset = load_dataset(\"c4\", \"en\", streaming=True)\nfor example in iter(stream_dataset[\"train\"]):  # \u9010\u4e2a\u6837\u672c\u52a0\u8f7d\n    print(example[\"text\"])\n    break  # \u793a\u4f8b\u4ec5\u8bfb\u53d6\u7b2c\u4e00\u6761\n\n# \u6279\u91cf\u5904\u7406\uff08\u6d41\u5f0f + map\uff09\ntokenized_stream = stream_dataset.map(tokenize_function, batched=True)\n</code></pre></p>"},{"location":"llm/huggingface/datasets/#6-pytorchtensorflow","title":"6. \u8f6c\u6362\u4e3a PyTorch/TensorFlow \u683c\u5f0f","text":""},{"location":"llm/huggingface/datasets/#pytorch-dataloader","title":"PyTorch DataLoader","text":"<pre><code>from torch.utils.data import DataLoader\n\n# \u8bbe\u7f6e\u6570\u636e\u683c\u5f0f\u4e3a PyTorch Tensor\ntokenized_dataset.set_format(\"torch\", columns=[\"input_ids\", \"attention_mask\", \"label\"])\n\n# \u521b\u5efa DataLoader\ndataloader = DataLoader(tokenized_dataset[\"train\"], batch_size=32, shuffle=True)\n</code></pre>"},{"location":"llm/huggingface/datasets/#tensorflow","title":"TensorFlow","text":"<pre><code>tf_dataset = tokenized_dataset[\"train\"].to_tf_dataset(\n    columns=[\"input_ids\", \"attention_mask\"],\n    label_cols=[\"label\"],\n    batch_size=32,\n    shuffle=True\n)\n</code></pre>"},{"location":"llm/huggingface/datasets/#7","title":"7. \u5b9e\u6218\u793a\u4f8b\uff1a\u6587\u672c\u5206\u7c7b","text":""},{"location":"llm/huggingface/datasets/#_8","title":"\u5b8c\u6574\u6d41\u7a0b","text":"<pre><code>from datasets import load_dataset\nfrom transformers import AutoTokenizer, AutoModelForSequenceClassification, Trainer\n\n# \u52a0\u8f7d\u6570\u636e\u96c6\ndataset = load_dataset(\"imdb\")\n\n# \u5206\u8bcd\u5904\u7406\ntokenizer = AutoTokenizer.from_pretrained(\"bert-base-uncased\")\ndef tokenize(examples):\n    return tokenizer(examples[\"text\"], truncation=True, padding=\"max_length\")\n\ndataset = dataset.map(tokenize, batched=True)\n\n# \u8f6c\u6362\u4e3a PyTorch \u683c\u5f0f\ndataset.set_format(\"torch\", columns=[\"input_ids\", \"attention_mask\", \"label\"])\n\n# \u5b9a\u4e49\u6a21\u578b\nmodel = AutoModelForSequenceClassification.from_pretrained(\"bert-base-uncased\", num_labels=2)\n\n# \u4f7f\u7528 Trainer \u8bad\u7ec3\ntrainer = Trainer(\n    model=model,\n    train_dataset=dataset[\"train\"],\n    eval_dataset=dataset[\"test\"],\n)\ntrainer.train()\n</code></pre>"},{"location":"llm/huggingface/datasets/#8","title":"8. \u9ad8\u7ea7\u529f\u80fd","text":""},{"location":"llm/huggingface/datasets/#_9","title":"\u6570\u636e\u96c6\u7f13\u5b58","text":"<ul> <li>\u9ed8\u8ba4\u7f13\u5b58\u8def\u5f84\uff1a<code>~/.cache/huggingface/datasets</code></li> <li>\u81ea\u5b9a\u4e49\u7f13\u5b58\u8def\u5f84\uff1a   <pre><code>dataset = load_dataset(\"glue\", \"mnli\", cache_dir=\"./my_cache\")\n</code></pre></li> </ul>"},{"location":"llm/huggingface/datasets/#_10","title":"\u6027\u80fd\u4f18\u5316","text":"<ul> <li>\u6279\u91cf\u5904\u7406\uff1a<code>map(..., batched=True)</code> \u6bd4\u9010\u6761\u5904\u7406\u5feb 10 \u500d\u4ee5\u4e0a\u3002</li> <li>\u591a\u8fdb\u7a0b\uff1a   <pre><code>dataset.map(..., num_proc=4)  # \u4f7f\u7528 4 \u4e2a\u8fdb\u7a0b\n</code></pre></li> </ul>"},{"location":"llm/huggingface/datasets/#_11","title":"\u6570\u636e\u96c6\u53ef\u89c6\u5316","text":"<pre><code># \u67e5\u770b\u7279\u5f81\u7ed3\u6784\nprint(dataset[\"train\"].features)\n\n# \u751f\u6210\u7edf\u8ba1\u6458\u8981\nimport pandas as pd\ndf = pd.DataFrame(dataset[\"train\"])\nprint(df.describe())\n</code></pre> <p>\u901a\u8fc7 <code>datasets</code> \u5e93\uff0c\u4f60\u53ef\u4ee5\u9ad8\u6548\u7ba1\u7406 NLP\u3001CV\u3001\u8bed\u97f3\u7b49\u4efb\u52a1\u7684\u6570\u636e\uff0c\u7ed3\u5408 <code>transformers</code> \u5e93\u5b9e\u73b0\u7aef\u5230\u7aef\u6a21\u578b\u8bad\u7ec3\u3002</p>"},{"location":"llm/huggingface/evaluate/","title":"evaluate \u6559\u7a0b","text":"<p>\u4ee5\u4e0b\u662f Hugging Face <code>evaluate</code> \u5e93 \u7684\u8be6\u7ec6\u4f7f\u7528\u6559\u7a0b\uff0c\u6db5\u76d6\u6307\u6807\u52a0\u8f7d\u3001\u8bc4\u4f30\u6d41\u7a0b\u8bbe\u8ba1\u4ee5\u53ca\u5b9e\u6218\u793a\u4f8b\u3002\u8be5\u5e93\u65e8\u5728\u6807\u51c6\u5316\u6a21\u578b\u8bc4\u4f30\u6d41\u7a0b\uff0c\u652f\u6301\u591a\u79cd\u4efb\u52a1\uff08NLP\u3001CV\u3001\u8bed\u97f3\u7b49\uff09\u7684\u8bc4\u4f30\u6307\u6807\u3002</p>"},{"location":"llm/huggingface/evaluate/#1","title":"1. \u5b89\u88c5\u4e0e\u57fa\u7840\u6982\u5ff5","text":""},{"location":"llm/huggingface/evaluate/#_1","title":"\u5b89\u88c5","text":"<pre><code>pip install evaluate\n</code></pre>"},{"location":"llm/huggingface/evaluate/#_2","title":"\u6838\u5fc3\u6982\u5ff5","text":"<ul> <li>\u6307\u6807\uff08Metric\uff09\uff1a\u9884\u5b9a\u4e49\u7684\u8ba1\u7b97\u51fd\u6570\uff08\u5982\u51c6\u786e\u7387\u3001BLEU\u3001ROUGE\u7b49\uff09\u3002</li> <li>\u89e3\u8026\u8bbe\u8ba1\uff1a\u5c06\u6307\u6807\u8ba1\u7b97\u4ee3\u7801\u4e0e\u6a21\u578b\u4ee3\u7801\u5206\u79bb\uff0c\u786e\u4fdd\u7ed3\u679c\u53ef\u590d\u73b0\u3002</li> <li>\u793e\u533a\u652f\u6301\uff1a\u652f\u6301\u52a0\u8f7d\u793e\u533a\u8d21\u732e\u7684\u81ea\u5b9a\u4e49\u6307\u6807\u3002</li> </ul>"},{"location":"llm/huggingface/evaluate/#2","title":"2. \u57fa\u7840\u7528\u6cd5","text":""},{"location":"llm/huggingface/evaluate/#_3","title":"\u52a0\u8f7d\u9884\u5b9a\u4e49\u6307\u6807","text":"<pre><code>import evaluate\n\n# \u52a0\u8f7d\u5e38\u89c1\u6307\u6807\uff08\u5982\u51c6\u786e\u7387\uff09\naccuracy = evaluate.load(\"accuracy\")\n\n# \u8ba1\u7b97\u6307\u6807\npredictions = [0, 1, 0, 1]\nreferences = [0, 1, 1, 1]\nresult = accuracy.compute(predictions=predictions, references=references)\nprint(result)  # {'accuracy': 0.75}\n</code></pre>"},{"location":"llm/huggingface/evaluate/#3","title":"3. \u5e38\u7528\u6307\u6807\u793a\u4f8b","text":""},{"location":"llm/huggingface/evaluate/#accuracyf1","title":"\u5206\u7c7b\u4efb\u52a1\uff08Accuracy/F1\uff09","text":"<pre><code># F1 Score\uff08\u4e8c\u5206\u7c7b\uff09\nf1 = evaluate.load(\"f1\")\nresult = f1.compute(predictions=[0,1,0], references=[0,1,1], average=\"binary\")\nprint(result)  # {'f1': 0.6666666666666666}\n\n# \u591a\u5206\u7c7b F1\nf1_macro = evaluate.load(\"f1\")\nresult = f1_macro.compute(predictions=[0,1,2], references=[0,1,1], average=\"macro\")\n</code></pre>"},{"location":"llm/huggingface/evaluate/#bleurouge","title":"\u6587\u672c\u751f\u6210\uff08BLEU/ROUGE\uff09","text":"<pre><code># BLEU\nbleu = evaluate.load(\"bleu\")\npredictions = [\"hello world\"]\nreferences = [[\"hello world\"]]\nresult = bleu.compute(predictions=predictions, references=references)\nprint(result)  # {'bleu': 1.0, ...}\n\n# ROUGE\nrouge = evaluate.load(\"rouge\")\npredictions = [\"hello world\"]\nreferences = [\"hello everyone\"]\nresult = rouge.compute(predictions=predictions, references=references)\n</code></pre>"},{"location":"llm/huggingface/evaluate/#map","title":"\u76ee\u6807\u68c0\u6d4b\uff08mAP\uff09","text":"<pre><code># \u9700\u8981\u7279\u5b9a\u683c\u5f0f\u7684\u8fb9\u754c\u6846\u8f93\u5165\ncoco_metrics = evaluate.load(\"ybelkada/cocoevaluate\")  # \u793e\u533a\u8d21\u732e\u6307\u6807\n# \u5047\u8bbe predictions \u548c references \u662f COCO \u683c\u5f0f\u7684\u5b57\u5178\nresults = coco_metrics.compute(predictions=predictions, references=references)\n</code></pre>"},{"location":"llm/huggingface/evaluate/#4","title":"4. \u5b9e\u6218\u6d41\u7a0b\uff1a\u7ed3\u5408\u6a21\u578b\u8bc4\u4f30","text":""},{"location":"llm/huggingface/evaluate/#_4","title":"\u573a\u666f\uff1a\u8bc4\u4f30\u6587\u672c\u5206\u7c7b\u6a21\u578b","text":"<pre><code>from datasets import load_dataset\nfrom transformers import pipeline\nimport evaluate\n\n# \u52a0\u8f7d\u6a21\u578b\u548c\u6570\u636e\u96c6\nmodel = pipeline(\"text-classification\", model=\"bert-base-uncased-finetuned-mrpc\")\ndataset = load_dataset(\"glue\", \"mrpc\", split=\"validation\")\n\n# \u751f\u6210\u9884\u6d4b\npredictions = model([ex[\"sentence1\"] for ex in dataset])\npred_labels = [1 if pred[\"label\"] == \"LABEL_1\" else 0 for pred in predictions]\ntrue_labels = dataset[\"label\"]\n\n# \u8ba1\u7b97\u6307\u6807\naccuracy = evaluate.load(\"accuracy\")\nf1 = evaluate.load(\"f1\")\n\nacc_result = accuracy.compute(predictions=pred_labels, references=true_labels)\nf1_result = f1.compute(predictions=pred_labels, references=true_labels, average=\"binary\")\n\nprint(f\"Accuracy: {acc_result['accuracy']:.3f}, F1: {f1_result['f1']:.3f}\")\n</code></pre>"},{"location":"llm/huggingface/evaluate/#5","title":"5. \u9ad8\u7ea7\u529f\u80fd","text":""},{"location":"llm/huggingface/evaluate/#_5","title":"\u6279\u91cf\u589e\u91cf\u8ba1\u7b97\uff08\u9002\u5408\u5927\u6570\u636e\u96c6\uff09","text":"<pre><code>accuracy = evaluate.load(\"accuracy\")\n\n# \u5206\u6279\u6b21\u8ba1\u7b97\nfor batch in dataloader:\n    preds = model(batch)\n    accuracy.add_batch(predictions=preds, references=batch[\"labels\"])\n\nfinal_result = accuracy.compute()\n</code></pre>"},{"location":"llm/huggingface/evaluate/#_6","title":"\u591a\u6307\u6807\u7ec4\u5408","text":"<pre><code>clf_metrics = evaluate.combine([\"accuracy\", \"f1\", \"precision\", \"recall\"])\n\n# \u4e00\u6b21\u8ba1\u7b97\u6240\u6709\u6307\u6807\nresults = clf_metrics.compute(predictions=preds, references=labels)\nprint(results)  # \u5305\u542b accuracy, f1, precision, recall\n</code></pre>"},{"location":"llm/huggingface/evaluate/#_7","title":"\u81ea\u5b9a\u4e49\u6307\u6807","text":"<pre><code># \u5b9a\u4e49\u81ea\u5b9a\u4e49\u51fd\u6570\ndef my_metric(predictions, references):\n    return {\"custom_score\": sum(p == r for p, r in zip(predictions, references)) / len(predictions)}\n\n# \u6ce8\u518c\u4e3a evaluate \u6307\u6807\nmy_metric = evaluate.evalaute.load(\"metric.py\", \"my_metric\")  # \u4ece\u672c\u5730\u6587\u4ef6\u52a0\u8f7d\n\n# \u4f7f\u7528\u65b9\u5f0f\u4e0e\u5185\u7f6e\u6307\u6807\u76f8\u540c\n</code></pre>"},{"location":"llm/huggingface/evaluate/#6-trainer","title":"6. \u4e0e Trainer \u96c6\u6210","text":"<p>\u5728 <code>transformers.Trainer</code> \u4e2d\u76f4\u63a5\u4f7f\u7528 <code>evaluate</code> \u6307\u6807\uff1a</p> <pre><code>from transformers import Trainer, TrainingArguments\n\n# \u5b9a\u4e49\u8ba1\u7b97\u6307\u6807\u51fd\u6570\ndef compute_metrics(eval_pred):\n    logits, labels = eval_pred\n    predictions = np.argmax(logits, axis=-1)\n    accuracy = evaluate.load(\"accuracy\")\n    return accuracy.compute(predictions=predictions, references=labels)\n\n# \u5728 Trainer \u4e2d\u8bbe\u7f6e\ntraining_args = TrainingArguments(\n    output_dir=\"./results\",\n    evaluation_strategy=\"epoch\",\n    # ...\n)\n\ntrainer = Trainer(\n    model=model,\n    args=training_args,\n    train_dataset=train_dataset,\n    eval_dataset=val_dataset,\n    compute_metrics=compute_metrics,  # \u5173\u952e\u53c2\u6570\n)\n\ntrainer.train()\n</code></pre>"},{"location":"llm/huggingface/evaluate/#7","title":"7. \u6027\u80fd\u4f18\u5316","text":""},{"location":"llm/huggingface/evaluate/#_8","title":"\u5206\u5e03\u5f0f\u8bc4\u4f30","text":"<pre><code># \u5728\u591a GPU \u73af\u5883\u4e2d\u81ea\u52a8\u5904\u7406\nresults = accuracy.compute(predictions=preds, references=labels, distributed=True)\n</code></pre>"},{"location":"llm/huggingface/evaluate/#_9","title":"\u7f13\u5b58\u673a\u5236","text":"<ul> <li>\u6307\u6807\u4ee3\u7801\u548c\u7ed3\u679c\u81ea\u52a8\u7f13\u5b58\uff0c\u907f\u514d\u91cd\u590d\u8ba1\u7b97\u3002</li> <li>\u7f13\u5b58\u8def\u5f84\uff1a<code>~/.cache/huggingface/evaluate/</code></li> </ul>"},{"location":"llm/huggingface/evaluate/#8","title":"8. \u793e\u533a\u4e0e\u81ea\u5b9a\u4e49\u6307\u6807","text":""},{"location":"llm/huggingface/evaluate/#_10","title":"\u52a0\u8f7d\u793e\u533a\u6307\u6807","text":"<pre><code># \u901a\u8fc7\u540d\u79f0\u52a0\u8f7d\uff08\u683c\u5f0f\uff1ausername/metric_name\uff09\ncustom_metric = evaluate.load(\"johndoe/my_custom_metric\")\n</code></pre>"},{"location":"llm/huggingface/evaluate/#_11","title":"\u53d1\u5e03\u81ea\u5b9a\u4e49\u6307\u6807","text":"<ol> <li>\u5c06\u6307\u6807\u4ee3\u7801\u4e0a\u4f20\u81f3 Hugging Face Hub\u3002</li> <li>\u9075\u5faa\u6a21\u677f\u7f16\u5199\u6307\u6807\u8ba1\u7b97\u903b\u8f91\u3002</li> <li>\u901a\u8fc7 <code>evaluate.push_to_hub(\"my_metric\")</code> \u53d1\u5e03\u3002</li> </ol>"},{"location":"llm/huggingface/evaluate/#9","title":"9. \u5b8c\u6574\u793a\u4f8b\uff1a\u6587\u672c\u6458\u8981\u8bc4\u4f30","text":"<pre><code>import evaluate\nfrom datasets import load_dataset\n\n# \u52a0\u8f7d\u6570\u636e\u96c6\u548c\u6a21\u578b\u9884\u6d4b\ndataset = load_dataset(\"cnn_dailymail\", \"3.0.0\", split=\"test[:10]\")\npredictions = [\n    \"This is a generated summary.\",\n    # ... \u5176\u4ed6\u9884\u6d4b\n]\n\n# \u8ba1\u7b97 ROUGE \u548c BLEU\nrouge = evaluate.load(\"rouge\")\nbleu = evaluate.load(\"bleu\")\n\nrouge_results = rouge.compute(\n    predictions=predictions,\n    references=dataset[\"highlights\"],\n    use_stemmer=True\n)\n\nbleu_results = bleu.compute(\n    predictions=predictions,\n    references=[[ref] for ref in dataset[\"highlights\"]]  # BLEU \u9700\u8981 references \u662f\u5217\u8868\u7684\u5217\u8868\n)\n\nprint(f\"ROUGE-L: {rouge_results['rougeL']:.3f}, BLEU-4: {bleu_results['bleu']:.3f}\")\n</code></pre> <p>\u901a\u8fc7 <code>evaluate</code> \u5e93\uff0c\u4f60\u53ef\u4ee5\uff1a - \u7edf\u4e00\u4e0d\u540c\u4efb\u52a1\u7684\u8bc4\u4f30\u63a5\u53e3 - \u907f\u514d\u91cd\u590d\u5b9e\u73b0\u6307\u6807\u4ee3\u7801 - \u8f7b\u677e\u590d\u73b0\u8bba\u6587\u4e2d\u7684\u8bc4\u4f30\u7ed3\u679c - \u5feb\u901f\u5bf9\u6bd4\u4e0d\u540c\u6a21\u578b\u7684\u6027\u80fd\u5dee\u5f02</p>"},{"location":"llm/huggingface/peft/","title":"PEFT \u6559\u7a0b","text":"<p>\u4ee5\u4e0b\u662f Hugging Face <code>peft</code> \u5e93\uff08Parameter-Efficient Fine-Tuning\uff09\u7684\u8be6\u7ec6\u7528\u6cd5\u6307\u5357\uff0c\u5e2e\u52a9\u4f60\u9ad8\u6548\u5fae\u8c03\u5927\u6a21\u578b\uff08\u5982LLaMA\u3001GPT\u7b49\uff09\u800c\u65e0\u9700\u66f4\u65b0\u5168\u90e8\u53c2\u6570\uff1a</p>"},{"location":"llm/huggingface/peft/#1-peft","title":"1. PEFT \u7684\u6838\u5fc3\u601d\u60f3","text":"<ul> <li>\u53c2\u6570\u9ad8\u6548\u5fae\u8c03\uff1a\u4ec5\u66f4\u65b0\u6a21\u578b\u7684\u4e00\u5c0f\u90e8\u5206\u53c2\u6570\uff08\u5982\u9002\u914d\u5668\u5c42\u3001LoRA\u6743\u91cd\uff09\uff0c\u663e\u8457\u51cf\u5c11\u663e\u5b58\u5360\u7528\u3002</li> <li>\u652f\u6301\u591a\u79cd\u6280\u672f\uff1a</li> <li>LoRA\uff08Low-Rank Adaptation\uff09: \u901a\u8fc7\u4f4e\u79e9\u77e9\u9635\u5206\u89e3\u6ce8\u5165\u53ef\u8bad\u7ec3\u53c2\u6570</li> <li>Prefix Tuning\uff1a\u5728\u8f93\u5165\u524d\u6dfb\u52a0\u53ef\u5b66\u4e60\u7684\u63d0\u793a\u5411\u91cf</li> <li>Adapter\uff1a\u5728Transformer\u5c42\u4e2d\u63d2\u5165\u5c0f\u578b\u9002\u914d\u6a21\u5757</li> <li>IA3\uff1a\u901a\u8fc7\u7f29\u653e\u6fc0\u6d3b\u8c03\u6574\u6a21\u578b</li> </ul>"},{"location":"llm/huggingface/peft/#2","title":"2. \u5b89\u88c5\u4e0e\u4f9d\u8d56","text":"<pre><code>pip install peft transformers accelerate torch\n</code></pre>"},{"location":"llm/huggingface/peft/#3","title":"3. \u6838\u5fc3\u6a21\u5757","text":"<ul> <li><code>LoraConfig</code>: \u914d\u7f6e LoRA \u5fae\u8c03\u53c2\u6570</li> <li><code>get_peft_model()</code>: \u5c06\u57fa\u7840\u6a21\u578b\u8f6c\u6362\u4e3a PEFT \u6a21\u578b</li> <li><code>PeftModel</code>: \u5c01\u88c5\u540e\u7684 PEFT \u6a21\u578b\u7c7b</li> <li><code>PeftModelForCausalLM</code>: \u652f\u6301\u751f\u6210\u4efb\u52a1\u7684 PEFT \u6a21\u578b</li> </ul>"},{"location":"llm/huggingface/peft/#4-lora","title":"4. LoRA \u5fae\u8c03\u5b8c\u6574\u6d41\u7a0b\uff08\u4ee5\u6587\u672c\u751f\u6210\u4e3a\u4f8b\uff09","text":""},{"location":"llm/huggingface/peft/#1","title":"\u6b65\u9aa4 1\uff1a\u52a0\u8f7d\u57fa\u7840\u6a21\u578b\u548c\u5206\u8bcd\u5668","text":"<pre><code>from transformers import AutoModelForCausalLM, AutoTokenizer\n\nmodel_name = \"facebook/opt-125m\"  # \u793a\u4f8b\u6a21\u578b\nmodel = AutoModelForCausalLM.from_pretrained(model_name)\ntokenizer = AutoTokenizer.from_pretrained(model_name)\n</code></pre>"},{"location":"llm/huggingface/peft/#2-lora","title":"\u6b65\u9aa4 2\uff1a\u5b9a\u4e49 LoRA \u914d\u7f6e","text":"<pre><code>from peft import LoraConfig, get_peft_model\n\nlora_config = LoraConfig(\n    r=8,                  # \u4f4e\u79e9\u77e9\u9635\u7684\u7ef4\u5ea6\n    lora_alpha=32,        # \u7f29\u653e\u56e0\u5b50\uff08\u7c7b\u4f3c\u5b66\u4e60\u7387\uff09\n    target_modules=[\"q_proj\", \"v_proj\"],  # \u8981\u6ce8\u5165LoRA\u7684\u6a21\u5757\u540d\n    lora_dropout=0.05,    # Dropout\u6982\u7387\n    bias=\"none\",          # \u662f\u5426\u8bad\u7ec3\u504f\u7f6e\u53c2\u6570\n    task_type=\"CAUSAL_LM\" # \u4efb\u52a1\u7c7b\u578b\uff08\u56e0\u679c\u8bed\u8a00\u6a21\u578b\uff09\n)\n</code></pre>"},{"location":"llm/huggingface/peft/#3-peft","title":"\u6b65\u9aa4 3\uff1a\u521b\u5efa PEFT \u6a21\u578b","text":"<pre><code>peft_model = get_peft_model(model, lora_config)\npeft_model.print_trainable_parameters()  # \u67e5\u770b\u53ef\u8bad\u7ec3\u53c2\u6570\u5360\u6bd4\n# \u8f93\u51fa\u793a\u4f8b: trainable params: 0.8M || all params: 125M || trainable%: 0.64%\n</code></pre>"},{"location":"llm/huggingface/peft/#4","title":"\u6b65\u9aa4 4\uff1a\u51c6\u5907\u6570\u636e\u96c6","text":"<pre><code>from datasets import load_dataset\n\ndataset = load_dataset(\"imdb\")  # \u793a\u4f8b\u6570\u636e\u96c6\ndef tokenize_function(examples):\n    return tokenizer(examples[\"text\"], truncation=True, max_length=256)\n\ntokenized_dataset = dataset.map(tokenize_function, batched=True)\n</code></pre>"},{"location":"llm/huggingface/peft/#5","title":"\u6b65\u9aa4 5\uff1a\u914d\u7f6e\u8bad\u7ec3\u53c2\u6570","text":"<pre><code>from transformers import TrainingArguments\n\ntraining_args = TrainingArguments(\n    output_dir=\"./lora_outputs\",\n    per_device_train_batch_size=4,\n    gradient_accumulation_steps=4,\n    learning_rate=1e-4,\n    num_train_epochs=3,\n    fp16=True,  # \u6df7\u5408\u7cbe\u5ea6\u8bad\u7ec3\n    logging_steps=10,\n    save_strategy=\"epoch\"\n)\n</code></pre>"},{"location":"llm/huggingface/peft/#6-trainer","title":"\u6b65\u9aa4 6\uff1a\u521b\u5efa Trainer \u5e76\u8bad\u7ec3","text":"<pre><code>from transformers import Trainer\n\ntrainer = Trainer(\n    model=peft_model,\n    args=training_args,\n    train_dataset=tokenized_dataset[\"train\"],\n    data_collator=lambda data: {\"input_ids\": torch.stack([f[\"input_ids\"] for f in data])}\n)\n\ntrainer.train()\n</code></pre>"},{"location":"llm/huggingface/peft/#7","title":"\u6b65\u9aa4 7\uff1a\u4fdd\u5b58\u4e0e\u52a0\u8f7d\u9002\u914d\u5668","text":"<pre><code># \u4fdd\u5b58\u9002\u914d\u5668\u6743\u91cd\npeft_model.save_pretrained(\"./lora_adapter\")\n\n# \u52a0\u8f7d\u9002\u914d\u5668\u5230\u57fa\u7840\u6a21\u578b\nfrom peft import PeftModel\n\nloaded_model = PeftModel.from_pretrained(\n    base_model,  # \u539f\u59cb\u57fa\u7840\u6a21\u578b\n    \"./lora_adapter\"\n)\n\n# \u5408\u5e76\u9002\u914d\u5668\u5230\u57fa\u7840\u6a21\u578b\uff08\u53ef\u9009\uff09\nmerged_model = loaded_model.merge_and_unload()\n</code></pre>"},{"location":"llm/huggingface/peft/#5-loraconfig","title":"5. \u5173\u952e\u53c2\u6570\u8be6\u89e3\uff08\u4ee5 <code>LoraConfig</code> \u4e3a\u4f8b\uff09","text":"\u53c2\u6570 \u4f5c\u7528 \u63a8\u8350\u503c <code>r</code> \u4f4e\u79e9\u77e9\u9635\u7684\u79e9 4-64\uff08\u8d8a\u5927\u80fd\u529b\u8d8a\u5f3a\uff0c\u4f46\u663e\u5b58\u5360\u7528\u589e\u52a0\uff09 <code>target_modules</code> \u8981\u6ce8\u5165LoRA\u7684\u6a21\u5757\u540d\u79f0 \u6839\u636e\u6a21\u578b\u7ed3\u6784\u9009\u62e9\uff08\u89c1\u4e0b\u8868\uff09 <code>lora_alpha</code> \u7f29\u653e\u56e0\u5b50\uff08\u63a7\u5236LoRA\u6743\u91cd\u7684\u5f71\u54cd\u529b\uff09 \u901a\u5e38\u8bbe\u4e3a <code>2*r</code> <code>lora_dropout</code> \u9632\u6b62\u8fc7\u62df\u5408\u7684Dropout\u7387 0.05-0.2"},{"location":"llm/huggingface/peft/#target_modules","title":"\u5e38\u89c1\u6a21\u578b\u7684 <code>target_modules</code> \u9009\u62e9","text":"\u6a21\u578b\u7c7b\u578b \u53ef\u9009\u7684\u6a21\u5757\u540d\u79f0 LLaMA <code>q_proj</code>, <code>v_proj</code> GPT-2 <code>c_attn</code> BERT <code>query</code>, <code>value</code> RoBERTa <code>query</code>, <code>value</code>"},{"location":"llm/huggingface/peft/#6-peft","title":"6. \u5176\u4ed6 PEFT \u65b9\u6cd5\u793a\u4f8b","text":""},{"location":"llm/huggingface/peft/#1-prefix-tuning","title":"(1) Prefix Tuning","text":"<pre><code>from peft import PrefixTuningConfig\n\nconfig = PrefixTuningConfig(\n    task_type=\"CAUSAL_LM\",\n    num_virtual_tokens=10,  # \u524d\u7f00token\u6570\u91cf\n    encoder_hidden_size=512  # \u524d\u7f00\u7f16\u7801\u7ef4\u5ea6\n)\nmodel = get_peft_model(model, config)\n</code></pre>"},{"location":"llm/huggingface/peft/#2-adapter","title":"(2) Adapter","text":"<pre><code>from peft import AdaptionPromptConfig\n\nconfig = AdaptionPromptConfig(\n    adapter_layers=2,  # \u9002\u914d\u5668\u5c42\u6570\n    adapter_len=4,     # \u9002\u914d\u5668\u957f\u5ea6\n    task_type=\"CAUSAL_LM\"\n)\nmodel = get_peft_model(model, config)\n</code></pre>"},{"location":"llm/huggingface/peft/#7_1","title":"7. \u8fdb\u9636\u6280\u5de7","text":""},{"location":"llm/huggingface/peft/#1_1","title":"(1) \u591a\u4efb\u52a1\u9002\u914d\u5668\u7ec4\u5408","text":"<pre><code># \u52a0\u8f7d\u591a\u4e2a\u9002\u914d\u5668\nmodel = PeftModel.from_pretrained(base_model, \"adapter1\")\nmodel.load_adapter(\"adapter2\", adapter_name=\"task2\")\n\n# \u5207\u6362\u9002\u914d\u5668\nmodel.set_adapter(\"task2\")\n</code></pre>"},{"location":"llm/huggingface/peft/#2-8-bit","title":"(2) 8-bit \u91cf\u5316\u8bad\u7ec3","text":"<pre><code>from transformers import BitsAndBytesConfig\nimport torch\n\nbnb_config = BitsAndBytesConfig(\n    load_in_4bit=True,  # 4-bit\u91cf\u5316\n    bnb_4bit_use_double_quant=True,\n    bnb_4bit_quant_type=\"nf4\",\n    bnb_4bit_compute_dtype=torch.bfloat16\n)\n\nmodel = AutoModelForCausalLM.from_pretrained(\n    model_name,\n    quantization_config=bnb_config\n)\n</code></pre>"},{"location":"llm/huggingface/peft/#3-trainer-api","title":"(3) \u4e0e Trainer API \u6df1\u5ea6\u96c6\u6210","text":"<pre><code># \u76f4\u63a5\u4f7f\u7528 Hugging Face Trainer\ntrainer = Trainer(\n    model=peft_model,\n    args=training_args,\n    train_dataset=dataset,\n    compute_metrics=compute_metrics\n)\n</code></pre>"},{"location":"llm/huggingface/peft/#8","title":"8. \u5e38\u89c1\u95ee\u9898\u89e3\u51b3","text":"\u95ee\u9898\u73b0\u8c61 \u89e3\u51b3\u65b9\u6848 \u663e\u5b58\u4e0d\u8db3 \u51cf\u5c0f <code>batch_size</code>\uff0c\u542f\u75284-bit\u91cf\u5316 (<code>BitsAndBytesConfig</code>) <code>KeyError: 'lora'</code> \u68c0\u67e5 <code>target_modules</code> \u540d\u79f0\u662f\u5426\u4e0e\u6a21\u578b\u5c42\u5339\u914d \u8bad\u7ec3\u635f\u5931\u4e0d\u4e0b\u964d \u589e\u5927 <code>r</code> \u6216 <code>lora_alpha</code>\uff0c\u68c0\u67e5\u6570\u636e\u8d28\u91cf \u52a0\u8f7d\u9002\u914d\u5668\u62a5\u9519 \u786e\u4fdd\u57fa\u7840\u6a21\u578b\u7ed3\u6784\u4e0e\u9002\u914d\u5668\u8bad\u7ec3\u65f6\u4e00\u81f4"},{"location":"llm/huggingface/peft/#9","title":"9. \u6700\u4f73\u5b9e\u8df5","text":"<ol> <li>\u4ece\u5c0f\u5f00\u59cb\uff1a\u521d\u59cb\u4f7f\u7528 <code>r=8</code>, <code>alpha=16</code>\uff0c\u9010\u6b65\u8c03\u5927</li> <li>\u6a21\u5757\u9009\u62e9\uff1a\u4f18\u5148\u5728 <code>query</code> \u548c <code>value</code> \u6295\u5f71\u5c42\u6dfb\u52a0LoRA</li> <li>\u6df7\u5408\u7cbe\u5ea6\uff1a\u59cb\u7ec8\u542f\u7528 <code>fp16=True</code> \u6216 <code>bf16=True</code></li> <li>\u6a21\u578b\u4fdd\u5b58\uff1a\u540c\u65f6\u4fdd\u5b58\u9002\u914d\u5668\u6743\u91cd\u548c\u57fa\u7840\u6a21\u578b\u914d\u7f6e</li> </ol> <p>\u901a\u8fc7 <code>peft</code> \u5e93\uff0c\u4f60\u53ef\u4ee5\u7528\u6d88\u8d39\u7ea7GPU\u5fae\u8c03\u6570\u5341\u4ebf\u53c2\u6570\u7684\u5927\u6a21\u578b\u3002\u7ed3\u5408\u91cf\u5316\u6280\u672f\uff08\u5982QLoRA\uff09\uff0c\u751a\u81f3\u80fd\u5728\u5355\u5361\u4e0a\u5fae\u8c03Llama 2-70B\u7b49\u8d85\u5927\u89c4\u6a21\u6a21\u578b\uff01</p>"},{"location":"llm/huggingface/pipeline/","title":"pipeline","text":""},{"location":"llm/huggingface/pipeline/#1-transformers","title":"1. \u5b89\u88c5 Transformers \u5e93","text":"<p>\u786e\u4fdd\u5b89\u88c5\u4ee5\u4e0b\u4f9d\u8d56\uff1a <pre><code>pip install transformers\npip install torch  # \u63a8\u8350\u5b89\u88c5 PyTorch \u4f5c\u4e3a\u540e\u7aef\n</code></pre></p>"},{"location":"llm/huggingface/pipeline/#2-pipeline","title":"2. Pipeline \u7684\u57fa\u672c\u7528\u6cd5","text":"<p><code>pipeline</code> \u662f Hugging Face \u63d0\u4f9b\u7684\u9ad8\u7ea7 API\uff0c\u5c01\u88c5\u4e86\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p> <ol> <li>\u9884\u5904\u7406\uff08\u6587\u672c\u5206\u8bcd\u3001\u8f6c\u6362\u4e3a\u5f20\u91cf\uff09</li> <li>\u6a21\u578b\u63a8\u7406\uff08\u8c03\u7528\u9884\u8bad\u7ec3\u6a21\u578b\uff09</li> <li>\u540e\u5904\u7406\uff08\u5c06\u8f93\u51fa\u8f6c\u6362\u4e3a\u53ef\u8bfb\u7ed3\u679c\uff09</li> </ol>"},{"location":"llm/huggingface/pipeline/#1","title":"\u793a\u4f8b 1\uff1a\u5feb\u901f\u4f7f\u7528\u9884\u7f6e\u4efb\u52a1","text":"<pre><code>from transformers import pipeline\n\n# \u9009\u62e9\u4e00\u4e2a\u4efb\u52a1\uff0c\u4f8b\u5982\u6587\u672c\u5206\u7c7b\nclassifier = pipeline(\"text-classification\")\n\n# \u8f93\u5165\u6587\u672c\nresult = classifier(\"I love using Hugging Face Transformers!\")\nprint(result)\n# \u8f93\u51fa\u793a\u4f8b: [{'label': 'POSITIVE', 'score': 0.9998}]\n</code></pre>"},{"location":"llm/huggingface/pipeline/#3","title":"3. \u652f\u6301\u7684\u4efb\u52a1\u7c7b\u578b","text":"<p>Hugging Face \u63d0\u4f9b\u591a\u79cd\u9884\u7f6e\u4efb\u52a1\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>\u6587\u672c\u5206\u7c7b (<code>text-classification</code>)</li> <li>\u6587\u672c\u751f\u6210 (<code>text-generation</code>)</li> <li>\u547d\u540d\u5b9e\u4f53\u8bc6\u522b (<code>ner</code>)</li> <li>\u95ee\u7b54\u7cfb\u7edf (<code>question-answering</code>)</li> <li>\u6458\u8981\u751f\u6210 (<code>summarization</code>)</li> <li>\u7ffb\u8bd1 (<code>translation</code>)</li> <li>\u60c5\u611f\u5206\u6790 (<code>sentiment-analysis</code>)</li> </ul>"},{"location":"llm/huggingface/pipeline/#4","title":"4. \u81ea\u5b9a\u4e49\u6a21\u578b\u4e0e\u5206\u8bcd\u5668","text":"<p>\u53ef\u4ee5\u6307\u5b9a\u6a21\u578b\u540d\u79f0\u6216\u672c\u5730\u8def\u5f84\u6765\u81ea\u5b9a\u4e49 Pipeline\uff1a</p>"},{"location":"llm/huggingface/pipeline/#2","title":"\u793a\u4f8b 2\uff1a\u4f7f\u7528\u6307\u5b9a\u6a21\u578b","text":"<pre><code>from transformers import pipeline\n\n# \u6307\u5b9a\u6a21\u578b\u540d\u79f0\uff08Hugging Face Hub \u4e0a\u7684\u6a21\u578b\uff09\ntranslator = pipeline(\n    \"translation_en_to_fr\",\n    model=\"Helsinki-NLP/opus-mt-en-fr\"\n)\n\ntext = \"Hello, how are you?\"\nresult = translator(text)\nprint(result)  # \u8f93\u51fa: [{'translation_text': 'Bonjour, comment allez-vous?'}]\n</code></pre>"},{"location":"llm/huggingface/pipeline/#5","title":"5. \u591a\u8f93\u5165\u4e0e\u6279\u91cf\u5904\u7406","text":"<p>\u4f20\u9012\u5217\u8868\u8fdb\u884c\u6279\u91cf\u63a8\u7406\u4ee5\u63d0\u5347\u6548\u7387\uff1a <pre><code>ner = pipeline(\"ner\", grouped_entities=True)\ntexts = [\n    \"My name is John and I work at Google in New York.\",\n    \"Apple Inc. was founded by Steve Jobs in California.\"\n]\nresults = ner(texts)\nprint(results)\n</code></pre></p>"},{"location":"llm/huggingface/pipeline/#6","title":"6. \u53c2\u6570\u8c03\u6574","text":"<p>\u901a\u8fc7\u53c2\u6570\u63a7\u5236\u751f\u6210\u7ed3\u679c\uff08\u9002\u7528\u4e8e\u751f\u6210\u7c7b\u4efb\u52a1\uff09\uff1a <pre><code>generator = pipeline(\"text-generation\", model=\"gpt2\")\nresult = generator(\n    \"In the future, AI will\",\n    max_length=50,\n    num_return_sequences=2,\n    temperature=0.7\n)\nprint(result)\n</code></pre></p>"},{"location":"llm/huggingface/pipeline/#7-gpu","title":"7. \u4f7f\u7528 GPU \u52a0\u901f","text":"<p>\u82e5\u5df2\u5b89\u88c5 PyTorch \u7684 GPU \u7248\u672c\uff0c\u53ef\u901a\u8fc7 <code>device</code> \u53c2\u6570\u6307\u5b9a\u8bbe\u5907\uff1a <pre><code>classifier = pipeline(\"text-classification\", device=0)  # \u4f7f\u7528\u7b2c\u4e00\u4e2a GPU\n</code></pre></p>"},{"location":"llm/huggingface/pipeline/#8","title":"8. \u672c\u5730\u6a21\u578b\u4e0e\u5206\u8bcd\u5668","text":"<p>\u82e5\u9700\u79bb\u7ebf\u4f7f\u7528\uff0c\u53ef\u63d0\u524d\u4e0b\u8f7d\u6a21\u578b\u5230\u672c\u5730\uff1a <pre><code>from transformers import AutoModelForSequenceClassification, AutoTokenizer\n\nmodel_name = \"distilbert-base-uncased-finetuned-sst-2-english\"\nmodel = AutoModelForSequenceClassification.from_pretrained(model_name)\ntokenizer = AutoTokenizer.from_pretrained(model_name)\n\nclassifier = pipeline(\"text-classification\", model=model, tokenizer=tokenizer)\n</code></pre></p>"},{"location":"llm/huggingface/pipeline/#9","title":"9. \u5e38\u89c1\u95ee\u9898","text":"<ul> <li>\u5185\u5b58\u4e0d\u8db3\uff1a\u5c1d\u8bd5\u4f7f\u7528\u8f83\u5c0f\u7684\u6a21\u578b\uff08\u5982 <code>distilbert</code> \u7cfb\u5217\uff09\u6216\u51cf\u5c11 <code>batch_size</code>\u3002</li> <li>\u4efb\u52a1\u652f\u6301\uff1a\u67e5\u770b\u5b98\u65b9\u6587\u6863\u83b7\u53d6\u5b8c\u6574\u4efb\u52a1\u5217\u8868\u3002</li> <li>\u81ea\u5b9a\u4e49\u4efb\u52a1\uff1a\u7ee7\u627f <code>pipeline</code> \u7c7b\u5b9e\u73b0\u81ea\u5b9a\u4e49\u903b\u8f91\u3002</li> </ul> <p>\u901a\u8fc7 <code>pipeline</code>\uff0c\u4f60\u53ef\u4ee5\u5feb\u901f\u5b9e\u73b0 NLP \u4efb\u52a1\u7684\u539f\u578b\u9a8c\u8bc1\u3002\u5982\u9700\u66f4\u7cbe\u7ec6\u63a7\u5236\uff08\u5982\u81ea\u5b9a\u4e49\u8bad\u7ec3\uff09\uff0c\u53ef\u6df1\u5165\u5b66\u4e60 <code>AutoModel</code> \u548c <code>Tokenizer</code> \u7684\u7528\u6cd5\u3002</p>"},{"location":"llm/huggingface/trainer/","title":"Trainer API","text":"<p>\u4ee5\u4e0b\u662f Hugging Face Transformers \u5e93\u4e2d <code>Trainer API</code> \u7684\u8be6\u7ec6\u7528\u6cd5\u6307\u5357\uff0c\u5e2e\u52a9\u4f60\u5feb\u901f\u638c\u63e1\u6a21\u578b\u8bad\u7ec3\u4e0e\u5fae\u8c03\u7684\u6838\u5fc3\u6d41\u7a0b\uff1a</p>"},{"location":"llm/huggingface/trainer/#1-trainer-api","title":"1. Trainer API \u7684\u4f18\u52bf","text":"<ul> <li>\u81ea\u52a8\u5316\u8bad\u7ec3\u6d41\u7a0b\uff1a\u5c01\u88c5\u8bad\u7ec3\u5faa\u73af\u3001\u68af\u5ea6\u4e0b\u964d\u3001\u8bc4\u4f30\u548c\u4fdd\u5b58\u6a21\u578b</li> <li>\u5206\u5e03\u5f0f\u8bad\u7ec3\u652f\u6301\uff1a\u5f00\u7bb1\u5373\u7528\u652f\u6301\u591aGPU/TPU\u8bad\u7ec3</li> <li>\u7075\u6d3b\u7684\u53c2\u6570\u914d\u7f6e\uff1a\u901a\u8fc7 <code>TrainingArguments</code> \u63a7\u5236\u8d85\u53c2\u6570</li> <li>\u5185\u7f6e\u8bc4\u4f30\u4e0e\u65e5\u5fd7\uff1a\u652f\u6301 TensorBoard\u3001W&amp;B \u7b49\u65e5\u5fd7\u5de5\u5177</li> </ul>"},{"location":"llm/huggingface/trainer/#2","title":"2. \u57fa\u7840\u4f7f\u7528\u6d41\u7a0b","text":""},{"location":"llm/huggingface/trainer/#1","title":"\u6b65\u9aa4 1\uff1a\u5b89\u88c5\u4f9d\u8d56","text":"<pre><code>pip install transformers datasets torch accelerate\n</code></pre>"},{"location":"llm/huggingface/trainer/#2_1","title":"\u6b65\u9aa4 2\uff1a\u51c6\u5907\u6570\u636e\u96c6","text":"<p>\u4f7f\u7528 <code>datasets</code> \u5e93\u52a0\u8f7d\u6570\u636e\uff1a <pre><code>from datasets import load_dataset\n\ndataset = load_dataset(\"imdb\")  # \u793a\u4f8b\uff1aIMDB \u7535\u5f71\u8bc4\u8bba\u6570\u636e\u96c6\nprint(dataset[\"train\"][0])  # \u67e5\u770b\u6837\u672c\u7ed3\u6784\n</code></pre></p>"},{"location":"llm/huggingface/trainer/#3","title":"\u6b65\u9aa4 3\uff1a\u6570\u636e\u9884\u5904\u7406","text":"<p>\u4f7f\u7528 Tokenizer \u8f6c\u6362\u6587\u672c\uff1a <pre><code>from transformers import AutoTokenizer\n\ntokenizer = AutoTokenizer.from_pretrained(\"bert-base-uncased\")\n\ndef preprocess_function(examples):\n    return tokenizer(\n        examples[\"text\"], \n        padding=\"max_length\", \n        truncation=True, \n        max_length=512\n    )\n\ntokenized_dataset = dataset.map(preprocess_function, batched=True)\n</code></pre></p>"},{"location":"llm/huggingface/trainer/#4","title":"\u6b65\u9aa4 4\uff1a\u5b9a\u4e49\u8bad\u7ec3\u53c2\u6570","text":"<pre><code>from transformers import TrainingArguments\n\ntraining_args = TrainingArguments(\n    output_dir=\"./results\",          # \u8f93\u51fa\u76ee\u5f55\n    evaluation_strategy=\"epoch\",     # \u6bcf epoch \u8bc4\u4f30\u4e00\u6b21\n    learning_rate=2e-5,\n    per_device_train_batch_size=8,   # \u6bcf\u4e2a\u8bbe\u5907\u7684\u6279\u6b21\u5927\u5c0f\n    per_device_eval_batch_size=8,\n    num_train_epochs=3,\n    weight_decay=0.01,\n    logging_dir=\"./logs\",            # \u65e5\u5fd7\u76ee\u5f55\n    report_to=\"tensorboard\",         # \u4f7f\u7528 TensorBoard\n    save_strategy=\"epoch\",           # \u6bcf epoch \u4fdd\u5b58\u6a21\u578b\n    load_best_model_at_end=True,     # \u8bad\u7ec3\u7ed3\u675f\u65f6\u52a0\u8f7d\u6700\u4f73\u6a21\u578b\n)\n</code></pre>"},{"location":"llm/huggingface/trainer/#5","title":"\u6b65\u9aa4 5\uff1a\u5b9a\u4e49\u6a21\u578b","text":"<pre><code>from transformers import AutoModelForSequenceClassification\n\nmodel = AutoModelForSequenceClassification.from_pretrained(\n    \"bert-base-uncased\", \n    num_labels=2  # \u5206\u7c7b\u6807\u7b7e\u6570\n)\n</code></pre>"},{"location":"llm/huggingface/trainer/#6","title":"\u6b65\u9aa4 6\uff1a\u5b9a\u4e49\u8bc4\u4f30\u6307\u6807","text":"<pre><code>import numpy as np\nfrom datasets import load_metric\n\nmetric = load_metric(\"accuracy\")\n\ndef compute_metrics(eval_pred):\n    logits, labels = eval_pred\n    predictions = np.argmax(logits, axis=-1)\n    return metric.compute(predictions=predictions, references=labels)\n</code></pre>"},{"location":"llm/huggingface/trainer/#7-trainer","title":"\u6b65\u9aa4 7\uff1a\u521b\u5efa Trainer","text":"<pre><code>from transformers import Trainer\n\ntrainer = Trainer(\n    model=model,\n    args=training_args,\n    train_dataset=tokenized_dataset[\"train\"],\n    eval_dataset=tokenized_dataset[\"test\"],\n    compute_metrics=compute_metrics,\n)\n</code></pre>"},{"location":"llm/huggingface/trainer/#8","title":"\u6b65\u9aa4 8\uff1a\u5f00\u59cb\u8bad\u7ec3","text":"<pre><code>trainer.train()  # \u542f\u52a8\u8bad\u7ec3\ntrainer.evaluate()  # \u6700\u7ec8\u8bc4\u4f30\n</code></pre>"},{"location":"llm/huggingface/trainer/#3_1","title":"3. \u6838\u5fc3\u529f\u80fd\u8be6\u89e3","text":""},{"location":"llm/huggingface/trainer/#1_1","title":"(1) \u81ea\u5b9a\u4e49\u8bad\u7ec3\u884c\u4e3a","text":"<p>\u901a\u8fc7\u8986\u76d6 <code>Trainer</code> \u65b9\u6cd5\u5b9e\u73b0\uff1a <pre><code>class CustomTrainer(Trainer):\n    def compute_loss(self, model, inputs, return_outputs=False):\n        labels = inputs.pop(\"labels\")\n        outputs = model(**inputs)\n        logits = outputs.logits\n        loss = torch.nn.CrossEntropyLoss()(logits, labels)\n        return (loss, outputs) if return_outputs else loss\n</code></pre></p>"},{"location":"llm/huggingface/trainer/#2_2","title":"(2) \u4f7f\u7528\u56de\u8c03\u51fd\u6570","text":"<p>\u5185\u7f6e\u56de\u8c03\u793a\u4f8b\uff1a <pre><code>from transformers import EarlyStoppingCallback\n\n# \u6dfb\u52a0\u65e9\u505c\u56de\u8c03\ntrainer.add_callback(EarlyStoppingCallback(\n    early_stopping_patience=3  # \u8fde\u7eed3\u6b21\u8bc4\u4f30\u65e0\u63d0\u5347\u5219\u505c\u6b62\n))\n</code></pre></p>"},{"location":"llm/huggingface/trainer/#3_2","title":"(3) \u5206\u5e03\u5f0f\u8bad\u7ec3","text":"<p>\u81ea\u52a8\u652f\u6301\u591aGPU/TPU\uff1a <pre><code># \u542f\u52a8\u547d\u4ee4\uff08\u9700\u5b89\u88c5 accelerate\uff09\naccelerate launch --num_processes 4 train.py\n</code></pre></p>"},{"location":"llm/huggingface/trainer/#4_1","title":"(4) \u6df7\u5408\u7cbe\u5ea6\u8bad\u7ec3","text":"<p>\u5728 <code>TrainingArguments</code> \u4e2d\u542f\u7528\uff1a <pre><code>training_args = TrainingArguments(\n    fp16=True,  # \u4f7f\u7528 FP16 \u6df7\u5408\u7cbe\u5ea6\uff08NVIDIA GPU\uff09\n    bf16=True   # \u4f7f\u7528 BF16 \u6df7\u5408\u7cbe\u5ea6\uff08AMD/TPU\uff09\n)\n</code></pre></p>"},{"location":"llm/huggingface/trainer/#4_2","title":"4. \u6a21\u578b\u4fdd\u5b58\u4e0e\u52a0\u8f7d","text":""},{"location":"llm/huggingface/trainer/#1_2","title":"(1) \u4fdd\u5b58\u6700\u4f73\u6a21\u578b","text":"<pre><code># \u81ea\u52a8\u6839\u636e\u8bc4\u4f30\u6307\u6807\u4fdd\u5b58\u6700\u4f73\u6a21\u578b\uff08\u9700\u8bbe\u7f6e load_best_model_at_end=True\uff09\ntrainer.save_model(\"./best_model\")\n</code></pre>"},{"location":"llm/huggingface/trainer/#2_3","title":"(2) \u4ece\u68c0\u67e5\u70b9\u6062\u590d\u8bad\u7ec3","text":"<pre><code>trainer.train(resume_from_checkpoint=True)  # \u81ea\u52a8\u52a0\u8f7d\u6700\u65b0\u68c0\u67e5\u70b9\n</code></pre>"},{"location":"llm/huggingface/trainer/#5_1","title":"5. \u53ef\u89c6\u5316\u8bad\u7ec3\u8fc7\u7a0b","text":"<p>\u4f7f\u7528 TensorBoard \u67e5\u770b\u65e5\u5fd7\uff1a <pre><code>tensorboard --logdir ./logs\n</code></pre></p>"},{"location":"llm/huggingface/trainer/#6_1","title":"6. \u5b8c\u6574\u4ee3\u7801\u793a\u4f8b\uff08\u6587\u672c\u5206\u7c7b\uff09","text":"<pre><code>from transformers import (\n    AutoTokenizer,\n    AutoModelForSequenceClassification,\n    TrainingArguments,\n    Trainer\n)\nfrom datasets import load_dataset\nimport numpy as np\nfrom datasets import load_metric\n\n# \u52a0\u8f7d\u6570\u636e\u96c6\ndataset = load_dataset(\"imdb\")\ntokenizer = AutoTokenizer.from_pretrained(\"bert-base-uncased\")\n\n# \u6570\u636e\u9884\u5904\u7406\ndef tokenize_function(examples):\n    return tokenizer(examples[\"text\"], padding=\"max_length\", truncation=True)\n\ntokenized_dataset = dataset.map(tokenize_function, batched=True)\n\n# \u5b9a\u4e49\u6a21\u578b\nmodel = AutoModelForSequenceClassification.from_pretrained(\"bert-base-uncased\", num_labels=2)\n\n# \u5b9a\u4e49\u8bc4\u4f30\u6307\u6807\nmetric = load_metric(\"accuracy\")\ndef compute_metrics(eval_pred):\n    logits, labels = eval_pred\n    predictions = np.argmax(logits, axis=-1)\n    return metric.compute(predictions=predictions, references=labels)\n\n# \u914d\u7f6e\u8bad\u7ec3\u53c2\u6570\ntraining_args = TrainingArguments(\n    output_dir=\"./results\",\n    evaluation_strategy=\"epoch\",\n    learning_rate=2e-5,\n    per_device_train_batch_size=8,\n    per_device_eval_batch_size=8,\n    num_train_epochs=3,\n    weight_decay=0.01,\n    save_strategy=\"epoch\",\n    load_best_model_at_end=True,\n)\n\n# \u521b\u5efa Trainer\ntrainer = Trainer(\n    model=model,\n    args=training_args,\n    train_dataset=tokenized_dataset[\"train\"],\n    eval_dataset=tokenized_dataset[\"test\"],\n    compute_metrics=compute_metrics,\n)\n\n# \u5f00\u59cb\u8bad\u7ec3\ntrainer.train()\n</code></pre>"},{"location":"llm/huggingface/trainer/#7","title":"7. \u5e38\u89c1\u95ee\u9898\u89e3\u51b3","text":"\u95ee\u9898\u73b0\u8c61 \u89e3\u51b3\u65b9\u6848 CUDA\u5185\u5b58\u4e0d\u8db3 \u51cf\u5c0f <code>per_device_batch_size</code> \u6216\u4f7f\u7528\u68af\u5ea6\u7d2f\u79ef (<code>gradient_accumulation_steps</code>) \u8bad\u7ec3\u901f\u5ea6\u6162 \u542f\u7528\u6df7\u5408\u7cbe\u5ea6 (<code>fp16=True</code>)\u3001\u4f7f\u7528\u66f4\u5c0f\u6a21\u578b\u6216\u5347\u7ea7\u786c\u4ef6 \u8bc4\u4f30\u6307\u6807\u5f02\u5e38 \u68c0\u67e5 <code>compute_metrics</code> \u51fd\u6570\u548c\u6570\u636e\u6807\u7b7e\u5bf9\u9f50 \u65e0\u6cd5\u6062\u590d\u68c0\u67e5\u70b9 \u786e\u4fdd\u68c0\u67e5\u70b9\u8def\u5f84\u5305\u542b <code>checkpoint-xxx</code> \u6587\u4ef6\u5939"},{"location":"llm/huggingface/trainer/#8_1","title":"8. \u8fdb\u9636\u6280\u5de7","text":"<ol> <li> <p>\u53c2\u6570\u9ad8\u6548\u5fae\u8c03 (PEFT)    \u4f7f\u7528 <code>peft</code> \u5e93\u5b9e\u73b0 LoRA \u7b49\u9ad8\u6548\u5fae\u8c03\u65b9\u6cd5\uff1a    <pre><code>from peft import LoraConfig, get_peft_model\n\npeft_config = LoraConfig(\n    r=8,\n    lora_alpha=16,\n    target_modules=[\"query\", \"value\"],\n    lora_dropout=0.1,\n    bias=\"none\"\n)\nmodel = get_peft_model(model, peft_config)\n</code></pre></p> </li> <li> <p>\u81ea\u5b9a\u4e49\u6570\u636e\u6574\u7406\u5668    \u7ee7\u627f <code>DataCollator</code> \u5b9e\u73b0\u7279\u6b8a\u6570\u636e\u5904\u7406\uff1a    <pre><code>from transformers import DataCollatorWithPadding\n\ndata_collator = DataCollatorWithPadding(tokenizer=tokenizer)\n</code></pre></p> </li> <li> <p>\u4e0e Hugging Face Hub \u96c6\u6210    \u8bad\u7ec3\u540e\u76f4\u63a5\u4e0a\u4f20\u6a21\u578b\uff1a    <pre><code>trainer.push_to_hub(\"my-awesome-model\")\n</code></pre></p> </li> </ol>"},{"location":"llm/huggingface/trainer/#9","title":"9. \u5173\u952e\u53c2\u6570\u8bf4\u660e","text":"\u53c2\u6570 \u4f5c\u7528 \u793a\u4f8b\u503c <code>learning_rate</code> \u521d\u59cb\u5b66\u4e60\u7387 <code>2e-5</code>, <code>5e-4</code> <code>per_device_train_batch_size</code> \u5355\u8bbe\u5907\u6279\u6b21\u5927\u5c0f <code>8</code>, <code>16</code> <code>gradient_accumulation_steps</code> \u68af\u5ea6\u7d2f\u79ef\u6b65\u6570 <code>2</code>, <code>4</code> <code>warmup_steps</code> \u5b66\u4e60\u7387\u9884\u70ed\u6b65\u6570 <code>500</code>, <code>1000</code> <code>logging_steps</code> \u65e5\u5fd7\u8bb0\u5f55\u95f4\u9694 <code>50</code>, <code>100</code> <code>eval_steps</code> \u8bc4\u4f30\u95f4\u9694\uff08\u5f53 <code>strategy=\"steps\"</code>\uff09 <code>500</code> <p>\u901a\u8fc7 <code>Trainer API</code>\uff0c\u4f60\u53ef\u4ee5\u5feb\u901f\u5b9e\u73b0\u4ece\u6570\u636e\u51c6\u5907\u5230\u6a21\u578b\u90e8\u7f72\u7684\u5b8c\u6574\u8bad\u7ec3\u6d41\u7a0b\u3002\u5bf9\u4e8e\u9700\u8981\u66f4\u7ec6\u7c92\u5ea6\u63a7\u5236\u7684\u573a\u666f\uff0c\u53ef\u4ee5\u7ed3\u5408\u81ea\u5b9a\u4e49\u8bad\u7ec3\u5faa\u73af\uff08\u4f7f\u7528 <code>torch.utils.data.DataLoader</code>\uff09\u4e0e <code>Trainer</code> \u7684\u6a21\u5757\u5316\u7ec4\u4ef6\u3002</p>"},{"location":"llm/huggingface/trainer/#10-trainingarguments","title":"10. TrainingArguments\u53c2\u6570\u8bf4\u660e","text":""},{"location":"llm/huggingface/trainer/#_1","title":"\u4e00\u3001\u6838\u5fc3\u53c2\u6570\u5206\u7c7b\u8bf4\u660e","text":""},{"location":"llm/huggingface/trainer/#1_3","title":"1. \u8f93\u51fa\u4e0e\u4fdd\u5b58\u8def\u5f84","text":"\u53c2\u6570 \u7c7b\u578b \u9ed8\u8ba4\u503c \u8bf4\u660e <code>output_dir</code> str \u5fc5\u586b \u6a21\u578b\u3001\u65e5\u5fd7\u548c\u68c0\u67e5\u70b9\u7684\u4fdd\u5b58\u76ee\u5f55 <code>logging_dir</code> str <code>None</code> TensorBoard \u65e5\u5fd7\u76ee\u5f55\uff08\u9ed8\u8ba4\u4e0e <code>output_dir</code> \u4e00\u81f4\uff09 <code>report_to</code> str/list <code>\"all\"</code> \u65e5\u5fd7\u62a5\u544a\u65b9\u5f0f\uff08<code>\"tensorboard\"</code>, <code>\"wandb\"</code>, <code>\"none\"</code> \u7b49\uff09 <code>save_total_limit</code> int <code>None</code> \u6700\u591a\u4fdd\u7559\u7684\u68c0\u67e5\u70b9\u6570\u91cf\uff08\u8d85\u51fa\u5219\u5220\u9664\u65e7\u68c0\u67e5\u70b9\uff09"},{"location":"llm/huggingface/trainer/#2_4","title":"2. \u8bad\u7ec3\u8d85\u53c2\u6570","text":"\u53c2\u6570 \u7c7b\u578b \u9ed8\u8ba4\u503c \u8bf4\u660e <code>num_train_epochs</code> float <code>3.0</code> \u8bad\u7ec3\u7684\u603b\u8f6e\u6570\uff08\u53ef\u8bbe\u4e3a\u5c0f\u6570\u8fdb\u884c\u90e8\u5206 epoch \u8bad\u7ec3\uff09 <code>per_device_train_batch_size</code> int <code>8</code> \u6bcf\u4e2a\u8bbe\u5907\uff08GPU/CPU\uff09\u7684\u8bad\u7ec3\u6279\u6b21\u5927\u5c0f <code>per_device_eval_batch_size</code> int <code>8</code> \u6bcf\u4e2a\u8bbe\u5907\u7684\u8bc4\u4f30\u6279\u6b21\u5927\u5c0f <code>learning_rate</code> float <code>5e-5</code> \u521d\u59cb\u5b66\u4e60\u7387\uff08AdamW \u4f18\u5316\u5668\u7684\u57fa\u51c6\u503c\uff09 <code>weight_decay</code> float <code>0.0</code> \u6743\u91cd\u8870\u51cf\uff08L2 \u6b63\u5219\u5316\u5f3a\u5ea6\uff09 <code>gradient_accumulation_steps</code> int <code>1</code> \u68af\u5ea6\u7d2f\u79ef\u6b65\u6570\uff08\u6a21\u62df\u66f4\u5927\u6279\u6b21\uff0c\u89e3\u51b3\u663e\u5b58\u4e0d\u8db3\u95ee\u9898\uff09"},{"location":"llm/huggingface/trainer/#3_3","title":"3. \u4f18\u5316\u5668\u4e0e\u8c03\u5ea6\u5668","text":"\u53c2\u6570 \u7c7b\u578b \u9ed8\u8ba4\u503c \u8bf4\u660e <code>optim</code> str <code>\"adamw_torch\"</code> \u4f18\u5316\u5668\u7c7b\u578b\uff08<code>\"adamw_torch\"</code>, <code>\"adamw_apex_fused\"</code>, <code>\"sgd\"</code> \u7b49\uff09 <code>lr_scheduler_type</code> str <code>\"linear\"</code> \u5b66\u4e60\u7387\u8c03\u5ea6\u5668\u7c7b\u578b\uff08<code>\"linear\"</code>, <code>\"cosine\"</code>, <code>\"constant\"</code> \u7b49\uff09 <code>warmup_ratio</code> float <code>0.0</code> \u5b66\u4e60\u7387 warmup \u5360\u603b\u8bad\u7ec3\u6b65\u6570\u7684\u6bd4\u4f8b <code>warmup_steps</code> int <code>0</code> \u76f4\u63a5\u6307\u5b9a warmup \u6b65\u6570\uff08\u4f18\u5148\u7ea7\u9ad8\u4e8e <code>warmup_ratio</code>\uff09"},{"location":"llm/huggingface/trainer/#4_3","title":"4. \u8bc4\u4f30\u4e0e\u4fdd\u5b58\u7b56\u7565","text":"\u53c2\u6570 \u7c7b\u578b \u9ed8\u8ba4\u503c \u8bf4\u660e <code>evaluation_strategy</code> str <code>\"no\"</code> \u8bc4\u4f30\u7b56\u7565\uff08<code>\"no\"</code>, <code>\"steps\"</code>, <code>\"epoch\"</code>\uff09 <code>eval_steps</code> int <code>None</code> \u5f53 <code>evaluation_strategy=\"steps\"</code> \u65f6\uff0c\u6bcf\u591a\u5c11\u6b65\u8bc4\u4f30\u4e00\u6b21 <code>save_strategy</code> str <code>\"steps\"</code> \u6a21\u578b\u4fdd\u5b58\u7b56\u7565\uff08<code>\"steps\"</code>, <code>\"epoch\"</code>\uff09 <code>save_steps</code> int <code>500</code> \u5f53 <code>save_strategy=\"steps\"</code> \u65f6\uff0c\u6bcf\u591a\u5c11\u6b65\u4fdd\u5b58\u4e00\u6b21 <code>load_best_model_at_end</code> bool <code>False</code> \u8bad\u7ec3\u7ed3\u675f\u540e\u52a0\u8f7d\u6700\u4f73\u6a21\u578b\uff08\u9700\u914d\u5408 <code>metric_for_best_model</code>\uff09 <code>metric_for_best_model</code> str <code>None</code> \u7528\u4e8e\u9009\u62e9\u6700\u4f73\u6a21\u578b\u7684\u6307\u6807\uff08\u5982 <code>\"eval_loss\"</code> \u6216\u81ea\u5b9a\u4e49\u6307\u6807\uff09"},{"location":"llm/huggingface/trainer/#5_2","title":"5. \u786c\u4ef6\u4e0e\u6027\u80fd\u4f18\u5316","text":"\u53c2\u6570 \u7c7b\u578b \u9ed8\u8ba4\u503c \u8bf4\u660e <code>fp16</code> / <code>bf16</code> bool <code>False</code> \u542f\u7528\u6df7\u5408\u7cbe\u5ea6\u8bad\u7ec3\uff08<code>fp16</code> \u9002\u7528\u4e8e NVIDIA GPU\uff0c<code>bf16</code> \u9002\u7528\u4e8e A100+\uff09 <code>no_cuda</code> bool <code>False</code> \u7981\u7528 CUDA\uff08\u5f3a\u5236\u4f7f\u7528 CPU \u8bad\u7ec3\uff09 <code>ddp_find_unused_parameters</code> bool <code>True</code> \u5206\u5e03\u5f0f\u8bad\u7ec3\u65f6\u68c0\u6d4b\u672a\u4f7f\u7528\u7684\u53c2\u6570\uff08\u89e3\u51b3 DDP \u62a5\u9519\u95ee\u9898\uff09 <code>dataloader_num_workers</code> int <code>0</code> \u6570\u636e\u52a0\u8f7d\u7684\u8fdb\u7a0b\u6570\uff08\u5efa\u8bae\u8bbe\u4e3a CPU \u6838\u5fc3\u6570\uff0c\u52a0\u901f\u6570\u636e\u8bfb\u53d6\uff09 <code>gradient_checkpointing</code> bool <code>False</code> \u68af\u5ea6\u68c0\u67e5\u70b9\u6280\u672f\uff08\u7528\u65f6\u95f4\u6362\u663e\u5b58\uff0c\u9002\u5408\u5927\u6a21\u578b\u8bad\u7ec3\uff09"},{"location":"llm/huggingface/trainer/#6_2","title":"6. \u65e5\u5fd7\u4e0e\u8c03\u8bd5","text":"\u53c2\u6570 \u7c7b\u578b \u9ed8\u8ba4\u503c \u8bf4\u660e <code>logging_strategy</code> str <code>\"steps\"</code> \u65e5\u5fd7\u8bb0\u5f55\u7b56\u7565\uff08<code>\"steps\"</code>, <code>\"epoch\"</code>, <code>\"no\"</code>\uff09 <code>logging_steps</code> int <code>500</code> \u6bcf\u591a\u5c11\u6b65\u8bb0\u5f55\u4e00\u6b21\u65e5\u5fd7 <code>logging_first_step</code> bool <code>False</code> \u662f\u5426\u8bb0\u5f55\u7b2c\u4e00\u6b65\u7684\u65e5\u5fd7 <code>debug</code> str <code>\"\"</code> \u8c03\u8bd5\u6a21\u5f0f\uff08<code>\"underflow_overflow\"</code> \u68c0\u6d4b\u68af\u5ea6\u5f02\u5e38\uff09"},{"location":"llm/huggingface/trainer/#_2","title":"\u4e8c\u3001\u5173\u952e\u53c2\u6570\u8be6\u89e3\u4e0e\u5b9e\u6218\u6280\u5de7","text":""},{"location":"llm/huggingface/trainer/#1_4","title":"1. \u6279\u6b21\u5927\u5c0f\u4e0e\u68af\u5ea6\u7d2f\u79ef","text":"<ul> <li>\u516c\u5f0f\uff1a\u5b9e\u9645\u603b\u6279\u6b21\u5927\u5c0f = <code>per_device_train_batch_size</code> \u00d7 <code>gradient_accumulation_steps</code> \u00d7 GPU \u6570\u91cf</li> <li>\u663e\u5b58\u4e0d\u8db3\uff1a\u82e5\u9047\u5230 OOM\uff08\u5185\u5b58\u4e0d\u8db3\uff09\uff0c\u53ef\u51cf\u5c0f <code>per_device_train_batch_size</code> \u5e76\u589e\u5927 <code>gradient_accumulation_steps</code>\u3002</li> </ul> <pre><code># \u793a\u4f8b\uff1a\u5728\u5355\u5361 24GB \u663e\u5b58\u4e0b\u8bad\u7ec3\u5927\u578b\u6a21\u578b\nper_device_train_batch_size = 4\ngradient_accumulation_steps = 8  # \u7b49\u6548\u4e8e\u6279\u6b21\u5927\u5c0f 4\u00d78=32\n</code></pre>"},{"location":"llm/huggingface/trainer/#2_5","title":"2. \u5b66\u4e60\u7387\u4e0e\u8c03\u5ea6\u5668","text":"<ul> <li>Warmup\uff1a\u907f\u514d\u521d\u59cb\u5b66\u4e60\u7387\u8fc7\u5927\u5bfc\u81f4\u9707\u8361\u3002\u63a8\u8350\u5728\u524d 5%~10% \u7684\u8bad\u7ec3\u6b65\u6570\u4e2d\u7ebf\u6027\u589e\u52a0\u5b66\u4e60\u7387\u3002</li> <li>\u8c03\u5ea6\u5668\u9009\u62e9\uff1a</li> <li><code>\"linear\"</code>\uff1a\u7ebf\u6027\u8870\u51cf\uff08BERT \u7684\u9ed8\u8ba4\u9009\u62e9\uff09</li> <li><code>\"cosine\"</code>\uff1a\u4f59\u5f26\u9000\u706b\uff08\u9002\u5408\u5fae\u8c03\u4efb\u52a1\uff09</li> <li><code>\"constant\"</code>\uff1a\u6052\u5b9a\u5b66\u4e60\u7387\uff08\u8c03\u8bd5\u65f6\u4f7f\u7528\uff09</li> </ul> <pre><code>learning_rate = 2e-5\nwarmup_ratio = 0.1  # 10% \u7684\u8bad\u7ec3\u6b65\u6570\u7528\u4e8e warmup\nlr_scheduler_type = \"cosine\"\n</code></pre>"},{"location":"llm/huggingface/trainer/#3_4","title":"3. \u6df7\u5408\u7cbe\u5ea6\u8bad\u7ec3","text":"<ul> <li><code>fp16</code>\uff1a\u5728 NVIDIA GPU \u4e0a\u4f7f\u7528\uff0c\u9700\u5b89\u88c5 <code>apex</code> \u6216 <code>amp</code> \u5e93\u3002</li> <li><code>bf16</code>\uff1a\u5728 Ampere \u67b6\u6784\uff08\u5982 A100\uff09\u4e0a\u6548\u679c\u66f4\u597d\uff0c\u652f\u6301\u66f4\u5e7f\u7684\u6570\u503c\u8303\u56f4\u3002</li> </ul> <pre><code>fp16 = True  # \u542f\u7528\u6df7\u5408\u7cbe\u5ea6\n</code></pre>"},{"location":"llm/huggingface/trainer/#4_4","title":"4. \u6a21\u578b\u4fdd\u5b58\u4e0e\u6700\u4f73\u6a21\u578b\u52a0\u8f7d","text":"<ul> <li>\u81ea\u52a8\u4fdd\u5b58\u6700\u4f73\u6a21\u578b\uff1a\u8bbe\u7f6e <code>load_best_model_at_end=True</code> \u548c <code>metric_for_best_model</code>\u3002</li> <li>\u591a\u6307\u6807\u9009\u62e9\uff1a\u82e5\u9700\u6839\u636e\u9a8c\u8bc1\u96c6\u51c6\u786e\u7387\u4fdd\u5b58\u6a21\u578b\uff1a</li> </ul> <pre><code>evaluation_strategy = \"steps\"\neval_steps = 500\nmetric_for_best_model = \"eval_accuracy\"  # \u5047\u8bbe compute_metrics \u8fd4\u56de\u8be5\u5b57\u6bb5\nload_best_model_at_end = True\n</code></pre>"},{"location":"llm/huggingface/trainer/#5_3","title":"5. \u5206\u5e03\u5f0f\u8bad\u7ec3\u914d\u7f6e","text":"<ul> <li>\u591a GPU \u8bad\u7ec3\uff1a\u4f7f\u7528 <code>torchrun</code> \u6216 <code>accelerate</code> \u5e93\u542f\u52a8\uff0c\u65e0\u9700\u4fee\u6539\u4ee3\u7801\u3002</li> <li>\u53c2\u6570\u4f18\u5316\uff1a   <pre><code>ddp_find_unused_parameters = False  # \u82e5\u6a21\u578b\u5b58\u5728\u672a\u4f7f\u7528\u7684\u53c2\u6570\uff08\u5982\u67d0\u4e9b\u6761\u4ef6\u5206\u652f\uff09\uff0c\u9700\u8bbe\u4e3a True\n</code></pre></li> </ul>"},{"location":"llm/huggingface/trainer/#_3","title":"\u4e09\u3001\u5b8c\u6574\u793a\u4f8b\u4ee3\u7801","text":"<pre><code>from transformers import TrainingArguments, Trainer\n\ntraining_args = TrainingArguments(\n    output_dir=\"./results\",\n    num_train_epochs=5.0,\n    per_device_train_batch_size=16,\n    per_device_eval_batch_size=32,\n    gradient_accumulation_steps=2,  # \u603b\u6279\u6b21\u5927\u5c0f = 16\u00d72=32\uff08\u5355\u5361\uff09\n    learning_rate=3e-5,\n    weight_decay=0.01,\n    warmup_ratio=0.1,\n    lr_scheduler_type=\"cosine\",\n    evaluation_strategy=\"steps\",\n    eval_steps=500,\n    save_strategy=\"steps\",\n    save_steps=500,\n    load_best_model_at_end=True,\n    metric_for_best_model=\"eval_f1\",\n    fp16=True,\n    dataloader_num_workers=4,\n    logging_steps=100,\n    report_to=\"wandb\",  # \u96c6\u6210 Weights &amp; Biases\n)\n\ntrainer = Trainer(\n    model=model,\n    args=training_args,\n    train_dataset=train_dataset,\n    eval_dataset=val_dataset,\n    compute_metrics=compute_metrics,\n)\n\ntrainer.train()\n</code></pre>"},{"location":"llm/huggingface/trainer/#_4","title":"\u56db\u3001\u5e38\u89c1\u95ee\u9898\u4e0e\u8c03\u8bd5","text":""},{"location":"llm/huggingface/trainer/#1-oom","title":"1. \u663e\u5b58\u4e0d\u8db3\uff08OOM\uff09","text":"<ul> <li>\u964d\u4f4e <code>per_device_train_batch_size</code></li> <li>\u542f\u7528 <code>gradient_checkpointing=True</code></li> <li>\u542f\u7528 <code>fp16</code>/<code>bf16</code></li> <li>\u589e\u52a0 <code>gradient_accumulation_steps</code></li> </ul>"},{"location":"llm/huggingface/trainer/#2_6","title":"2. \u8bad\u7ec3\u901f\u5ea6\u6162","text":"<ul> <li>\u589e\u52a0 <code>dataloader_num_workers</code></li> <li>\u786e\u4fdd <code>pin_memory=True</code>\uff08\u9ed8\u8ba4\u542f\u7528\uff09</li> <li>\u68c0\u67e5\u662f\u5426\u542f\u7528\u6df7\u5408\u7cbe\u5ea6\u8bad\u7ec3</li> </ul>"},{"location":"llm/huggingface/trainer/#3_5","title":"3. \u8bc4\u4f30\u6307\u6807\u4e0d\u66f4\u65b0","text":"<ul> <li>\u786e\u8ba4 <code>evaluation_strategy</code> \u4e0d\u662f <code>\"no\"</code></li> <li>\u68c0\u67e5 <code>compute_metrics</code> \u51fd\u6570\u662f\u5426\u6b63\u786e\u8fd4\u56de\u6307\u6807</li> </ul> <p>\u901a\u8fc7\u5408\u7406\u914d\u7f6e <code>TrainingArguments</code>\uff0c\u60a8\u53ef\u4ee5\u7cbe\u786e\u63a7\u5236\u8bad\u7ec3\u6d41\u7a0b\u7684\u6bcf\u4e2a\u7ec6\u8282\uff0c\u4ece\u57fa\u7840\u8bad\u7ec3\u5230\u5206\u5e03\u5f0f\u3001\u6df7\u5408\u7cbe\u5ea6\u7b49\u9ad8\u7ea7\u573a\u666f\u5747\u53ef\u8986\u76d6\u3002</p>"},{"location":"llm/huggingface/projects/classifier/","title":"\u6587\u672c\u5206\u7c7b","text":"<p>\u6211\u4eec\u5c06\u5c55\u793a\u5982\u4f55\u4f7f\u7528 \ud83e\udd17 Transformers\u4ee3\u7801\u5e93\u4e2d\u7684\u6a21\u578b\u6765\u89e3\u51b3\u6587\u672c\u5206\u7c7b\u4efb\u52a1\uff0c\u4efb\u52a1\u6765\u6e90\u4e8eGLUE Benchmark.</p> <p></p> <p>\u5bf9\u4e8e\u4ee5\u4e0a\u4efb\u52a1\uff0c\u6211\u4eec\u5c06\u5c55\u793a\u5982\u4f55\u4f7f\u7528\u7b80\u5355\u7684Dataset\u5e93\u52a0\u8f7d\u6570\u636e\u96c6\uff0c\u540c\u65f6\u4f7f\u7528transformer\u4e2d\u7684Trainer\u63a5\u53e3\u5bf9\u9884\u8bad\u7ec3\u6a21\u578b\u8fdb\u884c\u5fae\u8c03\u3002</p> <p>GLUE\u699c\u5355\u5305\u542b\u4e869\u4e2a\u53e5\u5b50\u7ea7\u522b\u7684\u5206\u7c7b\u4efb\u52a1\uff0c\u5206\u522b\u662f\uff1a</p> <ul> <li>CoLA (Corpus of Linguistic Acceptability) \u9274\u522b\u4e00\u4e2a\u53e5\u5b50\u662f\u5426\u8bed\u6cd5\u6b63\u786e.</li> <li>MNLI (Multi-Genre Natural Language Inference) \u7ed9\u5b9a\u4e00\u4e2a\u5047\u8bbe\uff0c\u5224\u65ad\u53e6\u4e00\u4e2a\u53e5\u5b50\u4e0e\u8be5\u5047\u8bbe\u7684\u5173\u7cfb\uff1aentails,   contradicts \u6216\u8005 unrelated\u3002</li> <li>MRPC (Microsoft Research Paraphrase Corpus)   \u5224\u65ad\u4e24\u4e2a\u53e5\u5b50\u662f\u5426\u4e92\u4e3aparaphrases.</li> <li>QNLI (Question-answering Natural Language Inference) \u5224\u65ad\u7b2c2\u53e5\u662f\u5426\u5305\u542b\u7b2c1\u53e5\u95ee\u9898\u7684\u7b54\u6848\u3002</li> <li>QQP (Quora Question Pairs2) \u5224\u65ad\u4e24\u4e2a\u95ee\u53e5\u662f\u5426\u8bed\u4e49\u76f8\u540c\u3002</li> <li>RTE (Recognizing Textual Entailment)\u5224\u65ad\u4e00\u4e2a\u53e5\u5b50\u662f\u5426\u4e0e\u5047\u8bbe\u6210entail\u5173\u7cfb\u3002</li> <li>SST-2 (Stanford Sentiment Treebank) \u5224\u65ad\u4e00\u4e2a\u53e5\u5b50\u7684\u60c5\u611f\u6b63\u8d1f\u5411.</li> <li>STS-B (Semantic Textual Similarity Benchmark)   \u5224\u65ad\u4e24\u4e2a\u53e5\u5b50\u7684\u76f8\u4f3c\u6027\uff08\u5206\u6570\u4e3a1-5\u5206\uff09\u3002</li> <li>WNLI (Winograd Natural Language Inference)   Determine if a sentence with an anonymous pronoun and a sentence with this pronoun replaced are entailed or not.</li> </ul> <p>\u5bf9\u4e8e\u4ee5\u4e0a\u4efb\u52a1\uff0c\u6211\u4eec\u5c06\u5c55\u793a\u5982\u4f55\u4f7f\u7528\u7b80\u5355\u7684Dataset\u5e93\u52a0\u8f7d\u6570\u636e\u96c6\uff0c\u540c\u65f6\u4f7f\u7528transformer\u4e2d\u7684<code>Trainer</code>\u63a5\u53e3\u5bf9\u9884\u8bad\u7ec3\u6a21\u578b\u8fdb\u884c\u5fae\u8c03\u3002</p> <pre><code>GLUE_TASKS = [\"cola\", \"mnli\", \"mnli-mm\", \"mrpc\", \"qnli\", \"qqp\", \"rte\", \"sst2\", \"stsb\", \"wnli\"]\n</code></pre>"},{"location":"llm/huggingface/projects/classifier/#step1","title":"Step1 \u5bfc\u5165\u5e93","text":"<pre><code>import torch\nimport numpy as np\nfrom transformers import AutoTokenizer,AutoModelForSequenceClassification,TrainingArguments,Trainer\nfrom datasets import load_dataset\nimport evaluate\n\ntask = \"sst2\"\nmodel_checkpoint = \"distilbert-base-uncased\"\n</code></pre>"},{"location":"llm/huggingface/projects/classifier/#step2","title":"Step2 \u6570\u636e\u9884\u5904\u7406","text":"<p>\u4f7f\u7528GLEU\u4e2d\u7684SST-2\u6570\u636e\u96c6\uff0c \u5224\u65ad\u4e00\u4e2a\u53e5\u5b50\u7684\u60c5\u611f\u6b63\u8d1f\u5411\u3002 <pre><code># \u52a0\u8f7d\u6570\u636e\u96c6 \u548c \u9884\u5904\u7406\ndataset = load_dataset(path=\"glue\", name=task)\ntokenizer = AutoTokenizer.from_pretrained(model_checkpoint,use_fast=True)\n\ndef preprocess_fn(examples):\n    return tokenizer(examples[\"sentence\"], truncation=True, max_length=512)\n\ntokenized_dataset = dataset.map(preprocess_fn,batched=True)\nprint(tokenized_dataset)\nlabels =  tokenized_dataset['train'].features['label'].names\nprint(\"\u5206\u7c7b\u6807\u7b7e:\",labels)\n</code></pre></p>"},{"location":"llm/huggingface/projects/classifier/#step3","title":"Step3 \u52a0\u8f7d\u6a21\u578b","text":"<pre><code># \u52a0\u8f7d\u6a21\u578b\n\nmodel = AutoModelForSequenceClassification.from_pretrained(model_checkpoint, num_labels=len(labels))  # \u53ea\u6709\u4fe9\u4e2a\u5206\u7c7b\n\n\n# \u6a21\u578b\u9884\u6d4b\u51fd\u6570\ndef model_predict(sentences):\n    results = []\n    inputs = tokenizer(sentences, truncation=True, max_length=512, return_tensors=\"pt\", padding=True).to(\"cpu\")\n    model.to(\"cpu\")\n    model.eval()\n\n    with torch.no_grad():\n        outputs = model(**inputs)\n        logits = outputs.logits\n        probs = torch.argmax(torch.softmax(logits, dim=-1), dim=-1)\n        for prob in probs:\n            results.append(labels[int(prob.item())])\n\n    return results\n\n\nsentences = [\"I really not like this movie\", \"this song is great\"]\nprint(\"\u8bad\u7ec3\u524d\u7684\u6a21\u578b\uff1a\", model_predict(sentences))\n</code></pre>"},{"location":"llm/huggingface/projects/classifier/#step4","title":"Step4 \u5236\u5b9a\u8bc4\u4f30\u6307\u6807","text":"<pre><code># \u52a0\u8f7d\u8bc4\u4f30\u6307\u6807\n\nmetirc = evaluate.load(path=\"glue\", config_name=task)\n\ndef compute_metric(eval_pred):\n    predictions,labels = eval_pred\n    predictions = np.argmax(predictions,axis=1)\n    return metirc.compute(predictions=predictions, references=labels)\n</code></pre>"},{"location":"llm/huggingface/projects/classifier/#step5","title":"Step5 \u8bbe\u7f6e\u8bad\u7ec3\u53c2\u6570","text":"<pre><code># \u8bbe\u7f6e\u8bad\u7ec3\u53c2\u6570\n\ntrain_args = TrainingArguments(\n    output_dir=\"outputs\",\n    logging_dir=\"logs\",\n    logging_strategy=\"epoch\",\n    logging_steps=10,\n    report_to=\"tensorboard\",\n    num_train_epochs=3,\n    per_device_train_batch_size=8,\n    per_device_eval_batch_size=8,\n    gradient_accumulation_steps=4,\n    weight_decay=0.01,\n    load_best_model_at_end=True,\n    learning_rate=2e-5,\n    save_strategy=\"epoch\",\n    save_total_limit=1,\n    eval_strategy=\"epoch\",\n)\n</code></pre>"},{"location":"llm/huggingface/projects/classifier/#step6","title":"Step6 \u8bad\u7ec3\u6a21\u578b","text":"<pre><code># \u8bad\u7ec3\u6a21\u578b\nmodel.train()\ntrainer = Trainer(\n    model=model,\n    args=train_args,\n    compute_metrics=compute_metric,\n    train_dataset=tokenized_dataset[\"train\"].select(range(10000)),\n    eval_dataset=tokenized_dataset['validation'],\n    tokenizer=tokenizer,\n)\n\ntrainer.train() # \u6a21\u578b\u8bad\u7ec3\n\ntrainer.evaluate() # \u8bc4\u4f30\u6a21\u578b\n\ntext = [\"I like that song\",\"I really hate this movie. It's disaster!\",\"I really not like this movie\", \"this song is great\"]\nresults = model_predict(text)\nprint(\"\u8bad\u7ec3\u540e\u7684\u6a21\u578b\uff1a:\",results)\n</code></pre>"},{"location":"llm/huggingface/projects/classifier/#step7-hub","title":"Step7 \u4e0a\u4f20\u6a21\u578b\u5230hub","text":"<p>\u4e0a\u4f20\u6a21\u578b\u5230hugging face model hub</p>"},{"location":"llm/huggingface/projects/close/","title":"\u4e2d\u6587\u586b\u7a7a","text":""},{"location":"llm/huggingface/projects/close/#step1","title":"Step1 \u6570\u636e\u9884\u5904\u7406","text":"<pre><code>from transformers import BertTokenizer, BertModel, TrainingArguments, Trainer\nfrom datasets import load_dataset\nimport torch.nn as nn\nimport torch\n\nmodel_name = 'bert-base-chinese'\ndevice = torch.device('mps' if torch.backends.mps.is_available() else 'cpu')\n# \u52a0\u8f7d\u6570\u636e\u96c6\ndataset = load_dataset(path=\"src/seamew/ChnSentiCor\")\n# \u7f16\u7801\u5668\ntokenizer = BertTokenizer.from_pretrained(model_name, return_tensors='pt')\n\n\ndef precess_fn(examples):\n    return tokenizer(examples['text'], truncation=True, max_length=30, padding='max_length', return_tensors='pt',\n                     return_length=True)\n\n\ntokenized_dataset = dataset.map(precess_fn, batched=True)\ntokenized_dataset = tokenized_dataset.filter(function=lambda x: x['length'] &gt;= 30)\ntokenized_dataset = tokenized_dataset.remove_columns(['label', 'text'])\ntokenized_dataset\n</code></pre>"},{"location":"llm/huggingface/projects/close/#step2","title":"Step2 \u5b9a\u4e49\u6a21\u578b","text":"<pre><code># \u5b9a\u4e49\u6a21\u578b\n\npretrained_model = BertModel.from_pretrained(model_name).to(device)\nfor param in pretrained_model.parameters():\n    param.requires_grad = False\n\n\nclass MyModel(nn.Module):\n    def __init__(self):\n        super(MyModel, self).__init__()\n        self.decoder = nn.Linear(768, tokenizer.vocab_size)\n        self.decoder.bias.data.zero_()  #\u5c06bias\u91cd\u7f6e\u4e3a0\n        self.dropout = nn.Dropout(p=0.5)\n\n    def forward(self, input_ids, attention_mask, token_type_ids, labels=None):\n        with torch.no_grad():\n            out = pretrained_model(input_ids, attention_mask, token_type_ids)\n\n        logits = self.dropout(out.last_hidden_state[:,15])\n        logits = self.decoder(logits)\n        if labels is not None:\n            loss = nn.CrossEntropyLoss()(logits, labels)\n            return {'loss': loss, 'logits': logits}  # \u5173\u952e\u5b57loss\u548clogits\u662fhuggingface transformer\u8981\u6c42\u7684\n\n        return {'logits': logits}\n\n\nmodel = MyModel()\nprint(model)\n</code></pre>"},{"location":"llm/huggingface/projects/close/#step3","title":"Step3 \u8bad\u7ec3\u53c2\u6570","text":"<pre><code>train_args = TrainingArguments(\n    output_dir=\"outputs\",\n    save_strategy=\"epoch\",\n    save_total_limit=1,\n    learning_rate=5e-4,\n    weight_decay=0.01,\n    lr_scheduler_type=\"linear\",\n    warmup_steps=5,\n    num_train_epochs=10,\n    per_device_train_batch_size=4,\n    per_device_eval_batch_size=4,\n    gradient_accumulation_steps=8,\n    logging_dir=\"logs\",\n    logging_strategy=\"epoch\",\n    report_to=\"tensorboard\",\n    disable_tqdm=False,\n)\n</code></pre>"},{"location":"llm/huggingface/projects/close/#step4","title":"Step4 \u8bad\u7ec3\u6a21\u578b","text":"<pre><code># \u6570\u636e\u6574\u7406\u51fd\u6570\ndef data_collator(batch_data):\n    input_ids = [data['input_ids'] for data in batch_data]\n    attention_masks = [data['attention_mask'] for data in batch_data]\n    token_type_ids = [data['token_type_ids'] for data in batch_data]\n\n    # \u8f6c\u6362\u6570\u636e\u7c7b\u578b\n    input_ids = torch.LongTensor(input_ids)\n    attention_masks = torch.LongTensor(attention_masks)\n    token_type_ids = torch.LongTensor(token_type_ids)\n\n    # \u628a\u7b2c15\u4e2a\u8bcd\u4f5c\u4e3a\u76ee\u6807\u503c\n    labels = input_ids[:, 15].reshape(-1).clone()\n    input_ids[:, 15] = tokenizer.get_vocab()[tokenizer.mask_token]  # \u906e\u6321\u7b2c15\u4e2a\u8bcd\n\n\n    return {\n        'input_ids': input_ids,\n        'attention_mask': attention_masks,\n        'token_type_ids': token_type_ids,\n        'labels': labels,\n    }\n\n\ntainer = Trainer(\n    model=model,\n    args=train_args,\n    train_dataset=tokenized_dataset['train'],\n    eval_dataset=tokenized_dataset['validation'],\n    data_collator=data_collator,\n    tokenizer=tokenizer,\n)\ntainer.train()\n</code></pre>"},{"location":"llm/huggingface/projects/close/#step5","title":"Step5 \u67e5\u770b\u8bad\u7ec3\u6548\u679c","text":"<pre><code>model.eval()\n\ndatas = tokenized_dataset['test'].select(range(5))\ndatas = data_collator(datas)\nTLabels = datas['labels']\nprint(\"\u771f\u5b9e\u6570\u636e\uff1a\",tokenizer.decode(TLabels))\n\nmodel.to(device=device)\noutputs = model(input_ids=datas['input_ids'].to(device), attention_mask=datas['attention_mask'].to(device), token_type_ids=datas['token_type_ids'].to(device),labels=datas['labels'].to(device))\n\npreds =  outputs['logits'].argmax(1).tolist()\nprint(\"\u9884\u6d4b\u6570\u636e\uff1a\",tokenizer.decode(preds))\n</code></pre>"},{"location":"llm/huggingface/projects/inference/","title":"\u4e2d\u6587\u53e5\u5b50\u5173\u7cfb\u63a8\u65ad","text":"<p>\u672c\u7ae0\u5c06\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u5224\u65ad\u4e24\u4e2a\u53e5\u5b50\u662f\u5426\u662f\u8fde\u7eed\u7684\u5173\u7cfb\uff0c\u4ee5\u4eba\u7c7b\u7684\u89d2\u5ea6\u6765\u8bb2\uff0c\u9605\u8bfb\u4e24\u4e2a\u53e5\u5b50\uff0c\u5f88\u5bb9\u6613\u5c31\u80fd\u5224\u65ad\u51fa\u8fd9\u4e24\u4e2a\u53e5\u5b50\u662f\u76f8\u8fde\u7684\uff0c\u8fd8\u662f\u65e0\u5173\u7684 0 \u662f\u76f8\u8fde\u7684 \uff1b 1 \u662f\u4e0d\u76f8\u8fde\u7684\u3002</p>"},{"location":"llm/huggingface/projects/inference/#step1","title":"Step1 \u6570\u636e\u52a0\u8f7d&amp;\u9884\u5904\u7406","text":"<p><pre><code>from datasets import load_dataset\nfrom transformers import BertTokenizer, BertModel\nimport torch\nimport random\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nmodel_name = 'bert-base-chinese'\ndevice = torch.device('mps' if torch.backends.mps.is_available() else 'cpu')\n\ndataset = load_dataset(path=\"src/seamew/ChnSentiCor\")\ndataset = dataset.filter(function=lambda x: len(x['text']) &gt; 40)\n\ntokenizer = BertTokenizer.from_pretrained(model_name, return_tensors='pt')\npretrained_model = BertModel.from_pretrained(model_name).to(device)\n\n\ndef process_fn(batch_data):\n    texts = []\n    labels = []\n\n    for text in batch_data['text']:\n        label = random.randint(0, 1)\n        labels.append(label)\n\n        sentence1 = text[:20]\n        sentence2 = text[20:40]\n\n        if label == 1:\n            j = random.randint(0, len(dataset['train']) - 1)\n            sentence2 = dataset['train'][j]['text'][20:40]\n\n        texts.append((sentence1, sentence2))\n\n    tokenized = tokenizer.batch_encode_plus(batch_text_or_text_pairs=texts, padding=\"max_length\", return_tensors=\"pt\",\n                                            max_length=45,add_special_tokens=True)\n\n    tokenized['label'] = labels\n    return tokenized\n\n\ntokenized_dataset = dataset.map(process_fn, batched=True, remove_columns=['text'])\ntokenized_dataset\n</code></pre> \u8f93\u51fa</p> <pre><code>DatasetDict({\n    train: Dataset({\n        features: ['label', 'input_ids', 'token_type_ids', 'attention_mask'],\n        num_rows: 8001\n    })\n    validation: Dataset({\n        features: ['label', 'input_ids', 'token_type_ids', 'attention_mask'],\n        num_rows: 1012\n    })\n    test: Dataset({\n        features: ['label', 'input_ids', 'token_type_ids', 'attention_mask'],\n        num_rows: 991\n    })\n})\n</code></pre>"},{"location":"llm/huggingface/projects/inference/#step2","title":"Step2 \u5b9a\u4e49\u4e0b\u6e38\u6a21\u578b","text":"<pre><code># \u5b9a\u4e49\u4e0b\u6e38\u4efb\u52a1\u6a21\u578b\n\nclass MyModel(torch.nn.Module):\n    def __init__(self):\n        super(MyModel, self).__init__()\n        self.fc = torch.nn.Linear(in_features=768, out_features=2, bias=True)\n        self.fc.bias.data.zero_()\n\n    def forward(self, input_ids, attention_mask, token_type_ids, labels=None):\n        with torch.no_grad():\n            output = pretrained_model(input_ids=input_ids, attention_mask=attention_mask, token_type_ids=token_type_ids)\n\n        logits = self.fc(output.last_hidden_state[:, 0])\n        if labels is not None:\n            loss = torch.nn.CrossEntropyLoss()(logits, labels)\n            return {\"loss\": loss, \"logits\": logits}\n\n        return {\"logits\": logits}\n\n\nmodel = MyModel()\nprint(model)\n</code></pre>"},{"location":"llm/huggingface/projects/inference/#step3","title":"Step3 \u5b9a\u4e49\u8bad\u7ec3\u53c2\u6570","text":"<pre><code># \u5b9a\u4e49\u8bad\u7ec3\u53c2\u6570\nfrom transformers import TrainingArguments, Trainer\n\ntraining_args = TrainingArguments(\n    output_dir='outputs',\n    save_strategy='epoch',\n    save_total_limit=1,\n    num_train_epochs=5,\n    per_device_train_batch_size=4,\n    per_device_eval_batch_size=4,\n    gradient_accumulation_steps=8,\n    weight_decay=0.01,\n    learning_rate=5e-5,\n    lr_scheduler_type=\"linear\",\n    logging_strategy='epoch',\n    logging_dir=\"logs\",\n    report_to=\"tensorboard\",\n)\n\nprint(training_args)\n</code></pre>"},{"location":"llm/huggingface/projects/inference/#step4","title":"Step4 \u5b9a\u4e49\u8bad\u7ec3\u5668","text":"<pre><code>import evaluate\n\naccuray_metic = evaluate.load(\"accuracy\")\n\n\naccuracy_metric = evaluate.load(\"accuracy\")\n\ndef compute_metrics(pred):\n    predictions = pred.predictions.argmax(axis=1)\n    labels = pred.label_ids\n    accuracy = accuracy_metric.compute(predictions=predictions, references=labels)  # \u2705 \u53c2\u6570\u4e5f\u52a0\u4e0a\u5173\u952e\u8bcd\u66f4\u6e05\u6670\n    return {\"accuracy\": accuracy[\"accuracy\"]}  # \u2705 \u8fd9\u91cc\u8fd4\u56de\u7684\u662f\u5b57\u5178\u4e2d\u7684 \"accuracy\" \u503c\n\n\ntrainer = Trainer(\n    model=model,\n    args=training_args,\n    train_dataset=tokenized_dataset['train'],\n    eval_dataset=tokenized_dataset['validation'],\n    tokenizer=tokenizer,\n    compute_metrics=compute_metrics,\n)\n\ntrainer.train()\n</code></pre> <p>\u8f93\u51fa</p> <pre><code>&lt;IPython.core.display.HTML object&gt;\nTrainOutput(global_step=1250, training_loss=0.3362057861328125, metrics={'train_runtime': 210.7087, 'train_samples_per_second': 189.859, 'train_steps_per_second': 5.932, 'total_flos': 0.0, 'train_loss': 0.3362057861328125, 'epoch': 4.983508245877061})\n</code></pre>"},{"location":"llm/huggingface/projects/inference/#step5","title":"Step5 \u8bc4\u4f30\u6a21\u578b","text":"<pre><code>trainer.evaluate()\n</code></pre> <p>\u8f93\u51fa</p> <pre><code>&lt;IPython.core.display.HTML object&gt;\n{'eval_loss': 0.3010992109775543,\n 'eval_accuracy': 0.8656126482213439,\n 'eval_runtime': 6.1257,\n 'eval_samples_per_second': 165.205,\n 'eval_steps_per_second': 41.301,\n 'epoch': 4.983508245877061}\n</code></pre>"},{"location":"llm/huggingface/projects/inference/#step6","title":"Step6 \u9a8c\u8bc1\u6a21\u578b\u7684\u8f93\u51fa","text":"<pre><code>batch_data = tokenized_dataset['test'].select(range(10))\n\ntlabel = batch_data['label']\nprint(\"\u771f\u5b9e\u6807\u7b7e\uff1a\", tlabel)\n\nmodel = model.to(device)\nmodel.eval()\n\ninput_ids = torch.LongTensor(batch_data['input_ids']).to(device)\nattention_mask = torch.LongTensor(batch_data['attention_mask']).to(device)\ntoken_type_ids = torch.LongTensor(batch_data['token_type_ids']).to(device)\n\noutputs = model(input_ids=input_ids, attention_mask=attention_mask, token_type_ids=token_type_ids)\nlogits = torch.softmax(outputs['logits'], dim=1)\nresult = torch.argmax(logits, dim=1)\nprint(\"\u9884\u6d4b\u6807\u7b7e\uff1a\", result.tolist())\n</code></pre> <p>\u8f93\u51fa</p> <pre><code>\u771f\u5b9e\u6807\u7b7e\uff1a [0, 1, 0, 0, 1, 0, 1, 1, 0, 0]\n\u9884\u6d4b\u6807\u7b7e\uff1a [0, 0, 0, 0, 0, 1, 1, 1, 0, 0]\n</code></pre>"},{"location":"llm/huggingface/projects/ner/","title":"\u4e2d\u6587\u547d\u540d\u5b9e\u4f53\u8bc6\u522b","text":"<p>\u6807\u8bb0\u5206\u7c7b\u662f\u4e00\u4e2a\u81ea\u7136\u8bed\u8a00\u7406\u89e3\u4efb\u52a1\uff0c\u4e00\u822c\u53ef\u4ee5\u5206\u4e3aNamed Entity Recognition\uff08NER\uff09\u548cPart-of-Speech\uff08PoS\uff09\u4e24\u7c7b\u3002\u5176\u4e2d\uff0cNER\u7c7b\u4efb\u52a1\u6307\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\uff0cNER\u4efb\u52a1\u662f\u8981\u8bc6\u522b\u51fa\u81ea\u7136\u8bed\u53e5\u4e2d\u7684\u4eba\u7269\u3001\u5730\u70b9\u3001\u7ec4\u7ec7\u7ed3\u6784\u540d\u7b49\u547d\u540d\u5b9e\u4f53\uff1b\u53e6\u4e00\u7c7b\u4efb\u52a1PoS\u6307\u8bcd\u6027\u6807\u6ce8\uff0cPoS\u4efb\u52a1\u662f\u8981\u8bc6\u522b\u51fa\u81ea\u7136\u8bed\u53e5\u4e2d\u7684\u52a8\u8bcd\u3001\u540d\u8bcd\u3001\u6807\u70b9\u7b26\u53f7\u7b49\u3002NER\u4efb\u52a1\u548cPoS\u4efb\u52a1\u5728\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u4e2d\u8ba1\u7b97\u7684\u65b9\u6cd5\u51e0\u4e4e\u76f8\u540c\uff0c\u672c\u7ae0\u5c06\u4ee5NER\u4e3a\u4f8b\u8fdb\u884c\u8bb2\u89e3\u3002</p>"},{"location":"llm/huggingface/projects/ner/#step1","title":"Step1 \u6570\u636e\u52a0\u8f7d&amp;\u9884\u5904\u7406","text":""},{"location":"llm/huggingface/projects/sentiment/","title":"\u4e2d\u6587\u60c5\u611f\u5206\u7c7b","text":""},{"location":"llm/huggingface/projects/sentiment/#step1","title":"Step1 \u6570\u636e\u51c6\u5907","text":"<p>\u672c\u7ae0\u6240\u4f7f\u7528\u7684\u6570\u636e\u96c6\u4f9d\u7136\u662fChnSentiCorp\u6570\u636e\u96c6\uff0c\u8fd9\u662f\u4e00\u4e2a\u60c5\u611f\u5206\u7c7b\u6570\u636e\u96c6\uff0c\u6bcf\u6761\u6570\u636e\u4e2d\u5305\u62ec\u4e00\u53e5\u8d2d\u7269\u8bc4\u4ef7\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6807\u8bc6\uff0c\u8868\u660e\u8fd9\u6761\u8bc4\u4ef7\u662f\u4e00\u6761\u597d\u8bc4\u8fd8\u662f\u4e00\u6761\u5dee\u8bc4\u3002\u5728ChnSentiCorp\u6570\u636e\u96c6\u4e2d\uff0c\u88ab\u8bc4\u4ef7\u7684\u5546\u54c1\u5305\u62ec\u4e66\u7c4d\u3001\u9152\u5e97\u3001\u8ba1\u7b97\u673a\u914d\u4ef6\u7b49\u3002\u5bf9\u4e8e\u4eba\u7c7b\u6765\u8bb2\uff0c\u5373\u4f7f\u4e0d\u7ed9\u4e88\u6807\u8bc6\uff0c\u4e5f\u80fd\u901a\u8fc7\u8bc4\u4ef7\u5185\u5bb9\u5927\u81f4\u5224\u65ad\u51fa\u8fd9\u662f\u4e00\u6761\u597d\u8bc4\u8fd8\u662f\u4e00\u6761\u5dee\u8bc4\uff1b\u5bf9\u4e8e\u795e\u7ecf\u7f51\u7edc\uff0c\u4e5f\u5c06\u901a\u8fc7\u8fd9\u4e2a\u4efb\u52a1\u6765\u9a8c\u8bc1\u5b83\u7684\u6709\u6548\u6027\u3002</p> <p><pre><code>from datasets import load_dataset\n\ndataset = load_dataset('src/seamew/ChnSentiCor') # \u4f7f\u7528huggingface-cli \u4e0b\u8f7d\u7684\u79bb\u7ebf\u6570\u636e\ndataset\n</code></pre> \u8f93\u51fa</p> <pre><code>DatasetDict({\n    train: Dataset({\n        features: ['label', 'text'],\n        num_rows: 9600\n    })\n    validation: Dataset({\n        features: ['label', 'text'],\n        num_rows: 1200\n    })\n    test: Dataset({\n        features: ['label', 'text'],\n        num_rows: 1200\n    })\n})\n</code></pre>"},{"location":"llm/huggingface/projects/sentiment/#step2","title":"Step2 \u52a0\u8f7d\u7f16\u7801\u5668","text":"<p><pre><code>from transformers import BertTokenizer\n\ntokenizer = BertTokenizer.from_pretrained('bert-base-chinese')\ntokenizer\n</code></pre> \u8f93\u51fa</p> <p><pre><code>BertTokenizer(name_or_path='bert-base-chinese', vocab_size=21128, model_max_length=512, is_fast=False, padding_side='right', truncation_side='right', special_tokens={'unk_token': '[UNK]', 'sep_token': '[SEP]', 'pad_token': '[PAD]', 'cls_token': '[CLS]', 'mask_token': '[MASK]'}, clean_up_tokenization_spaces=True, added_tokens_decoder={\n    0: AddedToken(\"[PAD]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n    100: AddedToken(\"[UNK]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n    101: AddedToken(\"[CLS]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n    102: AddedToken(\"[SEP]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n    103: AddedToken(\"[MASK]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n}\n)\n</code></pre> \u5728\u8f93\u51fa\u4e2d\u53ef\u4ee5\u770b\u5230vocab_size=21128\uff0c\u8bcd\u5e93\u7684\u5927\u5c0f</p>"},{"location":"llm/huggingface/projects/sentiment/#_2","title":"\u7f16\u7801\u53e5\u5b50","text":"<p><pre><code>out = tokenizer.batch_encode_plus(\n    batch_text_or_text_pairs=['\u4ece\u660e\u5929\u8d77,\u00a0\u505a\u4e00\u4e2a\u5e78\u798f\u7684\u4eba\u3002','\u5582\u9a6c,\u5288\u67f4,\u5468\u6e38\u4e16\u754c'],\n    truncation=True,\n    max_length=17,\n    padding='max_length',\n    return_tensors='pt',\n    return_length=True,\n)\n\nout\n</code></pre> \u8f93\u51fa</p> <pre><code>{'input_ids': tensor([[ 101,  794, 3209, 1921, 6629,  117,  976,  671,  702, 2401, 4886, 4638,\n          782,  511,  102,    0,    0],\n        [ 101, 1585, 7716,  117, 1207, 3395,  117, 1453, 3952,  686, 4518,  102,\n            0,    0,    0,    0,    0]]), 'token_type_ids': tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]), 'length': tensor([15, 12]), 'attention_mask': tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],\n        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]])}\n</code></pre>"},{"location":"llm/huggingface/projects/sentiment/#_3","title":"\u89e3\u7801\u53e5\u5b50","text":"<p><pre><code>tokenizer.decode(out['input_ids'][0])\n</code></pre> \u8f93\u51fa</p> <pre><code>'[CLS] \u4ece \u660e \u5929 \u8d77, \u505a \u4e00 \u4e2a \u5e78 \u798f \u7684 \u4eba \u3002 [SEP] [PAD] [PAD]'\n</code></pre>"},{"location":"llm/huggingface/projects/sentiment/#step3","title":"Step3 \u5b9a\u4e49\u6570\u636e\u96c6","text":"<p>\u672c\u6b21\u4efb\u52a1\u4e3a\u60c5\u611f\u5206\u7c7b\u4efb\u52a1\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u4e2a\u60c5\u611f\u5206\u7c7b\u6570\u636e\u96c6\u8fdb\u884c\u6a21\u578b\u7684\u8bad\u7ec3\u548c\u6d4b\u8bd5\uff0c\u6b64\u5904\u52a0\u8f7dChnSentiCorp\u6570\u636e\u96c6</p> <p><pre><code>import torch\nfrom torch.utils.data import DataLoader, Dataset\n\n\nclass MyDataset(Dataset):\n    def __init__(self, split='train'):\n        self.dataset = load_dataset('src/seamew/ChnSentiCor', split=split)\n\n    def __len__(self):\n        return len(self.dataset)\n\n    def __getitem__(self, idx):\n        text = self.dataset[idx]['text']\n        label = self.dataset[idx]['label']\n        return text, label\n\ndataset = MyDataset('train')\nlen(dataset),dataset[20]\n</code></pre> \u8f93\u51fa</p> <pre><code>(9600, ('\u975e\u5e38\u4e0d\u9519\uff0c\u670d\u52a1\u5f88\u597d\uff0c\u4f4d\u4e8e\u5e02\u4e2d\u5fc3\u533a\uff0c\u4ea4\u901a\u65b9\u4fbf\uff0c\u4e0d\u8fc7\u4ef7\u683c\u4e5f\u9ad8\uff01', 1))\n</code></pre>"},{"location":"llm/huggingface/projects/sentiment/#step4","title":"Step4 \u5b9a\u4e49\u6570\u636e\u6574\u7406\u51fd\u6570","text":"<pre><code>def collate_fn(batch_data):\n    texts, labels = zip(*batch_data)\n    # \u7f16\u7801\n    tokenized_Data = tokenizer.batch_encode_plus(\n        batch_text_or_text_pairs=texts,\n        truncation=True,\n        max_length=500,\n        padding='max_length',\n        return_length=True,\n        return_tensors='pt',\n    )\n\n    input_ids = tokenized_Data['input_ids']\n    attention_mask = tokenized_Data['attention_mask']\n    token_type_ids = tokenized_Data['token_type_ids']\n    labels = torch.tensor(labels).long()\n\n    # \u628a\u6570\u636e\u8f6c\u79fb\u5230\u8bbe\u5907\u4e0a\n    input_ids = input_ids.to(device)\n    attention_mask = attention_mask.to(device)\n    token_type_ids = token_type_ids.to(device)\n    labels = labels.to(device)\n    return input_ids, attention_mask, token_type_ids, labels\n</code></pre>"},{"location":"llm/huggingface/projects/sentiment/#step5","title":"Step5 \u5b9a\u4e49\u6570\u636e\u52a0\u8f7d\u5668","text":"<pre><code>loader = DataLoader(dataset=dataset, batch_size=16, collate_fn=collate_fn,drop_last=True,shuffle=True)\n\nlen(loader)\n</code></pre>"},{"location":"llm/huggingface/projects/sentiment/#_4","title":"\u67e5\u770b\u6570\u636e\u6837\u672c","text":"<pre><code>for i, (input_ids,attention_mask,token_type_ids,labels) in enumerate(loader):\n    break\n\ninput_ids.shape,attention_mask.shape,token_type_ids.shape,labels.shape\n</code></pre> <p>\u8f93\u51fa</p> <pre><code>(torch.Size([16, 500]),\n torch.Size([16, 500]),\n torch.Size([16, 500]),\n torch.Size([16]))\n</code></pre>"},{"location":"llm/huggingface/projects/sentiment/#step6","title":"Step6 \u5b9a\u4e49\u6a21\u578b","text":"<pre><code>from transformers import BertModel\n\nmodel = BertModel.from_pretrained(\"bert-base-chinese\")\n\nmodel.to(device) # \u8f6c\u79fb\u5230\u8bbe\u5907\u4e0a\n\n# \u51bb\u7ed3\u6a21\u578b\u53c2\u6570\nfor param in model.parameters():\n    param.requires_grad = False\n</code></pre>"},{"location":"llm/huggingface/projects/sentiment/#_5","title":"\u67e5\u770b\u6a21\u578b\u7684\u8f93\u51fa\u5f62\u72b6","text":"<p><pre><code>out = model(input_ids,attention_mask,token_type_ids)\nout.last_hidden_state.shape\n</code></pre> \u8f93\u51fa</p> <pre><code>torch.Size([16, 500, 768]) \n</code></pre> <p>\u4ece\u9884\u8bad\u7ec3\u6a21\u578b\u7684\u8ba1\u7b97\u7ed3\u679c\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u4e5f\u662f16\u53e5\u8bdd\u7684\u7ed3\u679c\uff0c\u6bcf\u53e5\u8bdd\u5305\u62ec500\u4e2a\u8bcd\uff0c\u6bcf\u4e2a\u8bcd\u88ab\u62bd\u6210\u4e00\u4e2a768\u7ef4\u7684\u5411\u91cf\u3002</p>"},{"location":"llm/huggingface/projects/sentiment/#step7","title":"Step7 \u5b9a\u4e49\u4e0b\u6e38\u4efb\u52a1\u6a21\u578b","text":"<p>\u5b8c\u6210\u4ee5\u4e0a\u5de5\u4f5c\uff0c\u73b0\u5728\u53ef\u4ee5\u5b9a\u4e49\u4e0b\u6e38\u4efb\u52a1\u6a21\u578b\u4e86\u3002\u4e0b\u6e38\u4efb\u52a1\u6a21\u578b\u7684\u4efb\u52a1\u662f\u5bf9backbone\u62bd\u53d6\u7684\u7279\u5f81\u8fdb\u884c\u8fdb\u4e00\u6b65\u8ba1\u7b97\uff0c\u5f97\u5230\u7b26\u5408\u4e1a\u52a1\u9700\u6c42\u7684\u8ba1\u7b97\u7ed3\u679c\u3002\u5bf9\u4e8e\u672c\u7ae0\u7684\u4efb\u52a1\u6765\u8bb2\uff0c\u9700\u8981\u8ba1\u7b97\u4e00\u4e2a\u4e8c\u5206\u7c7b\u7684\u7ed3\u679c\uff0c\u548c\u6570\u636e\u96c6\u4e2d\u771f\u5b9e\u7684label\u4fdd\u6301\u4e00\u81f4\uff0c\u4ee3\u7801\u5982\u4e0b</p> <p><pre><code>class MyModel(torch.nn.Module):\n    def __init__(self):\n        super().__init__()\n        self.fc = torch.nn.Linear(768, 2)\n\n    def forward(self, input_ids, attention_mask, token_type_ids):\n        # \u4f7f\u7528\u9884\u8bad\u7ec3\u7684\u6a21\u578b\u63d0\u53d6\u6570\u636e\u7279\u5f81\n        with torch.no_grad():\n            out = model(input_ids, attention_mask, token_type_ids)\n        # \u5bf9\u62bd\u53d6\u7684\u7279\u5f81\u53ea\u53d6\u7b2c1\u4e2a\u5b57\u7684\u7ed3\u679c\u505a\u5206\u7c7b\u5373\u53ef;\u201c\u6ce8\u610f\uff1a\u4e4b\u6240\u4ee5\u53ea\u53d6\u4e86\u7b2c0\u4e2a\u8bcd\u7684\u7279\u5f81\u505a\u540e\u7eed\u7684\u5224\u65ad\u8ba1\u7b97\uff0c\u8fd9\u548c\u9884\u8bad\u7ec3\u6a21\u578bBERT\u7684\u8bad\u7ec3\u65b9\u6cd5\u6709\u5173\u7cfb\u201d\n        out = self.fc(out.last_hidden_state[:, 0])\n        out = out.softmax(dim=1)\n        return out\n\n\nclassifier = MyModel()\nclassifier.to(device)\nout = classifier(input_ids, attention_mask, token_type_ids)\nprint(out)\n</code></pre> \u8f93\u51fa</p> <pre><code>tensor([[0.5787, 0.4213],\n        [0.6246, 0.3754],\n        [0.3652, 0.6348],\n        [0.3738, 0.6262],\n        [0.5788, 0.4212],\n        [0.4522, 0.5478],\n        [0.4285, 0.5715],\n        [0.4864, 0.5136],\n        [0.5243, 0.4757],\n        [0.4276, 0.5724],\n        [0.3951, 0.6049],\n        [0.4388, 0.5612],\n        [0.5446, 0.4554],\n        [0.5176, 0.4824],\n        [0.3299, 0.6701],\n        [0.4360, 0.5640]], device='mps:0')\n</code></pre>"},{"location":"llm/huggingface/projects/sentiment/#step8","title":"Step8 \u8bad\u7ec3\u6a21\u578b","text":"<pre><code>from torch.optim import AdamW\nimport torch.nn as nn\nfrom transformers import get_scheduler\n\n\ndef train_model():\n    # \u5b9a\u4e49\u4f18\u5316\u5668\n    optimizer = AdamW(classifier.parameters(), lr=5e-4)\n    # \u5b9a\u4e49 \u635f\u5931\u51fd\u6570\n    loss_fn = nn.CrossEntropyLoss()\n    # \u5b9a\u4e49\u5b66\u4e60\u7387\u8c03\u673a\u5668\n    scheduler = get_scheduler(\n        name=\"linear\",  # \u5b66\u4e60\u7387\u8c03\u5ea6\u7b56\u7565\u7684\u540d\u5b57\n        optimizer=optimizer,  # \u8bad\u7ec3\u4e2d\u4f7f\u7528\u7684\u4f18\u5316\u5668\n        num_warmup_steps=0,  # \u9884\u70ed\u6b65\u6570\n        num_training_steps=len(loader)  # \u603b\u7684\u8bad\u7ec3\u6b65\u6570\n    )\n    # \u5c06\u6a21\u578b\u5207\u6362\u5230\u8bad\u7ec3\u6a21\u5f0f\n    classifier.train()\n    # \u6309\u6279\u6b21\u904d\u5386\u8bad\u7ec3\u96c6\u4e2d\u7684\u6570\u636e\n    for idx, (input_ids,attention_mask,token_type_ids,labels) in enumerate(loader):\n\n        optimizer.zero_grad()\n        # \u6a21\u578b\u8f93\u51fa\n        out = classifier(input_ids, attention_mask, token_type_ids)\n\n        loss = loss_fn(out, labels)\n        loss.backward()\n        optimizer.step()\n        scheduler.step()\n\n        # \u8f93\u51fa\u5404\u9879\u6570\u636e\u7684\u60c5\u51b5\uff0c\u4fbf\u4e8e\u89c2\u5bdf\u8bad\u7ec3\u6548\u679c\n        if idx % 30 == 0:\n            pred_labels = torch.argmax(out, dim=1)\n            accuracy = (pred_labels == labels).sum().item() / len(labels)  # \u7cbe\u786e\u5ea6\n            lr = scheduler.get_last_lr()[0]\n            print(f\"\u3010{idx}/{len(loader)}\u3011 \u635f\u5931\u503c\uff1a{loss.item()} \u7cbe\u786e\u5ea6:{accuracy} lr:{lr}\")\n\ntrain_model()\n</code></pre>"},{"location":"llm/huggingface/projects/sentiment/#step9","title":"Step9 \u8bc4\u4f30\u6a21\u578b","text":"<pre><code>def test_model():\n    classifier.eval()\n    # \u5b9a\u4e49\u6570\u636e\u96c6\n    dataset = MyDataset('test')\n    test_loader = DataLoader(dataset, batch_size=16, collate_fn=collate_fn, drop_last=True)\n    correct = 0\n    total = 0\n    with torch.no_grad():\n        for input_ids, attention_mask, token_type_ids, labels in test_loader:\n            out = classifier(input_ids, attention_mask, token_type_ids)\n            pred_labels = torch.argmax(out, dim=1)\n            correct += (pred_labels == labels).sum().item()\n            total += labels.size(0)\n\n    print(f\"\u7cbe\u786e\u5ea6\uff1a{correct/total*100:.2f}%\")\n\ntest_model()\n</code></pre> <p>\u8f93\u51fa</p> <pre><code>\u7cbe\u786e\u5ea6\uff1a87.58%\n</code></pre>"},{"location":"llmapp/langchain/basic/","title":"LangChain \u6559\u7a0b","text":""},{"location":"llmapp/langchain/basic/#_1","title":"\u4e00\u3001 \u7b80\u4ecb","text":"<p>LangChain \u5efa\u7acb\u5728\u51e0\u4e2a\u6838\u5fc3\u6982\u5ff5\u4e4b\u4e0a\uff1a</p> <ul> <li>\u6a21\u578b\uff08Models\uff09\uff1a\u4e0e\u5404\u79cdLLM\uff08\u5982OpenAI\u3001Anthropic\u3001\u672c\u5730\u6a21\u578b\u7b49\uff09\u8fdb\u884c\u4ea4\u4e92\u7684\u63a5\u53e3</li> <li>\u63d0\u793a\uff08Prompts\uff09\uff1a\u6784\u5efa\u548c\u7ba1\u7406\u53d1\u9001\u7ed9\u6a21\u578b\u7684\u8f93\u5165</li> <li>\u8f93\u51fa\u89e3\u6790\u5668\uff08Output Parsers\uff09\uff1a\u5c06\u6a21\u578b\u8f93\u51fa\u8f6c\u6362\u4e3a\u7ed3\u6784\u5316\u683c\u5f0f</li> <li>\u94fe\uff08Chains\uff09\uff1a\u5c06\u591a\u4e2a\u7ec4\u4ef6\u8fde\u63a5\u6210\u4e00\u4e2a\u5de5\u4f5c\u6d41</li> <li>\u8bb0\u5fc6\uff08Memory\uff09\uff1a\u5b58\u50a8\u548c\u68c0\u7d22\u5bf9\u8bdd\u5386\u53f2</li> <li>\u5de5\u5177\uff08Tools\uff09\uff1a\u4f7f\u6a21\u578b\u80fd\u591f\u4e0e\u5916\u90e8\u7cfb\u7edf\u4ea4\u4e92</li> <li>\u4ee3\u7406\uff08Agents\uff09\uff1a\u8ba9\u6a21\u578b\u51b3\u5b9a\u4f7f\u7528\u54ea\u4e9b\u5de5\u5177\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528</li> </ul> <p>\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u8bbe\u7f6e\u73af\u5883\u5e76\u5b89\u88c5 LangChain \uff1a</p> <pre><code>pip install langchain\n\npip install langchain-openai\n\npip install langchain-community\n\npip install langgraph\n\npip install \"langserve[all]\"\n\npip install langchain-cli\n\npip install langsmith\n\npip install langchain-huggingface\n</code></pre> <p>\u4f7f\u7528\u793a\u4f8b\uff1a</p> <pre><code>from langchain.chat_models import init_chat_model\n\nllm = init_chat_model(model=\"deepseek-r1:1.5b\", model_provider=\"ollama\", base_url=\"http://192.168.3.5:11434/\")\n\nresponse = llm.invoke(\"\u4f60\u662f\u8c01\uff1f\")\nprint(response.content)\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c</p> <p>\u60a8\u597d\uff01\u6211\u662f\u7531\u4e2d\u56fd\u7684\u6df1\u5ea6\u6c42\u7d22\uff08DeepSeek\uff09\u516c\u53f8\u5f00\u53d1\u7684\u667a\u80fd\u52a9\u624bDeepSeek-R1\u3002\u5982\u60a8\u6709\u4efb\u4f55\u4efb\u4f55\u95ee\u9898\uff0c\u6211\u4f1a\u5c3d\u6211\u6240\u80fd\u4e3a\u60a8\u63d0\u4f9b\u5e2e\u52a9\u3002</p>"},{"location":"llmapp/langchain/basic/#_2","title":"\u4e8c\u3001\u6a21\u578b\u4f7f\u7528","text":""},{"location":"llmapp/langchain/basic/#21","title":"2.1  \u4f7f\u7528\u672c\u5730\u6a21\u578b","text":"<p>Ollama \u662f\u4e00\u4e2a\u672c\u5730\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u8fd0\u884c\u5de5\u5177\uff0c\u5b83\u8ba9\u4f60\u80fd\u5728\u81ea\u5df1\u7684\u7535\u8111\u4e0a\u5feb\u901f\u8fd0\u884c\u5927\u6a21\u578b\uff08\u50cf LLaMA\u3001Mistral\u3001Gemma\u3001Phi-3\u3001Starling \u7b49\uff09\uff0c\u5e76\u4e14\u63d0\u4f9b\u7c7b\u4f3c\u4e8e ChatGPT \u7684\u4ea4\u4e92\u4f53\u9a8c\u3002</p>"},{"location":"llmapp/langchain/basic/#1","title":"1\u3001\u6587\u672c\u6a21\u578b","text":"<pre><code>from langchain_ollama import OllamaLLM, ChatOllama\n\nllm = OllamaLLM(\n    model=\"deepseek-r1:1.5b\",\n    base_url=\"http://192.168.3.5:11434/\"\n)\n\nllm.invoke(\"\u4f60\u662f\u8c01\uff1f\")\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c</p> <p>'\\n\\n\\n\\n\u60a8\u597d\uff01\u6211\u662f\u7531\u4e2d\u56fd\u7684\u6df1\u5ea6\u6c42\u7d22\uff08DeepSeek\uff09\u516c\u53f8\u5f00\u53d1\u7684\u667a\u80fd\u52a9\u624bDeepSeek-R1\u3002\u5982\u60a8\u6709\u4efb\u4f55\u4efb\u4f55\u95ee\u9898\uff0c\u6211\u4f1a\u5c3d\u6211\u6240\u80fd\u4e3a\u60a8\u63d0\u4f9b\u5e2e\u52a9\u3002'</p>"},{"location":"llmapp/langchain/basic/#2","title":"2. \u804a\u5929\u6a21\u578b","text":"<pre><code>from langchain_ollama import ChatOllama\nfrom langchain_core.messages import SystemMessage, HumanMessage\n\nchat = ChatOllama(\n    model=\"deepseek-r1:1.5b\",\n    base_url=\"http://192.168.3.5:11434/\"\n)\n\nmessages = [\n    SystemMessage(content=\"\u4f60\u662f\u4e00\u540d\u7ffb\u8bd1\u52a9\u624b\uff0c\u5c06\u7528\u6237\u7684\u8f93\u5165\u7ffb\u8bd1\u6210\u82f1\u8bed\"),\n    HumanMessage(content=\"\u5c0f\u660e\u559c\u6b22\u53bb\u4e2d\u56fd\u65c5\u6e38\uff0c\u6709\u4ec0\u4e48\u63a8\u8350\u7684\u666f\u70b9?\"),\n]\n\nresponse = chat.invoke(messages)\nprint(response.content)\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c</p> <p>He likes traveling in China. What are your recommendations for the places to visit?</p>"},{"location":"llmapp/langchain/basic/#22-hugging-face","title":"2.2 \u4f7f\u7528\u7b2c\u4e09\u65b9\u6a21\u578b\uff08Hugging Face\u4e3a\u4f8b\uff09","text":"<p>\u4f7f\u7528Hugging Face\u5e73\u53f0\u4e0a\u7684\u6a21\u578b</p> <pre><code>pip install langchain-huggingface\n</code></pre> <p>langchain_huggingface \u5206\u6210\u4e24\u79cd\uff0c\u4e00\u79cd\u4e0b\u8f7d\u6a21\u578b\u5230\u672c\u5730\uff0c\u5728\u672c\u5730\u8fd0\u884c\u6a21\u578b\uff0c\u4e00\u79cd\u4f7f\u7528hugging face \u63d0\u4f9b\u7684\u6a21\u578bapi\u63a5\u53e3</p>"},{"location":"llmapp/langchain/basic/#_3","title":"\u4f7f\u7528\u672c\u5730\u6a21\u578b","text":"<pre><code>from langchain_huggingface import HuggingFacePipeline\n\nllm = HuggingFacePipeline.from_model_id(\n    model_id=\"microsoft/Phi-3-mini-4k-instruct\",\n    task=\"text-generation\",\n    pipeline_kwargs={\n        \"max_new_tokens\": 100,\n        \"top_k\": 50,\n        \"temperature\": 0.1,\n    },\n)\nllm.invoke(\"Hugging Face is\")\n</code></pre>"},{"location":"llmapp/langchain/basic/#_4","title":"\u4f7f\u7528\u5728\u7ebf\u6a21\u578b","text":"<pre><code>from langchain_huggingface import HuggingFaceEndpoint\n\nllm = HuggingFaceEndpoint(\n    repo_id=\"meta-llama/Meta-Llama-3-8B-Instruct\",\n    task=\"text-generation\",\n    max_new_tokens=100,\n    do_sample=False,\n)\nllm.invoke(\"Hugging Face is\")\n</code></pre>"},{"location":"llmapp/langchain/basic/#23","title":"2.3 \u81ea\u5b9a\u4e49\u804a\u5929\u6a21\u578b","text":"<pre><code>BaseLanguageModel\n\u251c\u2500\u2500 BaseLLM\n\u2514\u2500\u2500 BaseChatModel\n</code></pre> <ul> <li>BaseLanguageModel\uff1a\u6700\u901a\u7528\uff08\u62bd\u8c61\u8bed\u8a00\u6a21\u578b\uff09</li> <li>BaseLLM\uff1a\u5355\u8f6e prompt \u2192 \u6587\u672c</li> <li>BaseChatModel\uff1a\u591a\u8f6e\u5bf9\u8bdd\u6d88\u606f</li> </ul>"},{"location":"llmapp/langchain/basic/#echo-llm","title":"\u81ea\u5b9a\u4e49\u591a\u529f\u80fd Echo LLM","text":"<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u591a\u529f\u80fd Echo LLM\uff1a</p> <ul> <li>\u540c\u6b65\u8c03\u7528\uff1a\u56de\u663e\u5927\u5199</li> <li>\u5f02\u6b65\u8c03\u7528\uff1a\u56de\u663e\u5c0f\u5199</li> <li>\u6279\u91cf\u8c03\u7528\uff1a\u6bcf\u4e2a\u53e5\u5b50\u9996\u5b57\u6bcd\u5927\u5199</li> <li>\u6d41\u5f0f\u8c03\u7528\uff1a\u9010\u5b57\u6bcd\u8f93\u51fa</li> <li>\u4e8b\u4ef6\u6d41\u5f0f\u8c03\u7528\uff1a\u9010\u5355\u8bcd\u8f93\u51fa\u4e8b\u4ef6</li> </ul> <pre><code>from langchain_core.language_models import BaseLLM\nfrom langchain_core.outputs import GenerationChunk, LLMResult\nfrom langchain_core.runnables import Event\nimport asyncio\n\n\nclass MyMultiFunctionLLM(BaseLLM):\n    def _call(self, prompt: str, stop=None):\n        \"\"\"\n        \u540c\u6b65\u63a8\u7406\uff1a\u5c06\u8f93\u5165\u8f6c\u6210\u5927\u5199\n        \"\"\"\n        return prompt.upper()\n\n    async def _acall(self, prompt: str, stop=None):\n        \"\"\"\n        \u5f02\u6b65\u63a8\u7406\uff1a\u5c06\u8f93\u5165\u8f6c\u6210\u5c0f\u5199\n        \"\"\"\n        return prompt.lower()\n\n    def _batch(self, prompts, stop=None, **kwargs):\n        \"\"\"\n        \u6279\u91cf\u63a8\u7406\uff1a\u6bcf\u53e5\u8bdd\u9996\u5b57\u6bcd\u5927\u5199\n        \"\"\"\n        return [p.capitalize() for p in prompts]\n\n    async def _abatch(self, prompts, stop=None, **kwargs):\n        \"\"\"\n        \u5f02\u6b65\u6279\u91cf\u63a8\u7406\uff1a\u6bcf\u53e5\u8bdd\u5012\u5e8f\u8f93\u51fa\n        \"\"\"\n        return [p[::-1] for p in prompts]\n\n    def _stream(self, prompt: str, stop=None, **kwargs):\n        \"\"\"\n        \u6d41\u5f0f\u63a8\u7406\uff1a\u9010\u5b57\u6bcd\u8f93\u51fa\n        \"\"\"\n        for char in prompt:\n            yield GenerationChunk(text=char)\n\n    async def _astream(self, prompt: str, stop=None, **kwargs):\n        \"\"\"\n        \u5f02\u6b65\u6d41\u5f0f\u63a8\u7406\uff1a\u9010\u5b57\u6bcd\u8f93\u51fa\uff08\u5f02\u6b65\u7248\uff09\n        \"\"\"\n        for char in prompt:\n            await asyncio.sleep(0.05)  # \u6a21\u62df\u6162\u901f\u751f\u6210\n            yield GenerationChunk(text=char)\n\n    async def _astream_events(self, prompt: str, stop=None, **kwargs):\n        \"\"\"\n        \u4e8b\u4ef6\u6d41\u5f0f\u63a8\u7406\uff1a\u9010\u5355\u8bcd\u8f93\u51fa\u4e8b\u4ef6\n        \"\"\"\n        words = prompt.split()\n        for word in words:\n            await asyncio.sleep(0.1)\n            yield Event(type=\"word\", data=word)\n</code></pre>"},{"location":"llmapp/langchain/basic/#24","title":"2.4 \u6d41\u5931\u8f93\u51fa","text":""},{"location":"llmapp/langchain/basic/#1_1","title":"1. \u540c\u6b65\u6d41","text":"<pre><code>from langchain.chat_models import init_chat_model\n\nllm = init_chat_model(\n    model=\"deepseek-r1:1.5b\",\n    model_provider=\"ollama\",\n    base_url=\"http://192.168.3.5:11434/\"\n)\n\nfor chunk in llm.stream(\"\u7ed9\u6211\u5199\u4e00\u9996\u6709\u5173\u4e8e\u7231\u60c5\u7684\u6b4c\u66f2\"):\n    print(chunk.content)\n</code></pre>"},{"location":"llmapp/langchain/basic/#2_1","title":"2. \u5f02\u6b65\u6d41","text":"<pre><code>from langchain.chat_models import init_chat_model\n\nllm = init_chat_model(\n    model=\"deepseek-r1:1.5b\",\n    model_provider=\"ollama\",\n    base_url=\"http://192.168.3.5:11434/\"\n)\n\nasync for chunk in llm.astream(\"\u7ed9\u6211\u5199\u4e00\u9996\u6821\u56ed\u6b4c\u66f2\"):\n    print(chunk.content, end=\"|\", flush=True)\n</code></pre>"},{"location":"llmapp/langchain/basic/#3","title":"3. \u5f02\u6b65\u4e8b\u4ef6\u6d41","text":"<pre><code>from langchain.chat_models import init_chat_model\n\nllm = init_chat_model(\n    model=\"deepseek-r1:1.5b\",\n    model_provider=\"ollama\",\n    base_url=\"http://192.168.3.5:11434/\"\n)\n\nasync  for event in llm.astream_events(\"\u4f60\u53ef\u4ee5\u4e3a\u6211\u505a\u4ec0\u4e48\uff1f\"):\n    print(event)\n</code></pre>"},{"location":"llmapp/langchain/basic/#25","title":"2.5 \u5de5\u5177\u8c03\u7528","text":"<pre><code>from langchain.chat_models import init_chat_model\n\n\ndef add(a: int, b: int) -&gt; int:\n    return a + b\n\n\ndef mul(a: int, b: int) -&gt; int:\n    return a * b\n\n\nllm = init_chat_model(\n    model=\"deepseek-r1:1.5b\",\n    model_provider=\"ollama\",\n    base_url=\"http://192.168.3.5:11434/\"\n)\n\nllm_with_tools = llm.bind_tools(tools=[add, mul])\n\nllm_with_tools.invoke(\"What is 3 * 12?\")\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c</p> <p>ResponseError: registry.ollama.ai/library/deepseek-r1:1.5b does not support tools (status code: 400)</p>"},{"location":"llmapp/langchain/basic/#prompts","title":"\u4e09\u3001\u63d0\u793a\uff08Prompts\uff09","text":""},{"location":"llmapp/langchain/basic/#31-messages","title":"3.1 \u6d88\u606f\uff08messages\uff09","text":"<p><code>langchain_core.messages</code> \u63d0\u4f9b\u4e86\u56db\u79cd\u5e38\u7528\u7684\u6d88\u606f\u7c7b\u578b\uff0c\u5206\u522b\u662f\uff1a</p> \u6d88\u606f\u7c7b\u578b \u7528\u9014 \u8bf4\u660e <code>SystemMessage</code> \u7cfb\u7edf\u6d88\u606f / \u4e0a\u4e0b\u6587\u7ea6\u675f \u901a\u5e38\u7528\u4e8e\u7ed9\u6a21\u578b\u8bbe\u7f6e\u5168\u5c40\u89d2\u8272\u3001\u884c\u4e3a\u8bf4\u660e\uff0c\u7c7b\u4f3c OpenAI <code>system</code> role <code>HumanMessage</code> \u7528\u6237\u8f93\u5165 \u7528\u6237\u53d1\u9001\u7684\u6d88\u606f\uff0c\u7c7b\u4f3c OpenAI <code>user</code> role <code>AIMessage</code> AI \u7684\u56de\u590d \u6a21\u578b\u7684\u56de\u7b54\uff0c\u7c7b\u4f3c OpenAI <code>assistant</code> role <code>ToolMessage</code> \u5de5\u5177\u8fd4\u56de\u7684\u7ed3\u679c\uff08\u4f9b\u6a21\u578b\u540e\u7eed\u5bf9\u8bdd\u4f7f\u7528\uff09 \u5f53\u5de5\u5177\u88ab\u8c03\u7528\u540e\u8fd4\u56de\u7ed3\u679c\uff0c\u4f5c\u4e3a\u5de5\u5177\u7684\u300c\u540e\u7eed\u4e0a\u4e0b\u6587\u6d88\u606f\u300d\u4f20\u7ed9\u6a21\u578b\uff08\u7c7b\u4f3c\u5de5\u5177\u8c03\u7528\u7684\u4e2d\u8f6c\u6d88\u606f\uff09"},{"location":"llmapp/langchain/basic/#toolmessage","title":"ToolMessage","text":"<p>\u7528\u9014\uff1a\u5f53\u6a21\u578b\u8c03\u7528\u5de5\u5177\uff08\u5982\u641c\u7d22\u3001\u6570\u636e\u5e93\uff09\u540e\uff0c\u5de5\u5177\u8fd4\u56de\u7684\u7ed3\u679c\u9700\u8981\u7528 ToolMessage \u4f20\u9012\u7ed9\u6a21\u578b\uff0c\u8ba9\u6a21\u578b\u57fa\u4e8e\u5de5\u5177\u7ed3\u679c\u8fdb\u884c\u56de\u7b54\u3002</p> <pre><code>from langchain_core.messages import ToolMessage\n\nToolMessage(\n    tool_call_id=\"search_tool_123\",\n    content=\"\u641c\u7d22\u5230\u7684\u7ed3\u679c\u662f\uff1aPython \u7684\u6700\u65b0\u7248\u672c\u662f 3.12\"\n)\n</code></pre> <p>Info</p> <ul> <li>tool_call_id\uff1a\u552f\u4e00\u6807\u8bc6\u5de5\u5177\u8c03\u7528\uff0c\u544a\u8bc9\u6a21\u578b\u8fd9\u662f\u54ea\u4e2a\u5de5\u5177\u7684\u8fd4\u56de\u7ed3\u679c</li> <li>content\uff1a\u5de5\u5177\u7684\u8fd4\u56de\u5185\u5bb9</li> </ul> <pre><code>from langchain.chat_models import init_chat_model\nfrom langchain_core.messages import SystemMessage, HumanMessage\n\nllm = init_chat_model(\n    model=\"deepseek-r1:1.5b\",\n    model_provider=\"ollama\",\n    base_url=\"http://192.168.3.5:11434/\"\n)\n\nmessages = [\n    SystemMessage(content=\"\u4f60\u662f\u4e2d\u56fd\u7684\u65c5\u6e38\u4e13\u5bb6\uff0c\u5584\u4e8e\u7ed9\u51fa\u65c5\u6e38\u65b9\u6848\"),\n    HumanMessage(content=\"\u7ed9\u6211\u4e00\u4e2a\u5317\u4eac\u5230\u6d77\u5357\u7684\u65c5\u6e38\u65b9\u6848\uff0c\u8981\u5305\u542b\u4e3b\u8981\u7684\u65c5\u6e38\u666f\u70b9\")\n]\n\nllm.invoke(messages).content\n</code></pre>"},{"location":"llmapp/langchain/basic/#32","title":"3.2 \u63d0\u793a\u6a21\u7248","text":"<p><code>langchain.prompts</code> \u4e2d\u5e38\u7528\u7684\u6838\u5fc3\u7c7b\u6709\uff1a</p> \u7c7b / \u65b9\u6cd5 \u4f5c\u7528 <code>PromptTemplate</code> \u6700\u5e38\u7528\u7684\u63d0\u793a\u6a21\u677f\u7c7b\uff0c\u652f\u6301\u52a8\u6001\u53d8\u91cf\u66ff\u6362 <code>ChatPromptTemplate</code> \u9762\u5411\u591a\u8f6e\u5bf9\u8bdd\u6d88\u606f\u7684\u63d0\u793a\u6a21\u677f\uff08\u751f\u6210\u5bf9\u8bdd\u683c\u5f0f\uff09 <code>SystemMessagePromptTemplate</code> \u7528\u4e8e\u751f\u6210 System \u6d88\u606f\uff08system role\uff09 <code>HumanMessagePromptTemplate</code> \u7528\u4e8e\u751f\u6210 Human \u6d88\u606f\uff08user role\uff09 <code>AIMessagePromptTemplate</code> \u7528\u4e8e\u751f\u6210 AI \u6d88\u606f\uff08assistant role\uff09 <code>MessagesPlaceholder</code> \u5728\u591a\u8f6e\u5bf9\u8bdd\u4e2d\u63d2\u5165\u300c\u5386\u53f2\u4e0a\u4e0b\u6587\u300d\u5360\u4f4d\u7b26\uff0c\u5e38\u7528\u4e8e memory / RAG \u573a\u666f"},{"location":"llmapp/langchain/basic/#prompttemplate","title":"PromptTemplate","text":"<p>\u6700\u5e38\u7528\u7684\u63d0\u793a\u6a21\u677f\uff0c\u9002\u7528\u4e8e\u5355\u6b21 Prompt \u6216\u300c\u8865\u5168\u6a21\u578b\u300d\u7684\u8c03\u7528\u3002 \u5b83\u652f\u6301\u4f7f\u7528\u82b1\u62ec\u53f7 {} \u6765\u6807\u8bc6\u53d8\u91cf\uff0c\u5e76\u5728\u8c03\u7528\u65f6\u8fdb\u884c\u66ff\u6362\u3002</p> <pre><code>from langchain.prompts import PromptTemplate\n\ntemplate = \"\u8bf7\u7528\u4e2d\u6587\u56de\u7b54\u4ee5\u4e0b\u95ee\u9898\uff1a{question}\"\nprompt = PromptTemplate.from_template(template)\n\nfinal_prompt = prompt.format(question=\"LangChain \u662f\u4ec0\u4e48\uff1f\")\nprint(final_prompt)\n# \u8f93\u51fa: \u8bf7\u7528\u4e2d\u6587\u56de\u7b54\u4ee5\u4e0b\u95ee\u9898\uff1aLangChain \u662f\u4ec0\u4e48\uff1f\n</code></pre>"},{"location":"llmapp/langchain/basic/#chatprompttemplate","title":"ChatPromptTemplate","text":"<p>\u7528\u4e8e\u548c\u300c\u804a\u5929\u6a21\u578b\uff08ChatModel\uff09\u300d\u914d\u5408\uff0c\u751f\u6210\u7b26\u5408\u5bf9\u8bdd\u6d88\u606f\u683c\u5f0f\u7684 Prompt\u3002 \u901a\u5e38\u5305\u542b\u591a\u4e2a\u300c\u6d88\u606f\u6a21\u677f\uff08MessagePromptTemplate\uff09\u300d\u3002</p> <pre><code>from langchain.prompts import ChatPromptTemplate\n\nchat_prompt = ChatPromptTemplate.from_messages([\n    (\"system\", \"\u4f60\u662f\u4e00\u4e2a\u4e50\u4e8e\u52a9\u4eba\u7684\u52a9\u624b\u3002\"),\n    (\"user\", \"\u4f60\u597d\uff0c\u5e2e\u6211\u7528\u4e2d\u6587\u603b\u7ed3\u4e00\u4e0b\uff1a{text}\")\n])\n\nfinal_prompt = chat_prompt.format_messages(text=\"LangChain \u662f\u4e00\u4e2a\u7528\u4e8e\u6784\u5efa LLM \u5e94\u7528\u7684\u6846\u67b6\u3002\")\n# \u8fd4\u56de\u4e00\u4e2a\u6d88\u606f\u5217\u8868\uff0c\u5305\u542b system\u3001user \u89d2\u8272\u6d88\u606f\nfor msg in final_prompt:\n    print(msg)\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c</p> <p>content='\u4f60\u662f\u4e00\u4e2a\u4e50\u4e8e\u52a9\u4eba\u7684\u52a9\u624b\u3002' additional_kwargs={} response_metadata={} content='\u4f60\u597d\uff0c\u5e2e\u6211\u7528\u4e2d\u6587\u603b\u7ed3\u4e00\u4e0b\uff1aLangChain \u662f\u4e00\u4e2a\u7528\u4e8e\u6784\u5efa LLM \u5e94\u7528\u7684\u6846\u67b6\u3002' additional_kwargs={} response_metadata={}</p>"},{"location":"llmapp/langchain/basic/#systemmessageprompttemplate-humanmessageprompttemplate-aimessageprompttemplate","title":"SystemMessagePromptTemplate \u3001 HumanMessagePromptTemplate \u3001 AIMessagePromptTemplate","text":"<p>\u5b83\u4eec\u662f\u300c\u6d88\u606f\u6a21\u677f\u300d\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u4e13\u95e8\u7528\u4e8e\u751f\u6210\u5bf9\u5e94\u89d2\u8272\u7684\u6d88\u606f\uff0c\u53ef\u4e0e ChatPromptTemplate \u7ec4\u5408\u4f7f\u7528\u3002</p> <pre><code>from langchain.prompts import (\n    SystemMessagePromptTemplate,\n    HumanMessagePromptTemplate,\n    ChatPromptTemplate\n)\n\nsystem_msg = SystemMessagePromptTemplate.from_template(\"\u4f60\u662f\u4e00\u4e2a\u4e13\u4e1a\u7684\u7ffb\u8bd1\u5bb6\u3002\")\nhuman_msg = HumanMessagePromptTemplate.from_template(\"\u8bf7\u7ffb\u8bd1\uff1a{text}\")\n\nchat_prompt = ChatPromptTemplate.from_messages([system_msg, human_msg])\nfinal_prompt = chat_prompt.format_messages(text=\"Hello world!\")\n\nfor msg in final_prompt:\n    print(msg)\n</code></pre>"},{"location":"llmapp/langchain/basic/#messagesplaceholder","title":"MessagesPlaceholder","text":"<p>\u5728\u591a\u8f6e\u5bf9\u8bdd\uff08\u5982\u6709 Memory\uff09\u6216 RAG \u4e2d\uff0c\u4fdd\u7559\u5386\u53f2\u4e0a\u4e0b\u6587 \u7684\u5360\u4f4d\u7b26\u3002</p> <pre><code>from langchain.prompts import ChatPromptTemplate, MessagesPlaceholder\n\nchat_prompt = ChatPromptTemplate.from_messages([\n    (\"system\", \"\u4f60\u662f\u4e00\u4e2a\u8bb0\u5fc6\u529b\u5f88\u5f3a\u7684\u52a9\u7406\u3002\"),\n    MessagesPlaceholder(variable_name=\"chat_history\"),  # \u5360\u4f4d\u7b26\n    (\"user\", \"{input}\")\n])\n</code></pre> <p>\u7136\u540e\u5728\u8c03\u7528\u65f6\uff0c\u5c06\u591a\u8f6e\u4e0a\u4e0b\u6587\u4f20\u7ed9 chat_history\uff1a</p> <pre><code>final_prompt = chat_prompt.format_messages(\n    chat_history=[\n        HumanMessage(content=\"\u4f60\u597d\uff01\"),\n        AIMessage(content=\"\u4f60\u597d\uff0c\u6709\u4ec0\u4e48\u53ef\u4ee5\u5e2e\u4f60\uff1f\")\n    ],\n    input=\"\u8bf7\u5e2e\u6211\u5199\u4e00\u4e2a Python \u811a\u672c\"\n)\n</code></pre>"},{"location":"llmapp/langchain/basic/#fewshotprompttemplate","title":"FewShotPromptTemplate","text":"<p>\u5728\u63d0\u793a\u5de5\u7a0b\u4e2d\uff0cFew-Shot \u63d0\u793a\uff08\u5c11\u91cf\u793a\u4f8b\u63d0\u793a\uff09 \u610f\u5473\u7740\u5728\u63d0\u793a\u4e2d\u63d0\u4f9b\u82e5\u5e72\u4e2a\u793a\u4f8b\uff0c\u5e2e\u52a9\u5927\u6a21\u578b\u300c\u6a21\u4eff\u793a\u4f8b\u300d\u66f4\u597d\u5730\u751f\u6210\u76ee\u6807\u7b54\u6848\u3002 FewShotPromptTemplate \u5c31\u662f\u4e3a\u6b64\u4e13\u95e8\u51c6\u5907\u7684\u6a21\u677f\u7c7b\u3002</p> <pre><code>from langchain.prompts import PromptTemplate, FewShotPromptTemplate\n\n# 1\ufe0f\u20e3 \u5b9a\u4e49\u793a\u4f8b\nexamples = [\n    {\"input\": \"2 + 2\", \"output\": \"4\"},\n    {\"input\": \"3 + 5\", \"output\": \"8\"}\n]\n\n# 2\ufe0f\u20e3 \u5b9a\u4e49\u793a\u4f8b\u7684\u6a21\u677f\nexample_prompt = PromptTemplate.from_template(\n    \"\u8f93\u5165: {input}\\n\u8f93\u51fa: {output}\"\n)\n\n# 3\ufe0f\u20e3 \u521b\u5efa FewShotPromptTemplate\nprompt = FewShotPromptTemplate(\n    examples=examples,\n    example_prompt=example_prompt,\n    prefix=\"\u4e0b\u9762\u662f\u4e00\u4e9b\u6570\u5b66\u9898\u7684\u793a\u4f8b\uff1a\",\n    suffix=\"\u8bf7\u56de\u7b54: {input}\",\n    input_variables=[\"input\"]\n)\n\n# 4\ufe0f\u20e3 \u6e32\u67d3\u63d0\u793a\nfinal_prompt = prompt.format(input=\"7 + 9\")\nprint(final_prompt)\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c</p> <p>\u4e0b\u9762\u662f\u4e00\u4e9b\u6570\u5b66\u9898\u7684\u793a\u4f8b\uff1a</p> <pre><code>\u8f93\u5165: 2 + 2\n\u8f93\u51fa: 4\n\n\u8f93\u5165: 3 + 5\n\u8f93\u51fa: 8\n\n\u8bf7\u56de\u7b54: 7 + 9\n</code></pre>"},{"location":"llmapp/langchain/basic/#_5","title":"\u56db\u3001\u8f93\u51fa\u89e3\u6790\u5668","text":"<p>\u5728\u4f7f\u7528\u5927\u6a21\u578b\uff08LLM / Chat \u6a21\u578b\uff09\u65f6\uff0c\u6a21\u578b\u8f93\u51fa\u901a\u5e38\u662f\u300c\u81ea\u7136\u8bed\u8a00\u6587\u672c\u300d\u3002 \u7136\u800c\uff0c\u5728\u771f\u5b9e\u573a\u666f\u4e2d\uff0c\u6211\u4eec\u5f80\u5f80\u5e0c\u671b\u6a21\u578b\u8fd4\u56de\u7ed3\u6784\u5316\u6570\u636e\uff08\u5982 JSON / \u5217\u8868 / \u5177\u4f53\u5b57\u6bb5\u7b49\uff09\uff0c\u4fbf\u4e8e\u540e\u7eed\u5904\u7406\u3002</p>"},{"location":"llmapp/langchain/basic/#41-langchainoutput_parsers","title":"4.1  langchain.output_parsers \u6838\u5fc3\u5185\u5bb9\u6982\u89c8","text":"\u7c7b / \u65b9\u6cd5 \u4f5c\u7528 <code>StrOutputParser</code> \u76f4\u63a5\u5c06\u8f93\u51fa\u6587\u672c\u539f\u6837\u8fd4\u56de\u4e3a\u5b57\u7b26\u4e32 <code>CommaSeparatedListOutputParser</code> \u89e3\u6790\u6a21\u578b\u8f93\u51fa\u4e3a\u300c\u9017\u53f7\u5206\u9694\u7684\u5b57\u7b26\u4e32\u5217\u8868\u300d <code>ListOutputParser</code> \u5c06\u6a21\u578b\u8f93\u51fa\u7684\u591a\u884c\u6587\u672c\uff0c\u89e3\u6790\u4e3a\u5217\u8868 <code>JsonOutputParser</code> \u89e3\u6790\u6a21\u578b\u8f93\u51fa\u7684 JSON \u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u5b57\u5178 / \u5217\u8868 <code>PydanticOutputParser</code> \u5c06\u6a21\u578b\u8f93\u51fa\u89e3\u6790\u4e3a\u7b26\u5408 Pydantic \u6a21\u578b\u7684\u7ed3\u6784\u5316\u6570\u636e\uff0c\u652f\u6301\u5b57\u6bb5\u6821\u9a8c <code>OutputFixingParser</code> \u5f53\u8f93\u51fa\u683c\u5f0f\u4e0d\u7b26\u5408\u9884\u671f\u65f6\uff0c\u81ea\u52a8\u8bf7\u6c42 LLM \u8fdb\u884c\u683c\u5f0f\u4fee\u6b63\uff08\u57fa\u4e8e Retry\uff09"},{"location":"llmapp/langchain/basic/#42","title":"4.2 \u793a\u4f8b","text":""},{"location":"llmapp/langchain/basic/#1-stroutputparser","title":"1\ufe0f\u20e3 StrOutputParser","text":"<p>\u6700\u7b80\u5355\u7684\u89e3\u6790\u5668\uff0c\u76f4\u63a5\u8fd4\u56de\u6a21\u578b\u8f93\u51fa\u7684\u539f\u59cb\u6587\u672c\u3002 \u9002\u5408\u5bf9\u6a21\u578b\u539f\u59cb\u56de\u590d\u6ca1\u6709\u7ed3\u6784\u5316\u9700\u6c42\u7684\u573a\u666f\u3002</p> <pre><code>from langchain.output_parsers import StrOutputParser\nparser = StrOutputParser()\n\nresult = parser.parse(\"Hello, this is your answer.\")\nprint(result)\n# \u8f93\u51fa: \"Hello, this is your answer.\"\n</code></pre>"},{"location":"llmapp/langchain/basic/#2-commaseparatedlistoutputparser","title":"2\ufe0f\u20e3 CommaSeparatedListOutputParser","text":"<p>\u5c06\u6a21\u578b\u8f93\u51fa\u7684\u300c\u9017\u53f7\u5206\u9694\u6587\u672c\u300d\u89e3\u6790\u6210\u5217\u8868\u3002 \u9002\u5408\u573a\u666f\uff1a\u8ba9\u6a21\u578b\u8fd4\u56de\u300cA, B, C\u300d\u683c\u5f0f\u7684\u7b54\u6848\u3002</p> <pre><code>from langchain.output_parsers import CommaSeparatedListOutputParser\nparser = CommaSeparatedListOutputParser()\n\noutput = \"\u82f9\u679c, \u9999\u8549, \u6a59\u5b50\"\nresult = parser.parse(output)\nprint(result)\n# \u8f93\u51fa: [\"\u82f9\u679c\", \"\u9999\u8549\", \"\u6a59\u5b50\"]\n</code></pre>"},{"location":"llmapp/langchain/basic/#3-listoutputparser","title":"3\ufe0f\u20e3 ListOutputParser","text":"<p>\u5c06\u6a21\u578b\u8f93\u51fa\u7684\u300c\u591a\u884c\u6587\u672c\u300d\u89e3\u6790\u6210\u5217\u8868\u3002 \u9002\u5408\u573a\u666f\uff1a\u8ba9\u6a21\u578b\u9010\u884c\u5217\u51fa\u5185\u5bb9\uff08\u6bcf\u884c\u4e00\u4e2a\u9879\u76ee\uff09\u3002</p> <pre><code>from langchain.output_parsers import ListOutputParser\nparser = ListOutputParser()\n\noutput = \"\u7b2c\u4e00\u9879\\n\u7b2c\u4e8c\u9879\\n\u7b2c\u4e09\u9879\"\nresult = parser.parse(output)\nprint(result)\n# \u8f93\u51fa: [\"\u7b2c\u4e00\u9879\", \"\u7b2c\u4e8c\u9879\", \"\u7b2c\u4e09\u9879\"]\n</code></pre>"},{"location":"llmapp/langchain/basic/#4-jsonoutputparser","title":"4\ufe0f\u20e3 JsonOutputParser","text":"<p>\u5f53\u4f60\u5e0c\u671b\u6a21\u578b\u8fd4\u56de JSON \u683c\u5f0f\u65f6\uff0c\u4f7f\u7528\u5b83\u6765\u89e3\u6790 JSON \u5e76\u8fd4\u56de\u5b57\u5178 / \u5217\u8868\u3002</p> <pre><code>from langchain.output_parsers import JsonOutputParser\nparser = JsonOutputParser()\n\noutput = '{\"name\": \"Tom\", \"age\": 20}'\nresult = parser.parse(output)\nprint(result)\n# \u8f93\u51fa: {'name': 'Tom', 'age': 20}\n</code></pre>"},{"location":"llmapp/langchain/basic/#5-pydanticoutputparser","title":"5\ufe0f\u20e3 PydanticOutputParser","text":"<p>\u26a1\ufe0f \u9ad8\u7ea7\u89e3\u6790\u5668\uff1a \u5c06\u6a21\u578b\u8f93\u51fa\u76f4\u63a5\u89e3\u6790\u4e3aPydantic \u6a21\u578b\u5bf9\u8c61\uff0c\u652f\u6301\u4e25\u683c\u5b57\u6bb5\u6821\u9a8c\u3002 \u9002\u5408\u573a\u666f\uff1a\u8f93\u51fa\u6709\u56fa\u5b9a\u5b57\u6bb5\uff08\u5982 name, age\uff09\u3002</p> <pre><code>from langchain.output_parsers import PydanticOutputParser\nfrom pydantic import BaseModel\n\nclass Person(BaseModel):\n    name: str\n    age: int\n\nparser = PydanticOutputParser(pydantic_object=Person)\n\noutput = '{\"name\": \"Alice\", \"age\": 30}'\nresult = parser.parse(output)\nprint(result)\n# \u8f93\u51fa: Person(name='Alice', age=30)\n</code></pre>"},{"location":"llmapp/langchain/basic/#6-outputfixingparser","title":"6\ufe0f\u20e3 OutputFixingParser","text":"<p>\u5982\u679c\u4f60\u7528 PydanticOutputParser \u6216 JsonOutputParser\uff0c\u6709\u65f6\u5019\u6a21\u578b\u8fd4\u56de\u7684\u683c\u5f0f\u5e76\u4e0d\u5b8c\u5168\u6b63\u786e\uff08\u6bd4\u5982\u7f3a\u5c11\u5b57\u6bb5\uff09\u3002 OutputFixingParser \u4f1a\u81ea\u52a8\u8ba9\u6a21\u578b\u91cd\u65b0\u683c\u5f0f\u5316\u8f93\u51fa\uff0c\u76f4\u5230\u7b26\u5408\u9884\u671f\u3002</p> <pre><code>from langchain.output_parsers import OutputFixingParser\n\nparser = OutputFixingParser.from_llm(parser=PydanticOutputParser(pydantic_object=Person), llm=llm)\n# llm: ChatOpenAI \u7b49\u5927\u6a21\u578b\u5bf9\u8c61\n</code></pre>"},{"location":"llmapp/langchain/basic/#memory","title":"\u4e94\u3001\u8bb0\u5fc6\uff08Memory\uff09","text":"<p>\u5728 \u591a\u8f6e\u5bf9\u8bdd \u6216\u8005 Agent \u573a\u666f\u4e2d\uff0c\u5927\u6a21\u578b\u5f80\u5f80\u9700\u8981\u8bb0\u4f4f\u7528\u6237\u4e4b\u524d\u8bf4\u8fc7\u4ec0\u4e48\uff0c\u624d\u80fd\u66f4\u81ea\u7136\u3001\u8fde\u8d2f\u5730\u56de\u7b54\u3002 LangChain \u7684 Memory\uff0c\u5c31\u662f\u4e13\u95e8\u7528\u6765\u4fdd\u5b58\u4e0a\u4e0b\u6587\u5bf9\u8bdd\u8bb0\u5f55\uff0c\u5e76\u5728\u6bcf\u6b21\u8c03\u7528\u65f6\u52a8\u6001\u8865\u5145\u4e0a\u4e0b\u6587\uff0c\u8ba9\u6a21\u578b\u5177\u5907\u300c\u8bb0\u5fc6\u529b\u300d\u3002</p> \u7c7b / \u7c7b\u578b \u8bf4\u660e <code>ConversationBufferMemory</code> \u6700\u7b80\u5355\u7684\u300c\u4e0a\u4e0b\u6587\u7f13\u51b2\u300d\u5185\u5b58\uff0c\u6309\u987a\u5e8f\u4fdd\u5b58\u6240\u6709\u6d88\u606f <code>ConversationSummaryMemory</code> \u5bf9\u5386\u53f2\u5bf9\u8bdd\u505a\u300c\u603b\u7ed3\u300d\u4fdd\u5b58\uff08\u907f\u514d\u4e0a\u4e0b\u6587\u8fc7\u957f\uff09 <code>ConversationBufferWindowMemory</code> \u53ea\u4fdd\u5b58\u6700\u8fd1 N \u8f6e\u5bf9\u8bdd\uff0c\u8282\u7701\u4e0a\u4e0b\u6587\u957f\u5ea6 <code>ConversationKGMemory</code> \u4f7f\u7528\u300c\u77e5\u8bc6\u56fe\u8c31\u300d\u65b9\u5f0f\u5b58\u50a8\u8bb0\u5fc6\uff0c\u66f4\u7ed3\u6784\u5316 <code>VectorStoreRetrieverMemory</code> \u5c06\u8bb0\u5fc6\u5d4c\u5165\u5411\u91cf\u6570\u636e\u5e93\uff0c\u68c0\u7d22\u76f8\u4f3c\u4e0a\u4e0b\u6587\uff08\u66f4\u5148\u8fdb\uff09 <p><pre><code>from langchain_openai import ChatOpenAI\nfrom langchain.chains import ConversationChain\nfrom langchain.memory import ConversationBufferMemory\n\n# \u5b9a\u4e49 LLM\nllm = ChatOpenAI(model=\"gpt-4o\")\n\n# \u5b9a\u4e49\u8bb0\u5fc6\nmemory = ConversationBufferMemory()\n\n# \u521b\u5efa\u5bf9\u8bdd\u94fe\uff0c\u81ea\u52a8\u643a\u5e26\u8bb0\u5fc6\nconversation = ConversationChain(\n    llm=llm,\n    memory=memory\n)\n\n# \u591a\u8f6e\u5bf9\u8bdd\nprint(conversation.invoke({\"input\": \"\u4f60\u597d\uff01\"}))\nprint(conversation.invoke({\"input\": \"\u4f60\u53eb\u4ec0\u4e48\u540d\u5b57\uff1f\"}))\nprint(conversation.invoke({\"input\": \"\u4eca\u5929\u5929\u6c14\u600e\u4e48\u6837\uff1f\"}))\n</code></pre> \u6a21\u578b\u5728\u6bcf\u6b21\u751f\u6210\u65f6\uff0c\u4f1a\u81ea\u52a8\u62fc\u63a5\u4e0a\u4e0b\u6587\u5386\u53f2\uff08Memory \u4e2d\u7684\u6d88\u606f\uff09\uff0c\u56de\u7b54\u66f4\u81ea\u7136\uff01</p>"},{"location":"llmapp/langchain/basic/#memory_1","title":"\ud83d\udd36 Memory \u5185\u90e8\u7ed3\u6784","text":"<p>\u6240\u6709 Memory \u90fd\u662f\u57fa\u4e8e <code>BaseMemory</code> \u62bd\u8c61\u7c7b\uff0c\u6838\u5fc3\u65b9\u6cd5\u6709\uff1a</p> \u65b9\u6cd5 \u8bf4\u660e <code>load_memory_variables(inputs)</code> \u52a0\u8f7d\u8bb0\u5fc6\u53d8\u91cf\uff0c\u8fd4\u56de\u4e00\u4e2a dict\uff0c\u901a\u5e38\u662f\u5386\u53f2\u5bf9\u8bdd\u6587\u672c\uff08<code>history</code>\uff09 <code>save_context(inputs, outputs)</code> \u5728\u6a21\u578b\u8c03\u7528\u540e\uff0c\u4fdd\u5b58\u300c\u7528\u6237\u8f93\u5165 &amp; \u6a21\u578b\u8f93\u51fa\u300d\u5230 Memory <code>clear()</code> \u6e05\u7a7a\u8bb0\u5fc6"},{"location":"llmapp/langchain/basic/#tools","title":"\u516d\u3001\u5de5\u5177\uff08Tools\uff09","text":""},{"location":"llmapp/langchain/basic/#basetool","title":"\u5de5\u5177\u7684\u6838\u5fc3\u62bd\u8c61\uff1aBaseTool","text":"<p>langchain_core.tools \u4e2d\u7684\u6838\u5fc3\u57fa\u7c7b\u662f\uff1a</p> <pre><code>from langchain_core.tools import BaseTool\n</code></pre> <p>\ud83d\udd39 BaseTool \u5b9a\u4e49\u4e86\u300c\u5de5\u5177\u300d\u7684\u6807\u51c6\u63a5\u53e3\uff1a + name: \u5de5\u5177\u7684\u540d\u79f0\uff08\u6a21\u578b\u9700\u8981\u7528\u5b83\u6765\u8c03\u7528\uff09 + description: \u5de5\u5177\u7684\u63cf\u8ff0\uff08\u5e2e\u52a9\u6a21\u578b\u7406\u89e3\u5b83\u80fd\u505a\u4ec0\u4e48\uff09 + args_schema: \u5de5\u5177\u53c2\u6570\u7684 Schema\uff08\u53c2\u6570\u6821\u9a8c\uff0c\u901a\u5e38\u7528 Pydantic BaseModel\uff09 + invoke() / run(): \u5de5\u5177\u771f\u6b63\u88ab\u8c03\u7528\u65f6\u7684\u903b\u8f91</p>"},{"location":"llmapp/langchain/basic/#_6","title":"\u5b9a\u4e49\u4e00\u4e2a\u5de5\u5177\u793a\u4f8b","text":"<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u793a\u4f8b\uff0c\u5c55\u793a\u5982\u4f55\u57fa\u4e8e BaseTool \u81ea\u5b9a\u4e49\u4e00\u4e2a\u5de5\u5177\uff1a</p> <pre><code>from langchain_core.tools import BaseTool\nfrom pydantic import BaseModel, Field\n\n# \u5b9a\u4e49\u53c2\u6570 Schema\nclass CalculatorArgs(BaseModel):\n    a: int = Field(..., description=\"\u7b2c\u4e00\u4e2a\u6570\u5b57\")\n    b: int = Field(..., description=\"\u7b2c\u4e8c\u4e2a\u6570\u5b57\")\n\n# \u81ea\u5b9a\u4e49\u5de5\u5177\nclass AddTool(BaseTool):\n    name = \"add_numbers\"\n    description = \"\u8ba1\u7b97\u4e24\u4e2a\u6570\u5b57\u4e4b\u548c\"\n    args_schema = CalculatorArgs\n\n    def _run(self, a: int, b: int) -&gt; int:\n        return a + b\n\n    async def _arun(self, a: int, b: int) -&gt; int:\n        # \u8fd9\u91cc\u4e5f\u53ef\u4ee5\u5199\u5f02\u6b65\u903b\u8f91\n        return a + b\n</code></pre>"},{"location":"llmapp/langchain/basic/#tool","title":"\u5185\u7f6e\u5de5\u5177\uff1atool","text":"<p>\u9664\u4e86\u624b\u52a8\u7ee7\u627f BaseTool\uff0cLangChain \u4e5f\u63d0\u4f9b\u4e86\u5feb\u901f\u6ce8\u518c\u5de5\u5177\u7684\u88c5\u9970\u5668 @tool\uff0c\u8ba9\u5b9a\u4e49\u66f4\u7b80\u5355\uff01</p> <pre><code>from langchain_core.tools import tool\n\n@tool\ndef add_numbers(a: int, b: int) -&gt; int:\n    \"\"\"\u8ba1\u7b97\u4e24\u4e2a\u6570\u5b57\u4e4b\u548c\"\"\"\n    return a + b\n</code></pre>"},{"location":"llmapp/langchain/langgraph/","title":"LangGraph \u6559\u7a0b","text":""},{"location":"llmapp/langchain/langgraph/#_1","title":"\u4e00\u3001\u5b89\u88c5","text":"<pre><code>pip install -U langgraph\n</code></pre>"},{"location":"llmapp/langchain/langserver/","title":"LangServe \u6559\u7a0b","text":""},{"location":"llmapp/langchain/langserver/#1-langserverlangserve","title":"1\ufe0f\u20e3 \u4ec0\u4e48\u662f LangServer\uff08LangServe\uff09\uff1f","text":"<p>\u5728 LangChain \u4e2d\uff0cLangServe\uff08\u6709\u65f6\u4e5f\u53eb LangServer\uff09\u662f\u4e00\u4e2a\u975e\u5e38\u5f3a\u5927\u7684\u6a21\u5757\uff1a \u5b83\u80fd\u628a LangChain Chain / Agent / Runnable \u901a\u8fc7\u4e00\u4e2a API \u670d\u52a1\uff08RESTful API / WebSocket\uff09 \u7684\u5f62\u5f0f\u53d1\u5e03\u51fa\u6765\u3002</p> <p>\u8fd9\u6837\uff0c\u4f60\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\uff1a</p> <p>\u2705 \u628a\u5927\u6a21\u578b\u5de5\u4f5c\u6d41\uff08RAG\u3001Agent\u3001\u5bf9\u8bdd\u94fe\u7b49\uff09\u90e8\u7f72\u6210 HTTP \u670d\u52a1</p> <p>\u2705 \u4e0e\u5916\u90e8\u7cfb\u7edf\uff08\u6bd4\u5982\u524d\u7aef\u3001APP\u3001\u5176\u4ed6\u540e\u7aef\uff09\u96c6\u6210</p> <p>\u2705 \u5feb\u901f\u5b9e\u73b0\u300c\u6a21\u578b API\u300d\u529f\u80fd</p>"},{"location":"llmapp/langchain/langserver/#2-langserve","title":"2\ufe0f\u20e3 LangServe \u7684\u6838\u5fc3\u529f\u80fd","text":"\u529f\u80fd \u8bf4\u660e \ud83c\udf10 \u81ea\u52a8\u751f\u6210 RESTful API \u81ea\u52a8\u5c06 Runnable\uff08Chain\u3001Agent\uff09\u66b4\u9732\u4e3a HTTP \u63a5\u53e3 \u26a1\ufe0f \u652f\u6301\u6d41\u5f0f\u8f93\u51fa WebSocket/Server-Sent Events\uff08SSE\uff09 \u6d41\u5f0f\u63a5\u53e3\uff0c\u9002\u914d\u957f\u6587\u672c/\u591a\u8f6e\u5bf9\u8bdd \ud83d\udcc4 \u81ea\u52a8\u751f\u6210 OpenAPI \u6587\u6863 \u751f\u6210\u4ea4\u4e92\u5f0f\u7684 API \u6587\u6863\uff08\u53ef\u76f4\u63a5\u6d4b\u8bd5\u63a5\u53e3\uff09 \ud83d\udd27 \u5feb\u901f\u90e8\u7f72 \u53ea\u9700\u8981\u51e0\u884c\u4ee3\u7801\uff0c\u5c31\u80fd\u628a\u6a21\u578b\u5de5\u4f5c\u6d41\u6253\u5305\u6210\u670d\u52a1"},{"location":"llmapp/langchain/langserver/#3-langserve","title":"3\ufe0f\u20e3 \u5b89\u88c5 LangServe","text":"<pre><code>pip install \"langserve[all]\"\n</code></pre>"},{"location":"llmapp/langchain/langserver/#4-langserve","title":"4\ufe0f\u20e3 \u4e00\u4e2a\u6700\u7b80\u5355\u7684 LangServe \u793a\u4f8b","text":"<p>\u4e0b\u9762\u4ee5\u4e00\u4e2a\u7b80\u5355\u7684\u5bf9\u8bdd\u94fe\u4e3a\u4f8b\uff08ConversationChain\uff09\uff0c\u6f14\u793a\u5982\u4f55\u7528 LangServe \u628a\u5b83\u53d1\u5e03\u6210 API\uff1a</p> <pre><code>from fastapi import FastAPI\nfrom langserve import add_routes\nfrom langchain_openai import ChatOpenAI\nfrom langchain.chains import ConversationChain\nfrom langchain.memory import ConversationBufferMemory\n\n# \u5b9a\u4e49\u6a21\u578b\u548c\u94fe\nllm = ChatOpenAI(model=\"gpt-4o\")\nmemory = ConversationBufferMemory()\nchain = ConversationChain(llm=llm, memory=memory)\n\n# \u521b\u5efa FastAPI \u5e94\u7528\napp = FastAPI()\n\n# \u5c06 chain \u53d1\u5e03\u4e3a API\nadd_routes(app, chain, path=\"/chat\")\n\n# \u8fd0\u884c\u670d\u52a1\n# uvicorn main:app --reload --port 8000\n</code></pre> <p>\u8fd0\u884c\u540e\uff0c\u5c31\u80fd\u8bbf\u95ee\u5230\uff1a</p> <ul> <li>http://localhost:8000/chat/invoke\uff08\u4e00\u6b21\u6027\u8c03\u7528\uff09</li> <li>http://localhost:8000/chat/stream\uff08\u6d41\u5f0f\u8f93\u51fa\uff09</li> <li>\u4ee5\u53ca\u81ea\u52a8\u751f\u6210\u7684\u4ea4\u4e92\u5f0f\u6587\u6863\uff08http://localhost:8000/docs\uff09</li> </ul>"},{"location":"llmapp/langchain/langserver/#5-langserve","title":"5\ufe0f\u20e3 LangServe \u63a5\u53e3\u6982\u89c8","text":"<p>\u5f53\u4f60\u4f7f\u7528 <code>add_routes</code> \u53d1\u5e03\u4e00\u4e2a <code>Runnable</code>\uff08\u5982 Chain / Agent\uff09\uff0cLangServe \u4f1a\u81ea\u52a8\u751f\u6210\u8fd9\u4e9b\u7aef\u70b9\uff1a</p> Endpoint \u8bf4\u660e <code>/invoke</code> \u76f4\u63a5\u4e00\u6b21\u6027\u8c03\u7528\uff0c\u8fd4\u56de\u7ed3\u679c <code>/batch</code> \u6279\u91cf\u8c03\u7528 <code>/stream</code> \u6d41\u5f0f\u8f93\u51fa\uff08SSE\uff09 <code>/stream_events</code> \u4e8b\u4ef6\u6d41\u8f93\u51fa\uff08\u4e8b\u4ef6\u578b\u6d41\u5f0f\u8f93\u51fa\uff0c\u9002\u5408\u66f4\u590d\u6742\u7684\u53ef\u89c6\u5316\uff09 <code>/metadata</code> \u8fd4\u56de Chain / Agent \u5143\u6570\u636e\uff08\u5982\u8f93\u5165/\u8f93\u51fa\u7c7b\u578b\u7b49\uff09"},{"location":"llmapp/langchain/langserver/#6-langserve","title":"6\ufe0f\u20e3 LangServe \u7684\u5f3a\u5927\u7279\u6027","text":"<p>\u2705 \u96f6\u914d\u7f6e\uff1a\u53ea\u8981\u662f Runnable\uff08\u5305\u62ec LLM\u3001Agent\u3001Chain\uff09\uff0c\u90fd\u80fd\u76f4\u63a5\u53d1\u5e03</p> <p>\u2705 \u81ea\u52a8\u5316\u6587\u6863\uff1aSwagger UI / ReDoc\uff0c\u65b9\u4fbf\u6d4b\u8bd5\u548c\u5bf9\u63a5</p> <p>\u2705 \u591a\u79cd\u8f93\u5165\u8f93\u51fa\u6a21\u5f0f\uff1a\u517c\u5bb9\u5bf9\u8bdd\u5f0f\u3001\u68c0\u7d22\u5f0f\u3001Agent \u5de5\u5177\u5f0f\u573a\u666f</p> <p>\u2705 \u7075\u6d3b\u90e8\u7f72\uff1a\u652f\u6301 Docker\u3001Kubernetes \u7b49\u591a\u79cd\u65b9\u5f0f</p>"},{"location":"llmapp/langchain/langserver/#7-langserve","title":"7\ufe0f\u20e3 LangServe \u9ad8\u7ea7\u7528\u6cd5","text":"<ul> <li>\u53d1\u5e03\u591a\u4e2a Chain / Agent\uff1a\u591a\u6b21 add_routes</li> <li>\u53d1\u5e03\u81ea\u5b9a\u4e49\u5de5\u5177\u94fe\uff08Agent + Memory + Tool\uff09</li> <li>\u81ea\u5b9a\u4e49\u8f93\u5165\u8f93\u51fa Schema\uff1a\u901a\u8fc7 pydantic \u6a21\u578b\uff0c\u4e25\u683c\u7ea6\u675f\u8f93\u5165\u8f93\u51fa</li> <li>\u7ed3\u5408\u5411\u91cf\u6570\u636e\u5e93\uff1a\u6253\u9020\u771f\u6b63\u7684 RAG API</li> <li>\u5b89\u5168/\u8ba4\u8bc1\uff1a\u7ed3\u5408 FastAPI \u7684\u4e2d\u95f4\u4ef6\uff08\u5982\u8ba4\u8bc1\u3001\u9650\u6d41\u7b49\uff09</li> </ul>"},{"location":"machinelearning/ml/dimension/","title":"\u7b2c\u56db\u7ae0\uff1a\u964d\u7ef4","text":""},{"location":"machinelearning/ml/dimension/#1","title":"1\ufe0f\u20e3 \u4ec0\u4e48\u662f\u964d\u7ef4\uff1f","text":"<p>\u964d\u7ef4\u662f\u6307\u5c06\u9ad8\u7ef4\u6570\u636e\u6620\u5c04\u5230\u4f4e\u7ef4\u7a7a\u95f4\u7684\u8fc7\u7a0b\uff0c\u5728\u4fdd\u7559\u5c3d\u53ef\u80fd\u591a\u7684\u91cd\u8981\u4fe1\u606f\u7684\u540c\u65f6\u51cf\u5c11\u7279\u5f81\u6570\u91cf\u3002</p>"},{"location":"machinelearning/ml/dimension/#_2","title":"\u2728 \u964d\u7ef4\u7684\u4f5c\u7528\uff1a","text":"<ul> <li>\ud83d\udcca \u964d\u4f4e\u8ba1\u7b97\u590d\u6742\u5ea6</li> <li>\ud83d\udd0d \u7f13\u89e3\u201c\u7ef4\u5ea6\u707e\u96be\u201d</li> <li>\ud83e\udde0 \u51cf\u5c11\u8fc7\u62df\u5408</li> <li>\ud83e\udde9 \u63d0\u9ad8\u6a21\u578b\u6cdb\u5316\u80fd\u529b</li> <li>\ud83d\uddbc\ufe0f \u4fbf\u4e8e\u6570\u636e\u53ef\u89c6\u5316\uff082D/3D\uff09</li> </ul>"},{"location":"machinelearning/ml/dimension/#2","title":"2\ufe0f\u20e3 \u964d\u7ef4\u65b9\u6cd5\u5206\u7c7b","text":"\u65b9\u6cd5\u7c7b\u578b \u964d\u7ef4\u65b9\u6cd5 \u7279\u70b9\u4e0e\u8bf4\u660e \u7ebf\u6027\u964d\u7ef4 PCA \u4fdd\u7559\u6700\u5927\u65b9\u5dee\u65b9\u5411\uff0c\u5feb\u901f\u7a33\u5b9a LDA \u76d1\u7763\u5f0f\uff0c\u589e\u5f3a\u7c7b\u95f4\u533a\u5206 \u975e\u7ebf\u6027\u964d\u7ef4 t-SNE \u4fdd\u6301\u5c40\u90e8\u7ed3\u6784\uff0c\u9002\u5408\u53ef\u89c6\u5316 UMAP \u66f4\u5feb\u3001\u4fdd\u62d3\u6251\uff0c\u9002\u5408\u5927\u89c4\u6a21\u6570\u636e \u795e\u7ecf\u7f51\u7edc\u65b9\u6cd5 AutoEncoder \u901a\u8fc7\u795e\u7ecf\u7f51\u7edc\u538b\u7f29\u518d\u91cd\u6784 \u7279\u5f81\u9009\u62e9 \u57fa\u4e8e\u6a21\u578b/\u7edf\u8ba1 \u5220\u9664\u65e0\u5173\u6216\u5197\u4f59\u7279\u5f81"},{"location":"machinelearning/ml/dimension/#3-pca","title":"3\ufe0f\u20e3 \u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff09","text":"<p>PCA \u662f\u6700\u5e38\u7528\u7684\u7ebf\u6027\u964d\u7ef4\u65b9\u6cd5\u3002</p>"},{"location":"machinelearning/ml/dimension/#_3","title":"\u539f\u7406\uff1a","text":"<ul> <li>\u627e\u51fa\u6570\u636e\u4e2d\u65b9\u5dee\u6700\u5927\u7684\u65b9\u5411\u4f5c\u4e3a\u65b0\u5750\u6807\u8f74\uff08\u4e3b\u6210\u5206\uff09</li> <li>\u4e3b\u6210\u5206\u76f8\u4e92\u6b63\u4ea4</li> <li>\u7528\u524d \\(k\\) \u4e2a\u4e3b\u6210\u5206\u8fd1\u4f3c\u539f\u59cb\u6570\u636e</li> </ul>"},{"location":"machinelearning/ml/dimension/#_4","title":"\u6570\u5b66\u63a8\u5bfc\uff1a","text":"<ol> <li>\u6807\u51c6\u5316\u6570\u636e\u77e9\u9635 \\( X \\in \\mathbb{R}^{n \\times d} \\)</li> <li>\u8ba1\u7b97\u534f\u65b9\u5dee\u77e9\u9635\uff1a    $$    C = \\frac{1}{n} X^T X    $$</li> <li>\u5bf9 \\(C\\) \u505a\u7279\u5f81\u503c\u5206\u89e3\uff0c\u5f97\uff1a    $$    C = V \\Lambda V^T    $$</li> <li>\u53d6\u524d \\(k\\) \u4e2a\u7279\u5f81\u5411\u91cf \\(v_1, ..., v_k\\) \u6784\u6210\u6295\u5f71\u77e9\u9635 \\(W_k\\)</li> <li>\u5f97\u5230\u964d\u7ef4\u540e\u7684\u6570\u636e\uff1a    $$    X_{\\text{new}} = X W_k    $$</li> </ol>"},{"location":"machinelearning/ml/dimension/#4-lda","title":"4\ufe0f\u20e3 \u7ebf\u6027\u5224\u522b\u5206\u6790\uff08LDA\uff09","text":"<ul> <li>\u6709\u76d1\u7763\u65b9\u6cd5</li> <li>\u6700\u5927\u5316\u7c7b\u95f4\u8ddd\u79bb\uff0c\u6700\u5c0f\u5316\u7c7b\u5185\u8ddd\u79bb</li> <li>\u9002\u7528\u4e8e\u5206\u7c7b\u4efb\u52a1\u4e2d\u7684\u964d\u7ef4</li> </ul>"},{"location":"machinelearning/ml/dimension/#5-t-snet-distributed-stochastic-neighbor-embedding","title":"5\ufe0f\u20e3 t-SNE\uff08t-Distributed Stochastic Neighbor Embedding\uff09","text":"<ul> <li>\u4fdd\u6301\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u6570\u636e\u70b9\u7684\u90bb\u8fd1\u7ed3\u6784</li> <li>\u9002\u5408\u9ad8\u7ef4\u6570\u636e\u76842D \u53ef\u89c6\u5316</li> <li>\u975e\u5e38\u9002\u5408\u4e8e\u63a2\u7d22\u6027\u6570\u636e\u5206\u6790</li> </ul>"},{"location":"machinelearning/ml/dimension/#6-umapuniform-manifold-approximation-and-projection","title":"6\ufe0f\u20e3 UMAP\uff08Uniform Manifold Approximation and Projection\uff09","text":"<ul> <li>\u4fdd\u6301\u6570\u636e\u5728\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u7684\u62d3\u6251\u7ed3\u6784</li> <li>\u901f\u5ea6\u6bd4 t-SNE \u66f4\u5feb\uff0c\u652f\u6301\u589e\u91cf\u5f0f\u66f4\u65b0</li> <li>\u9002\u5408\u7528\u4e8e\u5927\u89c4\u6a21\u6570\u636e\u96c6\u964d\u7ef4\u4e0e\u805a\u7c7b\u524d\u5904\u7406</li> </ul>"},{"location":"machinelearning/ml/dimension/#7-autoencoder","title":"7\ufe0f\u20e3 \u81ea\u52a8\u7f16\u7801\u5668\uff08AutoEncoder\uff09","text":"<p>AutoEncoder \u662f\u4e00\u79cd\u65e0\u76d1\u7763\u795e\u7ecf\u7f51\u7edc\u964d\u7ef4\u65b9\u6cd5\uff1a</p> <ul> <li>\u7f16\u7801\u5668\u5c06\u6570\u636e\u538b\u7f29\u6210\u4f4e\u7ef4\u8868\u793a \\(z\\)</li> <li>\u89e3\u7801\u5668\u5c06 \\(z\\) \u6062\u590d\u4e3a\u539f\u59cb\u6570\u636e</li> <li>\u901a\u8fc7\u91cd\u6784\u8bef\u5dee\u8fdb\u884c\u8bad\u7ec3</li> </ul> <p>\u7ed3\u6784\uff1a</p> <p>\u8f93\u5165\u5c42 \u2192 \u7f16\u7801\u5668\uff08\u964d\u7ef4\uff09 \u2192 \u89e3\u7801\u5668\uff08\u91cd\u5efa\uff09 \u2192 \u8f93\u51fa\u5c42</p>"},{"location":"machinelearning/ml/dimension/#8-vs","title":"8\ufe0f\u20e3 \u7279\u5f81\u9009\u62e9 vs \u7279\u5f81\u63d0\u53d6","text":"\u7c7b\u578b \u7279\u5f81\u9009\u62e9 \u7279\u5f81\u63d0\u53d6 \u65b9\u6cd5 \u5220\u9664\u5197\u4f59/\u65e0\u5173\u7279\u5f81 \u6784\u9020\u65b0\u7279\u5f81\u7ec4\u5408 \u793a\u4f8b \u8fc7\u6ee4\u6cd5\u3001Wrapper\u3001L1\u6b63\u5219 PCA, AutoEncoder \u662f\u5426\u6784\u9020\u65b0\u7279\u5f81 \u5426 \u662f"},{"location":"machinelearning/ml/dimension/#9-python-pca","title":"9\ufe0f\u20e3 Python \u793a\u4f8b\uff1aPCA + \u53ef\u89c6\u5316","text":"<pre><code>import matplotlib.pyplot as plt\nfrom sklearn.decomposition import PCA\nfrom sklearn.datasets import load_iris\n\n# \u52a0\u8f7d\u6570\u636e\ndata = load_iris()\nX = data.data\ny = data.target\n\n# \u964d\u7ef4\npca = PCA(n_components=2)\nX_pca = pca.fit_transform(X)\n\n# \u53ef\u89c6\u5316\nplt.figure(figsize=(8, 6))\nfor label in set(y):\n    plt.scatter(X_pca[y == label, 0], X_pca[y == label, 1], label=f\"Class {label}\")\nplt.xlabel(\"PC1\")\nplt.ylabel(\"PC2\")\nplt.title(\"PCA on Iris Dataset\")\nplt.legend()\nplt.grid(True)\nplt.show()\n</code></pre>"},{"location":"machinelearning/ml/dimension/#_5","title":"\ud83d\udd1f \u603b\u7ed3","text":"\u65b9\u6cd5 \u7c7b\u578b \u662f\u5426\u76d1\u7763 \u7279\u70b9 PCA \u7ebf\u6027 \u5426 \u5feb\u901f\u7a33\u5b9a\uff0c\u4fdd\u7559\u6700\u5927\u65b9\u5dee\u65b9\u5411 LDA \u7ebf\u6027 \u662f \u63d0\u9ad8\u7c7b\u95f4\u533a\u5206\u6027 t-SNE \u975e\u7ebf\u6027 \u5426 \u5c40\u90e8\u4fdd\u6301\uff0c\u9002\u5408\u9ad8\u7ef4\u53ef\u89c6\u5316 UMAP \u975e\u7ebf\u6027 \u5426 \u4fdd\u62d3\u6251\u7ed3\u6784\uff0c\u9002\u5408\u5927\u89c4\u6a21\u6570\u636e AutoEncoder \u795e\u7ecf\u7f51\u7edc \u5426 \u975e\u7ebf\u6027\u538b\u7f29\uff0c\u53ef\u81ea\u5b9a\u4e49\u7f16\u7801\u7ed3\u6784"},{"location":"machinelearning/ml/ensemble/","title":"\u7b2c\u5341\u4e8c\u7ae0\uff1a\u96c6\u6210\u5b66\u4e60","text":""},{"location":"machinelearning/ml/ensemble/#_2","title":"\u4e00\u3001\u6982\u5ff5\u7b80\u4ecb","text":"<p>\u96c6\u6210\u5b66\u4e60\u662f\u4e00\u79cd\u5c06\u591a\u4e2a\u6a21\u578b\uff08\u901a\u5e38\u662f\u5f31\u6a21\u578b\uff09\u7ec4\u5408\u6210\u4e00\u4e2a\u5f3a\u6a21\u578b\u7684\u65b9\u6cd5\uff0c\u4e3b\u8981\u76ee\u6807\u662f\u63d0\u9ad8\u6574\u4f53\u7684\u6cdb\u5316\u80fd\u529b\u548c\u9884\u6d4b\u51c6\u786e\u7387\u3002</p> <p>\u5e38\u89c1\u672f\u8bed\uff1a</p> \u672f\u8bed \u542b\u4e49 \u5f31\u5b66\u4e60\u5668 \u8868\u73b0\u7565\u4f18\u4e8e\u968f\u673a\u731c\u6d4b\u7684\u6a21\u578b\uff08\u5982\u51b3\u7b56\u6811\uff09 \u5f3a\u5b66\u4e60\u5668 \u7cbe\u5ea6\u8f83\u9ad8\u7684\u6a21\u578b\uff0c\u662f\u591a\u4e2a\u5f31\u5b66\u4e60\u5668\u7ec4\u5408\u540e\u7684\u7ed3\u679c \u57fa\u5b66\u4e60\u5668 \u88ab\u96c6\u6210\u7684\u57fa\u7840\u6a21\u578b \u96c6\u6210\u65b9\u6cd5 \u7ec4\u5408\u65b9\u5f0f\uff0c\u5982\u6295\u7968\u3001\u52a0\u6743\u5e73\u5747\u7b49"},{"location":"machinelearning/ml/ensemble/#_3","title":"\u4e8c\u3001\u96c6\u6210\u5b66\u4e60\u4e09\u5927\u4e3b\u8981\u65b9\u6cd5","text":""},{"location":"machinelearning/ml/ensemble/#1-baggingbootstrap-aggregating","title":"1. Bagging\uff08Bootstrap Aggregating\uff09","text":"<ul> <li>\u601d\u60f3\uff1a\u591a\u4e2a\u6a21\u578b\u5e76\u884c\u8bad\u7ec3\uff0c\u5e73\u5747\u6216\u6295\u7968\u7ed3\u679c\u3002</li> <li>\u76ee\u6807\uff1a\u964d\u4f4e\u65b9\u5dee\uff08Variance\uff09\uff0c\u9632\u6b62\u8fc7\u62df\u5408\u3002</li> <li>\u4ee3\u8868\u7b97\u6cd5\uff1aRandom Forest</li> </ul>"},{"location":"machinelearning/ml/ensemble/#_4","title":"\u516c\u5f0f","text":"<p>\u5047\u8bbe\u6709 T \u4e2a\u6a21\u578b \\(begin:math:text\\) h_1(x), h_2(x), \\dots, h_T(x) \\(end:math:text\\)\uff0c\u6700\u7ec8\u8f93\u51fa\uff1a</p> <ul> <li>\u5206\u7c7b\uff1a \\(begin:math:display\\)   H(x) = \\text{majority\\_vote}(h_1(x), ..., h_T(x))   \\(end:math:display\\)</li> <li>\u56de\u5f52\uff1a \\(begin:math:display\\)   H(x) = \\frac{1}{T} \\sum_{t=1}^T h_t(x)   \\(end:math:display\\)</li> </ul>"},{"location":"machinelearning/ml/ensemble/#_5","title":"\u793a\u4f8b\u4ee3\u7801","text":"<pre><code>from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\n\nX, y = load_iris(return_X_y=True)\nX_train, X_test, y_train, y_test = train_test_split(X, y)\n\nclf = RandomForestClassifier(n_estimators=100)\nclf.fit(X_train, y_train)\nprint(\"Accuracy:\", clf.score(X_test, y_test))\n</code></pre>"},{"location":"machinelearning/ml/ensemble/#2-boosting","title":"2. Boosting","text":"<ul> <li>\u601d\u60f3\uff1a\u591a\u4e2a\u6a21\u578b\u4e32\u884c\u8bad\u7ec3\uff0c\u540e\u4e00\u4e2a\u6a21\u578b\u4e13\u6ce8\u4e8e\u4fee\u6b63\u524d\u4e00\u4e2a\u6a21\u578b\u7684\u9519\u8bef\u3002</li> <li>\u76ee\u6807\uff1a\u964d\u4f4e\u504f\u5dee\uff08Bias\uff09\uff0c\u63d0\u9ad8\u51c6\u786e\u7387\u3002</li> <li>\u4ee3\u8868\u7b97\u6cd5\uff1aAdaBoost\u3001Gradient Boosting\u3001XGBoost\u3001LightGBM\u3001CatBoost</li> </ul>"},{"location":"machinelearning/ml/ensemble/#adaboost","title":"\u516c\u5f0f\uff08\u4ee5 AdaBoost \u4e3a\u4f8b\uff09","text":"<p>\u7ed9\u5b9a\u8bad\u7ec3\u6837\u672c \\(begin:math:text\\) (x_i, y_i) \\(end:math:text\\)\uff0c\u6bcf\u8f6e\u8bad\u7ec3\u4e00\u4e2a\u5206\u7c7b\u5668 \\(begin:math:text\\) h_t(x) \\(end:math:text\\)\uff0c\u5e76\u5206\u914d\u6743\u91cd \\(begin:math:text\\) \\alpha_t \\(end:math:text\\)\uff0c\u6700\u7ec8\u6a21\u578b\u4e3a\uff1a</p> <p>\\(begin:math:display\\) H(x) = \\text{sign}\\left(\\sum_{t=1}^{T} \\alpha_t h_t(x)\\right) \\(end:math:display\\)</p>"},{"location":"machinelearning/ml/ensemble/#adaboost_1","title":"\u793a\u4f8b\u4ee3\u7801\uff08\u4f7f\u7528 AdaBoost\uff09","text":"<pre><code>from sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.tree import DecisionTreeClassifier\n\nclf = AdaBoostClassifier(\n    base_estimator=DecisionTreeClassifier(max_depth=1),\n    n_estimators=50\n)\nclf.fit(X_train, y_train)\nprint(\"Accuracy:\", clf.score(X_test, y_test))\n</code></pre>"},{"location":"machinelearning/ml/ensemble/#3-stackingstacked-generalization","title":"3. Stacking\uff08Stacked Generalization\uff09","text":"<ul> <li>\u601d\u60f3\uff1a\u5c06\u591a\u4e2a\u4e0d\u540c\u7c7b\u578b\u7684\u6a21\u578b\u4f5c\u4e3a\u4e00\u5c42\uff0c\u8f93\u51fa\u4f5c\u4e3a\u4e0b\u4e00\u5c42\u6a21\u578b\u7684\u8f93\u5165\u3002</li> <li>\u76ee\u6807\uff1a\u7efc\u5408\u591a\u79cd\u6a21\u578b\u4f18\u70b9\uff0c\u63d0\u5347\u6027\u80fd\u3002</li> <li>\u7279\u70b9\uff1a\u6a21\u578b\u95f4\u53ef\u5f02\u6784\uff0c\u901a\u5e38\u5206\u4e24\u5c42\u6216\u591a\u5c42\u3002</li> </ul>"},{"location":"machinelearning/ml/ensemble/#sklearn-stacking","title":"\u793a\u4f8b\u4ee3\u7801\uff08\u4f7f\u7528 sklearn Stacking\uff09","text":"<pre><code>from sklearn.ensemble import StackingClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\n\nestimators = [\n    ('dt', DecisionTreeClassifier()),\n    ('svc', SVC(probability=True))\n]\nstack_model = StackingClassifier(\n    estimators=estimators,\n    final_estimator=LogisticRegression()\n)\nstack_model.fit(X_train, y_train)\nprint(\"Accuracy:\", stack_model.score(X_test, y_test))\n</code></pre>"},{"location":"machinelearning/ml/ensemble/#_6","title":"\u4e09\u3001\u65b9\u6cd5\u5bf9\u6bd4\u603b\u7ed3","text":"\u65b9\u6cd5 \u662f\u5426\u5e76\u884c \u4fa7\u91cd\u65b9\u5411 \u662f\u5426\u5bb9\u6613\u8fc7\u62df\u5408 \u53ef\u6269\u5c55\u6027 Bagging \u2705 \u51cf\u5c11\u65b9\u5dee \u8f83\u4f4e \u4e2d\u7b49 Boosting \u274c \u51cf\u5c11\u504f\u5dee \u5bb9\u6613\u8fc7\u62df\u5408 \u9ad8 Stacking \u53ef\u5e76\u53ef\u4e32 \u7efc\u5408\u63d0\u5347 \u4e2d\u7b49 \u9ad8"},{"location":"machinelearning/ml/ensemble/#boosting","title":"\u56db\u3001\u8fdb\u9636\uff1a\u4e3b\u6d41 Boosting \u6846\u67b6\u4ecb\u7ecd","text":"\u6846\u67b6 \u7279\u70b9 XGBoost \u6b63\u5219\u5316\u5f3a\uff0c\u652f\u6301\u7a00\u758f\u6570\u636e LightGBM \u901f\u5ea6\u5feb\uff0c\u9002\u5408\u5927\u6570\u636e CatBoost \u539f\u751f\u652f\u6301\u7c7b\u522b\u7279\u5f81\uff0c\u8c03\u53c2\u7b80\u5355"},{"location":"machinelearning/ml/ensemble/#xgboost","title":"\u793a\u4f8b\u4ee3\u7801\uff08\u4f7f\u7528 XGBoost\uff09","text":"<pre><code>from xgboost import XGBClassifier\nmodel = XGBClassifier()\nmodel.fit(X_train, y_train)\nprint(\"Accuracy:\", model.score(X_test, y_test))\n</code></pre>"},{"location":"machinelearning/ml/ensemble/#_7","title":"\u4e94\u3001\u96c6\u6210\u5b66\u4e60\u7684\u5b9e\u7528\u5efa\u8bae","text":"<ul> <li>\u5f31\u6a21\u578b\u53ef\u9009\uff1a\u51b3\u7b56\u6811\u3001KNN\u3001\u6734\u7d20\u8d1d\u53f6\u65af\u3001\u7ebf\u6027\u6a21\u578b\u7b49</li> <li>\u6a21\u578b\u5dee\u5f02\u6027\u8d8a\u5927\uff0c\u96c6\u6210\u6548\u679c\u8d8a\u597d</li> <li>\u53ef\u7528\u4e8e\u4e0d\u5e73\u8861\u6570\u636e\u3001\u5f02\u5e38\u68c0\u6d4b\u3001\u65f6\u95f4\u5e8f\u5217\u9884\u6d4b\u7b49\u591a\u79cd\u4efb\u52a1</li> <li>\u53ef\u7ed3\u5408\u4ea4\u53c9\u9a8c\u8bc1\u3001\u6a21\u578b\u878d\u5408\u8fdb\u4e00\u6b65\u4f18\u5316</li> </ul>"},{"location":"machinelearning/ml/ensemble/#_8","title":"\u516d\u3001\u5b66\u4e60\u8def\u7ebf\u5efa\u8bae","text":"<ol> <li>\u5165\u95e8\u9636\u6bb5</li> <li>\u638c\u63e1 Bagging\u3001Boosting \u7684\u57fa\u672c\u601d\u60f3\u4e0e\u533a\u522b</li> <li> <p>\u719f\u7ec3\u4f7f\u7528 sklearn \u7684\u96c6\u6210\u6a21\u578b\uff08\u5982 RandomForest\u3001AdaBoost\uff09</p> </li> <li> <p>\u8fdb\u9636\u9636\u6bb5</p> </li> <li>\u7406\u89e3 GBDT \u7684\u635f\u5931\u51fd\u6570\u4f18\u5316\u539f\u7406</li> <li> <p>\u5b66\u4e60 Stacking \u7684\u591a\u5c42\u6a21\u578b\u6784\u5efa\u4e0e\u878d\u5408\u6280\u5de7</p> </li> <li> <p>\u5b9e\u6218\u5e94\u7528</p> </li> <li>\u4f7f\u7528 XGBoost/LightGBM \u8c03\u53c2\u3001\u4ea4\u53c9\u9a8c\u8bc1</li> <li>\u591a\u6a21\u578b\u878d\u5408\u63d0\u5347\u7ade\u8d5b\u6210\u7ee9\uff08\u5982 Kaggle\uff09</li> </ol> <p>\u5982\u9700\u914d\u5957 Jupyter Notebook \u6587\u4ef6\u3001\u53ef\u89c6\u5316\u96c6\u6210\u6548\u679c\u56fe\uff0c\u6216\u4f7f\u7528\u96c6\u6210\u5b66\u4e60\u505a\u4e2d\u6587\u6587\u672c\u5206\u7c7b\u3001\u56fe\u50cf\u8bc6\u522b\u7b49\u4efb\u52a1\uff0c\u8bf7\u544a\u8bc9\u6211\uff0c\u6211\u53ef\u4ee5\u5e2e\u4f60\u5b9a\u5236\u3002</p>"},{"location":"machinelearning/ml/evaluate/","title":"\u7b2c\u4e8c\u7ae0\uff1a\u6a21\u578b\u8bc4\u4f30","text":""},{"location":"machinelearning/ml/evaluate/#_2","title":"\u4e00\u3001\u51c6\u786e\u7387","text":""},{"location":"machinelearning/ml/evaluate/#1-accuracy","title":"1\ufe0f\u20e3 \u4ec0\u4e48\u662f\u51c6\u786e\u7387\uff08Accuracy\uff09\uff1f","text":"<p>\u51c6\u786e\u7387\uff08Accuracy\uff09\u662f\u5206\u7c7b\u6a21\u578b\u6700\u5e38\u7528\u7684\u8bc4\u4f30\u6307\u6807\u4e4b\u4e00\u3002\u5b83\u8868\u793a\u6a21\u578b\u6b63\u786e\u9884\u6d4b\u7684\u6837\u672c\u6570\u91cf\u5360\u603b\u6837\u672c\u6570\u91cf\u7684\u6bd4\u4f8b\u3002</p> <p>\u51c6\u786e\u7387 = \u6b63\u786e\u9884\u6d4b\u7684\u6570\u91cf \u00f7 \u603b\u9884\u6d4b\u7684\u6570\u91cf</p>"},{"location":"machinelearning/ml/evaluate/#2","title":"2\ufe0f\u20e3 \u6570\u5b66\u516c\u5f0f","text":"<p>\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u4e8c\u5206\u7c7b\u95ee\u9898\uff08\u6b63\u4f8b\u548c\u8d1f\u4f8b\uff09\uff0c\u6df7\u6dc6\u77e9\u9635\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a</p> \u9884\u6d4b\u6b63\u4f8b (P') \u9884\u6d4b\u8d1f\u4f8b (N') \u771f\u5b9e\u6b63\u4f8b (P) TP (\u771f\u9633\u6027) FN (\u5047\u9634\u6027) \u771f\u5b9e\u8d1f\u4f8b (N) FP (\u5047\u9633\u6027) TN (\u771f\u9634\u6027) <p>\u5176\u4e2d\uff1a</p> <ul> <li>TP\uff1a\u9884\u6d4b\u4e3a\u6b63\u4f8b\uff0c\u4e14\u771f\u5b9e\u4e3a\u6b63\u4f8b\u3002</li> <li>TN\uff1a\u9884\u6d4b\u4e3a\u8d1f\u4f8b\uff0c\u4e14\u771f\u5b9e\u4e3a\u8d1f\u4f8b\u3002</li> <li>FP\uff1a\u9884\u6d4b\u4e3a\u6b63\u4f8b\uff0c\u4f46\u771f\u5b9e\u4e3a\u8d1f\u4f8b\u3002</li> <li>FN\uff1a\u9884\u6d4b\u4e3a\u8d1f\u4f8b\uff0c\u4f46\u771f\u5b9e\u4e3a\u6b63\u4f8b\u3002</li> </ul> <p>\u90a3\u4e48\u51c6\u786e\u7387\u516c\u5f0f\u4e3a\uff1a</p> \\[ \\text{Accuracy} = \\frac{TP + TN}{TP + TN + FP + FN} \\]"},{"location":"machinelearning/ml/evaluate/#3-python","title":"3\ufe0f\u20e3 Python \u4ee3\u7801\u5b9e\u73b0","text":"<p>\u4e0b\u9762\u7528 scikit-learn \u4e3e\u4e2a\u4f8b\u5b50\uff1a</p> <pre><code>from sklearn.metrics import accuracy_score\n\n# \u5047\u8bbe\u771f\u5b9e\u6807\u7b7e\u548c\u9884\u6d4b\u6807\u7b7e\u5982\u4e0b\ny_true = [1, 0, 1, 1, 0, 1, 0]\ny_pred = [1, 0, 1, 0, 0, 1, 1]\n\n# \u8ba1\u7b97\u51c6\u786e\u7387\naccuracy = accuracy_score(y_true, y_pred)\n\nprint(\"\u51c6\u786e\u7387\uff1a\", accuracy)\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c</p> <p>\u51c6\u786e\u7387\uff1a0.7142857142857143</p>"},{"location":"machinelearning/ml/evaluate/#4","title":"4\ufe0f\u20e3 \u51c6\u786e\u7387\u7684\u4f18\u7f3a\u70b9","text":""},{"location":"machinelearning/ml/evaluate/#_3","title":"\u2705 \u4f18\u70b9\uff1a","text":"<ul> <li>\u7b80\u5355\u76f4\u89c2\uff0c\u6613\u4e8e\u7406\u89e3\u3002</li> <li>\u9002\u7528\u4e8e\u7c7b\u522b\u5e73\u8861\u7684\u6570\u636e\u96c6\u3002</li> </ul>"},{"location":"machinelearning/ml/evaluate/#_4","title":"\u274c \u7f3a\u70b9\uff1a","text":"<ul> <li>\u5f53\u7c7b\u522b\u5206\u5e03\u4e0d\u5747\u8861\uff08\u5373\u6837\u672c\u7c7b\u522b\u6781\u5ea6\u4e0d\u5e73\u8861\uff09\u65f6\uff0c\u51c6\u786e\u7387\u53ef\u80fd\u5177\u6709\u8bef\u5bfc\u6027\u3002</li> <li>\u4f8b\u5982\uff0c95% \u7684\u6837\u672c\u662f\u8d1f\u4f8b\uff0c\u53ea\u8981\u6a21\u578b\u5168\u9884\u6d4b\u8d1f\u4f8b\uff0c\u51c6\u786e\u7387\u5c31\u80fd\u8fbe\u5230 95%\uff0c\u4f46\u6a21\u578b\u5176\u5b9e\u6ca1\u6709\u771f\u6b63\u5b66\u5230\u6709\u7528\u7684\u4fe1\u606f\u3002</li> </ul>"},{"location":"machinelearning/ml/evaluate/#5","title":"5\ufe0f\u20e3 \u9002\u7528\u573a\u666f","text":"<ul> <li>\u9002\u5408 \u7c7b\u522b\u5206\u5e03\u5747\u8861 \u7684\u4e8c\u5206\u7c7b\u6216\u591a\u5206\u7c7b\u95ee\u9898\u3002</li> <li>\u4e0d\u9002\u5408\u7c7b\u522b\u6781\u4e0d\u5e73\u8861\u7684\u60c5\u51b5\uff08\u6b64\u65f6\u66f4\u63a8\u8350\u4f7f\u7528 F1-score\u3001AUC-ROC\u3001\u53ec\u56de\u7387\u3001\u7cbe\u786e\u7387\u7b49\u6307\u6807\uff09\u3002</li> </ul>"},{"location":"machinelearning/ml/evaluate/#_5","title":"\u4e8c\u3001\u7cbe\u786e\u7387\u4e0e\u53ec\u56de\u7387","text":""},{"location":"machinelearning/ml/evaluate/#1-precision","title":"1\ufe0f\u20e3 \u7cbe\u786e\u7387\uff08Precision\uff09","text":"<p>\u7cbe\u786e\u7387\u8861\u91cf\u7684\u662f\uff1a\u5728\u6240\u6709\u88ab\u6a21\u578b\u9884\u6d4b\u4e3a\u6b63\u4f8b\u7684\u6837\u672c\u4e2d\uff0c\u6709\u591a\u5c11\u662f\u771f\u6b63\u7684\u6b63\u4f8b\u3002</p> <p>\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u5173\u6ce8 \u9884\u6d4b\u4e3a\u6b63\u4f8b\u7684\u6837\u672c\u4e2d\u6709\u591a\u5c11\u662f\u51c6\u786e\u7684\u3002</p> \\[ \\text{Precision} = \\frac{TP}{TP + FP} \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>TP\uff08True Positive\uff09\uff1a\u771f\u6b63\u4f8b\uff0c\u9884\u6d4b\u4e3a\u6b63\u4f8b\u4e14\u771f\u5b9e\u4e5f\u662f\u6b63\u4f8b\u3002</li> <li>FP\uff08False Positive\uff09\uff1a\u5047\u9633\u6027\uff0c\u9884\u6d4b\u4e3a\u6b63\u4f8b\u4f46\u771f\u5b9e\u662f\u8d1f\u4f8b\u3002</li> </ul>"},{"location":"machinelearning/ml/evaluate/#2-recall","title":"2\ufe0f\u20e3 \u53ec\u56de\u7387\uff08Recall\uff09","text":"<p>\u53ec\u56de\u7387\u8861\u91cf\u7684\u662f\uff1a \u5728\u6240\u6709\u771f\u5b9e\u6b63\u4f8b\u7684\u6837\u672c\u4e2d\uff0c\u6709\u591a\u5c11\u88ab\u6a21\u578b\u6210\u529f\u9884\u6d4b\u4e3a\u6b63\u4f8b\u3002</p> <p>\u5b83\u5173\u6ce8 \u6a21\u578b\u6355\u83b7\u6b63\u4f8b\u7684\u80fd\u529b\u3002</p> \\[ \\text{Recall} = \\frac{TP}{TP + FN} \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>FN\uff08False Negative\uff09\uff1a\u5047\u9634\u6027\uff0c\u771f\u5b9e\u4e3a\u6b63\u4f8b\u4f46\u88ab\u9884\u6d4b\u4e3a\u8d1f\u4f8b\u3002</li> </ul>"},{"location":"machinelearning/ml/evaluate/#3","title":"3\ufe0f\u20e3 \u4ee3\u7801\u5b9e\u73b0","text":"<p>\u4f7f\u7528 scikit-learn \u4e2d\u7684 precision_score \u548c recall_score\uff1a</p> <pre><code>from sklearn.metrics import precision_score, recall_score\n\n# \u5047\u8bbe\u771f\u5b9e\u6807\u7b7e\u548c\u9884\u6d4b\u6807\u7b7e\ny_true = [1, 0, 1, 1, 0, 1, 0]\ny_pred = [1, 0, 1, 0, 0, 1, 1]\n\n# \u8ba1\u7b97\u7cbe\u786e\u7387\nprecision = precision_score(y_true, y_pred)\nprint(\"\u7cbe\u786e\u7387\uff1a\", precision)\n\n# \u8ba1\u7b97\u53ec\u56de\u7387\nrecall = recall_score(y_true, y_pred)\nprint(\"\u53ec\u56de\u7387\uff1a\", recall)\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c</p> <p>\u7cbe\u786e\u7387\uff1a0.75 \u53ec\u56de\u7387\uff1a0.6</p>"},{"location":"machinelearning/ml/evaluate/#4_1","title":"4\ufe0f\u20e3 \u4e8c\u8005\u5173\u7cfb\u4e0e\u6743\u8861","text":"<ul> <li>\u7cbe\u786e\u7387\u9ad8\uff1a\u9884\u6d4b\u4e3a\u6b63\u4f8b\u65f6\uff0c\u66f4\u6709\u628a\u63e1\u662f\u771f\u7684\u6b63\u4f8b\uff08\u8bef\u62a5\u5c11\uff09\u3002</li> <li>\u53ec\u56de\u7387\u9ad8\uff1a\u80fd\u627e\u5230\u66f4\u591a\u7684\u771f\u5b9e\u6b63\u4f8b\uff08\u6f0f\u62a5\u5c11\uff09\u3002</li> </ul> <p>\u4f46\u662f\uff0c\u4e8c\u8005\u901a\u5e38\u662f\u4e00\u5bf9\u201c\u8df7\u8df7\u677f\u201d\uff1a</p> <p>\u5982\u679c\u4f60\u60f3\u63d0\u9ad8\u53ec\u56de\u7387\uff0c\u901a\u5e38\u9700\u8981\u8ba9\u6a21\u578b\u66f4\u201c\u5bbd\u677e\u201d\uff0c\u591a\u9884\u6d4b\u6b63\u4f8b\uff0c\u53ef\u80fd\u4f1a\u5f15\u5165\u66f4\u591a\u7684\u5047\u9633\u6027\uff0c\u5bfc\u81f4\u7cbe\u786e\u7387\u4e0b\u964d\uff1b\u53cd\u4e4b\uff0c\u82e5\u63d0\u9ad8\u7cbe\u786e\u7387\uff0c\u53ec\u56de\u7387\u53ef\u80fd\u4e0b\u964d\u3002</p>"},{"location":"machinelearning/ml/evaluate/#5_1","title":"5\ufe0f\u20e3 \u9002\u7528\u573a\u666f","text":"\u573a\u666f \u66f4\u770b\u91cd \u89e3\u91ca \u5783\u573e\u90ae\u4ef6\u68c0\u6d4b \u7cbe\u786e\u7387 \u4e0d\u5e0c\u671b\u6b63\u5e38\u90ae\u4ef6\u88ab\u8bef\u5224\u4e3a\u5783\u573e\u90ae\u4ef6\u3002 \u764c\u75c7\u7b5b\u67e5 \u53ec\u56de\u7387 \u5c3d\u53ef\u80fd\u53d1\u73b0\u6240\u6709\u7684\u764c\u75c7\u60a3\u8005\uff08\u4e0d\u6015\u8bef\u62a5\uff0c\u4f46\u6015\u6f0f\u62a5\uff09\u3002 \u6b3a\u8bc8\u68c0\u6d4b \u53ec\u56de\u7387 \u4e0d\u60f3\u6f0f\u6389\u4efb\u4f55\u6f5c\u5728\u7684\u6b3a\u8bc8\u884c\u4e3a\uff0c\u5b81\u53ef\u591a\u6293\u4e00\u4e9b\u53ef\u7591\u4ea4\u6613\u3002 \u5e7f\u544a\u70b9\u51fb\u9884\u6d4b \u7cbe\u786e\u7387 \u4e0d\u5e0c\u671b\u628a\u4e0d\u76f8\u5173\u7684\u5e7f\u544a\u63a8\u9001\u7ed9\u7528\u6237\u3002"},{"location":"machinelearning/ml/evaluate/#6-f1-score","title":"6\ufe0f\u20e3 F1-score\uff1a\u7efc\u5408\u6307\u6807","text":"<p>F1-score \u662f \u7cbe\u786e\u7387\uff08Precision\uff09\u548c\u53ec\u56de\u7387\uff08Recall\uff09 \u7684\u8c03\u548c\u5e73\u5747\u6570\uff0c\u662f\u4e00\u4e2a\u7efc\u5408\u8003\u8651\u5206\u7c7b\u6a21\u578b\u6027\u80fd\u7684\u6307\u6807\uff0c\u5c24\u5176\u9002\u5408\uff1a</p> <ul> <li>\u6837\u672c\u4e0d\u5e73\u8861\uff08\u5982\u75be\u75c5\u9884\u6d4b\u3001\u6b3a\u8bc8\u68c0\u6d4b\uff09</li> <li>\u65e2\u4e0d\u80fd\u6f0f\u6389\u771f\u9633\u6027\uff08\u9ad8 Recall\uff09\uff0c\u4e5f\u4e0d\u80fd\u8bef\u62a5\u592a\u591a\uff08\u9ad8 Precision\uff09\u7684\u4efb\u52a1</li> </ul> <p>\u5f53\u4f60\u60f3\u8981\u5e73\u8861 \u7cbe\u786e\u7387 \u548c \u53ec\u56de\u7387 \u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 F1-score\uff1a</p> \\[ \\text{F1} = 2 \\times \\frac{\\text{Precision} \\times \\text{Recall}}{\\text{Precision} + \\text{Recall}} \\] <p>\u5b83\u662f\u5b83\u4eec\u7684\u8c03\u548c\u5e73\u5747\u6570\u3002 \u5e38\u7528\u4e8e\u4e8c\u8005\u90fd\u91cd\u8981\u7684\u573a\u666f\u3002</p> <p>F1-score \u662f\u5728 Precision \u548c Recall \u5b58\u5728\u77db\u76fe\u65f6\uff0c\u7528\u4e8e\u6743\u8861\u8fd9\u4e24\u4e2a\u6307\u6807\uff0c\u7279\u522b\u9002\u5408\u6837\u672c\u4e0d\u5e73\u8861\u5206\u7c7b\u4efb\u52a1\u7684\u91cd\u8981\u8bc4\u4f30\u6307\u6807\u3002</p>"},{"location":"machinelearning/ml/evaluate/#7","title":"7\ufe0f\u20e3 \u6df7\u6dc6\u77e9\u9635\u4e2d\u7684\u76f4\u89c2\u7406\u89e3","text":"\u7b26\u53f7 \u542b\u4e49 \u4e3e\u4f8b\uff08\u80bf\u7624\u68c0\u6d4b\uff09 TP \u771f\u9633\u6027\uff1a\u6b63\u7c7b\u88ab\u6b63\u786e\u9884\u6d4b\u4e3a\u6b63\u7c7b \u68c0\u6d4b\u51fa\u60a3\u75c5\u8005\u786e\u5b9e\u60a3\u75c5 FP \u5047\u9633\u6027\uff1a\u8d1f\u7c7b\u88ab\u9519\u8bef\u9884\u6d4b\u4e3a\u6b63\u7c7b \u68c0\u6d4b\u51fa\u60a3\u75c5\u8005\u5b9e\u9645\u6ca1\u75c5\uff08\u8bef\u5224\uff09 FN \u5047\u9634\u6027\uff1a\u6b63\u7c7b\u88ab\u9519\u8bef\u9884\u6d4b\u4e3a\u8d1f\u7c7b \u6ca1\u68c0\u6d4b\u51fa\u60a3\u75c5\u8005\u5176\u5b9e\u6709\u75c5\uff08\u6f0f\u5224\uff09 TN \u771f\u9634\u6027\uff1a\u8d1f\u7c7b\u88ab\u6b63\u786e\u9884\u6d4b\u4e3a\u8d1f\u7c7b \u6b63\u5e38\u4eba\u88ab\u6b63\u786e\u8bc6\u522b\u4e3a\u6b63\u5e38 <p>\u57fa\u4e8e\u6df7\u6dc6\u77e9\u9635\uff1a</p> \u9884\u6d4b\u6b63\u4f8b (P') \u9884\u6d4b\u8d1f\u4f8b (N') \u771f\u5b9e\u6b63\u4f8b (P) TP FN \u771f\u5b9e\u8d1f\u4f8b (N) FP TN <ul> <li>\u7cbe\u786e\u7387\uff1a\u770b \u9884\u6d4b\u6b63\u4f8b\u90a3\u4e00\u5217 \u2192 <code>TP / (TP + FP)</code></li> <li>\u53ec\u56de\u7387\uff1a\u770b \u771f\u5b9e\u6b63\u4f8b\u90a3\u4e00\u884c \u2192 <code>TP / (TP + FN)</code></li> </ul> \u6307\u6807 \u516c\u5f0f \u610f\u4e49\u8bf4\u660e Accuracy \u51c6\u786e\u7387 \\( \\frac{TP + TN}{TP + FP + FN + TN} \\) \u603b\u4f53\u9884\u6d4b\u6b63\u786e\u7684\u6bd4\u4f8b Precision \u7cbe\u786e\u7387 \\( \\frac{TP}{TP + FP} \\) \u9884\u6d4b\u4e3a\u6b63\u4e2d\u6709\u591a\u5c11\u662f\u771f\u6b63\u7684\u6b63 Recall \u53ec\u56de\u7387 \\( \\frac{TP}{TP + FN} \\) \u5b9e\u9645\u4e3a\u6b63\u4e2d\u88ab\u9884\u6d4b\u51fa\u6765\u7684\u6bd4\u4f8b F1-score \\( 2 \\cdot \\frac{Precision \\cdot Recall}{Precision + Recall} \\) \u7cbe\u786e\u7387\u4e0e\u53ec\u56de\u7387\u7684\u5e73\u8861"},{"location":"machinelearning/ml/evaluate/#8-p-r","title":"8\ufe0f\u20e3 P-R \u66f2\u7ebf","text":"<p>P-R \u66f2\u7ebf\uff08Precision-Recall Curve\uff09\uff0c\u4e2d\u6587\u53eb \u7cbe\u786e\u7387-\u53ec\u56de\u7387\u66f2\u7ebf\uff0c\u662f\u7528\u6765\u53ef\u89c6\u5316\u548c\u8bc4\u4ef7\u4e8c\u5206\u7c7b\u6a21\u578b\u6027\u80fd\u7684\u66f2\u7ebf\u3002</p> <p>\u6a2a\u8f74\u662f\uff1a\u53ec\u56de\u7387\uff08Recall\uff09\u4e5f\u53eb\u7075\u654f\u5ea6\uff0c\u8868\u793a\u5728\u6240\u6709\u771f\u6b63\u4f8b\u4e2d\uff0c\u6a21\u578b\u627e\u56de\u7684\u6bd4\u4f8b\u3002</p> <p>\u7eb5\u8f74\u662f\uff1a\u7cbe\u786e\u7387\uff08Precision\uff09\uff1a\u4e5f\u53eb\u67e5\u51c6\u7387\uff0c\u8868\u793a\u6a21\u578b\u9884\u6d4b\u4e3a\u6b63\u4f8b\u4e2d\uff0c\u771f\u6b63\u4f8b\u7684\u6bd4\u4f8b\u3002</p>"},{"location":"machinelearning/ml/evaluate/#p-r","title":"\ud83d\udfe9 P-R \u66f2\u7ebf\u7684\u7ed8\u5236","text":"<p>\u5bf9\u4e8e\u4e8c\u5206\u7c7b\u6a21\u578b\uff08\u6bd4\u5982\u903b\u8f91\u56de\u5f52\u3001\u968f\u673a\u68ee\u6797\u7b49\uff09\uff0c\u6a21\u578b\u901a\u5e38\u4f1a\u8f93\u51fa\u4e00\u4e2a \u6982\u7387\u5206\u6570\uff0c\u8868\u793a\u6837\u672c\u5c5e\u4e8e\u6b63\u7c7b\u7684\u53ef\u80fd\u6027\u3002\u901a\u8fc7\u4e0d\u540c\u7684 \u9608\u503c\uff0c\u628a\u8fd9\u4e2a\u5206\u6570\u8f6c\u6362\u6210\u5177\u4f53\u7684\u300c\u6b63\u7c7b/\u8d1f\u7c7b\u300d\u6807\u7b7e\u3002</p> <p>\u6b65\u9aa4\uff1a</p> <p>1\ufe0f\u20e3 \u4ece\u6700\u9ad8\u5206\u6570\u5230\u6700\u4f4e\u5206\u6570\uff0c\u4f9d\u6b21\u9009\u53d6\u4e0d\u540c\u7684\u9608\u503c\u3002</p> <p>2\ufe0f\u20e3 \u5bf9\u4e8e\u6bcf\u4e2a\u9608\u503c\uff0c\u8ba1\u7b97\u5bf9\u5e94\u7684 Precision \u548c Recall\u3002</p> <p>3\ufe0f\u20e3 \u628a\u6bcf\u4e00\u5bf9 (Recall, Precision) \u4f5c\u4e3a\u4e00\u4e2a\u5750\u6807\u70b9\uff0c\u4f9d\u6b21\u8fde\u63a5\uff0c\u5c31\u5f97\u5230\u4e86 P-R \u66f2\u7ebf\u3002</p>"},{"location":"machinelearning/ml/evaluate/#p-r_1","title":"\ud83d\udfe9 P-R \u66f2\u7ebf\u7684\u610f\u4e49","text":"<ul> <li>\u53ec\u56de\u7387\u9ad8\uff1a\u6a21\u578b\u80fd\u8bc6\u522b\u66f4\u591a\u6b63\u4f8b\uff0c\u5047\u9633\u6027\u98ce\u9669\u9ad8\u3002</li> <li>\u7cbe\u786e\u7387\u9ad8\uff1a\u6a21\u578b\u9884\u6d4b\u66f4\u51c6\u786e\uff0c\u5047\u9634\u6027\u98ce\u9669\u9ad8\u3002</li> <li>\u4e8c\u8005\u5f80\u5f80\u4e92\u76f8\u5236\u7ea6\uff0cP-R \u66f2\u7ebf\u53ef\u4ee5\u5168\u9762\u53cd\u6620\u8fd9\u4e2a\u6743\u8861\u5173\u7cfb\u3002</li> </ul>"},{"location":"machinelearning/ml/evaluate/#_6","title":"\ud83d\udfe9 \u4ee3\u7801\u5b9e\u73b0","text":"<pre><code>import numpy as np\nfrom sklearn.datasets import make_classification\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import precision_recall_curve, average_precision_score\nimport matplotlib.pyplot as plt\n\nplt.rcParams[\"font.family\"] = \"Songti SC\"\n\n# 1\ufe0f\u20e3 \u751f\u6210\u4e8c\u5206\u7c7b\u6a21\u62df\u6570\u636e\nX, y = make_classification(n_samples=1000, n_features=20, n_classes=2,\n                           n_informative=2, weights=[0.9, 0.1], random_state=42)\n\n# 2\ufe0f\u20e3 \u5212\u5206\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.3, random_state=42, stratify=y\n)\n\n# 3\ufe0f\u20e3 \u4f7f\u7528\u968f\u673a\u68ee\u6797\u8fdb\u884c\u8bad\u7ec3\nclf = RandomForestClassifier(n_estimators=100, random_state=42)\nclf.fit(X_train, y_train)\n\n# 4\ufe0f\u20e3 \u5f97\u5230\u9884\u6d4b\u6982\u7387\ny_scores = clf.predict_proba(X_test)[:, 1]  # \u53ea\u8981\u6b63\u7c7b\u7684\u6982\u7387\u5206\u6570\n\n# 5\ufe0f\u20e3 \u8ba1\u7b97 Precision-Recall \u66f2\u7ebf\nprecision, recall, thresholds = precision_recall_curve(y_test, y_scores)\n\n# 6\ufe0f\u20e3 \u8ba1\u7b97 Average Precision (AP)\nap_score = average_precision_score(y_test, y_scores)\n\n# 7\ufe0f\u20e3 \u7ed8\u5236 P-R \u66f2\u7ebf\nplt.figure(figsize=(8, 6))\nplt.plot(recall, precision, color='b', lw=2, label=f'P-R\u66f2\u7ebf (AP={ap_score:.2f})')\nplt.fill_between(recall, precision, alpha=0.2, color='b')\nplt.xlabel('Recall (\u53ec\u56de\u7387)')\nplt.ylabel('Precision (\u7cbe\u786e\u7387)')\nplt.title('P-R \u66f2\u7ebf\u793a\u4f8b')\nplt.legend()\nplt.grid(True)\nplt.show()\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c</p> <p></p>"},{"location":"machinelearning/ml/evaluate/#roc","title":"\u4e09\u3001ROC\u66f2\u7ebf","text":"<p>ROC \u66f2\u7ebf\u662f\u4e8c\u5206\u7c7b\u6a21\u578b\u8bc4\u4f30\u7684\u91cd\u8981\u53ef\u89c6\u5316\u5de5\u5177\u3002</p> <p>\u6a2a\u8f74\uff1a\u5047\u9633\u6027\u7387\uff08FPR, False Positive Rate\uff09\\(\\text{FPR} = \\frac{FP}{FP + TN}\\)  \u8868\u793a\u8d1f\u4f8b\u88ab\u8bef\u5224\u4e3a\u6b63\u4f8b\u7684\u6bd4\u4f8b\u3002</p> <p>\u7eb5\u8f74\uff1a\u771f\u6b63\u4f8b\u7387\uff08TPR, True Positive Rate\uff0c\u4e5f\u53eb Recall\uff09\\(\\text{TPR} = \\frac{TP}{TP + FN}\\)  \u8868\u793a\u6b63\u4f8b\u88ab\u6b63\u786e\u9884\u6d4b\u7684\u6bd4\u4f8b\u3002</p>"},{"location":"machinelearning/ml/evaluate/#roc_1","title":"\ud83d\udfe2 \u4e3a\u4ec0\u4e48\u7528 ROC \u66f2\u7ebf\uff1f","text":"<p>ROC \u66f2\u7ebf\u7528\u4e8e\u89c2\u5bdf\u6a21\u578b\u5728\u4e0d\u540c\u9608\u503c\u4e0b\u7684\u8868\u73b0\u3002 \u9608\u503c\uff1a\u628a\u6982\u7387\u5206\u6570\u8f6c\u6210\u300c\u6b63/\u8d1f\u300d\u6807\u7b7e\u7684\u5206\u754c\u7ebf\u3002</p> <p>\u968f\u7740\u9608\u503c\u4ece 1 \u27a1 0\uff0cFPR\u3001TPR \u90fd\u4f1a\u53d8\u5316\uff0c\u8fde\u6210\u4e00\u6761\u66f2\u7ebf\uff0c\u5c31\u5f97\u5230\u4e86 ROC \u66f2\u7ebf\u3002</p>"},{"location":"machinelearning/ml/evaluate/#roc_2","title":"\ud83d\udfe9 \u5982\u4f55\u7ed8\u5236 ROC \u66f2\u7ebf\uff1f","text":"<p>1\ufe0f\u20e3 \u6a21\u578b\u8f93\u51fa\u6982\u7387\u5206\u6570\uff08\u6b63\u4f8b\u5206\u6570\uff09\u3002</p> <p>2\ufe0f\u20e3 \u53d6\u4e0d\u540c\u7684\u9608\u503c\uff0c\u8ba1\u7b97 TPR \u548c FPR\u3002</p> <p>3\ufe0f\u20e3 \u5c06\u6240\u6709 (FPR, TPR) \u753b\u5728\u5750\u6807\u7cfb\u4e2d\uff0c\u8fde\u63a5\u8d77\u6765\u3002</p>"},{"location":"machinelearning/ml/evaluate/#_7","title":"\ud83d\udfe9 \u7406\u60f3\u60c5\u51b5 &amp; \u968f\u673a\u60c5\u51b5","text":"<ul> <li>\u7406\u60f3\u6a21\u578b\uff1aTPR \u5feb\u901f\u4e0a\u5347\uff0c\u66f2\u7ebf\u975e\u5e38\u9760\u8fd1\u5de6\u4e0a\u89d2\uff080,1\uff09\u70b9\u3002</li> <li>\u968f\u673a\u6a21\u578b\uff1aTPR \u4e0e FPR \u76f8\u7b49\uff0c\u66f2\u7ebf\u63a5\u8fd1\u5bf9\u89d2\u7ebf\uff08y=x\uff09\u3002</li> </ul>"},{"location":"machinelearning/ml/evaluate/#roc-auc","title":"\ud83d\udfe9 ROC \u66f2\u7ebf\u4e0b\u9762\u79ef\uff08AUC\uff09","text":"<p>ROC \u66f2\u7ebf\u7684\u9762\u79ef\u79f0\u4e3a AUC\uff08Area Under Curve\uff09\u3002</p> <ul> <li>AUC = 1\uff1a\u5b8c\u7f8e\u6a21\u578b\u3002</li> <li>AUC = 0.5\uff1a\u968f\u673a\u731c\u6d4b\u3002</li> <li>AUC \u8d8a\u63a5\u8fd1 1\uff0c\u6a21\u578b\u8d8a\u597d\u3002</li> </ul>"},{"location":"machinelearning/ml/evaluate/#p-r-vs-roc","title":"P-R vs ROC\uff1a\u573a\u666f\u5bf9\u6bd4\u603b\u7ed3\u8868","text":"\u573a\u666f\u6216\u5c5e\u6027 ROC \u66f2\u7ebf P-R \u66f2\u7ebf \u6570\u636e\u662f\u5426\u5e73\u8861 \u9002\u7528\u4e8e\u6837\u672c\u5e73\u8861 \u66f4\u9002\u7528\u4e8e\u6837\u672c\u4e0d\u5e73\u8861\uff08\u6b63\u7c7b\u7a00\u7f3a\uff09 \u662f\u5426\u5173\u6ce8\u8d1f\u7c7b\u9884\u6d4b \u662f \u5426\uff08\u53ea\u5173\u5fc3\u6b63\u7c7b\u9884\u6d4b\u60c5\u51b5\uff09 \u6a21\u578b\u8868\u73b0\u662f\u5426\u4f1a\u88ab\u8d1f\u7c7b\u5f71\u54cd \u4f1a \u4e0d\u4f1a \u968f\u673a\u6a21\u578b\u8868\u73b0 \u5bf9\u89d2\u7ebf AUC=0.5 Precision \u7ebf\u662f\u4e00\u4e2a\u5e38\u6570 \u9ad8 FP \u6a21\u578b\u770b\u8d77\u6765\u600e\u4e48\u6837 \u53ef\u80fd\u4ecd\u6709\u9ad8 AUC\uff08\u8bef\u5bfc\u6027\u9ad8\uff09 \u4f1a\u5bfc\u81f4 Precision \u4e0b\u964d\uff0c\u771f\u5b9e\u53cd\u6620\u6a21\u578b\u80fd\u529b \u53ef\u89e3\u91ca\u6027 \u6574\u4f53\u8868\u73b0 \u5173\u6ce8\u201c\u6b63\u7c7b\u201d\u7684\u8868\u73b0\uff0c\u66f4\u63a5\u8fd1\u5b9e\u9645\u4e1a\u52a1\u9700\u6c42"},{"location":"machinelearning/ml/evaluate/#python-roc","title":"\ud83d\udfe2 Python \u7ed8\u5236 ROC \u66f2\u7ebf\u5b8c\u6574\u793a\u4f8b","text":"<pre><code>import numpy as np\nfrom sklearn.datasets import make_classification\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import roc_curve, auc\nimport matplotlib.pyplot as plt\n\n# 1\ufe0f\u20e3 \u751f\u6210\u4e8c\u5206\u7c7b\u4e0d\u5e73\u8861\u6570\u636e\nX, y = make_classification(n_samples=1000, n_classes=2, weights=[0.9, 0.1],\n                           n_informative=2, n_features=20, random_state=42)\n\n# 2\ufe0f\u20e3 \u5212\u5206\u6570\u636e\u96c6\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.3, random_state=42, stratify=y\n)\n\n# 3\ufe0f\u20e3 \u8bad\u7ec3\u6a21\u578b\nclf = RandomForestClassifier(n_estimators=100, random_state=42)\nclf.fit(X_train, y_train)\n\n# 4\ufe0f\u20e3 \u83b7\u53d6\u9884\u6d4b\u6982\u7387\ny_scores = clf.predict_proba(X_test)[:, 1]\n\n# 5\ufe0f\u20e3 \u8ba1\u7b97 ROC \u66f2\u7ebf\nfpr, tpr, thresholds = roc_curve(y_test, y_scores)\nroc_auc = auc(fpr, tpr)\n\n# 6\ufe0f\u20e3 \u7ed8\u56fe\nplt.figure(figsize=(8, 6))\nplt.plot(fpr, tpr, color='b', lw=2, label=f'ROC \u66f2\u7ebf (AUC={roc_auc:.2f})')\nplt.plot([0, 1], [0, 1], color='gray', linestyle='--', lw=2, label='\u968f\u673a\u731c\u6d4b')\nplt.xlabel('\u5047\u9633\u6027\u7387 (FPR)')\nplt.ylabel('\u771f\u6b63\u4f8b\u7387 (TPR, Recall)')\nplt.title('ROC \u66f2\u7ebf\u793a\u4f8b')\nplt.legend(loc='lower right')\nplt.grid(True)\nplt.show()\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c</p> <p></p>"},{"location":"machinelearning/ml/evaluate/#_8","title":"\u56db\u3001\u4f59\u5f26\u8ddd\u79bb","text":""},{"location":"machinelearning/ml/evaluate/#1","title":"1\ufe0f\u20e3 \u57fa\u672c\u6982\u5ff5","text":""},{"location":"machinelearning/ml/evaluate/#cosine-similarity","title":"\u4f59\u5f26\u76f8\u4f3c\u5ea6\uff08cosine similarity\uff09","text":"<p>\u8861\u91cf\u4e24\u4e2a\u5411\u91cf\u5728\u5411\u91cf\u7a7a\u95f4\u4e2d\u7684 \u65b9\u5411\u76f8\u4f3c\u5ea6\uff0c\u4e0e\u5411\u91cf\u7684\u5927\u5c0f\u65e0\u5173\u3002</p> <p>\u53d6\u503c\u8303\u56f4\uff1a[-1, 1]\uff0c\u5176\u4e2d\uff1a</p> <ul> <li>1 \u2192 \u5b8c\u5168\u76f8\u540c\u65b9\u5411\uff08\u6700\u76f8\u4f3c\uff09</li> <li>0 \u2192 \u5782\u76f4\uff08\u5b8c\u5168\u65e0\u5173\uff09</li> <li>-1 \u2192 \u5b8c\u5168\u76f8\u53cd\u65b9\u5411</li> </ul>"},{"location":"machinelearning/ml/evaluate/#cosine-distance","title":"\u4f59\u5f26\u8ddd\u79bb\uff08cosine distance\uff09","text":"<p>\u662f\u4f59\u5f26\u76f8\u4f3c\u5ea6\u7684\u201c\u4e92\u8865\u8ddd\u79bb\u201d\uff1a \\(\\text{cosine distance} = 1 - \\text{cosine similarity}\\)</p>"},{"location":"machinelearning/ml/evaluate/#2_1","title":"2\ufe0f\u20e3 \u516c\u5f0f","text":"<p>\u5047\u8bbe\u6709\u4e24\u4e2a\u5411\u91cf\uff1a</p> <p>\\(\\mathbf{A} = (A_1, A_2, \\ldots, A_n), \\quad \\mathbf{B} = (B_1, B_2, \\ldots, B_n)\\)</p> <p>\u4f59\u5f26\u76f8\u4f3c\u5ea6\u516c\u5f0f</p> <p>\\(\\text{cosine similarity} = \\frac{\\mathbf{A} \\cdot \\mathbf{B}}{\\|\\mathbf{A}\\| \\|\\mathbf{B}\\|} = \\frac{\\sum_{i=1}^n A_i B_i}{\\sqrt{\\sum_{i=1}^n A_i^2} \\sqrt{\\sum_{i=1}^n B_i^2}}\\)</p> <p>\u4f59\u5f26\u8ddd\u79bb\u516c\u5f0f</p> <p>\\(\\text{cosine distance} = 1 - \\text{cosine similarity}\\)</p>"},{"location":"machinelearning/ml/evaluate/#3-python_1","title":"3\ufe0f\u20e3 Python \u4ee3\u7801\u793a\u4f8b","text":"<pre><code>import numpy as np\nfrom sklearn.metrics.pairwise import cosine_similarity\n\n# \u4e24\u4e2a\u5411\u91cf\nA = np.array([1, 2, 3])\nB = np.array([4, 5, 6])\n\n# \u8ba1\u7b97\u4f59\u5f26\u76f8\u4f3c\u5ea6\ncos_sim = cosine_similarity([A], [B])[0][0]\nprint(\"\u4f59\u5f26\u76f8\u4f3c\u5ea6:\", cos_sim)\n\n# \u8ba1\u7b97\u4f59\u5f26\u8ddd\u79bb\ncos_dist = 1 - cos_sim\nprint(\"\u4f59\u5f26\u8ddd\u79bb:\", cos_dist)\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c</p> <p>\u4f59\u5f26\u76f8\u4f3c\u5ea6: 0.9746318461970762</p> <p>\u4f59\u5f26\u8ddd\u79bb: 0.025368153802923788</p>"},{"location":"machinelearning/ml/evaluate/#4_2","title":"4\ufe0f\u20e3 \u4e0e\u6b27\u6c0f\u8ddd\u79bb\u7684\u533a\u522b","text":"\u6bd4\u8f83\u7ef4\u5ea6 \u6b27\u6c0f\u8ddd\u79bb \u4f59\u5f26\u8ddd\u79bb\uff08\u76f8\u4f3c\u5ea6\uff09 \u5173\u6ce8\u91cd\u70b9 \u5411\u91cf\u7684 \u957f\u5ea6 + \u65b9\u5411 \u53ea\u5173\u6ce8 \u65b9\u5411\uff08\u5939\u89d2\uff09 \u662f\u5426\u53d7\u91cf\u7eb2\u5f71\u54cd \u662f\uff0c\u7279\u5f81\u91cf\u7eb2\u5dee\u5f02\u5927\u65f6\u5fc5\u987b\u5f52\u4e00\u5316\u5904\u7406 \u5426\uff0c\u5185\u7f6e\u5f52\u4e00\u5316\uff0c\u81ea\u52a8\u5ffd\u7565\u5927\u5c0f\uff0c\u4ec5\u770b\u65b9\u5411 \u9002\u7528\u573a\u666f KNN\u3001K-Means\u3001\u56de\u5f52\u5206\u6790\u7b49 \u6587\u672c\u76f8\u4f3c\u5ea6\u3001\u56fe\u50cf\u76f8\u4f3c\u5ea6\u3001\u63a8\u8350\u7cfb\u7edf\u3001\u5411\u91cf\u68c0\u7d22\u7b49 \u5e38\u7528\u516c\u5f0f \\(\\sqrt{\\sum (A_i - B_i)^2}\\) \\(1 - \\frac{A \\cdot B}{\\|A\\|\\|B\\|}\\) \u662f\u5426\u4e0e\u5411\u91cf\u957f\u5ea6\u6709\u5173 \u6709\uff0c\u5411\u91cf\u957f\u5ea6\u8d8a\u5927\u8ddd\u79bb\u8d8a\u5927 \u65e0\uff0c\u53ea\u4e0e\u65b9\u5411\u6709\u5173 \u7ed3\u679c\u8303\u56f4 \\([0, +\\infty)\\)\uff0c\u8d8a\u5c0f\u8d8a\u76f8\u4f3c \\([0, 1]\\)\uff0c\u8d8a\u5c0f\u8d8a\u76f8\u4f3c\uff080 \u8868\u793a\u65b9\u5411\u5b8c\u5168\u4e00\u81f4\uff09"},{"location":"machinelearning/ml/evaluate/#5_2","title":"5\ufe0f\u20e3 \u5e94\u7528\u573a\u666f","text":"<p>\u2705 \u6587\u672c\u5206\u6790\uff08TF-IDF / Word2Vec / BERT \u7b49\u5411\u91cf\u5316\u7ed3\u679c\uff09</p> <p>\u2705 \u56fe\u50cf\u68c0\u7d22 / \u5411\u91cf\u641c\u7d22\uff08\u76f8\u4f3c\u5ea6\u5ea6\u91cf\uff09</p> <p>\u2705 \u63a8\u8350\u7cfb\u7edf\uff08\u7528\u6237\u5174\u8da3\u5411\u91cf\u3001\u7269\u54c1\u7279\u5f81\u5411\u91cf\uff09</p> <p>\u2705 \u4efb\u4f55\u53ea\u5173\u5fc3\u201c\u65b9\u5411\u76f8\u4f3c\u5ea6\u201d\u7684\u573a\u666f</p>"},{"location":"machinelearning/ml/evaluate/#_9","title":"\u4e94\u3001\u6a21\u578b\u8bc4\u4f30\u7b56\u7565","text":""},{"location":"machinelearning/ml/evaluate/#_10","title":"\u4e00\u3001\u6a21\u578b\u8bc4\u4f30\u7684\u6574\u4f53\u6d41\u7a0b","text":"<pre><code>\u6570\u636e\u51c6\u5907 \u2192 \u6a21\u578b\u8bad\u7ec3 \u2192 \u6a21\u578b\u8bc4\u4f30 \u2192 \u6a21\u578b\u9009\u62e9/\u8c03\u53c2 \u2192 \u6700\u7ec8\u6d4b\u8bd5\n                          \u2191\n                    \u91cd\u70b9\u5c31\u5728\u8fd9\u91cc\uff01\n</code></pre>"},{"location":"machinelearning/ml/evaluate/#_11","title":"\u4e8c\u3001\u8bc4\u4f30\u7b56\u7565\u6838\u5fc3\u95ee\u9898","text":"<p>\u8981\u89e3\u51b3\u4ee5\u4e0b\u51e0\u4e2a\u6838\u5fc3\u95ee\u9898\uff1a</p> \u8bc4\u4f30\u95ee\u9898 \u793a\u4f8b \u5982\u4f55\u5212\u5206\u8bad\u7ec3/\u9a8c\u8bc1/\u6d4b\u8bd5\u96c6\uff1f Holdout\u3001\u4ea4\u53c9\u9a8c\u8bc1\u3001\u65f6\u95f4\u5e8f\u5217\u5206\u5272 \u7528\u4ec0\u4e48\u6307\u6807\u8861\u91cf\u597d\u574f\uff1f \u5206\u7c7b\uff1a\u51c6\u786e\u7387/F1\uff0c\u56de\u5f52\uff1aMSE\uff0c\u6392\u5e8f\uff1aNDCG \u5982\u4f55\u907f\u514d\u201c\u8fd0\u6c14\u597d\u201d\u7684\u8bc4\u4f30\u7ed3\u679c\uff1f \u591a\u6b21\u8bc4\u4f30\u3001\u4ea4\u53c9\u9a8c\u8bc1\u3001Bootstrap \u5982\u4f55\u6839\u636e\u8bc4\u4f30\u7ed3\u679c\u8c03\u53c2\u9009\u6a21\uff1f \u7f51\u683c\u641c\u7d22\u3001\u8d1d\u53f6\u65af\u4f18\u5316 \u6a21\u578b\u662f\u5426\u771f\u7684\u80fd\u6cdb\u5316\u5230\u7ebf\u4e0a\u5b9e\u9645\u6570\u636e\uff1f \u7559\u51fa\u771f\u5b9e\u7ebf\u4e0a\u6570\u636e\u6a21\u62df A/B \u6d4b\u8bd5"},{"location":"machinelearning/ml/evaluate/#_12","title":"\u4e09\u3001\u6a21\u578b\u8bc4\u4f30\u7b56\u7565\u7c7b\u578b\u8be6\u89e3","text":""},{"location":"machinelearning/ml/evaluate/#1_1","title":"\u2705 1. \u6570\u636e\u5212\u5206\u7b56\u7565","text":"\u7b56\u7565 \u8bf4\u660e Holdout\uff08\u7559\u51fa\u6cd5\uff09 \u4e00\u6b21\u6027\u5212\u5206\uff1a\u8bad\u7ec3 / \u9a8c\u8bc1 / \u6d4b\u8bd5\u96c6 K-Fold \u4ea4\u53c9\u9a8c\u8bc1 \u5c06\u6570\u636e\u5206\u6210 K \u4efd\u8f6e\u6d41\u4f5c\u4e3a\u9a8c\u8bc1\u96c6\uff0c\u5e73\u5747\u5f97\u5206\u66f4\u7a33\u5065 Stratified K-Fold \u4fdd\u6301\u7c7b\u522b\u6bd4\u4f8b\u4e00\u81f4\u7684 K-Fold\uff08\u5206\u7c7b\u4efb\u52a1\u4e2d\u66f4\u51c6\u786e\uff09 Leave-One-Out \u6bcf\u6b21\u53ea\u7559\u4e00\u4e2a\u6837\u672c\u505a\u9a8c\u8bc1\uff0c\u6781\u7aef\u7a33\u5065\u4f46\u8ba1\u7b97\u5f00\u9500\u5927 \u65f6\u95f4\u5e8f\u5217\u5206\u5272 \u65f6\u95f4\u654f\u611f\u4efb\u52a1\uff0c\u8bad\u7ec3\u96c6\u5fc5\u987b\u65e9\u4e8e\u9a8c\u8bc1\u96c6\uff08\u4e0d\u53ef\u6253\u4e71\uff09 Bootstrap \u6709\u653e\u56de\u91c7\u6837\uff0c\u53ef\u53cd\u590d\u6a21\u62df\u8bad\u7ec3/\u8bc4\u4f30\uff0c\u591a\u7528\u4e8e\u5c0f\u6837\u672c\u6216\u96c6\u6210\u6a21\u578b"},{"location":"machinelearning/ml/evaluate/#2_2","title":"\u2705 2. \u8bc4\u4f30\u6307\u6807\u7b56\u7565\uff08\u6309\u4efb\u52a1\u7c7b\u578b\uff09","text":""},{"location":"machinelearning/ml/evaluate/#_13","title":"\ud83d\udccc \u5206\u7c7b\u4efb\u52a1\uff08\u5982\u5783\u573e\u90ae\u4ef6\u8bc6\u522b\u3001\u56fe\u50cf\u5206\u7c7b\uff09","text":"\u6307\u6807 \u542b\u4e49 \u51c6\u786e\u7387 \u6240\u6709\u9884\u6d4b\u6b63\u786e\u6837\u672c\u6570 / \u603b\u6837\u672c\u6570 \u7cbe\u786e\u7387 TP / (TP + FP) \u2014\u2014 \u9884\u6d4b\u4e3a\u6b63\u4e2d\u6709\u591a\u5c11\u662f\u771f\u6b63\u6b63\u4f8b \u53ec\u56de\u7387 TP / (TP + FN) \u2014\u2014 \u6240\u6709\u6b63\u6837\u672c\u4e2d\u9884\u6d4b\u51fa\u6765\u7684\u6bd4\u4f8b F1 \u5206\u6570 \u7cbe\u786e\u7387\u4e0e\u53ec\u56de\u7387\u7684\u8c03\u548c\u5e73\u5747 AUC-ROC \u771f\u9633\u7387 vs \u5047\u9633\u7387\u66f2\u7ebf\u4e0b\u7684\u9762\u79ef PR-AUC \u7cbe\u786e\u7387 vs \u53ec\u56de\u7387\u66f2\u7ebf\u4e0b\u7684\u9762\u79ef\uff08\u66f4\u9002\u5408\u7c7b\u522b\u4e0d\u5e73\u8861\uff09"},{"location":"machinelearning/ml/evaluate/#_14","title":"\ud83d\udccc \u56de\u5f52\u4efb\u52a1\uff08\u5982\u623f\u4ef7\u9884\u6d4b\u3001\u9500\u552e\u989d\u9884\u6d4b\uff09","text":"\u6307\u6807\u540d \u5168\u79f0 \u516c\u5f0f \u7279\u70b9 Python \u51fd\u6570\uff08sklearn.metrics\uff09 MSE \u5747\u65b9\u8bef\u5dee \\(\\frac{1}{n} \\sum (y - \\hat{y})^2\\) \u5bf9\u79bb\u7fa4\u503c\u654f\u611f\uff0c\u5e38\u7528\u4e8e\u4f18\u5316 <code>mean_squared_error</code> RMSE \u5747\u65b9\u6839\u8bef\u5dee \\(\\sqrt{\\text{MSE}}\\) \u5355\u4f4d\u4e0e\u76ee\u6807\u4e00\u81f4\uff0c\u66f4\u76f4\u89c2 \u624b\u52a8 <code>np.sqrt(MSE)</code> MAE \u5e73\u5747\u7edd\u5bf9\u8bef\u5dee \\(\\frac{1}{n} \\sum \\|y - \\hat{y}\\|\\) \u5bf9\u79bb\u7fa4\u503c\u4e0d\u654f\u611f\uff0c\u9c81\u68d2\u6027\u5f3a <code>mean_absolute_error</code> R\u00b2 \u51b3\u5b9a\u7cfb\u6570 \\(1 - \\frac{SSR}{SST}\\) \u8d8a\u63a5\u8fd1 1 \u8d8a\u597d\uff0c\u8861\u91cf\u62df\u5408\u7a0b\u5ea6 <code>r2_score</code> MAPE \u5e73\u5747\u7edd\u5bf9\u767e\u5206\u8bef\u5dee \\(\\frac{1}{n} \\sum \\left\\|\\frac{y - \\hat{y}}{y}\\right \\| \\times 100\\%\\) \u767e\u5206\u6bd4\u8bef\u5dee\uff0c\u6613\u7406\u89e3\u4f46\u5bf9 0 \u654f\u611f \u81ea\u5b9a\u4e49\u5b9e\u73b0 \u6307\u6807 \u89e3\u91ca \u8d8a\u5c0f/\u5927\u8d8a\u597d \u4f18\u70b9 \u7f3a\u70b9 MSE \u5747\u65b9\u8bef\u5dee\uff0c\u8bef\u5dee\u5e73\u65b9\u5e73\u5747 \u8d8a\u5c0f\u8d8a\u597d \u5e38\u7528\u4e8e\u8bad\u7ec3\u4f18\u5316\u76ee\u6807 \u5355\u4f4d\u662f\u5e73\u65b9\uff0c\u89e3\u91ca\u4e0d\u76f4\u89c2 RMSE MSE \u5f00\u65b9\uff0c\u8bef\u5dee\u7684\u771f\u5b9e\u91cf\u7eb2 \u8d8a\u5c0f\u8d8a\u597d \u5355\u4f4d\u4e0e\u539f\u59cb\u4e00\u81f4 \u4ecd\u53d7\u5f02\u5e38\u503c\u5f71\u54cd MAE \u5e73\u5747\u7edd\u5bf9\u8bef\u5dee \u8d8a\u5c0f\u8d8a\u597d \u6613\u89e3\u91ca\uff0c\u9c81\u68d2 \u4e0d\u53ef\u5bfc\uff0c\u4e0d\u9002\u5408\u505a loss R\u00b2 \u89e3\u91ca\u65b9\u5dee\u6bd4\u4f8b \u8d8a\u63a5\u8fd1 1 \u8d8a\u597d \u8868\u793a\u6a21\u578b\u80fd\u89e3\u91ca\u591a\u5c11\u53d8\u5f02\u6027 \u5bf9\u975e\u7ebf\u6027\u6a21\u578b\u610f\u4e49\u8f83\u5f31 MAPE \u767e\u5206\u6bd4\u8bef\u5dee \u8d8a\u5c0f\u8d8a\u597d \u767e\u5206\u6bd4\u6e05\u6670\u76f4\u89c2 \u4e0d\u80fd\u7528\u4e8e\u771f\u5b9e\u503c\u4e3a 0 \u7684\u60c5\u51b5 \u4efb\u52a1\u573a\u666f \u63a8\u8350\u6307\u6807 \u539f\u56e0 \u5bf9\u8bef\u5dee\u654f\u611f MSE / RMSE \u653e\u5927\u5927\u8bef\u5dee \u8981\u6c42\u7a33\u5065\u4e0d\u53d7\u79bb\u7fa4\u503c\u5f71\u54cd MAE \u5bf9\u5f02\u5e38\u503c\u9c81\u68d2 \u5e0c\u671b\u7528\u201c\u89e3\u91ca\u6bd4\u4f8b\u201d\u8861\u91cf\u62df\u5408\u7a0b\u5ea6 R\u00b2 \u8868\u793a\u6a21\u578b\u80fd\u89e3\u91ca\u591a\u5c11\u53d8\u5f02\u6027 \u5546\u4e1a\u573a\u666f\uff0c\u5173\u6ce8\u201c\u76f8\u5bf9\u8bef\u5dee\u201d MAPE \u767e\u5206\u6bd4\u8bef\u5dee\u6e05\u6670\u76f4\u89c2"},{"location":"machinelearning/ml/evaluate/#_15","title":"\ud83d\udccc \u6392\u5e8f/\u63a8\u8350\u7cfb\u7edf\u4efb\u52a1\uff08\u5982\u4e2a\u6027\u5316\u63a8\u8350\uff09","text":"\u6307\u6807 \u542b\u4e49 Precision@K \u524d K \u4e2a\u63a8\u8350\u4e2d\u6709\u591a\u5c11\u662f\u76f8\u5173\u7684\uff08\u7cbe\u786e\u7387\uff09 Recall@K \u6240\u6709\u76f8\u5173\u9879\u4e2d\u524d K \u4e2a\u63a8\u8350\u547d\u4e2d\u4e86\u591a\u5c11\uff08\u53ec\u56de\u7387\uff09 NDCG@K \u5f52\u4e00\u5316\u6298\u635f\u7d2f\u8ba1\u589e\u76ca\uff0c\u8003\u8651\u63a8\u8350\u7ed3\u679c\u7684\u987a\u5e8f\u548c\u76f8\u5173\u6027 MAP@K \u5e73\u5747\u7cbe\u5ea6\uff0c\u9002\u7528\u4e8e\u591a\u8f6e\u63a8\u8350\u7ed3\u679c\u8bc4\u4ef7 Hit Rate@K \u524d K \u4e2a\u4e2d\u662f\u5426\u547d\u4e2d\u81f3\u5c11\u4e00\u4e2a\u76f8\u5173\u9879\uff08\u662f\u5426\u547d\u4e2d\uff09 AUC \u63a8\u8350\u6b63\u4f8b\u5f97\u5206\u9ad8\u4e8e\u8d1f\u4f8b\u7684\u6982\u7387"},{"location":"machinelearning/ml/evaluate/#3_1","title":"\u2705 3. \u591a\u6b21\u8bc4\u4f30\u4e0e\u7f6e\u4fe1\u533a\u95f4\u7b56\u7565","text":"<p>\u4e3a\u4e86\u9632\u6b62\u8bc4\u4f30\u7ed3\u679c\u201c\u8fd0\u6c14\u597d\u201d\uff0c\u53ef\u4f7f\u7528\u4ee5\u4e0b\u7b56\u7565\uff1a</p> <ul> <li>\u91cd\u590d\u4ea4\u53c9\u9a8c\u8bc1\uff1a\u4f8b\u5982 10 \u6b21 5-Fold\uff08\u79f0\u4e3a repeated k-fold CV\uff09</li> <li>Bootstrap \u81ea\u52a9\u6cd5\uff1a\u91cd\u590d\u91c7\u6837 100~1000 \u6b21\u8bc4\u4f30\u7ed3\u679c\uff0c\u7edf\u8ba1\u5e73\u5747\u503c\u548c\u7f6e\u4fe1\u533a\u95f4</li> <li>\u7f6e\u4fe1\u533a\u95f4\u4f30\u8ba1\uff1a</li> </ul> <pre><code>import scipy.stats as st\n\nst.t.interval(0.95, len(scores) - 1, loc=np.mean(scores), scale=st.sem(scores))\n</code></pre>"},{"location":"machinelearning/ml/evaluate/#5_3","title":"\u2705 5. \u7ebf\u4e0a\u8bc4\u4f30\u7b56\u7565","text":""},{"location":"machinelearning/ml/evaluate/#ab","title":"\ud83d\udcca A/B \u6d4b\u8bd5","text":"<ul> <li>\u5c06\u7528\u6237\u5206\u6210\u4e24\u7ec4\uff1a<ul> <li>A\uff1a\u5f53\u524d\u7ebf\u4e0a\u6a21\u578b</li> <li>B\uff1a\u65b0\u6a21\u578b</li> </ul> </li> <li>\u6bd4\u8f83\u771f\u5b9e\u7528\u6237\u884c\u4e3a\uff1aCTR\u3001\u8f6c\u5316\u7387\u3001\u7559\u5b58\u7b49</li> </ul>"},{"location":"machinelearning/ml/evaluate/#shadow-testing","title":"\ud83d\udce6 Shadow Testing\uff08\u5f71\u5b50\u6d4b\u8bd5\uff09","text":"<ul> <li>\u65b0\u6a21\u578b\u4e0e\u65e7\u6a21\u578b\u540c\u65f6\u5728\u7ebf\u8fd0\u884c\uff0c\u65b0\u6a21\u578b\u53ea\u201c\u542c\u4e0d\u8bf4\u201d\u4e0d\u5f71\u54cd\u7ebf\u4e0a</li> <li>\u5bf9\u6bd4\u4e24\u8005\u9884\u6d4b\u5dee\u5f02\uff0c\u63d0\u524d\u9884\u8b66\u90e8\u7f72\u98ce\u9669</li> </ul>"},{"location":"machinelearning/ml/evaluate/#_16","title":"\u2705 \u4e94\u3001\u603b\u7ed3\u56fe\uff1a\u8bc4\u4f30\u7b56\u7565\u9009\u62e9\u5bfc\u56fe","text":"<pre><code>\u2192 \u4efb\u52a1\u7c7b\u578b\uff1f\n   \u251c\u2500\u2500 \u5206\u7c7b\n   \u2502     \u251c\u2500\u2500 \u6837\u672c\u5747\u8861\uff1f\u2014\u2014\u51c6\u786e\u7387 + F1 + ROC\n   \u2502     \u2514\u2500\u2500 \u6837\u672c\u4e0d\u5747\u8861\uff1f\u2014\u2014PR-AUC + Recall + F1\n   \u251c\u2500\u2500 \u56de\u5f52\n   \u2502     \u2514\u2500\u2500 MAE / MSE / R\u00b2\n   \u251c\u2500\u2500 \u6392\u5e8f/\u63a8\u8350\n   \u2502     \u2514\u2500\u2500 NDCG / MAP / Recall@K\n   \u2514\u2500\u2500 \u65f6\u95f4\u5e8f\u5217\n         \u2514\u2500\u2500 TimeSeriesSplit + MAE/MAPE\n\n\u2192 \u6570\u636e\u91cf\u5927\u5c0f\uff1f\n   \u251c\u2500\u2500 \u5c0f\u6837\u672c \u2014\u2014 K-Fold / Bootstrap\n   \u2514\u2500\u2500 \u5927\u6837\u672c \u2014\u2014 Holdout + \u591a\u6b21\u8bc4\u4f30\n\n\u2192 \u662f\u5426\u7ebf\u4e0a\u90e8\u7f72\uff1f\n   \u2514\u2500\u2500 A/B \u6d4b\u8bd5 + \u76d1\u63a7\u65e5\u5fd7\n</code></pre>"},{"location":"machinelearning/ml/evaluate/#_17","title":"\u516d\u3001\u8d85\u53c2\u6570\u8c03\u4f18","text":""},{"location":"machinelearning/ml/evaluate/#_18","title":"\ud83c\udfaf \u4ec0\u4e48\u662f\u8d85\u53c2\u6570\uff1f","text":"<p>\u8d85\u53c2\u6570\u662f\u5728\u6a21\u578b\u8bad\u7ec3\u524d\u9700\u8981\u4eba\u4e3a\u6307\u5b9a\u7684\u53c2\u6570\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>\u5b66\u4e60\u7387 <code>learning_rate</code></li> <li>\u6811\u6df1\u5ea6 <code>max_depth</code></li> <li>\u6b63\u5219\u7cfb\u6570 <code>alpha</code></li> <li>KNN \u7684 <code>k</code> \u503c</li> </ul> <p>\u5b83\u4eec \u4e0d\u4f1a\u901a\u8fc7\u6a21\u578b\u8bad\u7ec3\u8fc7\u7a0b\u81ea\u52a8\u83b7\u5f97\uff0c\u5fc5\u987b\u624b\u52a8\u8bbe\u5b9a\u6216\u901a\u8fc7\u8c03\u53c2\u7b97\u6cd5\u641c\u7d22\u3002</p>"},{"location":"machinelearning/ml/evaluate/#_19","title":"\ud83d\udd0d \u4e3a\u4ec0\u4e48\u8981\u8c03\u4f18\uff1f","text":"<ul> <li>\u540c\u4e00\u4e2a\u6a21\u578b\u5728\u4e0d\u540c\u8d85\u53c2\u6570\u4e0b\u8868\u73b0\u5dee\u5f02\u5de8\u5927</li> <li>\u81ea\u52a8\u8c03\u53c2\u80fd\u8282\u7701\u5927\u91cf\u624b\u5de5\u8bd5\u9519\u6210\u672c</li> <li>\u627e\u5230\u6cdb\u5316\u80fd\u529b\u66f4\u5f3a\u3001\u8fc7\u62df\u5408\u98ce\u9669\u66f4\u5c0f\u7684\u6a21\u578b</li> </ul>"},{"location":"machinelearning/ml/evaluate/#_20","title":"\ud83e\udde0 \u5e38\u89c1\u8c03\u53c2\u65b9\u6cd5","text":"\u65b9\u6cd5 \u7279\u70b9 Grid Search \u7a77\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u7ec4\u5408\uff0c\u8ba1\u7b97\u6210\u672c\u9ad8 Random Search \u968f\u673a\u91c7\u6837\u90e8\u5206\u7ec4\u5408\uff0c\u6548\u679c\u597d\u4e14\u6548\u7387\u9ad8 \u8d1d\u53f6\u65af\u4f18\u5316 \u5229\u7528\u5386\u53f2\u641c\u7d22\u7ed3\u679c\u5efa\u6a21\uff0c\u9884\u6d4b\u4e0b\u4e00\u4e2a\u641c\u7d22\u70b9 Hyperband/ASHA \u652f\u6301\u63d0\u524d\u7ec8\u6b62\u5dee\u6a21\u578b\uff0c\u63d0\u9ad8\u6df1\u5ea6\u5b66\u4e60\u8c03\u53c2\u6548\u7387"},{"location":"machinelearning/ml/evaluate/#1-grid-search","title":"1. Grid Search\uff08\u7f51\u683c\u641c\u7d22\uff09","text":"<p>\u7279\u70b9\uff1a \u7a77\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u53c2\u6570\u7ec4\u5408\uff0c\u8ba1\u7b97\u91cf\u5927\u4f46\u8986\u76d6\u5168\u9762\u3002</p> <p>\u9002\u5408\u573a\u666f\uff1a \u53c2\u6570\u7ec4\u5408\u4e0d\u591a\uff0c\u8bad\u7ec3\u65f6\u95f4\u5141\u8bb8\u3002</p> <pre><code>from sklearn.model_selection import GridSearchCV\nfrom sklearn.svm import SVC\n\nparam_grid = {\n    'C': [0.1, 1, 10],\n    'kernel': ['linear', 'rbf']\n}\ngrid = GridSearchCV(SVC(), param_grid, cv=3)\ngrid.fit(X, y)\n\nprint(\"\u6700\u4f73\u53c2\u6570\u7ec4\u5408\uff1a\", grid.best_params_)\n</code></pre>"},{"location":"machinelearning/ml/evaluate/#2-random-search","title":"2. Random Search\uff08\u968f\u673a\u641c\u7d22\uff09","text":"<p>\u7279\u70b9\uff1a \u968f\u673a\u9009\u53d6\u90e8\u5206\u53c2\u6570\u7ec4\u5408\uff0c\u6548\u7387\u9ad8\u3002</p> <p>\u9002\u5408\u573a\u666f\uff1a \u53c2\u6570\u7a7a\u95f4\u5927\u65f6\uff08\u5982\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\uff09\u3002</p> <pre><code>from sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.ensemble import RandomForestClassifier\nfrom scipy.stats import randint\n\nparam_dist = {\n    'n_estimators': randint(50, 200),\n    'max_depth': randint(3, 10)\n}\nrandom_search = RandomizedSearchCV(RandomForestClassifier(), param_dist, n_iter=10, cv=3)\nrandom_search.fit(X, y)\n\nprint(\"\u6700\u4f73\u53c2\u6570\u7ec4\u5408\uff1a\", random_search.best_params_)\n</code></pre>"},{"location":"machinelearning/ml/evaluate/#3-bayesian-optimization","title":"3. Bayesian Optimization\uff08\u8d1d\u53f6\u65af\u4f18\u5316\uff09","text":"<p>\u7279\u70b9\uff1a \u901a\u8fc7\u6982\u7387\u6a21\u578b\u9884\u6d4b\u6700\u4f18\u53c2\u6570\uff0c\u66f4\u667a\u80fd\u5730\u9009\u62e9\u4e0b\u4e00\u4e2a\u641c\u7d22\u70b9\u3002</p> <p>\u9002\u5408\u573a\u666f\uff1a \u9ad8\u6210\u672c\u6a21\u578b\u3001\u590d\u6742\u8c03\u53c2\u7a7a\u95f4\u3002</p> <p>\u5de5\u5177\u63a8\u8350\uff1a Optuna\u3001scikit-optimize</p> <p>Optuna \u793a\u4f8b\uff1a</p> <pre><code>import optuna\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import cross_val_score\n\n\ndef objective(trial):\n    n_estimators = trial.suggest_int(\"n_estimators\", 50, 200)\n    max_depth = trial.suggest_int(\"max_depth\", 3, 15)\n    clf = RandomForestClassifier(n_estimators=n_estimators, max_depth=max_depth)\n    return cross_val_score(clf, X, y, cv=3).mean()\n\n\nstudy = optuna.create_study(direction=\"maximize\")\nstudy.optimize(objective, n_trials=20)\n\nprint(\"\u6700\u4f18\u53c2\u6570\uff1a\", study.best_params)\n</code></pre>"},{"location":"machinelearning/ml/evaluate/#4-hyperband-asha","title":"4. Hyperband / ASHA\uff08\u65e9\u505c\u7b97\u6cd5\uff09","text":"<p>\u7279\u70b9\uff1a \u52a8\u6001\u8d44\u6e90\u5206\u914d\uff08\u63d0\u524d\u7ec8\u6b62\u8868\u73b0\u5dee\u7684\u6a21\u578b\uff09\uff0c\u5927\u5e45\u63d0\u9ad8\u6548\u7387\u3002</p> <p>\u9002\u5408\u573a\u666f\uff1a \u795e\u7ecf\u7f51\u7edc\u3001AutoML\u3002</p> <p>\u5de5\u5177\u63a8\u8350\uff1a Ray Tune, Keras Tuner</p> <p>Ray Tune \u793a\u4f8b\uff1a</p> <pre><code>from ray import tune\n\n\ndef train_model(config):\n    model = MyModel(config[\"lr\"], config[\"dropout\"])\n    acc = model.train_and_eval()\n    tune.report(accuracy=acc)\n\n\nanalysis = tune.run(\n    train_model,\n    config={\"lr\": tune.loguniform(1e-4, 1e-1), \"dropout\": tune.uniform(0.1, 0.5)},\n    num_samples=20\n)\n\nprint(\"\u6700\u4f18\u914d\u7f6e\uff1a\", analysis.get_best_config(metric=\"accuracy\", mode=\"max\"))\n</code></pre>"},{"location":"machinelearning/ml/evaluate/#_21","title":"\u4e03\u3001\u8fc7\u62df\u5408\u548c\u6b20\u62df\u5408","text":"<ul> <li>\u6b20\u62df\u5408\uff1a\u6a21\u578b\u592a\u7b80\u5355\uff0c\u5b66\u4e0d\u61c2\u6570\u636e</li> <li>\u8fc7\u62df\u5408\uff1a\u6a21\u578b\u592a\u590d\u6742\uff0c\u628a\u8bad\u7ec3\u6570\u636e\u80cc\u4e0b\u6765\u4e86\uff0c\u8fde\u566a\u58f0\u4e5f\u5f53\u6210\u89c4\u5f8b</li> </ul>"},{"location":"machinelearning/ml/evaluate/#underfitting","title":"\ud83d\udd0d \u6b20\u62df\u5408\uff08Underfitting\uff09","text":""},{"location":"machinelearning/ml/evaluate/#_22","title":"\u2705 \u7279\u5f81\uff1a","text":"<ul> <li>\u8bad\u7ec3\u8bef\u5dee \u9ad8</li> <li>\u6d4b\u8bd5\u8bef\u5dee\u4e5f \u9ad8</li> <li>\u6a21\u578b\u65e0\u6cd5\u6355\u6349\u6570\u636e\u7684\u6a21\u5f0f</li> </ul>"},{"location":"machinelearning/ml/evaluate/#_23","title":"\ud83c\udfaf \u539f\u56e0\uff1a","text":"\u539f\u56e0 \u793a\u4f8b \u6a21\u578b\u592a\u7b80\u5355 \u7528\u7ebf\u6027\u6a21\u578b\u62df\u5408\u975e\u7ebf\u6027\u6570\u636e \u7279\u5f81\u4e0d\u591f \u53ea\u7528\u4e86 1-2 \u4e2a\u7b80\u5355\u7279\u5f81 \u8bad\u7ec3\u65f6\u95f4\u4e0d\u591f \u795e\u7ecf\u7f51\u7edc\u8bad\u7ec3 epoch \u592a\u5c11 \u8fc7\u5f3a\u7684\u6b63\u5219\u5316 \u60e9\u7f5a\u9879\u592a\u5f3a\uff0c\u628a\u6a21\u578b\u201c\u538b\u6241\u201d\u4e86"},{"location":"machinelearning/ml/evaluate/#overfitting","title":"\ud83d\udd0d \u8fc7\u62df\u5408\uff08Overfitting\uff09","text":""},{"location":"machinelearning/ml/evaluate/#_24","title":"\u2705 \u7279\u5f81\uff1a","text":"<ul> <li>\u8bad\u7ec3\u8bef\u5dee \u4f4e</li> <li>\u6d4b\u8bd5\u8bef\u5dee \u9ad8</li> <li>\u6a21\u578b\u201c\u8bb0\u4f4f\u201d\u4e86\u8bad\u7ec3\u6570\u636e\uff0c\u65e0\u6cd5\u6cdb\u5316</li> </ul>"},{"location":"machinelearning/ml/evaluate/#_25","title":"\ud83c\udfaf \u539f\u56e0\uff1a","text":"\u539f\u56e0 \u793a\u4f8b \u6a21\u578b\u592a\u590d\u6742 \u4f7f\u7528\u6df1\u5ea6\u592a\u6df1\u7684\u795e\u7ecf\u7f51\u7edc \u7279\u5f81\u7ef4\u5ea6\u592a\u9ad8 \u4e0a\u767e\u7ef4\u7a00\u758f\u7279\u5f81 + \u6837\u672c\u592a\u5c11 \u6570\u636e\u91cf\u592a\u5c11 \u5c11\u91cf\u6570\u636e\u8bad\u7ec3\u51fa\u590d\u6742\u6a21\u578b \u6ca1\u6709\u6b63\u5219\u5316 \u4e0d\u7ea6\u675f\u6a21\u578b\uff0c\u81ea\u7531\u8fc7\u5934\u4e86"},{"location":"machinelearning/ml/evaluate/#_26","title":"\ud83d\udd27 \u5982\u4f55\u89e3\u51b3\uff1f","text":""},{"location":"machinelearning/ml/evaluate/#_27","title":"\u2734\ufe0f \u6b20\u62df\u5408\u7684\u5e94\u5bf9\u65b9\u6cd5\uff1a","text":"<ul> <li>\u4f7f\u7528\u66f4\u590d\u6742\u7684\u6a21\u578b\uff08\u5982\u7ebf\u6027 \u2192 \u51b3\u7b56\u6811\uff09</li> <li>\u589e\u52a0\u7279\u5f81\u3001\u6784\u9020\u65b0\u7279\u5f81</li> <li>\u8bad\u7ec3\u66f4\u4e45\uff0c\u8c03\u5927 epoch</li> <li>\u51cf\u5c0f\u6b63\u5219\u5316\u529b\u5ea6</li> </ul>"},{"location":"machinelearning/ml/evaluate/#_28","title":"\u2734\ufe0f \u8fc7\u62df\u5408\u7684\u5e94\u5bf9\u65b9\u6cd5\uff1a","text":"<ul> <li>\u4f7f\u7528\u66f4\u7b80\u5355\u7684\u6a21\u578b</li> <li>\u52a0\u5f3a\u6b63\u5219\u5316\uff08L1\u3001L2\uff09</li> <li>\u4f7f\u7528 Dropout\uff08\u5bf9\u795e\u7ecf\u7f51\u7edc\uff09</li> <li>\u589e\u52a0\u8bad\u7ec3\u6570\u636e</li> <li>\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u9009\u62e9\u6a21\u578b</li> <li>\u63d0\u524d\u505c\u6b62\u8bad\u7ec3\uff08Early Stopping\uff09</li> </ul>"},{"location":"machinelearning/ml/features/","title":"\u7b2c\u4e00\u7ae0\uff1a\u7279\u5f81\u5de5\u7a0b","text":"<p>\u7279\u5f81\u5de5\u7a0b\uff08Feature Engineering\uff09\u662f\u6307\u5c06\u539f\u59cb\u6570\u636e\u8f6c\u5316\u4e3a\u66f4\u9002\u5408\u673a\u5668\u5b66\u4e60\u6a21\u578b\u4f7f\u7528\u7684\u7279\u5f81\u96c6\u7684\u8fc7\u7a0b\u3002\u5b83\u5728\u673a\u5668\u5b66\u4e60\u4e2d\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u597d\u7684\u7279\u5f81\u5f80\u5f80\u6bd4\u590d\u6742\u7684\u6a21\u578b\u66f4\u80fd\u63d0\u5347\u6548\u679c\u3002</p> <p>\u6362\u53e5\u8bdd\u8bf4\uff1a\u7279\u5f81\u5de5\u7a0b\u5c31\u662f\u201c\u4ece\u6570\u636e\u4e2d\u63d0\u70bc\u51fa\u6700\u80fd\u63cf\u8ff0\u95ee\u9898\u7684\u7279\u5f81\u201d\u3002</p> <p>\u7279\u5f81\u5de5\u7a0b\uff0c\u987e\u540d\u601d\u4e49\uff0c\u662f\u5bf9\u539f\u59cb\u6570\u636e\u8fdb\u884c\u4e00\u7cfb\u5217\u5de5\u7a0b\u5904\u7406\uff0c\u5c06\u5176\u63d0\u70bc\u4e3a\u7279\u5f81\uff0c\u4f5c\u4e3a\u8f93\u5165\u4f9b\u7b97\u6cd5\u548c\u6a21\u578b\u4f7f\u7528\u3002\u4ece\u672c\u8d28\u4e0a\u6765\u8bb2\uff0c\u7279\u5f81\u5de5\u7a0b\u662f\u4e00\u4e2a\u8868\u793a\u548c\u5c55\u73b0\u6570\u636e\u7684\u8fc7\u7a0b\u3002\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u7279\u5f81\u5de5\u7a0b\u65e8\u5728\u53bb\u9664\u539f\u59cb\u6570\u636e\u4e2d\u7684\u6742\u5fd7\u548c\u5197\u4f59\uff0c \u8bbe\u8ba1\u66f4\u9ad8\u6548\u7684\u7279\u5f81\u4ee5\u523b\u753b\u6c42\u89e3\u7684\u95ee\u9898\u4e0e\u9884\u6d4b\u6a21\u578b\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</p>"},{"location":"machinelearning/ml/features/#_2","title":"\u4e00\u3001\u7279\u5f81\u5f52\u4e00\u5316","text":""},{"location":"machinelearning/ml/features/#11","title":"1.1 \u4ec0\u4e48\u662f\u7279\u5f81\u5f52\u4e00\u5316\uff1f","text":"<p>\u7279\u5f81\u5f52\u4e00\u5316\uff08Normalization\uff09 \u662f\u5c06\u6570\u503c\u578b\u7279\u5f81\u538b\u7f29\u5230\u76f8\u540c\u7684\u5c3a\u5ea6\uff0c\u901a\u5e38\u662f [0, 1] \u533a\u95f4\uff0c\u4ee5\u907f\u514d\u4e0d\u540c\u91cf\u7eb2\u548c\u6570\u503c\u8303\u56f4\u5bf9\u6a21\u578b\u9020\u6210\u5f71\u54cd\u3002</p> <p>\u5b83\u662f\u7279\u5f81\u5de5\u7a0b\u4e2d\u975e\u5e38\u91cd\u8981\u7684\u9884\u5904\u7406\u6b65\u9aa4\uff0c\u5c24\u5176\u9002\u7528\u4e8e\u57fa\u4e8e\u201c\u8ddd\u79bb\u8ba1\u7b97\u201d\u6216\u201c\u68af\u5ea6\u4f18\u5316\u201d\u7684\u6a21\u578b\u3002</p>"},{"location":"machinelearning/ml/features/#12","title":"1.2 \u4e3a\u4ec0\u4e48\u9700\u8981\u5f52\u4e00\u5316\uff1f","text":""},{"location":"machinelearning/ml/features/#1","title":"\u573a\u666f 1\uff1a\u4e0d\u540c\u7279\u5f81\u7684\u6570\u503c\u8303\u56f4\u5dee\u5f02\u5927","text":"<p>\u6bd4\u5982\uff1a</p> <ul> <li>\u8eab\u9ad8\uff08150~200cm\uff09</li> <li>\u4f53\u91cd\uff0850~100kg\uff09</li> <li>\u6536\u5165\uff081w~100w\uff09</li> </ul> <p>\u8fd9\u4e9b\u4e0d\u540c\u91cf\u7eb2\u7684\u6570\u503c\u76f4\u63a5\u8f93\u5165\u6a21\u578b\uff0c\u4f1a\u8ba9\u201c\u91cf\u7eb2\u5927\u7684\u7279\u5f81\u201d\u4e3b\u5bfc\u6a21\u578b\u5b66\u4e60\u3002</p>"},{"location":"machinelearning/ml/features/#2","title":"\u573a\u666f 2\uff1a\u4f7f\u7528\u4ee5\u4e0b\u6a21\u578b\u65f6\u5fc5\u987b\u5f52\u4e00\u5316","text":"<ul> <li>KNN / K-means\uff08\u57fa\u4e8e\u8ddd\u79bb\uff09</li> <li>SVM\uff08\u6838\u51fd\u6570\u8ba1\u7b97\uff09</li> <li>Logistic / \u7ebf\u6027\u56de\u5f52\uff08\u6536\u655b\u901f\u5ea6\u53d7\u68af\u5ea6\u5f71\u54cd\uff09</li> <li>\u795e\u7ecf\u7f51\u7edc\uff08\u68af\u5ea6\u7a33\u5b9a\u6027\uff09</li> </ul>"},{"location":"machinelearning/ml/features/#13","title":"1.3 \u5f52\u4e00\u5316\u7684\u5e38\u89c1\u65b9\u6cd5","text":""},{"location":"machinelearning/ml/features/#1-min-max-01","title":"1. Min-Max \u5f52\u4e00\u5316\uff08\u7f29\u653e\u5230 0~1\uff09","text":"\\[ x\u2019 = \\frac{x - x_{\\min}}{x_{\\max} - x_{\\min}} \\] <p>\u7279\u70b9\uff1a</p> <ul> <li>\u9002\u5408\u6570\u503c\u5206\u5e03\u7a33\u5b9a\uff0c\u8fb9\u754c\u5df2\u77e5\u7684\u60c5\u51b5\uff1b</li> <li>\u5bf9\u5f02\u5e38\u503c\u654f\u611f\uff08\u5bb9\u6613\u538b\u7f29\u5176\u4ed6\u503c\uff09\u3002</li> </ul> <pre><code>from sklearn.preprocessing import MinMaxScaler\n\nscaler = MinMaxScaler()\nX_scaled = scaler.fit_transform(X)\n</code></pre>"},{"location":"machinelearning/ml/features/#2-maxabs-1-1","title":"2. MaxAbs \u5f52\u4e00\u5316\uff08\u7f29\u653e\u5230 [-1, 1]\uff09","text":"<p>\u9002\u5408\u7a00\u758f\u6570\u636e\uff0c\u5982\u6587\u672c\u5411\u91cf\u3001TF-IDF \u7b49\u3002</p> \\[ x\u2019 = \\frac{x}{|x_{\\max}|} \\] <pre><code>from sklearn.preprocessing import MaxAbsScaler\n\nscaler = MaxAbsScaler()\nX_scaled = scaler.fit_transform(X)\n</code></pre>"},{"location":"machinelearning/ml/features/#3-l2","title":"3. L2 \u5f52\u4e00\u5316\uff08\u5355\u4f4d\u5411\u91cf\u5f52\u4e00\u5316\uff09","text":"<p>\u8ba9\u6bcf\u4e00\u884c\uff08\u6837\u672c\uff09\u6a21\u957f\u4e3a 1\uff0c\u5e38\u7528\u4e8e\u6587\u672c/\u5411\u91cf\u8868\u793a\u3002</p> <p>\u516c\u5f0f\uff08L2 \u8303\u6570\uff09\uff1a</p> \\[     x\u2019 = \\frac{x}{\\|x\\|_2} \\] <pre><code>from sklearn.preprocessing import Normalizer\n\nscaler = Normalizer(norm='l2')\nX_scaled = scaler.fit_transform(X)\n</code></pre>"},{"location":"machinelearning/ml/features/#14-vs-standardization","title":"1.4 \u5f52\u4e00\u5316 vs \u6807\u51c6\u5316\uff08Standardization\uff09","text":"\u6bd4\u8f83\u9879 \u6807\u51c6\u5316\uff08Standardization\uff09 \u5f52\u4e00\u5316\uff08Normalization\uff09 \u9002\u7528\u573a\u666f \u5927\u591a\u6570\u6a21\u578b\uff08\u5982 SVM\u3001\u903b\u8f91\u56de\u5f52\u3001KNN\u3001PCA\uff09 \u7279\u5f81\u6709\u660e\u786e\u8fb9\u754c\u7684\u60c5\u51b5\uff08\u5982\u56fe\u50cf\u50cf\u7d20\uff09 \u8f93\u51fa\u8303\u56f4 \u5747\u503c 0\uff0c\u6807\u51c6\u5dee 1 \u4e00\u822c\u5728 [0, 1] \u6216 [-1, 1] \u662f\u5426\u53d7\u5f02\u5e38\u503c\u5f71\u54cd \u662f \u662f\uff08\u66f4\u654f\u611f\uff09 \u662f\u5426\u4f9d\u8d56\u5206\u5e03 \u9002\u5408\u6b63\u6001\u5206\u5e03 \u65e0\u8981\u6c42 \u4ee3\u7801\u5b9e\u73b0\uff08sklearn\uff09 <code>StandardScaler</code> <code>MinMaxScaler</code>"},{"location":"machinelearning/ml/features/#15","title":"1.5 \u5b9e\u6218","text":"<pre><code>import pandas as pd\nfrom sklearn.preprocessing import MinMaxScaler\n\n# \u793a\u4f8b\u6570\u636e\ndf = pd.DataFrame({\n    \"height\": [160, 170, 180],\n    \"weight\": [50, 70, 90]\n})\n\nscaler = MinMaxScaler()\ndf_scaled = pd.DataFrame(scaler.fit_transform(df), columns=df.columns)\n\nprint(df_scaled)\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c</p> <pre><code>      height  weight\n  0     0.0     0.0\n  1     0.5     0.5\n  2     1.0     1.0\n</code></pre>"},{"location":"machinelearning/ml/features/#_3","title":"\u4e8c\u3001\u7c7b\u522b\u578b\u7279\u5f81","text":"<p>\u7c7b\u522b\u578b\u7279\u5f81\uff08Categorical Features\uff09\u6307\u7684\u662f\u53d6\u503c\u4e3a\u79bb\u6563\u7c7b\u522b\u800c\u975e\u6570\u503c\u5927\u5c0f\u6709\u610f\u4e49\u7684\u7279\u5f81\u3002\u6bd4\u5982\u989c\u8272\uff08\u7ea2\u3001\u7eff\u3001\u84dd\uff09\u3001\u57ce\u5e02\uff08\u5317\u4eac\u3001\u4e0a\u6d77\uff09\u3001\u6027\u522b\uff08\u7537\u3001\u5973\uff09\u7b49\u3002\u8fd9\u4e9b\u7279\u5f81\u65e0\u6cd5\u76f4\u63a5\u8f93\u5165\u5927\u591a\u6570\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c\u9700\u5148\u8fdb\u884c\u7f16\u7801\u548c\u5904\u7406\u3002</p>"},{"location":"machinelearning/ml/features/#21","title":"2.1 \u7c7b\u522b\u578b\u7279\u5f81\u7684\u7c7b\u578b","text":"<p>\u7c7b\u522b\u578b\u7279\u5f81\u4e3b\u8981\u5206\u4e3a\u4e24\u7c7b\uff1a</p> <p>1. \u540d\u4e49\u578b\uff08Nominal\uff09</p> <ul> <li>\u6ca1\u6709\u987a\u5e8f\u6216\u5927\u5c0f\u7684\u6982\u5ff5\u3002</li> <li>\u793a\u4f8b\uff1a\u989c\u8272\uff08\u7ea2\u3001\u7eff\u3001\u84dd\uff09\u3001\u804c\u4e1a\u3001\u57ce\u5e02\u3002</li> </ul> <p>2. \u5e8f\u6570\u578b\uff08Ordinal\uff09</p> <ul> <li>\u5177\u6709\u660e\u786e\u7684\u987a\u5e8f\u5173\u7cfb\uff0c\u4f46\u6ca1\u6709\u660e\u786e\u7684\u95f4\u8ddd\u6216\u91cf\u5316\u542b\u4e49\u3002</li> <li>\u793a\u4f8b\uff1a\u6559\u80b2\u7a0b\u5ea6\uff08\u5c0f\u5b66 &lt; \u521d\u4e2d &lt; \u9ad8\u4e2d &lt; \u5927\u5b66 &lt; \u7855\u58eb &lt; \u535a\u58eb\uff09\u3002</li> </ul>"},{"location":"machinelearning/ml/features/#22","title":"2.2 \u5e38\u89c1\u7684\u7f16\u7801\u65b9\u5f0f","text":""},{"location":"machinelearning/ml/features/#1-label-encoding","title":"1. \u6807\u7b7e\u7f16\u7801\uff08Label Encoding\uff09","text":"<p>\u4f7f\u7528\u6574\u6570\u4ee3\u66ff\u7c7b\u522b\u3002</p> <pre><code>from sklearn.preprocessing import LabelEncoder\n\nle = LabelEncoder()\ndata['color_encoded'] = le.fit_transform(data['color'])\n</code></pre> <p>Warning</p> <p>\u26a0\ufe0f \u9002\u5408\u6709\u5e8f\u7c7b\u522b\uff08Ordinal\uff09\uff0c\u4e0d\u9002\u5408\u65e0\u5e8f\u7c7b\u522b\uff08Nominal\uff09\uff0c\u5426\u5219\u53ef\u80fd\u5f15\u5165\u865a\u5047\u987a\u5e8f\u4fe1\u606f\u3002</p>"},{"location":"machinelearning/ml/features/#2-one-hot-encoding","title":"2. \u72ec\u70ed\u7f16\u7801\uff08One-Hot Encoding\uff09","text":"<p>\u5c06\u6bcf\u4e2a\u7c7b\u522b\u8f6c\u5316\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u4e8c\u8fdb\u5236\u5217\u3002</p> <pre><code>import pandas as pd\n\npd.get_dummies(data['color'], prefix='color')\n</code></pre> <p>Warning</p> <p>\u26a0\ufe0f \u7ef4\u5ea6\u53ef\u80fd\u4f1a\u7206\u70b8\uff08\u9ad8\u57fa\u6570\u7279\u5f81\uff09\uff0c\u9002\u5408\u6811\u6a21\u578b\uff08\u5982 XGBoost\u3001LightGBM\uff09\u4e0d\u654f\u611f\u4e8e\u7a00\u758f\u7279\u5f81\u3002</p>"},{"location":"machinelearning/ml/features/#3-binary-encoding","title":"3. \u4e8c\u8fdb\u5236\u7f16\u7801\uff08Binary Encoding\uff09","text":"<p>\u5c06\u7c7b\u522b\u5148\u8f6c\u6362\u4e3a\u6574\u6570\uff0c\u518d\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u7f16\u7801\u3002</p> <pre><code>\u7c7b\u522bA \u2192 1 \u2192 001\n\u7c7b\u522bB \u2192 2 \u2192 010\n\u7c7b\u522bC \u2192 3 \u2192 011\n</code></pre> <p>Info</p> <p>\u4f18\u70b9\uff1a\u6bd4 One-Hot \u66f4\u8282\u7701\u7a7a\u95f4\uff0c\u9002\u5408\u4e2d\u9ad8\u57fa\u6570\u7c7b\u522b\u3002</p>"},{"location":"machinelearning/ml/features/#4-frequency-encoding","title":"4. \u9891\u7387\u7f16\u7801\uff08Frequency Encoding\uff09","text":"<p>\u7528\u67d0\u4e2a\u7c7b\u522b\u51fa\u73b0\u7684\u9891\u7387\u8fdb\u884c\u7f16\u7801\u3002</p> <pre><code>freq = data['city'].value_counts(normalize=True)\ndata['city_freq'] = data['city'].map(freq)\n</code></pre>"},{"location":"machinelearning/ml/features/#5-target-encoding-mean-encoding","title":"5. \u76ee\u6807\u7f16\u7801\uff08Target Encoding / Mean Encoding\uff09","text":"<p>\u7528\u67d0\u4e2a\u7c7b\u522b\u5bf9\u5e94\u7684\u76ee\u6807\u53d8\u91cf\u7684\u5747\u503c\u8fdb\u884c\u7f16\u7801\u3002</p> <p>\u793a\u4f8b\uff08\u5206\u7c7b\u95ee\u9898\uff09\uff1a <pre><code>means = data.groupby('city')['target'].mean()\ndata['city_encoded'] = data['city'].map(means)\n</code></pre></p> <p>Warning</p> <p>\u26a0\ufe0f \u6709\u6cc4\u9732\u98ce\u9669\uff0c\u9700\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6216\u8bad\u7ec3\u96c6\u5747\u503c\u3002</p>"},{"location":"machinelearning/ml/features/#23","title":"2.3 \u5b9e\u6218","text":"<pre><code>import pandas as pd\ndf = pd.DataFrame({\n    'color': ['red', 'green', 'blue', 'green', 'red'],\n    'target': [1, 0, 1, 0, 1]\n})\n\n# Label Encoding\nfrom sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\ndf['label_enc'] = le.fit_transform(df['color'])\n\n# One-Hot\ndf_onehot = pd.get_dummies(df['color'], prefix='color')\n\n# Target Encoding\nmean_map = df.groupby('color')['target'].mean()\ndf['target_enc'] = df['color'].map(mean_map)\n\nprint(df)\nprint(df_onehot)\n</code></pre>"},{"location":"machinelearning/ml/features/#_4","title":"\u4e09\u3001\u6587\u672c\u8868\u793a\u6a21\u578b","text":"<p>\u6587\u672c\u8868\u793a\u6a21\u578b\uff08Text Representation Models\uff09\u662f\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff08NLP\uff09\u4e2d\u7684\u6838\u5fc3\u6280\u672f\uff0c\u76ee\u6807\u662f\u5c06\u6587\u672c\uff08\u8bcd\u3001\u53e5\u5b50\u3001\u6587\u6863\uff09\u8f6c\u6362\u4e3a\u6a21\u578b\u53ef\u5904\u7406\u7684\u6570\u503c\u5411\u91cf\uff0c\u4ee5\u4fbf\u8fdb\u884c\u5206\u7c7b\u3001\u805a\u7c7b\u3001\u641c\u7d22\u3001\u95ee\u7b54\u3001\u751f\u6210\u7b49\u4efb\u52a1\u3002</p>"},{"location":"machinelearning/ml/features/#31","title":"3.1 \u6982\u8ff0\uff1a\u4e3a\u4ec0\u4e48\u9700\u8981\u6587\u672c\u8868\u793a","text":"<p>\u673a\u5668\u65e0\u6cd5\u76f4\u63a5\u7406\u89e3\u4eba\u7c7b\u8bed\u8a00\uff0c\u9700\u8981\u5c06\u5176\u8f6c\u5316\u4e3a\u5411\u91cf\u3002\u597d\u7684\u8868\u793a\u65b9\u6cd5\u5e94\u8be5\u6ee1\u8db3\uff1a</p> <ul> <li>\u8bed\u4e49\u4fdd\u7559\u6027\uff1a\u76f8\u4f3c\u6587\u672c\u5411\u91cf\u5e94\u63a5\u8fd1</li> <li>\u4e0a\u4e0b\u6587\u654f\u611f\u6027\uff1a\u4e00\u4e2a\u8bcd\u5728\u4e0d\u540c\u8bed\u5883\u4e2d\u5e94\u6709\u4e0d\u540c\u8868\u793a</li> <li>\u538b\u7f29\u6027\uff1a\u9ad8\u6548\u8868\u793a\uff0c\u907f\u514d\u7ef4\u5ea6\u707e\u96be</li> <li>\u53ef\u6cdb\u5316\u6027\uff1a\u9002\u7528\u4e8e\u4e0b\u6e38\u4efb\u52a1\uff0c\u5982\u5206\u7c7b\u3001\u5339\u914d\u3001\u68c0\u7d22\u7b49</li> </ul>"},{"location":"machinelearning/ml/features/#32","title":"3.2 \u4f20\u7edf\u8868\u793a\u65b9\u6cd5","text":""},{"location":"machinelearning/ml/features/#1-one-hot-encoding","title":"1. One-Hot Encoding","text":"<ul> <li>\u6bcf\u4e2a\u8bcd\u5bf9\u5e94\u4e00\u4e2a\u9ad8\u7ef4\u5411\u91cf\uff08\u5982\u8bcd\u8868\u4e2d\u7b2c 123 \u4e2a\u8bcd\u4e3a <code>[0,...,1,...,0]</code>\uff09  </li> <li>\u7f3a\u70b9\uff1a<ul> <li>\u7a00\u758f  </li> <li>\u4e0d\u542b\u8bed\u4e49  </li> <li>\u5411\u91cf\u4e4b\u95f4\u65e0\u8ddd\u79bb\u542b\u4e49\uff08\u5982\u201c\u732b\u201d\u548c\u201c\u72d7\u201d\u8ddd\u79bb\u548c\u201c\u732b\u201d\u548c\u201c\u81ea\u884c\u8f66\u201d\u4e00\u6837\uff09  </li> </ul> </li> </ul>"},{"location":"machinelearning/ml/features/#2-bag-of-words-bow","title":"2. Bag of Words (BoW)","text":"<ul> <li>\u7edf\u8ba1\u8bcd\u9891\uff1a<code>[the: 4, cat: 1, sat: 1, on: 1, mat: 1]</code> </li> <li>\u7f3a\u70b9\uff1a\u5ffd\u7565\u8bcd\u5e8f\u3001\u65e0\u6cd5\u6355\u6349\u4e0a\u4e0b\u6587\u4fe1\u606f</li> </ul>"},{"location":"machinelearning/ml/features/#3-tf-idf","title":"3. TF-IDF","text":"<ul> <li>TF\uff1aTerm Frequency\uff0c\u8bcd\u9891  </li> <li>IDF\uff1aInverse Document Frequency\uff0c\u6587\u6863\u53cd\u9891\u7387  </li> <li>\u4f18\u70b9\uff1a\u8003\u8651\u4e86\u8bcd\u8bed\u7684\u91cd\u8981\u6027  </li> <li>\u7f3a\u70b9\uff1a\u5411\u91cf\u4ecd\u7136\u7a00\u758f\u3001\u7ef4\u5ea6\u9ad8\u3001\u4e0d\u542b\u8bed\u4e49\u5173\u7cfb  </li> </ul> <pre><code>from sklearn.feature_extraction.text import TfidfVectorizer\n\ncorpus = [\"\u6211 \u7231 \u81ea\u7136\u8bed\u8a00\u5904\u7406\", \"\u81ea\u7136\u8bed\u8a00 \u5f88 \u6709\u8da3\"]\nvectorizer = TfidfVectorizer()\nX = vectorizer.fit_transform(corpus)\nprint(X.toarray())\n</code></pre>"},{"location":"machinelearning/ml/features/#33","title":"3.3 \u5206\u5e03\u5f0f\u8bcd\u5411\u91cf","text":""},{"location":"machinelearning/ml/features/#1-word2vec","title":"1. Word2Vec","text":"<ul> <li>\u63d0\u51fa\u8005\uff1aGoogle\uff082013\uff09</li> <li>\u4e24\u79cd\u6a21\u578b\u7ed3\u6784\uff1a<ul> <li>CBOW\uff08Continuous Bag-of-Words\uff09\uff1a\u6839\u636e\u4e0a\u4e0b\u6587\u8bcd\u9884\u6d4b\u4e2d\u5fc3\u8bcd\u3002</li> <li>Skip-Gram\uff1a\u6839\u636e\u4e2d\u5fc3\u8bcd\u9884\u6d4b\u4e0a\u4e0b\u6587\u8bcd\u3002</li> </ul> </li> <li>\u4f18\u70b9\uff1a<ul> <li>\u80fd\u6355\u6349\u8bcd\u4e0e\u8bcd\u4e4b\u95f4\u7684\u8bed\u4e49/\u53e5\u6cd5\u5173\u7cfb\u3002</li> <li>\u652f\u6301\u7ebf\u6027\u63a8\u7406\u5173\u7cfb\uff1a\u5982 <code>vector(\"\u738b\") - vector(\"\u7537\u4eba\") + vector(\"\u5973\u4eba\") \u2248 vector(\"\u5973\u738b\")</code>\u3002</li> </ul> </li> </ul> <pre><code>from gensim.models import Word2Vec\n\n# \u8bad\u7ec3\u8bed\u6599\uff08\u5206\u8bcd\u540e\u7684\u53e5\u5b50\uff09\nsentences = [[\"\u6211\", \"\u7231\", \"\u81ea\u7136\u8bed\u8a00\u5904\u7406\"], [\"\u81ea\u7136\u8bed\u8a00\", \"\u5904\u7406\", \"\u5f88\", \"\u6709\u8da3\"]]\n\n# \u8bad\u7ec3\u6a21\u578b\nmodel = Word2Vec(sentences, vector_size=100, window=5, min_count=1, sg=1)  # sg=1 \u8868\u793a\u4f7f\u7528 Skip-Gram\n\n# \u83b7\u53d6\u8bcd\u5411\u91cf\nvector = model.wv['\u81ea\u7136\u8bed\u8a00']\nprint(vector.shape)  # \u8f93\u51fa: (100,)\n</code></pre>"},{"location":"machinelearning/ml/features/#2-gloveglobal-vectors","title":"2. GloVe\uff08Global Vectors\uff09","text":"<ul> <li>\u63d0\u51fa\u8005\uff1a\u65af\u5766\u798f\u5927\u5b66 NLP \u56e2\u961f\uff082014 \u5e74\uff09</li> <li>\u8bba\u6587\u6807\u9898\uff1aGloVe: Global Vectors for Word Representation</li> <li>\u6838\u5fc3\u601d\u60f3\uff1a\u57fa\u4e8e\u8bcd\u4e0e\u8bcd\u4e4b\u95f4\u7684\u5171\u73b0\u9891\u7387\u77e9\u9635\uff0c\u901a\u8fc7\u77e9\u9635\u56e0\u5f0f\u5206\u89e3\u83b7\u5f97\u8bcd\u5411\u91cf\u8868\u793a\u3002</li> </ul>"},{"location":"machinelearning/ml/features/#_5","title":"\u57fa\u672c\u539f\u7406","text":"<p>GloVe \u4e0d\u662f\u9884\u6d4b\u6a21\u578b\uff08\u5982 Word2Vec\uff09\uff0c\u800c\u662f\u57fa\u4e8e\u8ba1\u6570\u7684\u6a21\u578b\u3002\u5b83\u5c06\u4e00\u4e2a\u5927\u578b\u8bed\u6599\u5e93\u4e2d\u6240\u6709\u8bcd\u5bf9\u7684\u5171\u73b0\u9891\u7387\u7edf\u8ba1\u4e3a\u77e9\u9635 \\( X_{ij} \\)\uff0c\u5176\u4e2d\uff1a</p> <ul> <li>\\( X_{ij} \\)\uff1a\u8bcd \\( j \\) \u5728\u8bcd \\( i \\) \u7684\u4e0a\u4e0b\u6587\u4e2d\u51fa\u73b0\u7684\u6b21\u6570</li> </ul> <p>\u7136\u540e\u901a\u8fc7\u6784\u9020\u635f\u5931\u51fd\u6570\uff0c\u62df\u5408\u4ee5\u4e0b\u5173\u7cfb\uff1a</p> \\[ w_i^T \\cdot \\tilde{w}_j + b_i + \\tilde{b}_j = \\log(X_{ij}) \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\( w_i \\)\uff1a\u8bcd \\( i \\) \u7684\u5411\u91cf  </li> <li>\\( \\tilde{w}_j \\)\uff1a\u4e0a\u4e0b\u6587\u8bcd \\( j \\) \u7684\u5411\u91cf  </li> <li>\\( b_i, \\tilde{b}_j \\)\uff1a\u504f\u7f6e\u9879  </li> <li>\\( X_{ij} \\)\uff1a\u5171\u73b0\u6b21\u6570  </li> </ul> <p>\u901a\u8fc7\u4f18\u5316\u8fd9\u4e2a\u76ee\u6807\u51fd\u6570\uff0c\u5b66\u4e60\u6bcf\u4e2a\u8bcd\u548c\u4e0a\u4e0b\u6587\u8bcd\u7684\u4f4e\u7ef4\u7a20\u5bc6\u5411\u91cf\u3002</p>"},{"location":"machinelearning/ml/features/#word2vec","title":"\u76f8\u6bd4 Word2Vec \u7684\u4f18\u52bf","text":"\u7279\u5f81 GloVe Word2Vec \u5efa\u6a21\u65b9\u5f0f \u57fa\u4e8e\u5168\u5c40\u5171\u73b0\u77e9\u9635 \u57fa\u4e8e\u5c40\u90e8\u4e0a\u4e0b\u6587\u7a97\u53e3 \u8bad\u7ec3\u673a\u5236 \u77e9\u9635\u56e0\u5f0f\u5206\u89e3\uff08\u7ebf\u6027\u56de\u5f52\uff09 \u795e\u7ecf\u7f51\u7edc\u4e0a\u4e0b\u6587\u9884\u6d4b \u4e0a\u4e0b\u6587\u7406\u89e3 \u5168\u5c40\u8bed\u6599\u7edf\u8ba1\uff0c\u8bed\u4e49\u66f4\u7a33\u5b9a \u5c40\u90e8\u7a97\u53e3\uff0c\u8bed\u4e49\u52a8\u6001\uff0c\u9002\u914d\u66f4\u597d \u80fd\u5426\u5728\u7ebf\u8bad\u7ec3 \u5426\uff08\u9700\u9884\u8ba1\u7b97\u5171\u73b0\u77e9\u9635\uff09 \u662f"},{"location":"machinelearning/ml/features/#glove","title":"\u4f7f\u7528 GloVe \u7684\u8bcd\u5411\u91cf","text":"<p>GloVe \u5b98\u65b9\u63d0\u4f9b\u4e86\u591a\u79cd\u9884\u8bad\u7ec3\u6a21\u578b\uff1a</p> \u7ef4\u5ea6 \u8bed\u6599 \u4e0b\u8f7d\u5730\u5740 50d Wikipedia 6B glove.6B.zip 100d Wikipedia 6B \u540c\u4e0a 300d Common Crawl 840B glove.840B.300d.zip"},{"location":"machinelearning/ml/features/#glove-python","title":"\u52a0\u8f7d\u9884\u8bad\u7ec3 GloVe \u5411\u91cf\uff08Python \u793a\u4f8b\uff09","text":"<pre><code>import numpy as np\n\n# \u52a0\u8f7d GloVe \u6587\u4ef6\ndef load_glove_embeddings(file_path):\n    embeddings = {}\n    with open(file_path, 'r', encoding='utf-8') as f:\n        for line in f:\n            values = line.strip().split()\n            word = values[0]\n            vector = np.array(values[1:], dtype='float32')\n            embeddings[word] = vector\n    return embeddings\n\n# \u4f7f\u7528\u793a\u4f8b\nglove_path = \"glove.6B.100d.txt\"\nglove_vectors = load_glove_embeddings(glove_path)\nprint(glove_vectors[\"king\"])  # \u6253\u5370 \"king\" \u7684\u8bcd\u5411\u91cf\n</code></pre>"},{"location":"machinelearning/ml/features/#glove_1","title":"GloVe \u7684\u610f\u4e49","text":"<ul> <li>\u66f4\u597d\u5730\u6355\u6349\u8bed\u4e49\u76f8\u4f3c\u6027\uff1a\u5982 \u201cice\u201d \u548c \u201csnow\u201d \u4f1a\u9760\u8fd1\uff0c\u800c \u201cice\u201d \u548c \u201csteam\u201d \u4f1a\u88ab\u533a\u5206\u3002</li> <li>\u9002\u7528\u4e8e\u9700\u8981\u9759\u6001\u8bcd\u8868\u793a\u7684 NLP \u4efb\u52a1\uff0c\u5982\u805a\u7c7b\u3001KMeans \u53ef\u89c6\u5316\u3001\u4fe1\u606f\u68c0\u7d22\u7b49\u3002</li> </ul>"},{"location":"machinelearning/ml/features/#3-fasttext","title":"3. FastText","text":"<ul> <li>\u63d0\u51fa\u8005\uff1aFacebook AI\uff082016\uff09</li> <li>\u521b\u65b0\u70b9\uff1a\u5c06\u8bcd\u62c6\u89e3\u4e3a\u5b50\u8bcd\uff08n-gram\uff09\u8fdb\u884c\u8bad\u7ec3</li> <li>\u89e3\u51b3 OOV \u95ee\u9898\uff1a\u672a\u89c1\u8fc7\u7684\u8bcd\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5176\u5b50\u8bcd\u7ec4\u5408\u63a8\u5bfc\u5411\u91cf\u3002</li> <li>\u66f4\u9002\u5408\u4e2d\u6587\u548c\u5f62\u6001\u590d\u6742\u8bed\u8a00\u3002</li> </ul> <p>\u7279\u70b9:</p> <ul> <li>\"apple\" \u4f1a\u88ab\u5206\u6210\uff1a&lt; ap, app, ppl, ple, le &gt; \u7b49\u5b57\u7b26 n-gram\u3002</li> <li>\u6bcf\u4e2a\u8bcd\u7684\u5411\u91cf = \u5176\u5b50\u8bcd\u5411\u91cf\u5e73\u5747\u6216\u52a0\u6743\u548c\u3002</li> </ul>"},{"location":"machinelearning/ml/features/#fasttext","title":"\u8bad\u7ec3\u793a\u4f8b\uff08\u4f7f\u7528 fasttext\uff09","text":"<pre><code># \u5b89\u88c5 fasttext\uff08\u5982\u679c\u4f7f\u7528 Python\uff0c\u5efa\u8bae\u7528 pip \u5b89\u88c5 fasttext-wheel\uff09\npip install fasttext-wheel\n</code></pre> <pre><code>import fasttext\n\n# \u8bad\u7ec3\u6a21\u578b\uff08\u6587\u672c\u6587\u4ef6\u6bcf\u884c\u4e3a\u4e00\u53e5\u8bdd\uff0c\u5df2\u8fdb\u884c\u5206\u8bcd\uff09\nmodel = fasttext.train_unsupervised('corpus.txt', model='skipgram')\n\n# \u83b7\u53d6\u8bcd\u5411\u91cf\nvec = model.get_word_vector(\"\u81ea\u7136\u8bed\u8a00\u5904\u7406\")\n</code></pre>"},{"location":"machinelearning/ml/features/#34","title":"3.4 \u4e0a\u4e0b\u6587\u76f8\u5173\u7684\u8868\u793a\u65b9\u6cd5","text":"<p>\u4f20\u7edf\u7684\u8bcd\u5411\u91cf\uff08\u5982 Word2Vec\u3001GloVe\u3001FastText\uff09\u662f\u9759\u6001\u7684\uff1a\u4e00\u4e2a\u8bcd\u5728\u6240\u6709\u4e0a\u4e0b\u6587\u4e2d\u59cb\u7ec8\u5bf9\u5e94\u540c\u4e00\u4e2a\u5411\u91cf\u3002</p> <p>\u7136\u800c\uff0c\u5728\u5b9e\u9645\u8bed\u8a00\u4e2d\uff0c\u4e00\u4e2a\u8bcd\u5728\u4e0d\u540c\u4e0a\u4e0b\u6587\u4e2d\u542b\u4e49\u53ef\u80fd\u4e0d\u540c\u3002\u4f8b\u5982\uff1a</p> <ul> <li>\u201c\u94f6\u884c\u201d\uff08bank\uff09\u5728\u201c\u91d1\u878d\u94f6\u884c\u201d\u548c\u201c\u6cb3\u5cb8\u201d\u4e2d\u8bed\u4e49\u5b8c\u5168\u4e0d\u540c\u3002</li> </ul> <p>\u4e0a\u4e0b\u6587\u76f8\u5173\u8bcd\u5411\u91cf\u7684\u6838\u5fc3\u601d\u60f3</p> <p>\u4e3a\u6bcf\u4e2a\u8bcd\u5728\u4e0d\u540c\u4e0a\u4e0b\u6587\u4e2d\u751f\u6210\u52a8\u6001\u7684\u8868\u793a\u5411\u91cf\u3002</p>"},{"location":"machinelearning/ml/features/#1-elmoembeddings-from-language-models","title":"1. ELMo\uff08Embeddings from Language Models\uff09","text":"<ul> <li>\u63d0\u51fa\u8005\uff1aAllenNLP\uff082018\uff09</li> <li>\u672c\u8d28\uff1a\u5229\u7528\u53cc\u5411 LSTM\uff08BiLSTM\uff09\u8bed\u8a00\u6a21\u578b\uff0c\u7ed3\u5408\u4e0a\u4e0b\u6587\u751f\u6210\u8bcd\u7684\u52a8\u6001\u8868\u793a\u3002</li> <li>\u5173\u952e\u7279\u6027\uff1a<ul> <li>\u6bcf\u4e2a\u8bcd\u7684\u5411\u91cf\u7531\u5176\u4e0a\u4e0b\u6587\u5171\u540c\u51b3\u5b9a\u3002</li> <li>\u5bf9\u8bcd\u4e49\u6b67\u4e49\u95ee\u9898\u6709\u8f83\u5f3a\u5efa\u6a21\u80fd\u529b\u3002</li> </ul> </li> </ul>"},{"location":"machinelearning/ml/features/#elmo","title":"ELMo \u8868\u793a\u65b9\u5f0f","text":"<p>\u4e00\u4e2a\u8bcd\u7684\u8868\u793a\u7531\u591a\u4e2a LSTM \u5c42\u7684\u8f93\u51fa\u52a0\u6743\u6c42\u548c\u5f97\u5230\uff1a</p> \\[ \\text{ELMo}_t = \\gamma \\sum_{k=0}^{L} s_k h_{t,k} \\] <ul> <li>\\( h_{t,k} \\)\uff1a\u7b2c \\( k \\) \u5c42 BiLSTM \u5bf9\u7b2c \\( t \\) \u4e2a\u8bcd\u7684\u8f93\u51fa</li> <li>\\( s_k \\)\uff1a\u6743\u91cd\u53c2\u6570\uff08\u901a\u8fc7\u8bad\u7ec3\u5b66\u4e60\uff09</li> <li>\\( \\gamma \\)\uff1a\u7f29\u653e\u56e0\u5b50</li> </ul>"},{"location":"machinelearning/ml/features/#_6","title":"\u4f18\u70b9","text":"<ul> <li>\u8de8\u53e5\u5efa\u6a21\uff0c\u8bed\u8a00\u7406\u89e3\u66f4\u6df1\u5165\u3002</li> <li>\u53ef\u7528\u4e8e\u4e0b\u6e38\u4efb\u52a1\u5fae\u8c03\u3002</li> </ul>"},{"location":"machinelearning/ml/features/#2-gpt-generative-pre-trained-transformer","title":"2. GPT \u7cfb\u5217\uff08Generative Pre-trained Transformer\uff09","text":"<ul> <li>GPT\uff1a\u4f7f\u7528 Transformer \u7684 decoder \u67b6\u6784\uff0c\u5de6\u5230\u53f3\u5730\u5efa\u6a21\u6587\u672c\uff08\u5355\u5411\uff09\u3002</li> <li>\u9884\u8bad\u7ec3\u4efb\u52a1\uff1a\u8bed\u8a00\u5efa\u6a21\uff08\u9884\u6d4b\u4e0b\u4e00\u4e2a\u8bcd\uff09</li> <li>\u9002\u5408\u4efb\u52a1\uff1a\u751f\u6210\u7c7b\uff08\u5982\u7eed\u5199\u3001\u5bf9\u8bdd\u751f\u6210\uff09</li> </ul>"},{"location":"machinelearning/ml/features/#gpt","title":"GPT \u7279\u70b9\uff1a","text":"<ul> <li>\u4e0a\u4e0b\u6587\u5efa\u6a21\u80fd\u529b\u5f3a\uff0c\u9002\u5408\u5f00\u653e\u5f0f\u751f\u6210\u4efb\u52a1\u3002</li> <li>\u9760\u53f3\u4fa7\u4e0a\u4e0b\u6587\u9884\u6d4b\u4e0b\u4e00\u4e2a\u8bcd\u3002</li> </ul>"},{"location":"machinelearning/ml/features/#3-bertbidirectional-encoder-representations-from-transformers","title":"3. BERT\uff08Bidirectional Encoder Representations from Transformers\uff09","text":"<ul> <li>\u63d0\u51fa\u8005\uff1aGoogle AI\uff082018\uff09</li> <li>\u6a21\u578b\u7ed3\u6784\uff1aTransformer Encoder\uff08\u53cc\u5411\uff09</li> <li>\u9884\u8bad\u7ec3\u4efb\u52a1\uff1a<ul> <li>Masked Language Modeling (MLM)\uff1a\u968f\u673a\u906e\u76d6\u4e00\u4e9b\u8bcd\u5e76\u9884\u6d4b\u5b83\u4eec\u3002</li> <li>Next Sentence Prediction (NSP)\uff1a\u5224\u65ad\u4e24\u4e2a\u53e5\u5b50\u662f\u5426\u4e3a\u76f8\u90bb\u53e5\u3002</li> </ul> </li> </ul>"},{"location":"machinelearning/ml/features/#bert","title":"BERT \u7279\u70b9","text":"<ul> <li>\u53cc\u5411\u5efa\u6a21\uff1a\u80fd\u540c\u65f6\u770b\u5230\u5de6\u53f3\u4e0a\u4e0b\u6587\u3002</li> <li>\u4e0a\u4e0b\u6587\u611f\u77e5\u8868\u793a\uff1a\u8bcd\u5411\u91cf\u4f9d\u8d56\u6240\u5728\u53e5\u5b50\u8bed\u4e49\u3002</li> <li>\u53ef\u5fae\u8c03\u6027\u5f3a\uff1a\u51e0\u4e4e\u9002\u7528\u4e8e\u6240\u6709\u4e0b\u6e38 NLP \u4efb\u52a1\uff08\u5206\u7c7b\u3001\u95ee\u7b54\u3001NER \u7b49\uff09\u3002</li> </ul>"},{"location":"machinelearning/ml/features/#bert-transformers","title":"BERT \u5e94\u7528\u793a\u4f8b\uff08\u4f7f\u7528 Transformers \u5e93\uff09","text":"<pre><code>from transformers import BertTokenizer, BertModel\nimport torch\n\n# \u52a0\u8f7d\u9884\u8bad\u7ec3\u6a21\u578b\u548c\u5206\u8bcd\u5668\ntokenizer = BertTokenizer.from_pretrained(\"bert-base-uncased\")\nmodel = BertModel.from_pretrained(\"bert-base-uncased\")\n\n# \u7f16\u7801\u8f93\u5165\u6587\u672c\ninputs = tokenizer(\"Natural Language Processing is amazing!\", return_tensors=\"pt\")\noutputs = model(**inputs)\n\n# \u83b7\u53d6\u6700\u540e\u4e00\u5c42\u7684\u8bcd\u5411\u91cf\nlast_hidden_states = outputs.last_hidden_state\nprint(last_hidden_states.shape)  # (batch_size, seq_len, hidden_size)\n</code></pre>"},{"location":"machinelearning/ml/features/#word2vec_1","title":"\u56db\u3001Word2Vec","text":"<p>Word2Vec \u662f\u6700\u7ecf\u5178\u7684\u8bcd\u5d4c\u5165\uff08word embedding\uff09\u65b9\u6cd5\u4e4b\u4e00\uff0c\u7531 Google \u4e8e 2013 \u5e74\u63d0\u51fa\uff0c\u7528\u795e\u7ecf\u7f51\u7edc\u5b66\u4e60\u8bcd\u7684\u7a20\u5bc6\u5411\u91cf\u8868\u793a\u3002</p>"},{"location":"machinelearning/ml/features/#41-word2vec","title":"4.1 \u4e3a\u4ec0\u4e48\u9700\u8981 Word2Vec\uff1f","text":"<p>\u4f20\u7edf\u7684\u8bcd\u8868\u793a\u65b9\u6cd5\uff08\u5982 one-hot \u7f16\u7801\uff09\u6709\u4ee5\u4e0b\u7f3a\u70b9\uff1a</p> <ul> <li>\u7ef4\u5ea6\u9ad8\uff1a\u8bcd\u8868\u5927\u65f6\uff0c\u5411\u91cf\u7ef4\u5ea6\u4e5f\u975e\u5e38\u5927\u3002</li> <li>\u7a00\u758f\uff1a\u7edd\u5927\u591a\u6570\u7ef4\u5ea6\u90fd\u662f 0\u3002</li> <li>\u4e0d\u542b\u8bed\u4e49\u5173\u7cfb\uff1a\u5982 \u201cking\u201d \u4e0e \u201cqueen\u201d \u4e4b\u95f4\u6ca1\u6709\u4efb\u4f55\u5411\u91cf\u5173\u7cfb\u3002</li> </ul> <p>Info</p> <p>Word2Vec \u901a\u8fc7\u8bad\u7ec3\u5b66\u4e60\u51fa\u5177\u6709\u8bed\u4e49\u4fe1\u606f\u7684\u4f4e\u7ef4\u7a20\u5bc6\u5411\u91cf\uff08Dense Vector\uff09\uff0c\u80fd\u8ba9\u201c\u8bed\u4e49\u76f8\u8fd1\u201d\u7684\u8bcd\u5728\u5411\u91cf\u7a7a\u95f4\u4e2d\u201c\u9760\u5f97\u66f4\u8fd1\u201d\u3002</p>"},{"location":"machinelearning/ml/features/#42-word2vec","title":"4.2 Word2Vec \u7684\u4e24\u79cd\u6a21\u578b","text":""},{"location":"machinelearning/ml/features/#1-cbowcontinuous-bag-of-words","title":"1. CBOW\uff08Continuous Bag of Words\uff09","text":"<ul> <li>\u8f93\u5165\uff1a\u4e0a\u4e0b\u6587\u8bcd\uff08context\uff09</li> <li>\u8f93\u51fa\uff1a\u76ee\u6807\u8bcd\uff08target word\uff09</li> <li>\u76ee\u6807\uff1a\u4ece\u4e0a\u4e0b\u6587\u8bcd\u9884\u6d4b\u4e2d\u5fc3\u8bcd\u3002</li> </ul>"},{"location":"machinelearning/ml/features/#_7","title":"\u793a\u4f8b\uff1a","text":"<ul> <li>\u7ed9\u5b9a\u53e5\u5b50\uff1a\u201cI love natural language processing\u201d</li> <li>\u4e2d\u5fc3\u8bcd\u4e3a <code>\"natural\"</code>\uff0c\u4e0a\u4e0b\u6587\u8bcd\u4e3a <code>[I, love, language, processing]</code></li> <li>CBOW \u7684\u4efb\u52a1\u662f\uff1a\u6839\u636e\u4e0a\u4e0b\u6587 <code>[I, love, language, processing]</code> \u6765\u9884\u6d4b <code>\"natural\"</code></li> </ul>"},{"location":"machinelearning/ml/features/#_8","title":"\u7279\u70b9\uff1a","text":"<ul> <li>\u66f4\u9002\u5408\u5c0f\u8bed\u6599</li> <li>\u8bad\u7ec3\u901f\u5ea6\u5feb\uff0c\u6548\u679c\u7a33\u5b9a</li> </ul>"},{"location":"machinelearning/ml/features/#2-skip-gram","title":"2. Skip-Gram","text":"<ul> <li>\u8f93\u5165\uff1a\u4e2d\u5fc3\u8bcd\uff08target\uff09</li> <li>\u8f93\u51fa\uff1a\u4e0a\u4e0b\u6587\u8bcd\uff08context\uff09</li> <li>\u76ee\u6807\uff1a\u4ece\u4e2d\u5fc3\u8bcd\u9884\u6d4b\u5176\u4e0a\u4e0b\u6587\u8bcd\u3002</li> </ul>"},{"location":"machinelearning/ml/features/#_9","title":"\u793a\u4f8b\uff1a","text":"<ul> <li>\u7ed9\u5b9a\u4e2d\u5fc3\u8bcd <code>\"natural\"</code></li> <li>\u9884\u6d4b\u5176\u4e0a\u4e0b\u6587\u8bcd <code>[I, love, language, processing]</code></li> </ul>"},{"location":"machinelearning/ml/features/#_10","title":"\u7279\u70b9\uff1a","text":"<ul> <li>\u66f4\u9002\u5408\u5927\u8bed\u6599</li> <li>\u5bf9\u4f4e\u9891\u8bcd\u6548\u679c\u66f4\u597d</li> <li>\u8bad\u7ec3\u65f6\u95f4\u76f8\u5bf9\u8f83\u957f\uff0c\u4f46\u8bed\u4e49\u8868\u8fbe\u80fd\u529b\u5f3a</li> </ul>"},{"location":"machinelearning/ml/features/#cbow-vs-skip-gram","title":"CBOW vs Skip-Gram \u5bf9\u6bd4","text":"\u6a21\u578b \u8f93\u5165 \u8f93\u51fa \u4f18\u52bf \u52a3\u52bf CBOW \u4e0a\u4e0b\u6587\u8bcd \u4e2d\u5fc3\u8bcd \u5feb\u901f\uff0c\u7a33\u5b9a \u4f4e\u9891\u8bcd\u6548\u679c\u4e00\u822c Skip-Gram \u4e2d\u5fc3\u8bcd \u4e0a\u4e0b\u6587\u8bcd \u4f4e\u9891\u8bcd\u5b66\u4e60\u80fd\u529b\u5f3a \u8bad\u7ec3\u8f83\u6162"},{"location":"machinelearning/ml/features/#43","title":"4.3 \u539f\u7406\u516c\u5f0f","text":"<p>\u4ee5 Skip-Gram \u6a21\u578b\u4e3a\u4f8b\uff0c\u5176\u6838\u5fc3\u76ee\u6807\u662f\uff1a</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u4e2d\u5fc3\u8bcd\uff0c\u9884\u6d4b\u5176\u4e0a\u4e0b\u6587\u4e2d\u51fa\u73b0\u7684\u8bcd\u8bed\u3002</p>"},{"location":"machinelearning/ml/features/#skip-gram","title":"Skip-Gram \u7684\u76ee\u6807\u51fd\u6570\uff1a","text":"<p>\u6700\u5927\u5316\u8bed\u6599\u4e2d\u6bcf\u4e2a\u8bcd\u7684\u4e0a\u4e0b\u6587\u8bcd\u7684\u6761\u4ef6\u6982\u7387\u4e58\u79ef\uff1a</p> \\[ \\mathcal{L} = \\prod_{t=1}^{T} \\prod_{\\substack{-c \\leq j \\leq c \\\\ j \\ne 0}} P(w_{t+j} \\mid w_t) \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\( T \\)\uff1a\u8bed\u6599\u4e2d\u7684\u8bcd\u603b\u6570  </li> <li>\\( c \\)\uff1a\u4e0a\u4e0b\u6587\u7a97\u53e3\u5927\u5c0f  </li> <li>\\( w_t \\)\uff1a\u5f53\u524d\u4f4d\u7f6e\u7684\u8bcd\uff08\u4e2d\u5fc3\u8bcd\uff09  </li> <li>\\( w_{t+j} \\)\uff1a\u4e2d\u5fc3\u8bcd\u5468\u56f4\u7684\u4e0a\u4e0b\u6587\u8bcd</li> </ul>"},{"location":"machinelearning/ml/features/#softmax","title":"\u6761\u4ef6\u6982\u7387\u7684\u5efa\u6a21\uff08Softmax\uff09\uff1a","text":"\\[ P(w_O \\mid w_I) = \\frac{\\exp\\left(v_{w_O}^\\top \\cdot v_{w_I}\\right)}{\\sum_{w=1}^{V} \\exp\\left(v_{w}^\\top \\cdot v_{w_I}\\right)} \\] <ul> <li>\\( v_{w_I} \\)\uff1a\u8f93\u5165\u8bcd \\( w_I \\) \u7684\u8bcd\u5411\u91cf\uff08\u4e2d\u5fc3\u8bcd\uff09</li> <li>\\( v_{w_O} \\)\uff1a\u8f93\u51fa\u8bcd \\( w_O \\) \u7684\u8bcd\u5411\u91cf\uff08\u4e0a\u4e0b\u6587\u8bcd\uff09</li> <li>\\( V \\)\uff1a\u8bcd\u8868\u5927\u5c0f\uff08vocabulary size\uff09</li> </ul>"},{"location":"machinelearning/ml/features/#softmax_1","title":"\u95ee\u9898\uff1aSoftmax \u8ba1\u7b97\u4ee3\u4ef7\u9ad8","text":"<ul> <li>\u6bcf\u6b21\u66f4\u65b0\u90fd\u9700\u8981\u8ba1\u7b97\u6574\u4e2a\u8bcd\u8868\u4e2d\u6240\u6709\u8bcd\u7684\u5f97\u5206\u548c\u5f52\u4e00\u5316</li> <li>\u8bcd\u8868\u901a\u5e38\u5f88\u5927\uff08\u4e0a\u4e07\u751a\u81f3\u767e\u4e07\u7ea7\uff09\uff0c\u5bfc\u81f4\u8ba1\u7b97\u6548\u7387\u4f4e</li> </ul>"},{"location":"machinelearning/ml/features/#_11","title":"\u89e3\u51b3\u65b9\u6848\uff08\u52a0\u901f\u6280\u5de7\uff09\uff1a","text":""},{"location":"machinelearning/ml/features/#1-hierarchical-softmax-softmax","title":"1. Hierarchical Softmax\uff08\u5c42\u6b21\u5316 Softmax\uff09","text":"<ul> <li>\u6784\u5efa\u4e00\u68f5\u970d\u592b\u66fc\u6811\uff08Huffman Tree\uff09</li> <li>\u6bcf\u4e2a\u8bcd\u662f\u6811\u4e0a\u7684\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9</li> <li>\u53ea\u9700\u6cbf\u8def\u5f84\u66f4\u65b0\u8282\u70b9\uff0c\u590d\u6742\u5ea6\u964d\u4e3a \\( O(\\log V) \\)</li> </ul>"},{"location":"machinelearning/ml/features/#2-negative-sampling","title":"2. Negative Sampling\uff08\u8d1f\u91c7\u6837\uff09","text":"<ul> <li>\u6bcf\u6b21\u53ea\u4f18\u5316\u4e00\u4e2a\u6b63\u6837\u672c + \u5c11\u91cf\u8d1f\u6837\u672c\uff08\u5982 5-20 \u4e2a\uff09</li> <li>\u8bad\u7ec3\u901f\u5ea6\u663e\u8457\u63d0\u5347\uff0c\u4e14\u6548\u679c\u7a33\u5b9a</li> <li>\u672c\u8d28\u4e0a\u662f\u7528 logistic \u56de\u5f52\u8bad\u7ec3\u4e00\u4e2a\u4e8c\u5206\u7c7b\u5668\uff1a</li> </ul> \\[ \\log \\sigma(v_{w_O}^\\top v_{w_I}) + \\sum_{i=1}^{k} \\mathbb{E}_{w_i \\sim P_n(w)} \\left[ \\log \\sigma(-v_{w_i}^\\top v_{w_I}) \\right] \\] <ul> <li>\\( \\sigma(x) \\)\uff1asigmoid \u51fd\u6570</li> <li>\\( P_n(w) \\)\uff1a\u8d1f\u6837\u672c\u5206\u5e03</li> <li>\\( k \\)\uff1a\u8d1f\u6837\u672c\u6570\u91cf</li> </ul>"},{"location":"machinelearning/ml/features/#44-gensim-word2vec","title":"4.4 \u4f7f\u7528 Gensim \u8bad\u7ec3 Word2Vec\uff08\u5b9e\u6218\uff09","text":""},{"location":"machinelearning/ml/features/#word2vec_2","title":"\u8bad\u7ec3 Word2Vec \u6a21\u578b","text":"<pre><code>from gensim.models import Word2Vec\n\n# \u8bad\u7ec3\u8bed\u6599\uff1a\u6bcf\u53e5\u8bdd\u662f\u4e00\u4e2a\u5206\u8bcd\u540e\u7684\u5217\u8868\nsentences = [[\"\u6211\", \"\u7231\", \"\u81ea\u7136\", \"\u8bed\u8a00\", \"\u5904\u7406\"], [\"\u8bed\u8a00\", \"\u6a21\u578b\", \"\u5f88\", \"\u6709\u8da3\"]]\n\n# \u8bad\u7ec3\u6a21\u578b\nmodel = Word2Vec(\n    sentences, \n    vector_size=100,  # \u8bcd\u5411\u91cf\u7ef4\u5ea6\n    window=5,         # \u4e0a\u4e0b\u6587\u7a97\u53e3\u5927\u5c0f\n    min_count=1,      # \u6700\u5c0f\u8bcd\u9891\n    sg=1              # sg=1 \u8868\u793a Skip-Gram\uff0csg=0 \u8868\u793a CBOW\n)\n\n# \u67e5\u770b\u67d0\u4e2a\u8bcd\u7684\u8bcd\u5411\u91cf\nprint(model.wv[\"\u8bed\u8a00\"])\n\n# \u627e\u51fa\u4e0e\u201c\u8bed\u8a00\u201d\u6700\u76f8\u4f3c\u7684\u8bcd\nprint(model.wv.most_similar(\"\u8bed\u8a00\"))\n</code></pre>"},{"location":"machinelearning/ml/features/#_12","title":"\u4fdd\u5b58\u548c\u52a0\u8f7d\u6a21\u578b","text":"<pre><code># \u4fdd\u5b58\u6a21\u578b\nmodel.save(\"word2vec.model\")\n\n# \u52a0\u8f7d\u6a21\u578b\nfrom gensim.models import Word2Vec\nmodel = Word2Vec.load(\"word2vec.model\")\n</code></pre>"},{"location":"machinelearning/ml/features/#45-word2vec","title":"4.5 Word2Vec \u7684\u5e94\u7528\u573a\u666f","text":"<ul> <li>\u6587\u672c\u5206\u7c7b\uff08\u8bcd\u5411\u91cf\u4f5c\u4e3a\u8f93\u5165\uff09</li> <li>\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\uff08NER\uff09</li> <li>\u60c5\u611f\u5206\u6790</li> <li>\u76f8\u4f3c\u8bcd\u63a8\u8350 / \u641c\u7d22\u5f15\u64ce</li> <li>\u53ef\u89c6\u5316\uff08\u5982 t-SNE \u964d\u7ef4\uff09</li> </ul>"},{"location":"machinelearning/ml/features/#46","title":"4.6 \u5411\u91cf\u63a8\u7406\u7684\u795e\u5947\u4e4b\u5904","text":"<p>Word2Vec \u5411\u91cf\u7a7a\u95f4\u53ef\u4ee5\u6267\u884c\u8bed\u4e49\u7c7b\u6bd4\uff1a</p> \\[     \\text{vector}(\u201c\u56fd\u738b\u201d) - \\text{vector}(\u201c\u7537\u4eba\u201d) + \\text{vector}(\u201c\u5973\u4eba\u201d) \\approx \\text{vector}(\u201c\u5973\u738b\u201d) \\] <pre><code>result = model.wv.most_similar(positive=[\"\u5973\", \"\u56fd\u738b\"], negative=[\"\u7537\"])\nprint(result)  # \u53ef\u80fd\u5f97\u5230 \"\u5973\u738b\"\n</code></pre>"},{"location":"machinelearning/ml/features/#47","title":"4.7 \u5e38\u89c1\u95ee\u9898","text":"\u95ee\u9898 \u89e3\u7b54\u8bf4\u660e Word2Vec \u80fd\u5904\u7406\u672a\u767b\u5f55\u8bcd\uff08OOV\uff09\u5417\uff1f \u274c \u4e0d\u80fd\uff0c\u5fc5\u987b\u51fa\u73b0\u5728\u8bad\u7ec3\u8bed\u6599\u4e2d\uff0c\u672a\u89c1\u8fc7\u7684\u8bcd\u6ca1\u6709\u5411\u91cf\u3002 Word2Vec \u53ef\u4ee5\u7528\u4e8e\u4e2d\u6587\u5417\uff1f \u2705 \u53ef\u4ee5\uff0c\u4f46\u5fc5\u987b\u5148\u5bf9\u4e2d\u6587\u8fdb\u884c\u5206\u8bcd\u5904\u7406\uff08\u5982\u4f7f\u7528jieba\uff09\u3002 \u5982\u4f55\u9009\u62e9 vector_size \u53c2\u6570\uff1f \u5e38\u7528\u4e3a 100\u3001200\u3001300\uff0c\u63a8\u8350\u6839\u636e\u4efb\u52a1\u590d\u6742\u5ea6\u548c\u8bed\u6599\u91cf\u505a\u8c03\u4f18\u3002 CBOW \u548c Skip-Gram \u54ea\u4e2a\u66f4\u597d\uff1f CBOW \u5feb\u901f\u4e14\u9002\u7528\u4e8e\u9ad8\u9891\u8bcd\uff0cSkip-Gram \u66f4\u9002\u5408\u8868\u793a\u4f4e\u9891\u8bcd\u8bed\u4e49\u3002 \u8bad\u7ec3\u8bed\u6599\u8d8a\u591a\u8d8a\u597d\u5417\uff1f \u2705 \u662f\u7684\uff0c\u8bed\u6599\u8d8a\u5927\uff0c\u8bcd\u5411\u91cf\u8d8a\u80fd\u6355\u6349\u590d\u6742\u8bed\u4e49\u5173\u7cfb\u3002 Word2Vec \u80fd\u8868\u793a\u591a\u4e49\u8bcd\u5417\uff1f \u274c \u4e0d\u80fd\uff0c\u6bcf\u4e2a\u8bcd\u53ea\u6709\u4e00\u4e2a\u9759\u6001\u5411\u91cf\uff0c\u65e0\u6cd5\u533a\u5206\u8bed\u5883\u3002 \u662f\u5426\u9700\u8981\u6807\u51c6\u5316\u8bcd\u5411\u91cf\uff1f \u8bad\u7ec3\u540e\u901a\u5e38\u4f1a\u8fdb\u884c\u5f52\u4e00\u5316\uff0c\u4ee5\u4fbf\u8fdb\u884c\u5411\u91cf\u76f8\u4f3c\u5ea6\u8ba1\u7b97\uff08\u5982\u4f59\u5f26\u76f8\u4f3c\u5ea6\uff09\u3002 Word2Vec \u548c TF-IDF \u6709\u4ec0\u4e48\u533a\u522b\uff1f TF-IDF \u662f\u7a00\u758f\u8868\u793a\uff0cWord2Vec \u662f\u4f4e\u7ef4\u7a20\u5bc6\u8868\u793a\uff0c\u4e14\u5305\u542b\u8bed\u4e49\u4fe1\u606f\u3002 <p>\u63d0\u793a\uff1a</p> <ul> <li>\u82e5\u4efb\u52a1\u5bf9\u8bcd\u8bed\u7684\u4e0a\u4e0b\u6587\u8bed\u4e49\u533a\u5206\u5ea6\u8981\u6c42\u5f88\u9ad8\uff08\u5982\u60c5\u611f\u5206\u6790\u3001\u95ee\u7b54\u7cfb\u7edf\uff09\uff0c\u5efa\u8bae\u4f7f\u7528\u4e0a\u4e0b\u6587\u611f\u77e5\u6a21\u578b\uff08\u5982 ELMo \u6216 BERT\uff09\u3002</li> <li>Word2Vec \u662f\u8f7b\u91cf\u7ea7\u3001\u8ba1\u7b97\u6210\u672c\u4f4e\u7684\u9996\u9009\u5411\u91cf\u8868\u793a\u65b9\u5f0f\uff0c\u9002\u5408\u5f88\u591a\u5d4c\u5165\u9700\u6c42\u3002</li> </ul>"},{"location":"machinelearning/ml/features/#48","title":"4.8 \u603b\u7ed3","text":"\u9879\u76ee \u5185\u5bb9 \u6a21\u578b\u540d\u79f0 Word2Vec \u6838\u5fc3\u7ed3\u6784 CBOW\uff08\u4e0a\u4e0b\u6587\u9884\u6d4b\u4e2d\u5fc3\u8bcd\uff09Skip-Gram\uff08\u4e2d\u5fc3\u8bcd\u9884\u6d4b\u4e0a\u4e0b\u6587\uff09 \u8f93\u5165 \u5355\u8bcd ID \u6216\u4e0a\u4e0b\u6587\u8bcd \u8f93\u51fa \u5bf9\u5e94\u8bcd\u5411\u91cf \u4f18\u70b9 \u8bed\u4e49\u8868\u8fbe\u80fd\u529b\u5f3a\u3001\u8bad\u7ec3\u901f\u5ea6\u5feb\u3001\u7ed3\u6784\u7b80\u5355\u3001\u9002\u7528\u4e8e\u591a\u79cd\u4e0b\u6e38\u4efb\u52a1 \u7f3a\u70b9 \u9759\u6001\u8868\u793a\uff08\u65e0\u4e0a\u4e0b\u6587\u53d8\u5316\uff09\u65e0\u6cd5\u5904\u7406 OOV \u548c\u591a\u4e49\u8bcd \u8bad\u7ec3\u65b9\u6cd5 \u4f7f\u7528\u6d45\u5c42\u795e\u7ecf\u7f51\u7edc + Softmax \u6216\u8d1f\u91c7\u6837\uff08Negative Sampling\uff09 \u52a0\u901f\u6280\u5de7 Negative Sampling\u3001Hierarchical Softmax \u5e94\u7528\u573a\u666f \u6587\u672c\u5206\u7c7b\u3001\u805a\u7c7b\u3001\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u3001\u60c5\u611f\u5206\u6790\u3001\u641c\u7d22\u6392\u5e8f\u3001\u63a8\u8350\u7cfb\u7edf\u7b49 \u66ff\u4ee3\u65b9\u6848 GloVe\u3001FastText\u3001ELMo\u3001BERT \u7b49\u4e0a\u4e0b\u6587\u76f8\u5173\u6a21\u578b"},{"location":"machinelearning/ml/forward/","title":"\u7b2c\u4e5d\u7ae0\uff1a\u524d\u5411\u795e\u7ecf\u7f51\u7edc","text":""},{"location":"machinelearning/ml/forward/#1","title":"1\ufe0f\u20e3 \u7b80\u4ecb","text":"<p>\u524d\u5411\u795e\u7ecf\u7f51\u7edc\u662f\u6700\u57fa\u7840\u7684\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\uff0c\u6570\u636e\u5728\u7f51\u7edc\u4e2d\u5355\u5411\u6d41\u52a8\uff0c\u4e0d\u5b58\u5728\u5faa\u73af\u6216\u53cd\u9988\u8fde\u63a5\u3002\u5b83\u662f\u73b0\u4ee3\u6df1\u5ea6\u5b66\u4e60\u7684\u57fa\u7840\u3002</p>"},{"location":"machinelearning/ml/forward/#2","title":"2\ufe0f\u20e3 \u57fa\u672c\u7ed3\u6784","text":"<pre><code>\u8f93\u5165\u5c42 \u2192 \u9690\u85cf\u5c42 \u2192 \u8f93\u51fa\u5c42\n</code></pre> <ul> <li>\u8f93\u5165\u5c42\uff1a\u63a5\u6536\u8f93\u5165\u7279\u5f81  </li> <li>\u9690\u85cf\u5c42\uff1a\u4e00\u4e2a\u6216\u591a\u4e2a\uff0c\u6bcf\u5c42\u7531\u591a\u4e2a\u795e\u7ecf\u5143\u6784\u6210  </li> <li>\u8f93\u51fa\u5c42\uff1a\u8f93\u51fa\u6700\u7ec8\u9884\u6d4b\u7ed3\u679c</li> </ul> <p>\u6bcf\u4e00\u5c42\u7684\u795e\u7ecf\u5143\u4e0e\u4e0b\u4e00\u5c42\u5168\u8fde\u63a5\u3002</p>"},{"location":"machinelearning/ml/forward/#3","title":"3\ufe0f\u20e3 \u6570\u5b66\u539f\u7406","text":"<p>\u5bf9\u4e8e\u4efb\u610f\u4e00\u5c42\uff1a</p> \\[ z^{(l)} = W^{(l)} \\cdot a^{(l-1)} + b^{(l)} \\\\ a^{(l)} = f(z^{(l)}) \\] <ul> <li>\\( W^{(l)} \\)\uff1a\u6743\u91cd\u77e9\u9635\uff08\u7b2c \\(l\\) \u5c42\uff09  </li> <li>\\( b^{(l)} \\)\uff1a\u504f\u7f6e\u5411\u91cf  </li> <li>\\( f \\)\uff1a\u6fc0\u6d3b\u51fd\u6570\uff0c\u5982 ReLU\u3001Sigmoid\u3001Tanh  </li> <li>\\( a^{(l)} \\)\uff1a\u7b2c \\(l\\) \u5c42\u7684\u8f93\u51fa</li> </ul>"},{"location":"machinelearning/ml/forward/#4","title":"4\ufe0f\u20e3 \u5e38\u89c1\u6fc0\u6d3b\u51fd\u6570","text":"\u51fd\u6570 \u8868\u8fbe\u5f0f \u4f5c\u7528 Sigmoid \\( \\sigma(x) = \\frac{1}{1+e^{-x}} \\) \u8f93\u51fa\u8303\u56f4 (0,1)\uff0c\u7528\u4e8e\u6982\u7387 Tanh \\( \\tanh(x) = \\frac{e^x - e^{-x}}{e^x + e^{-x}} \\) \u8f93\u51fa\u8303\u56f4 (-1,1) ReLU \\( \\text{ReLU}(x) = \\max(0, x) \\) \u975e\u7ebf\u6027\uff0c\u6536\u655b\u901f\u5ea6\u5feb\uff0c\u5e7f\u6cdb\u4f7f\u7528"},{"location":"machinelearning/ml/forward/#5-python-pytorch","title":"5\ufe0f\u20e3 Python \u5b9e\u73b0\uff08\u4f7f\u7528 PyTorch\uff09","text":"<pre><code>import torch\nimport torch.nn as nn\nimport torch.nn.functional as F\n\n# \u5b9a\u4e49\u524d\u5411\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\nclass FeedForwardNN(nn.Module):\n    def __init__(self, input_dim, hidden_dim, output_dim):\n        super(FeedForwardNN, self).__init__()\n        self.fc1 = nn.Linear(input_dim, hidden_dim)  # \u8f93\u5165\u5c42\u5230\u9690\u85cf\u5c42\n        self.fc2 = nn.Linear(hidden_dim, output_dim)  # \u9690\u85cf\u5c42\u5230\u8f93\u51fa\u5c42\n\n    def forward(self, x):\n        x = F.relu(self.fc1(x))  # \u6fc0\u6d3b\u51fd\u6570 ReLU\n        x = self.fc2(x)\n        return x\n\n# \u793a\u4f8b\nmodel = FeedForwardNN(input_dim=4, hidden_dim=8, output_dim=3)\nprint(model)\n</code></pre>"},{"location":"machinelearning/ml/forward/#6","title":"6\ufe0f\u20e3 \u8bad\u7ec3\u6d41\u7a0b","text":"<pre><code># \u6a21\u62df\u6570\u636e\nX = torch.randn(100, 4)\ny = torch.randint(0, 3, (100,))\n\n# \u5b9a\u4e49\u635f\u5931\u548c\u4f18\u5316\u5668\ncriterion = nn.CrossEntropyLoss()\noptimizer = torch.optim.Adam(model.parameters(), lr=0.01)\n\n# \u8bad\u7ec3\u5faa\u73af\nfor epoch in range(100):\n    outputs = model(X)\n    loss = criterion(outputs, y)\n\n    optimizer.zero_grad()\n    loss.backward()\n    optimizer.step()\n\n    if epoch % 10 == 0:\n        print(f\"Epoch {epoch}, Loss: {loss.item():.4f}\")\n</code></pre>"},{"location":"machinelearning/ml/forward/#7-vs","title":"7\ufe0f\u20e3 \u524d\u5411\u4f20\u64ad vs \u53cd\u5411\u4f20\u64ad","text":"\u9879\u76ee \u63cf\u8ff0 \u524d\u5411\u4f20\u64ad \u4ece\u8f93\u5165\u5c42\u5230\u8f93\u51fa\u5c42\u8ba1\u7b97\u9884\u6d4b\u503c \u53cd\u5411\u4f20\u64ad \u6839\u636e\u635f\u5931\u51fd\u6570\uff0c\u53cd\u5411\u4f20\u64ad\u8bef\u5dee\u5e76\u66f4\u65b0\u6743\u91cd\u53c2\u6570 \u635f\u5931\u51fd\u6570 \u8861\u91cf\u9884\u6d4b\u503c\u4e0e\u771f\u5b9e\u503c\u7684\u8bef\u5dee\uff08\u5982 CrossEntropy\uff09"},{"location":"machinelearning/ml/forward/#8","title":"8\ufe0f\u20e3 \u5e94\u7528\u573a\u666f","text":"<ul> <li>\u56fe\u50cf\u5206\u7c7b\uff08\u5982 MNIST \u624b\u5199\u6570\u5b57\uff09</li> <li>\u4e8c\u5206\u7c7b/\u591a\u5206\u7c7b\u4efb\u52a1</li> <li>\u56de\u5f52\u9884\u6d4b</li> <li>\u7279\u5f81\u63d0\u53d6</li> <li>\u65f6\u95f4\u5e8f\u5217\u5efa\u6a21\uff08\u7ed3\u5408 RNN\uff09</li> </ul>"},{"location":"machinelearning/ml/forward/#9","title":"9\ufe0f\u20e3 \u5e38\u89c1\u95ee\u9898","text":"\u95ee\u9898 \u539f\u56e0\u6216\u89e3\u51b3\u529e\u6cd5 \u68af\u5ea6\u6d88\u5931/\u7206\u70b8 \u4f7f\u7528 ReLU\u3001BatchNorm\u3001\u6743\u91cd\u521d\u59cb\u5316 \u8fc7\u62df\u5408 \u4f7f\u7528 Dropout\u3001\u6b63\u5219\u5316\u3001\u589e\u52a0\u6570\u636e\u91cf \u5b66\u4e60\u7387\u592a\u5927\u6216\u592a\u5c0f \u4f7f\u7528\u4f18\u5316\u5668\u5982 Adam\uff0c\u5e76\u8c03\u8282\u5b66\u4e60\u7387"},{"location":"machinelearning/ml/forward/#_2","title":"\ud83d\udd1f \u603b\u7ed3","text":"\u9879\u76ee \u63cf\u8ff0 \u67b6\u6784 \u8f93\u5165\u5c42 \u2192 \u9690\u85cf\u5c42 \u2192 \u8f93\u51fa\u5c42 \u6570\u636e\u6d41\u52a8 \u5355\u5411\u524d\u5411\uff0c\u65e0\u53cd\u9988 \u6fc0\u6d3b\u51fd\u6570 \u5f15\u5165\u975e\u7ebf\u6027\uff0c\u63d0\u5347\u8868\u8fbe\u80fd\u529b \u8bad\u7ec3\u65b9\u6cd5 \u524d\u5411\u4f20\u64ad + \u53cd\u5411\u4f20\u64ad + \u68af\u5ea6\u4e0b\u964d \u5b9e\u73b0\u65b9\u5f0f \u53ef\u4f7f\u7528 PyTorch / TensorFlow"},{"location":"machinelearning/ml/gan/","title":"\u7b2c\u5341\u4e09\u7ae0\uff1a\u751f\u6210\u5f0f\u5bf9\u6297\u7f51\u7edc","text":""},{"location":"machinelearning/ml/gan/#gan","title":"\ud83e\udde0 \u4e00\u3001\u4ec0\u4e48\u662f GAN\uff1f","text":"<p>\u751f\u6210\u5f0f\u5bf9\u6297\u7f51\u7edc\uff08GAN\uff09 \u662f\u4e00\u79cd\u5f3a\u5927\u7684\u751f\u6210\u6a21\u578b\uff0c\u7531 Ian Goodfellow \u7b49\u4eba\u5728 2014 \u5e74\u63d0\u51fa\uff0c\u6838\u5fc3\u601d\u60f3\u662f\u901a\u8fc7\u4e24\u4e2a\u795e\u7ecf\u7f51\u7edc\u4e4b\u95f4\u7684\u535a\u5f08\u8bad\u7ec3\uff0c\u4ece\u800c\u751f\u6210\u4ee5\u5047\u4e71\u771f\u7684\u6570\u636e\u6837\u672c\u3002</p>"},{"location":"machinelearning/ml/gan/#gan_1","title":"\u2728 GAN \u5305\u542b\u4e24\u4e2a\u4e3b\u8981\u90e8\u5206\uff1a","text":"<ul> <li>\u751f\u6210\u5668\uff08Generator\uff0c\\(G\\)\uff09\uff1a\u63a5\u53d7\u968f\u673a\u566a\u58f0 \\(z\\)\uff0c\u751f\u6210\u4f2a\u9020\u6570\u636e \\(G(z)\\)\u3002</li> <li>\u5224\u522b\u5668\uff08Discriminator\uff0c\\(D\\)\uff09\uff1a\u5224\u65ad\u8f93\u5165\u6570\u636e\u662f\u771f\u5b9e\u7684\uff08\u6765\u81ea\u8bad\u7ec3\u96c6\uff09\u8fd8\u662f\u4f2a\u9020\u7684\uff08\u6765\u81ea\u751f\u6210\u5668\uff09\u3002</li> </ul> <p>\u4e8c\u8005\u901a\u8fc7\u5bf9\u6297\u8bad\u7ec3\uff0c\u4e0d\u65ad\u4f18\u5316\uff0c\u4f7f\u5f97\u751f\u6210\u5668\u80fd\u751f\u6210\u66f4\u903c\u771f\u7684\u6837\u672c\uff0c\u800c\u5224\u522b\u5668\u80fd\u66f4\u51c6\u786e\u5730\u533a\u5206\u771f\u5047\u3002</p>"},{"location":"machinelearning/ml/gan/#_2","title":"\ud83d\udcd0 \u4e8c\u3001\u57fa\u672c\u539f\u7406\u4e0e\u6570\u5b66\u516c\u5f0f","text":""},{"location":"machinelearning/ml/gan/#1-minimax","title":"1. \u76ee\u6807\u51fd\u6570\uff08Minimax \u535a\u5f08\uff09","text":"<p>GAN \u7684\u76ee\u6807\u662f\u4e00\u4e2a\u6781\u5c0f\u6781\u5927\u95ee\u9898\uff1a</p> \\[ \\min_G \\max_D V(D, G) = \\mathbb{E}_{x \\sim p_{\\text{data}}(x)}[\\log D(x)] + \\mathbb{E}_{z \\sim p_z(z)}[\\log(1 - D(G(z)))] \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\(x\\)\uff1a\u771f\u5b9e\u6837\u672c</li> <li>\\(z\\)\uff1a\u751f\u6210\u5668\u7684\u8f93\u5165\u566a\u58f0</li> <li>\\(G(z)\\)\uff1a\u751f\u6210\u6837\u672c</li> <li>\\(D(x)\\)\uff1a\u5224\u522b\u5668\u8ba4\u4e3a \\(x\\) \u4e3a\u771f\u5b9e\u6837\u672c\u7684\u6982\u7387</li> <li>\\(p_{\\text{data}}\\)\uff1a\u771f\u5b9e\u6570\u636e\u7684\u5206\u5e03</li> <li>\\(p_z\\)\uff1a\u566a\u58f0\u5206\u5e03\uff08\u901a\u5e38\u4e3a\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff09</li> </ul>"},{"location":"machinelearning/ml/gan/#pytorch-mnist","title":"\ud83e\uddea \u4e09\u3001PyTorch \u5b9e\u73b0\uff08MNIST \u793a\u4f8b\uff09","text":""},{"location":"machinelearning/ml/gan/#1","title":"1. \u6a21\u578b\u7ed3\u6784","text":"<pre><code>import torch\nimport torch.nn as nn\n\n# \u751f\u6210\u5668\nclass Generator(nn.Module):\n    def __init__(self, noise_dim=100, output_dim=784):\n        super().__init__()\n        self.model = nn.Sequential(\n            nn.Linear(noise_dim, 256), nn.ReLU(),\n            nn.Linear(256, 512), nn.ReLU(),\n            nn.Linear(512, output_dim), nn.Tanh()\n        )\n    def forward(self, z):\n        return self.model(z)\n\n# \u5224\u522b\u5668\nclass Discriminator(nn.Module):\n    def __init__(self, input_dim=784):\n        super().__init__()\n        self.model = nn.Sequential(\n            nn.Linear(input_dim, 512), nn.LeakyReLU(0.2),\n            nn.Linear(512, 256), nn.LeakyReLU(0.2),\n            nn.Linear(256, 1), nn.Sigmoid()\n        )\n    def forward(self, x):\n        return self.model(x)\n</code></pre>"},{"location":"machinelearning/ml/gan/#2","title":"2. \u8bad\u7ec3\u8fc7\u7a0b","text":"<pre><code>import torch.optim as optim\nfrom torch.utils.data import DataLoader\nfrom torchvision import datasets, transforms\n\n# \u521d\u59cb\u5316\u6a21\u578b\u4e0e\u4f18\u5316\u5668\nG = Generator()\nD = Discriminator()\ncriterion = nn.BCELoss()\noptimizer_G = optim.Adam(G.parameters(), lr=0.0002)\noptimizer_D = optim.Adam(D.parameters(), lr=0.0002)\n\n# \u52a0\u8f7d MNIST \u6570\u636e\ntransform = transforms.Compose([\n    transforms.ToTensor(),\n    transforms.Lambda(lambda x: x.view(-1)),\n    transforms.Normalize(0.5, 0.5)\n])\ndataloader = DataLoader(\n    datasets.MNIST(root=\"./data\", train=True, transform=transform, download=True),\n    batch_size=64, shuffle=True\n)\n\n# \u8bad\u7ec3\u5faa\u73af\nfor epoch in range(50):\n    for real_data, _ in dataloader:\n        batch_size = real_data.size(0)\n        real_labels = torch.ones(batch_size, 1)\n        fake_labels = torch.zeros(batch_size, 1)\n\n        # \u8bad\u7ec3\u5224\u522b\u5668\n        z = torch.randn(batch_size, 100)\n        fake_data = G(z)\n        real_output = D(real_data)\n        fake_output = D(fake_data.detach())\n        D_loss = criterion(real_output, real_labels) + criterion(fake_output, fake_labels)\n\n        optimizer_D.zero_grad()\n        D_loss.backward()\n        optimizer_D.step()\n\n        # \u8bad\u7ec3\u751f\u6210\u5668\n        output = D(fake_data)\n        G_loss = criterion(output, real_labels)\n\n        optimizer_G.zero_grad()\n        G_loss.backward()\n        optimizer_G.step()\n\n    print(f\"Epoch {epoch}: D_loss={D_loss.item():.4f}, G_loss={G_loss.item():.4f}\")\n</code></pre>"},{"location":"machinelearning/ml/gan/#_3","title":"\ud83d\udcca \u56db\u3001\u5e38\u89c1\u95ee\u9898\u4e0e\u6539\u8fdb","text":"\u95ee\u9898 \u539f\u56e0\u4e0e\u89e3\u51b3\u65b9\u6cd5 \u8bad\u7ec3\u4e0d\u7a33\u5b9a \u4f7f\u7528 WGAN\u3001\u8c03\u6574\u7f51\u7edc\u7ed3\u6784\u3001\u4f7f\u7528\u5f52\u4e00\u5316\u7b49 \u6a21\u5f0f\u5d29\u6e83\uff08Mode Collapse\uff09 \u52a0\u5165\u566a\u58f0\u3001\u6539\u8fdb\u7f51\u7edc\u7ed3\u6784\uff08\u5982 Unrolled GAN\uff09 \u5224\u522b\u5668\u8fc7\u5f3a\u6216\u8fc7\u5f31 \u4fdd\u6301 G \u548c D \u7684\u8bad\u7ec3\u5e73\u8861\uff1b\u4f7f\u7528\u6807\u7b7e\u5e73\u6ed1\u3001\u68af\u5ea6\u60e9\u7f5a\u7b49"},{"location":"machinelearning/ml/gan/#gan_2","title":"\ud83d\ude80 \u4e94\u3001\u5e38\u89c1 GAN \u53d8\u4f53","text":"\u53d8\u4f53 \u7279\u70b9\u63cf\u8ff0 DCGAN \u4f7f\u7528 CNN \u67b6\u6784\uff0c\u63d0\u5347\u56fe\u50cf\u751f\u6210\u6548\u679c CGAN \u6761\u4ef6 GAN\uff0c\u751f\u6210\u7279\u5b9a\u7c7b\u522b\u6837\u672c\uff08\u5982\u8f93\u5165\u6807\u7b7e\uff09 WGAN \u4f7f\u7528 Wasserstein \u8ddd\u79bb\uff0c\u63d0\u5347\u8bad\u7ec3\u7a33\u5b9a\u6027 WGAN-GP WGAN \u52a0\u5165\u68af\u5ea6\u60e9\u7f5a\uff0c\u8fdb\u4e00\u6b65\u6539\u5584\u6536\u655b\u6027 LSGAN \u4f7f\u7528\u6700\u5c0f\u4e8c\u4e58\u635f\u5931\uff0c\u51cf\u5c11\u68af\u5ea6\u6d88\u5931 StyleGAN \u9ad8\u8d28\u91cf\u4eba\u8138\u751f\u6210\uff0c\u63a7\u5236\u98ce\u683c\u4e0e\u5185\u5bb9 CycleGAN \u65e0\u9700\u6210\u5bf9\u56fe\u50cf\u8fdb\u884c\u98ce\u683c\u8fc1\u79fb\uff08\u5982\u5c06\u9a6c\u53d8\u6210\u6591\u9a6c\uff09"},{"location":"machinelearning/ml/gan/#_4","title":"\ud83e\uddf1 \u516d\u3001\u5e94\u7528\u573a\u666f","text":"<ul> <li>\u56fe\u50cf\u751f\u6210\u3001\u4e0a\u8272\u4e0e\u4fee\u590d</li> <li>\u56fe\u50cf\u8d85\u5206\u8fa8\u7387\uff08SRGAN\uff09</li> <li>\u56fe\u50cf\u98ce\u683c\u8f6c\u6362\uff08CycleGAN\uff09</li> <li>\u6570\u636e\u589e\u5f3a\uff08Data Augmentation\uff09</li> <li>\u97f3\u4e50\u4e0e\u8bed\u97f3\u751f\u6210</li> <li>\u6587\u672c\u751f\u6210\uff08seqGAN \u7b49\uff09</li> <li>\u533b\u7597\u56fe\u50cf\u5408\u6210\u4e0e\u6570\u636e\u8865\u5168</li> </ul>"},{"location":"machinelearning/ml/gan/#_5","title":"\ud83d\udcda \u4e03\u3001\u63a8\u8350\u8d44\u6e90","text":"<ul> <li>\u8bba\u6587\u539f\u6587\uff1aGenerative Adversarial Nets (2014)</li> <li>\u5b9e\u8df5\u6559\u7a0b\uff1aTensorFlow / PyTorch \u5b98\u65b9\u6587\u6863</li> <li>GitHub \u793a\u4f8b\u9879\u76ee\uff1a<code>pytorch/examples</code>, <code>eriklindernoren/PyTorch-GAN</code></li> </ul>"},{"location":"machinelearning/ml/optiom/","title":"\u7b2c\u4e03\u7ae0\uff1a\u4f18\u5316\u7b97\u6cd5","text":""},{"location":"machinelearning/ml/optiom/#1","title":"1\ufe0f\u20e3 \u4ec0\u4e48\u662f\u4f18\u5316\u7b97\u6cd5\uff1f","text":"<p>\u4f18\u5316\u7b97\u6cd5\u662f\u5728\u673a\u5668\u5b66\u4e60\u6a21\u578b\u8bad\u7ec3\u4e2d\u7528\u4e8e\u6700\u5c0f\u5316\u6216\u6700\u5927\u5316\u76ee\u6807\u51fd\u6570\uff08\u901a\u5e38\u662f\u635f\u5931\u51fd\u6570\uff09\u7684\u7b97\u6cd5\u3002\u6838\u5fc3\u76ee\u6807\u662f\uff1a\u627e\u5230\u4e00\u7ec4\u53c2\u6570\uff0c\u4f7f\u6a21\u578b\u5728\u8bad\u7ec3\u6570\u636e\u4e0a\u8868\u73b0\u6700\u597d\u3002</p>"},{"location":"machinelearning/ml/optiom/#2","title":"2\ufe0f\u20e3 \u5e38\u89c1\u672f\u8bed","text":"\u672f\u8bed \u542b\u4e49\u8bf4\u660e \u635f\u5931\u51fd\u6570 \u8861\u91cf\u6a21\u578b\u9884\u6d4b\u4e0e\u771f\u5b9e\u6807\u7b7e\u4e4b\u95f4\u5dee\u5f02\u7684\u51fd\u6570\uff08\u5982MSE\u3001\u4ea4\u53c9\u71b5\uff09 \u68af\u5ea6 \u76ee\u6807\u51fd\u6570\u5728\u53c2\u6570\u7a7a\u95f4\u4e2d\u7684\u5bfc\u6570\uff0c\u7528\u4e8e\u6307\u660e\u6700\u901f\u4e0b\u964d\u65b9\u5411 \u5b66\u4e60\u7387 \u63a7\u5236\u6bcf\u6b21\u53c2\u6570\u66f4\u65b0\u7684\u6b65\u957f \u5c40\u90e8\u6700\u5c0f\u503c \u76f8\u5bf9\u4e8e\u90bb\u57df\u662f\u6700\u5c0f\u7684\u503c\uff0c\u4f46\u53ef\u80fd\u4e0d\u662f\u6574\u4f53\u6700\u4f18 \u5168\u5c40\u6700\u5c0f\u503c \u5728\u6574\u4e2a\u51fd\u6570\u5b9a\u4e49\u57df\u5185\u6700\u5c0f\u7684\u503c"},{"location":"machinelearning/ml/optiom/#3-gradient-descent","title":"3\ufe0f\u20e3 \u68af\u5ea6\u4e0b\u964d\u6cd5\uff08Gradient Descent\uff09","text":""},{"location":"machinelearning/ml/optiom/#_2","title":"\u57fa\u672c\u601d\u60f3\uff1a","text":"<p>\u6839\u636e\u635f\u5931\u51fd\u6570\u7684\u68af\u5ea6\uff0c\u4e0d\u65ad\u6cbf\u68af\u5ea6\u4e0b\u964d\u65b9\u5411\u66f4\u65b0\u53c2\u6570\uff0c\u76f4\u5230\u6536\u655b\u3002</p>"},{"location":"machinelearning/ml/optiom/#_3","title":"\u66f4\u65b0\u516c\u5f0f\uff1a","text":"\\[ \\theta := \\theta - \\eta \\cdot \\nabla_\\theta J(\\theta) \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\( \\theta \\)\uff1a\u6a21\u578b\u53c2\u6570  </li> <li>\\( \\eta \\)\uff1a\u5b66\u4e60\u7387  </li> <li>\\( J(\\theta) \\)\uff1a\u635f\u5931\u51fd\u6570  </li> <li>\\( \\nabla_\\theta J(\\theta) \\)\uff1a\u635f\u5931\u51fd\u6570\u5bf9\u53c2\u6570\u7684\u68af\u5ea6</li> </ul>"},{"location":"machinelearning/ml/optiom/#4","title":"4\ufe0f\u20e3 \u68af\u5ea6\u4e0b\u964d\u7684\u4e09\u79cd\u53d8\u4f53","text":"\u7c7b\u578b \u7279\u70b9 \u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff08BGD\uff09 \u4f7f\u7528\u5168\u90e8\u8bad\u7ec3\u6570\u636e\u8ba1\u7b97\u68af\u5ea6\uff0c\u7a33\u5b9a\u4f46\u6162 \u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff08SGD\uff09 \u6bcf\u6b21\u7528\u4e00\u4e2a\u6837\u672c\u66f4\u65b0\u68af\u5ea6\uff0c\u566a\u58f0\u5927\u4f46\u901f\u5ea6\u5feb \u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff08Mini-Batch\uff09 \u6bcf\u6b21\u7528\u4e00\u5c0f\u6279\u6570\u636e\u66f4\u65b0\u68af\u5ea6\uff0c\u7ed3\u5408\u4e86\u4e24\u8005\u4f18\u70b9"},{"location":"machinelearning/ml/optiom/#5-momentum","title":"5\ufe0f\u20e3 \u52a8\u91cf\u6cd5\uff08Momentum\uff09","text":"<p>\u4e3a\u4e86\u89e3\u51b3 SGD \u7684\u9707\u8361\u95ee\u9898\uff0c\u5f15\u5165\u201c\u901f\u5ea6\u201d\u6982\u5ff5\uff1a</p>"},{"location":"machinelearning/ml/optiom/#_4","title":"\u66f4\u65b0\u516c\u5f0f\uff1a","text":"\\[ v_t = \\gamma v_{t-1} + \\eta \\nabla_\\theta J(\\theta) \\\\ \\theta := \\theta - v_t \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\( \\gamma \\)\uff1a\u52a8\u91cf\u7cfb\u6570\uff08\u5982 0.9\uff09  </li> <li>\\( v_t \\)\uff1a\u5f53\u524d\u901f\u5ea6</li> </ul>"},{"location":"machinelearning/ml/optiom/#6-adagrad","title":"6\ufe0f\u20e3 AdaGrad","text":"<p>\u5bf9\u6bcf\u4e2a\u53c2\u6570\u81ea\u9002\u5e94\u8c03\u6574\u5b66\u4e60\u7387\uff0c\u9002\u5408\u7a00\u758f\u6570\u636e\u3002</p>"},{"location":"machinelearning/ml/optiom/#_5","title":"\u66f4\u65b0\u516c\u5f0f\uff1a","text":"\\[ G_t = G_{t-1} + \\nabla_\\theta J(\\theta)^2 \\\\ \\theta := \\theta - \\frac{\\eta}{\\sqrt{G_t + \\epsilon}} \\cdot \\nabla_\\theta J(\\theta) \\]"},{"location":"machinelearning/ml/optiom/#7-rmsprop","title":"7\ufe0f\u20e3 RMSProp","text":"<p>\u89e3\u51b3 AdaGrad \u5b66\u4e60\u7387\u5feb\u901f\u8870\u51cf\u7684\u95ee\u9898\uff1a</p>"},{"location":"machinelearning/ml/optiom/#_6","title":"\u66f4\u65b0\u516c\u5f0f\uff1a","text":"\\[ E[g^2]_t = \\rho E[g^2]_{t-1} + (1 - \\rho)(\\nabla_\\theta J(\\theta))^2 \\\\ \\theta := \\theta - \\frac{\\eta}{\\sqrt{E[g^2]_t + \\epsilon}} \\cdot \\nabla_\\theta J(\\theta) \\]"},{"location":"machinelearning/ml/optiom/#8-adamadaptive-moment-estimation","title":"8\ufe0f\u20e3 Adam\uff08Adaptive Moment Estimation\uff09","text":"<p>\u7ed3\u5408\u4e86\u52a8\u91cf\u548c RMSProp \u7684\u4f18\u70b9\uff0c\u6700\u5e38\u7528\u7684\u4f18\u5316\u5668\u4e4b\u4e00\u3002</p>"},{"location":"machinelearning/ml/optiom/#_7","title":"\u66f4\u65b0\u516c\u5f0f\uff1a","text":"\\[ m_t = \\beta_1 m_{t-1} + (1 - \\beta_1) \\nabla_\\theta J(\\theta) \\\\ v_t = \\beta_2 v_{t-1} + (1 - \\beta_2)(\\nabla_\\theta J(\\theta))^2 \\\\ \\hat{m}_t = \\frac{m_t}{1 - \\beta_1^t},\\quad \\hat{v}_t = \\frac{v_t}{1 - \\beta_2^t} \\\\ \\theta := \\theta - \\eta \\cdot \\frac{\\hat{m}_t}{\\sqrt{\\hat{v}_t} + \\epsilon} \\] <p>\u63a8\u8350\u8d85\u53c2\u6570\uff1a\\( \\beta_1 = 0.9, \\beta_2 = 0.999, \\epsilon = 10^{-8} \\)</p>"},{"location":"machinelearning/ml/optiom/#9","title":"9\ufe0f\u20e3 \u5404\u4f18\u5316\u7b97\u6cd5\u5bf9\u6bd4","text":"\u7b97\u6cd5 \u662f\u5426\u9002\u5e94\u5b66\u4e60\u7387 \u662f\u5426\u4f7f\u7528\u52a8\u91cf \u662f\u5426\u9002\u5408\u7a00\u758f\u6570\u636e \u6536\u655b\u901f\u5ea6 \u7a33\u5b9a\u6027 SGD \u274c \u274c \u274c \u6162 \u5dee Momentum \u274c \u2705 \u274c \u4e2d\u7b49 \u4e2d\u7b49 AdaGrad \u2705 \u274c \u2705 \u6162 \u4e00\u822c RMSProp \u2705 \u274c \u2705 \u5feb \u597d Adam \u2705 \u2705 \u2705 \u5feb \u6700\u597d"},{"location":"machinelearning/ml/optiom/#_8","title":"\ud83d\udd1f \u603b\u7ed3","text":"<p>\u4f18\u5316\u7b97\u6cd5\u662f\u673a\u5668\u5b66\u4e60\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7684\u6838\u5fc3\u90e8\u5206\uff0c\u5b83\u51b3\u5b9a\u4e86\u6a21\u578b\u80fd\u5426\u6709\u6548\u5730\u4ece\u6570\u636e\u4e2d\u5b66\u4e60\u5230\u6709\u7528\u7684\u6a21\u5f0f\u3002\u9009\u62e9\u5408\u9002\u7684\u4f18\u5316\u5668\u53ef\u4ee5\u663e\u8457\u63d0\u9ad8\u8bad\u7ec3\u6548\u679c\u3002</p>"},{"location":"machinelearning/ml/pgm/","title":"\u7b2c\u516d\u7ae0\uff1a\u6982\u7387\u56fe\u6a21\u578b","text":""},{"location":"machinelearning/ml/pgm/#1","title":"1\ufe0f\u20e3 \u4ec0\u4e48\u662f\u6982\u7387\u56fe\u6a21\u578b\uff1f","text":"<p>\u6982\u7387\u56fe\u6a21\u578b\uff08PGM\uff09\u662f\u4e00\u79cd\u7ed3\u5408\u56fe\u8bba\u548c\u6982\u7387\u8bba\u7684\u65b9\u6cd5\uff0c\u7528\u4e8e\u8868\u793a\u591a\u4e2a\u968f\u673a\u53d8\u91cf\u4e4b\u95f4\u7684\u8054\u5408\u6982\u7387\u5206\u5e03\u53ca\u5176\u6761\u4ef6\u4f9d\u8d56\u5173\u7cfb\u3002\u5b83\u80fd\u591f\u6709\u6548\u5efa\u6a21\u590d\u6742\u7cfb\u7edf\u4e2d\u7684\u4e0d\u786e\u5b9a\u6027\u3002</p>"},{"location":"machinelearning/ml/pgm/#2","title":"2\ufe0f\u20e3 \u7c7b\u578b\u5212\u5206","text":"\u6a21\u578b\u7c7b\u578b \u56fe\u7ed3\u6784 \u4e3b\u8981\u7279\u70b9 \u8d1d\u53f6\u65af\u7f51\u7edc\uff08Bayesian Network, BN\uff09 \u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09 \u8868\u793a\u56e0\u679c\u5173\u7cfb\uff0c\u65b9\u5411\u660e\u786e \u9a6c\u5c14\u53ef\u592b\u7f51\u7edc\uff08Markov Random Field\uff09 \u65e0\u5411\u56fe \u8868\u793a\u5bf9\u79f0\u5173\u7cfb\uff0c\u65e0\u65b9\u5411\u6027"},{"location":"machinelearning/ml/pgm/#3","title":"3\ufe0f\u20e3 \u56fe\u7ed3\u6784\u8868\u793a","text":"<p>\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u8fb9\u4ee3\u8868\u53d8\u91cf\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u3002</p> <p>\u4f8b\u5982\uff1a</p> <p>Weather \u2192 WetRoad \u2192 Accident</p> <p>\u8868\u793a\u5929\u6c14\u5f71\u54cd\u8def\u9762\u6e7f\u6ed1\uff0c\u8def\u9762\u6e7f\u6ed1\u5f71\u54cd\u4ea4\u901a\u4e8b\u6545\u3002</p>"},{"location":"machinelearning/ml/pgm/#4-bayesian-network","title":"4\ufe0f\u20e3 \u8d1d\u53f6\u65af\u7f51\u7edc\uff08Bayesian Network\uff09","text":"<p>\u8d1d\u53f6\u65af\u7f51\u7edc\u7531\u6709\u5411\u65e0\u73af\u56fe\u548c\u6761\u4ef6\u6982\u7387\u5206\u5e03\u7ec4\u6210\u3002</p>"},{"location":"machinelearning/ml/pgm/#_2","title":"\u8054\u5408\u6982\u7387\u5206\u5e03\u516c\u5f0f","text":"<p>\u8bbe\u968f\u673a\u53d8\u91cf\u96c6\u5408\u4e3a \\(X_1, X_2, \\dots, X_n\\)\uff0c\u5219\u5b83\u4eec\u7684\u8054\u5408\u6982\u7387\u5206\u5e03\u53ef\u8868\u793a\u4e3a\uff1a</p> \\[ P(X_1, X_2, \\dots, X_n) = \\prod_{i=1}^n P\\big(X_i \\mid \\mathrm{Pa}(X_i)\\big) \\] <p>\u5176\u4e2d\uff0c\\(\\mathrm{Pa}(X_i)\\) \u8868\u793a\u8282\u70b9 \\(X_i\\) \u7684\u7236\u8282\u70b9\u96c6\u5408\u3002</p>"},{"location":"machinelearning/ml/pgm/#5-markov-random-field","title":"5\ufe0f\u20e3 \u9a6c\u5c14\u53ef\u592b\u7f51\u7edc\uff08Markov Random Field\uff09","text":"<p>\u9a6c\u5c14\u53ef\u592b\u7f51\u7edc\u4f7f\u7528\u65e0\u5411\u56fe\uff0c\u5229\u7528\u56e2\u7684\u52bf\u51fd\u6570\u5b9a\u4e49\u8054\u5408\u6982\u7387\u3002</p>"},{"location":"machinelearning/ml/pgm/#_3","title":"\u8054\u5408\u6982\u7387\u5206\u5e03\u516c\u5f0f","text":"\\[ P(X) = \\frac{1}{Z} \\prod_{C \\in \\mathcal{C}} \\psi_C(X_C) \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\(\\mathcal{C}\\) \u662f\u56fe\u4e2d\u6240\u6709\u6700\u5927\u56e2\u7684\u96c6\u5408  </li> <li>\\(\\psi_C(X_C)\\) \u662f\u5bf9\u5e94\u56e2\u4e0a\u7684\u52bf\u51fd\u6570  </li> <li>\\(Z\\) \u662f\u5f52\u4e00\u5316\u5e38\u6570\uff0c\u79f0\u4e3a\u914d\u5206\u51fd\u6570\uff08partition function\uff09</li> </ul>"},{"location":"machinelearning/ml/pgm/#6","title":"6\ufe0f\u20e3 \u6761\u4ef6\u72ec\u7acb\u6027\u5224\u65ad","text":"\u6a21\u578b\u7c7b\u578b \u6761\u4ef6\u72ec\u7acb\u6027\u5224\u65ad\u65b9\u6cd5 \u8d1d\u53f6\u65af\u7f51\u7edc d-\u5206\u79bb\uff08d-separation\uff09 \u9a6c\u5c14\u53ef\u592b\u7f51\u7edc \u56fe\u5206\u5272\uff08Graph Separation\uff09"},{"location":"machinelearning/ml/pgm/#7-inference","title":"7\ufe0f\u20e3 \u63a8\u7406\uff08Inference\uff09","text":"<p>\u63a8\u7406\u662f\u6839\u636e\u5df2\u77e5\u53d8\u91cf\u7684\u89c2\u6d4b\u503c\uff0c\u8ba1\u7b97\u5176\u4ed6\u53d8\u91cf\u7684\u540e\u9a8c\u6982\u7387\u3002</p> \u63a8\u7406\u7c7b\u578b \u5e38\u89c1\u65b9\u6cd5 \u8bf4\u660e \u7cbe\u786e\u63a8\u7406 \u53d8\u91cf\u6d88\u9664\uff08Variable Elimination\uff09\u3001\u4fe1\u5ff5\u4f20\u64ad\uff08Belief Propagation\uff09 \u8ba1\u7b97\u7cbe\u786e\uff0c\u4f46\u8ba1\u7b97\u590d\u6742\u5ea6\u9ad8 \u8fd1\u4f3c\u63a8\u7406 \u9a6c\u5c14\u53ef\u592b\u94fe\u8499\u7279\u5361\u6d1b\uff08MCMC\uff09\u3001\u53d8\u5206\u63a8\u65ad\uff08Variational Inference\uff09 \u9002\u5408\u5927\u89c4\u6a21\u6a21\u578b\uff0c\u8fd1\u4f3c\u8ba1\u7b97"},{"location":"machinelearning/ml/pgm/#8-learning","title":"8\ufe0f\u20e3 \u5b66\u4e60\uff08Learning\uff09","text":"<p>\u5b66\u4e60\u5206\u4e3a\u53c2\u6570\u5b66\u4e60\u548c\u7ed3\u6784\u5b66\u4e60\uff1a</p> \u5b66\u4e60\u7c7b\u578b \u5185\u5bb9\u63cf\u8ff0 \u5e38\u7528\u65b9\u6cd5 \u53c2\u6570\u5b66\u4e60 \u5728\u7ed9\u5b9a\u56fe\u7ed3\u6784\u4e0b\u4f30\u8ba1\u6982\u7387\u53c2\u6570 \u6781\u5927\u4f3c\u7136\u4f30\u8ba1\uff08MLE\uff09\u3001EM\u7b97\u6cd5\u3001\u8d1d\u53f6\u65af\u4f30\u8ba1 \u7ed3\u6784\u5b66\u4e60 \u5b66\u4e60\u53d8\u91cf\u95f4\u4f9d\u8d56\u5173\u7cfb\u56fe\u7ed3\u6784 \u641c\u7d22\u7b97\u6cd5\u3001\u8bc4\u5206\u51fd\u6570\uff08\u5982BIC\u3001AIC\uff09"},{"location":"machinelearning/ml/pgm/#9-python","title":"9\ufe0f\u20e3 Python \u793a\u4f8b\uff1a\u8d1d\u53f6\u65af\u7f51\u7edc\u6784\u5efa\u4e0e\u63a8\u7406","text":"<pre><code>from pgmpy.models import BayesianNetwork\nfrom pgmpy.factors.discrete import TabularCPD\nfrom pgmpy.inference import VariableElimination\n\n# \u5b9a\u4e49\u7f51\u7edc\u7ed3\u6784\nmodel = BayesianNetwork([('Weather', 'WetRoad'), ('WetRoad', 'Accident')])\n\n# \u5b9a\u4e49\u6761\u4ef6\u6982\u7387\u5206\u5e03\ncpd_weather = TabularCPD(variable='Weather', variable_card=2, values=[[0.7], [0.3]])\ncpd_wetroad = TabularCPD(variable='WetRoad', variable_card=2,\n                        values=[[0.9, 0.4],\n                                [0.1, 0.6]],\n                        evidence=['Weather'],\n                        evidence_card=[2])\ncpd_accident = TabularCPD(variable='Accident', variable_card=2,\n                         values=[[0.95, 0.2],\n                                 [0.05, 0.8]],\n                         evidence=['WetRoad'],\n                         evidence_card=[2])\n\n# \u6dfb\u52a0 CPD\nmodel.add_cpds(cpd_weather, cpd_wetroad, cpd_accident)\n\n# \u9a8c\u8bc1\u6a21\u578b\u6b63\u786e\u6027\nmodel.check_model()\n\n# \u63a8\u7406\ninference = VariableElimination(model)\nposterior_accident = inference.query(variables=['Accident'], evidence={'Weather': 1})\nprint(posterior_accident)\n</code></pre>"},{"location":"machinelearning/ml/rl/","title":"\u7b2c\u5341\u4e00\u7ae0\uff1a\u5f3a\u5316\u5b66\u4e60","text":""},{"location":"machinelearning/ml/rl/#_2","title":"\u4e00\u3001\u5f3a\u5316\u5b66\u4e60\u57fa\u7840","text":""},{"location":"machinelearning/ml/rl/#11","title":"1.1 \u521d\u63a2\u5f3a\u5316\u5b66\u4e60","text":""},{"location":"machinelearning/ml/rl/#1","title":"1\ufe0f\u20e3 \u7b80\u4ecb","text":"<p>\u5f3a\u5316\u5b66\u4e60\uff08Reinforcement Learning, RL\uff09\u662f\u4e00\u79cd\u91cd\u8981\u7684\u673a\u5668\u5b66\u4e60\u8303\u5f0f\uff0c\u5b83\u901a\u8fc7\u667a\u80fd\u4f53\uff08Agent\uff09\u4e0e\u73af\u5883\uff08Environment\uff09\u4e4b\u95f4\u7684\u4ea4\u4e92\uff0c\u8ba9\u667a\u80fd\u4f53\u901a\u8fc7\u8bd5\u9519\u7684\u65b9\u5f0f\u5b66\u4e60\u884c\u4e3a\u7b56\u7565\uff0c\u4ece\u800c\u5b9e\u73b0\u7279\u5b9a\u76ee\u6807\u6216\u6700\u5927\u5316\u957f\u671f\u6536\u76ca\u3002</p> <p>\u5f3a\u5316\u5b66\u4e60\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u4ee5\u4e0b\u9886\u57df\uff1a</p> <ul> <li>\u6e38\u620f\u667a\u80fd\uff08\u5982 AlphaGo\u3001Dota2 AI\uff09</li> <li>\u673a\u5668\u4eba\u63a7\u5236</li> <li>\u81ea\u52a8\u9a7e\u9a76</li> <li>\u667a\u80fd\u63a8\u8350\u7cfb\u7edf</li> <li>\u91d1\u878d\u4ea4\u6613\u7b56\u7565</li> </ul> <p>\u5f3a\u5316\u5b66\u4e60\u5f3a\u8c03\u7684\u662f\u5728\u672a\u77e5\u73af\u5883\u4e2d\u901a\u8fc7\u884c\u52a8\u83b7\u5f97\u53cd\u9988\uff0c\u5e76\u57fa\u4e8e\u53cd\u9988\u4e0d\u65ad\u4f18\u5316\u51b3\u7b56\u3002</p>"},{"location":"machinelearning/ml/rl/#2","title":"2\ufe0f\u20e3 \u4ec0\u4e48\u662f\u5f3a\u5316\u5b66\u4e60\uff1f","text":"<p>\u5f3a\u5316\u5b66\u4e60\u662f\u4e00\u4e2a\u57fa\u4e8e\u5956\u52b1\u53cd\u9988\u7684\u5b66\u4e60\u8fc7\u7a0b\u3002\u667a\u80fd\u4f53\u5728\u6bcf\u4e00\u6b65\u4f1a\u6839\u636e\u5f53\u524d\u72b6\u6001\u91c7\u53d6\u4e00\u4e2a\u52a8\u4f5c\uff0c\u73af\u5883\u6839\u636e\u8be5\u52a8\u4f5c\u8fd4\u56de\u4e00\u4e2a\u5956\u52b1\u503c\u548c\u4e0b\u4e00\u4e2a\u72b6\u6001\uff0c\u667a\u80fd\u4f53\u7684\u76ee\u6807\u662f\u5b66\u4e60\u4e00\u79cd\u7b56\u7565\uff0c\u4f7f\u5f97\u5b83\u5728\u957f\u671f\u5185\u83b7\u5f97\u5c3d\u53ef\u80fd\u591a\u7684\u5956\u52b1\u3002</p>"},{"location":"machinelearning/ml/rl/#_3","title":"\u5f3a\u5316\u5b66\u4e60\u7684\u57fa\u672c\u6784\u6210","text":"\u672f\u8bed \u542b\u4e49 Agent\uff08\u667a\u80fd\u4f53\uff09 \u505a\u51fa\u51b3\u7b56\u7684\u5b66\u4e60\u7cfb\u7edf Environment\uff08\u73af\u5883\uff09 \u667a\u80fd\u4f53\u6240\u4ea4\u4e92\u7684\u5916\u90e8\u4e16\u754c State\uff08\u72b6\u6001\uff09 \u5f53\u524d\u7684\u73af\u5883\u60c5\u51b5 Action\uff08\u52a8\u4f5c\uff09 \u667a\u80fd\u4f53\u91c7\u53d6\u7684\u64cd\u4f5c Reward\uff08\u5956\u52b1\uff09 \u73af\u5883\u5bf9\u52a8\u4f5c\u7684\u53cd\u9988 Policy\uff08\u7b56\u7565\uff09 \u51b3\u5b9a\u5728\u6bcf\u4e2a\u72b6\u6001\u4e0b\u9009\u62e9\u4ec0\u4e48\u52a8\u4f5c\u7684\u51c6\u5219 Value Function\uff08\u4ef7\u503c\u51fd\u6570\uff09 \u8bc4\u4f30\u4e00\u4e2a\u72b6\u6001\u6216\u72b6\u6001-\u52a8\u4f5c\u7ec4\u5408\u7684\u672a\u6765\u56de\u62a5"},{"location":"machinelearning/ml/rl/#3","title":"3\ufe0f\u20e3 \u5f3a\u5316\u5b66\u4e60\u7684\u6570\u5b66\u76ee\u6807","text":"<p>\u5f3a\u5316\u5b66\u4e60\u901a\u5e38\u4f7f\u7528\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\uff08MDP\uff09\u6765\u5efa\u6a21\uff1a</p> \\[ \\text{MDP} = (S, A, P, R, \\gamma) \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\(S\\)\uff1a\u72b6\u6001\u7a7a\u95f4\uff1b</li> <li>\\(A\\)\uff1a\u52a8\u4f5c\u7a7a\u95f4\uff1b</li> <li>\\(P(s'|s,a)\\)\uff1a\u72b6\u6001\u8f6c\u79fb\u6982\u7387\uff1b</li> <li>\\(R(s,a)\\)\uff1a\u5956\u52b1\u51fd\u6570\uff1b</li> <li>\\(\\gamma \\in (0,1]\\)\uff1a\u6298\u6263\u56e0\u5b50\uff0c\u8861\u91cf\u672a\u6765\u5956\u52b1\u7684\u91cd\u8981\u6027\u3002</li> </ul> <p>\u5f3a\u5316\u5b66\u4e60\u7684\u76ee\u6807\u662f\u627e\u5230\u4e00\u4e2a\u6700\u4f18\u7b56\u7565 \\(\\pi^*\\)\uff0c\u4f7f\u5f97\u671f\u671b\u7d2f\u79ef\u6298\u6263\u5956\u52b1\u6700\u5927\u5316\uff1a</p> \\[ \\pi^* = \\arg\\max_\\pi \\mathbb{E}_\\pi \\left[ \\sum_{t=0}^{\\infty} \\gamma^t r_t \\right] \\]"},{"location":"machinelearning/ml/rl/#4","title":"4\ufe0f\u20e3 \u5f3a\u5316\u5b66\u4e60\u4e0e\u76d1\u7763\u5b66\u4e60\u7684\u5bf9\u6bd4","text":"\u7279\u5f81 \u76d1\u7763\u5b66\u4e60 \u5f3a\u5316\u5b66\u4e60 \u6570\u636e\u7c7b\u578b \u8f93\u5165-\u8f93\u51fa\u5bf9\uff08\u5df2\u6807\u6ce8\uff09 \u4e0e\u73af\u5883\u4ea4\u4e92\u6570\u636e \u5b66\u4e60\u76ee\u6807 \u62df\u5408\u51fd\u6570\u6620\u5c04 \u5b66\u4e60\u7b56\u7565\u6700\u5927\u5316\u957f\u671f\u56de\u62a5 \u53cd\u9988\u65b9\u5f0f \u7acb\u5373\u3001\u660e\u786e \u5ef6\u8fdf\u3001\u7a00\u758f\u3001\u95f4\u63a5 \u5e94\u7528\u793a\u4f8b \u56fe\u50cf\u8bc6\u522b\u3001\u6587\u672c\u5206\u7c7b \u535a\u5f08\u3001\u673a\u5668\u4eba\u63a7\u5236"},{"location":"machinelearning/ml/rl/#5","title":"5\ufe0f\u20e3 \u5c0f\u7ed3","text":"<p>\u5f3a\u5316\u5b66\u4e60\u662f\u4e00\u79cd\u80fd\u591f\u901a\u8fc7\u73af\u5883\u53cd\u9988\u4e0d\u65ad\u81ea\u6211\u4f18\u5316\u7684\u5b66\u4e60\u65b9\u5f0f\uff0c\u9002\u7528\u4e8e\u5177\u6709\u5e8f\u5217\u51b3\u7b56\u7279\u6027\u7684\u95ee\u9898\u3002\u5b83\u4e0e\u76d1\u7763\u5b66\u4e60\u548c\u65e0\u76d1\u7763\u5b66\u4e60\u4e92\u4e3a\u8865\u5145\uff0c\u662f\u6784\u5efa\u901a\u7528\u4eba\u5de5\u667a\u80fd\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u3002</p>"},{"location":"machinelearning/ml/rl/#12","title":"1.2 \u591a\u81c2\u8001\u864e\u673a\u95ee\u9898","text":"<p>\u591a\u81c2\u8001\u864e\u673a\u95ee\u9898\uff08Multi-Armed Bandit, MAB\uff09 \u662f\u5f3a\u5316\u5b66\u4e60\u4e2d\u6700\u57fa\u7840\u7684\u95ee\u9898\u4e4b\u4e00\u3002\u5b83\u63cf\u8ff0\u4e86\u4e00\u4e2a\u63a2\u7d22\u4e0e\u5229\u7528\uff08exploration vs exploitation\uff09\u7684\u6838\u5fc3\u56f0\u5883\uff1a</p> <p>\u4e00\u4f4d\u8d4c\u5f92\u9762\u5bf9 \\(K\\) \u4e2a\u8001\u864e\u673a\uff0c\u6bcf\u4e2a\u8001\u864e\u673a\u7684\u5956\u52b1\u5206\u5e03\u4e0d\u540c\u3002\u8d4c\u5f92\u7684\u76ee\u6807\u662f\u5728\u6709\u9650\u6b21\u6570\u7684\u5c1d\u8bd5\u4e2d\uff0c\u6700\u5927\u5316\u603b\u5956\u52b1\u3002</p>"},{"location":"machinelearning/ml/rl/#_4","title":"\u76ee\u6807\u5b9a\u4e49","text":"<p>\u5728\u7b2c \\(t\\) \u6b65\u9009\u62e9\u4e00\u4e2a\u81c2 \\(A_t\\)\uff0c\u83b7\u5f97\u5956\u52b1 \\(R_t\\)\uff0c\u76ee\u6807\u662f\u6700\u5927\u5316\u603b\u671f\u671b\u5956\u52b1\uff1a</p> \\[ \\max \\mathbb{E} \\left[ \\sum_{t=1}^{T} R_t \\right] \\] <p>\u7b49\u4ef7\u4e8e\u6700\u5c0f\u5316\u540e\u6094\uff08Regret\uff09\uff1a</p> \\[ \\text{Regret}(T) = T \\mu^* - \\mathbb{E} \\left[ \\sum_{t=1}^{T} R_t \\right] \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\(\\mu^*\\) \u662f\u6700\u4f18\u81c2\u7684\u671f\u671b\u5956\u52b1\uff1b</li> <li>\\(T\\) \u662f\u603b\u8f6e\u6570\uff1b</li> <li>\\(R_t\\) \u662f\u7b2c \\(t\\) \u6b65\u83b7\u5f97\u7684\u5956\u52b1\u3002</li> </ul>"},{"location":"machinelearning/ml/rl/#_5","title":"\u7b56\u7565\u7b97\u6cd5","text":""},{"location":"machinelearning/ml/rl/#1-greedy","title":"1\ufe0f\u20e3 \u03b5-Greedy \u7b56\u7565","text":"<ul> <li> <p>\u601d\u60f3\uff1a\u5927\u90e8\u5206\u65f6\u95f4\u9009\u62e9\u5f53\u524d\u4f30\u8ba1\u6700\u4f18\u81c2\uff08\u5229\u7528\uff09\uff0c\u5c0f\u90e8\u5206\u65f6\u95f4\u968f\u673a\u63a2\u7d22\u5176\u4ed6\u81c2\uff08\u63a2\u7d22\uff09\u3002</p> </li> <li> <p>\u7b97\u6cd5\u6b65\u9aa4\uff1a</p> </li> <li>\u521d\u59cb\u5316\u6bcf\u4e2a\u81c2\u7684\u5e73\u5747\u5956\u52b1\u4f30\u8ba1\u503c\uff1b</li> <li>\u5728\u6bcf\u4e00\u8f6e\uff1a<ul> <li>\u4ee5\u6982\u7387 \\(1 - \\varepsilon\\) \u9009\u62e9\u5f53\u524d\u4f30\u8ba1\u6700\u4f18\u81c2\uff1b</li> <li>\u4ee5\u6982\u7387 \\(\\varepsilon\\) \u968f\u673a\u9009\u62e9\u4e00\u4e2a\u81c2\uff1b</li> </ul> </li> <li> <p>\u66f4\u65b0\u6240\u9009\u81c2\u7684\u4f30\u8ba1\u503c\u3002</p> <ul> <li>\u66f4\u65b0\u516c\u5f0f\uff08\u5747\u503c\u4f30\u8ba1\uff09\uff1a    $$    \\hat{\\mu}_i \\leftarrow \\hat{\\mu}_i + \\frac{1}{N_i}(r - \\hat{\\mu}_i)    $$</li> </ul> </li> </ul>"},{"location":"machinelearning/ml/rl/#2-upper-confidence-bounducb","title":"2\ufe0f\u20e3 Upper Confidence Bound\uff08UCB\uff09","text":"<ul> <li> <p>\u601d\u60f3\uff1a\u9009\u62e9\u7f6e\u4fe1\u4e0a\u754c\u6700\u5927\u7684\u81c2\uff0c\u5373\u201c\u65e2\u8003\u8651\u5747\u503c\u4e5f\u8003\u8651\u4e0d\u786e\u5b9a\u6027\u201d\u3002</p> </li> <li> <p>\u9009\u62e9\u81c2\u516c\u5f0f\uff1a   $$   a_t = \\arg\\max_i \\left[ \\hat{\\mu}_i + \\sqrt{\\frac{2 \\ln t}{N_i}} \\right]   $$</p> </li> <li> <p>\u89e3\u91ca\uff1a</p> <ul> <li>\\(\\hat{\\mu}_i\\)\uff1a\u81c2 \\(i\\) \u7684\u5f53\u524d\u5e73\u5747\u5956\u52b1\uff1b</li> <li>\\(N_i\\)\uff1a\u81c2 \\(i\\) \u88ab\u62c9\u8fc7\u7684\u6b21\u6570\uff1b</li> <li>\\(\\ln t\\)\uff1a\u5bf9\u4e0d\u786e\u5b9a\u6027\u7684\u60e9\u7f5a\u9010\u6b65\u51cf\u5f31\u3002</li> </ul> </li> </ul>"},{"location":"machinelearning/ml/rl/#3-thompson-sampling","title":"3\ufe0f\u20e3 \u6c64\u666e\u68ee\u91c7\u6837\uff08Thompson Sampling\uff09","text":"<ul> <li> <p>\u601d\u60f3\uff1a\u4e3a\u6bcf\u4e2a\u81c2\u7ef4\u62a4\u4e00\u4e2a\u6982\u7387\u5206\u5e03\uff0c\u4ece\u4e2d\u91c7\u6837\u5e76\u9009\u62e9\u6700\u5927\u503c\u81c2\u3002</p> </li> <li> <p>\u8fc7\u7a0b\uff1a</p> <ul> <li>\u5bf9\u6bcf\u4e2a\u81c2 \\(i\\) \u5efa\u7acb\u8d1d\u53f6\u65af\u5206\u5e03\uff08\u5982 Beta \u5206\u5e03\uff09\uff1b</li> <li>\u6bcf\u4e00\u8f6e\u5bf9\u6bcf\u4e2a\u81c2\u4ece\u5176\u5206\u5e03\u4e2d\u91c7\u6837\uff1b</li> <li>\u9009\u62e9\u6700\u5927\u503c\u5bf9\u5e94\u7684\u81c2\uff1b</li> <li>\u6839\u636e\u5b9e\u9645\u5956\u52b1\u66f4\u65b0\u8be5\u81c2\u7684\u5206\u5e03\u3002</li> </ul> </li> <li> <p>\u4e8c\u9879\u5956\u52b1\u65f6\uff1a   $$   \\text{Beta}(\\alpha_i, \\beta_i) \\quad \\text{\u66f4\u65b0\u4e3a\uff1a}   \\begin{cases}     \\alpha_i \\leftarrow \\alpha_i + 1 &amp; \\text{\u5982\u679c\u83b7\u5956} \\     \\beta_i \\leftarrow \\beta_i + 1 &amp; \\text{\u5426\u5219}   \\end{cases}   $$</p> </li> </ul>"},{"location":"machinelearning/ml/rl/#python-greedy","title":"Python \u7b80\u6613\u4ee3\u7801\u793a\u4f8b\uff08\u03b5-greedy\uff09","text":"<pre><code>import numpy as np\n\n# \u6a21\u62df\u8001\u864e\u673a\ntrue_means = [0.2, 0.5, 0.75]  # \u4e09\u4e2a\u81c2\u7684\u771f\u5b9e\u6982\u7387\nn_arms = len(true_means)\nn_rounds = 1000\nepsilon = 0.1\n\n# \u521d\u59cb\u5316\ncounts = np.zeros(n_arms)\nvalues = np.zeros(n_arms)\nrewards = []\n\nfor t in range(n_rounds):\n    if np.random.rand() &lt; epsilon:\n        action = np.random.choice(n_arms)\n    else:\n        action = np.argmax(values)\n\n    reward = np.random.rand() &lt; true_means[action]  # \u4e8c\u503c\u5956\u52b1\n    counts[action] += 1\n    values[action] += (reward - values[action]) / counts[action]\n    rewards.append(reward)\n\nprint(f\"\u5e73\u5747\u5956\u52b1: {np.mean(rewards):.3f}\")\n</code></pre>"},{"location":"machinelearning/ml/rl/#_6","title":"\u5e94\u7528\u573a\u666f","text":"<ul> <li>\u5728\u7ebf\u5e7f\u544a\u6295\u653e</li> <li>\u63a8\u8350\u7cfb\u7edf\uff08AB \u6d4b\u8bd5\uff09</li> <li>\u52a8\u6001\u5b9a\u4ef7</li> <li>\u533b\u7597\u8bd5\u9a8c\uff08\u591a\u836f\u6d4b\u8bd5\uff09</li> </ul>"},{"location":"machinelearning/ml/rl/#13","title":"1.3 \u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b","text":""},{"location":"machinelearning/ml/rl/#1_1","title":"1\ufe0f\u20e3 \u4ec0\u4e48\u662f\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\uff1f","text":"<p>\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\uff08MDP\uff09\u662f\u5f3a\u5316\u5b66\u4e60\u4e2d\u5efa\u6a21\u73af\u5883\u548c\u667a\u80fd\u4f53\u4ea4\u4e92\u884c\u4e3a\u7684\u6570\u5b66\u6846\u67b6\u3002 \u5176\u6838\u5fc3\u601d\u60f3\u662f\uff1a</p> <p>\u4e00\u4e2a\u667a\u80fd\u4f53\u5728\u6bcf\u4e2a\u65f6\u523b\u5904\u4e8e\u67d0\u4e2a\u72b6\u6001\u4e2d\uff0c\u6839\u636e\u7b56\u7565\u9009\u62e9\u52a8\u4f5c\uff0c\u73af\u5883\u6839\u636e\u52a8\u4f5c\u8f6c\u79fb\u5230\u65b0\u72b6\u6001\u5e76\u7ed9\u4e88\u5956\u52b1\u3002</p>"},{"location":"machinelearning/ml/rl/#2-mdp","title":"2\ufe0f\u20e3 MDP \u7684\u4e94\u5143\u7ec4\u5b9a\u4e49","text":"<p>MDP \u901a\u5e38\u7531\u4ee5\u4e0b\u4e94\u90e8\u5206\u7ec4\u6210\uff1a</p> \u7b26\u53f7 \u542b\u4e49 \\( S \\) \u72b6\u6001\u7a7a\u95f4\uff08States\uff09\uff1a\u73af\u5883\u4e2d\u6240\u6709\u53ef\u80fd\u7684\u72b6\u6001\u96c6\u5408 \\( A \\) \u52a8\u4f5c\u7a7a\u95f4\uff08Actions\uff09\uff1a\u667a\u80fd\u4f53\u5728\u6bcf\u4e2a\u72b6\u6001\u53ef\u91c7\u53d6\u7684\u52a8\u4f5c\u96c6\u5408 \\( P(s' \\mid s, a) \\) \u72b6\u6001\u8f6c\u79fb\u6982\u7387\uff1a\u5728\u72b6\u6001 \\(s\\) \u4e0b\u91c7\u53d6\u52a8\u4f5c \\(a\\) \u8f6c\u79fb\u5230\u72b6\u6001 \\(s'\\) \u7684\u6982\u7387 \\( R(s, a) \\) \u5956\u52b1\u51fd\u6570\uff1a\u91c7\u53d6\u52a8\u4f5c \\(a\\) \u540e\u83b7\u5f97\u7684\u5373\u65f6\u5956\u52b1 \\( \\gamma \\) \u6298\u6263\u56e0\u5b50\uff08Discount factor\uff09\uff1a\u672a\u6765\u5956\u52b1\u7684\u91cd\u8981\u6027\uff0c\u53d6\u503c \\(0 \\leq \\gamma \\leq 1\\)"},{"location":"machinelearning/ml/rl/#3-markov-property","title":"3\ufe0f\u20e3 \u9a6c\u5c14\u53ef\u592b\u6027\uff08Markov Property\uff09","text":"<p>MDP \u6ee1\u8db3\u9a6c\u5c14\u53ef\u592b\u6027\u8d28\uff1a</p> <p>\u5f53\u524d\u72b6\u6001\u7684\u8f6c\u79fb\u6982\u7387\u53ea\u4e0e\u5f53\u524d\u72b6\u6001\u548c\u5f53\u524d\u52a8\u4f5c\u6709\u5173\uff0c\u4e0e\u8fc7\u53bb\u5386\u53f2\u65e0\u5173\u3002</p> <p>\u6570\u5b66\u8868\u8fbe\u5f0f\u5982\u4e0b\uff1a</p> \\[ P(s_{t+1} \\mid s_t, a_t) = P(s_{t+1} \\mid s_1, a_1, \\dots, s_t, a_t) \\]"},{"location":"machinelearning/ml/rl/#4_1","title":"4\ufe0f\u20e3 \u76ee\u6807\uff1a\u6700\u4f18\u7b56\u7565","text":"<p>\u76ee\u6807\u662f\u627e\u5230\u4e00\u4e2a\u7b56\u7565 \\( \\pi \\)\uff0c\u4f7f\u5f97\u671f\u671b\u7d2f\u79ef\u5956\u52b1\u6700\u5927\u5316\uff1a</p> \\[ \\pi^* = \\arg\\max_{\\pi} \\mathbb{E}_\\pi \\left[ \\sum_{t=0}^{\\infty} \\gamma^t R(s_t, a_t) \\right] \\]"},{"location":"machinelearning/ml/rl/#5-value-function","title":"5\ufe0f\u20e3 \u503c\u51fd\u6570\uff08Value Function\uff09","text":""},{"location":"machinelearning/ml/rl/#51-vpis","title":"5.1 \u72b6\u6001\u503c\u51fd\u6570 \\( V^\\pi(s) \\)","text":"\\[ V^\\pi(s) = \\mathbb{E}_\\pi \\left[ \\sum_{t=0}^\\infty \\gamma^t R(s_t, a_t) \\mid s_0 = s \\right] \\]"},{"location":"machinelearning/ml/rl/#52-qpis-a","title":"5.2 \u52a8\u4f5c\u503c\u51fd\u6570 \\( Q^\\pi(s, a) \\)","text":"\\[ Q^\\pi(s,a) = \\mathbb{E}_\\pi \\left[ \\sum_{t=0}^\\infty \\gamma^t R(s_t, a_t) \\mid s_0 = s, a_0 = a \\right] \\]"},{"location":"machinelearning/ml/rl/#6-bellman-equation","title":"6\ufe0f\u20e3 \u8d1d\u5c14\u66fc\u65b9\u7a0b\uff08Bellman Equation\uff09","text":""},{"location":"machinelearning/ml/rl/#61","title":"6.1 \u7b56\u7565\u4e0b\u7684\u8d1d\u5c14\u66fc\u65b9\u7a0b\uff1a","text":"\\[ V^\\pi(s) = \\sum_{a} \\pi(a|s) \\left[ R(s,a) + \\gamma \\sum_{s'} P(s'|s,a) V^\\pi(s') \\right] \\]"},{"location":"machinelearning/ml/rl/#62","title":"6.2 \u6700\u4f18\u8d1d\u5c14\u66fc\u65b9\u7a0b\uff1a","text":"\\[ V^*(s) = \\max_a \\left[ R(s,a) + \\gamma \\sum_{s'} P(s'|s,a) V^*(s') \\right] \\]"},{"location":"machinelearning/ml/rl/#7-mdp","title":"7\ufe0f\u20e3 \u6c42\u89e3 MDP \u7684\u65b9\u6cd5","text":""},{"location":"machinelearning/ml/rl/#71-dp","title":"7.1 \u52a8\u6001\u89c4\u5212\uff08DP\uff09\u7c7b\uff08\u5df2\u77e5\u6a21\u578b\uff09","text":"<ul> <li>\u503c\u8fed\u4ee3\uff08Value Iteration\uff09</li> <li>\u7b56\u7565\u8fed\u4ee3\uff08Policy Iteration\uff09</li> </ul>"},{"location":"machinelearning/ml/rl/#72-rl","title":"7.2 \u5f3a\u5316\u5b66\u4e60\uff08RL\uff09\u7c7b\uff08\u672a\u77e5\u6a21\u578b\uff09","text":"<ul> <li>Q-learning</li> <li>SARSA</li> <li>DQN\uff08\u6df1\u5ea6 Q \u7f51\u7edc\uff09</li> </ul>"},{"location":"machinelearning/ml/rl/#8-frozenlake","title":"8\ufe0f\u20e3 \u4ee3\u7801\u793a\u4f8b\uff08FrozenLake\uff09","text":"<pre><code>import gym\nimport numpy as np\n\nenv = gym.make(\"FrozenLake-v1\", is_slippery=False)\nn_states = env.observation_space.n\nn_actions = env.action_space.n\n\nV = np.zeros(n_states)\ngamma = 0.9\n\n# \u503c\u8fed\u4ee3\nfor i in range(1000):\n    V_prev = V.copy()\n    for s in range(n_states):\n        Q_sa = []\n        for a in range(n_actions):\n            q = 0\n            for prob, s_prime, reward, done in env.P[s][a]:\n                q += prob * (reward + gamma * V_prev[s_prime])\n            Q_sa.append(q)\n        V[s] = max(Q_sa)\n    if np.max(np.abs(V - V_prev)) &lt; 1e-4:\n        break\n</code></pre>"},{"location":"machinelearning/ml/rl/#14","title":"1.4 \u52a8\u6001\u89c4\u5212\u7b97\u6cd5","text":""},{"location":"machinelearning/ml/rl/#_7","title":"\u4e8c\u3001\u5f3a\u5316\u5b66\u4e60\u8fdb\u9636","text":""},{"location":"machinelearning/ml/rl/#_8","title":"\u4e09\u3001\u5f3a\u5316\u5b66\u4e60\u524d\u6cbf","text":""},{"location":"machinelearning/ml/rnn/","title":"\u7b2c\u5341\u7ae0\uff1a\u5faa\u73af\u795e\u7ecf\u7f51\u7edc","text":""},{"location":"machinelearning/ml/rnn/#1-rnn","title":"1\ufe0f\u20e3 \u4ec0\u4e48\u662f RNN\uff1f","text":"<p>\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff08Recurrent Neural Network, RNN\uff09\u662f\u4e00\u7c7b\u7528\u4e8e\u5904\u7406\u5e8f\u5217\u6570\u636e\u7684\u795e\u7ecf\u7f51\u7edc\u3002\u5b83\u901a\u8fc7\u201c\u8bb0\u5fc6\u201d\u524d\u9762\u65f6\u95f4\u6b65\u7684\u72b6\u6001\uff0c\u4f7f\u5f97\u6a21\u578b\u5177\u5907\u5904\u7406\u65f6\u95f4\u4e0a\u4e0b\u6587\u7684\u80fd\u529b\uff0c\u9002\u7528\u4e8e\u8bed\u97f3\u3001\u6587\u672c\u3001\u65f6\u95f4\u5e8f\u5217\u7b49\u4efb\u52a1\u3002</p>"},{"location":"machinelearning/ml/rnn/#2-rnn","title":"2\ufe0f\u20e3 RNN \u539f\u7406\u4e0e\u7ed3\u6784","text":"<p>\u5355\u4e2a\u65f6\u95f4\u6b65\u516c\u5f0f\uff1a</p> \\[ h_t = \\tanh(W_{xh} x_t + W_{hh} h_{t-1} + b_h) \\\\ y_t = W_{hy} h_t + b_y \\] <ul> <li>\\( x_t \\)\uff1a\u5f53\u524d\u8f93\u5165  </li> <li>\\( h_{t-1} \\)\uff1a\u4e0a\u4e00\u6b65\u9690\u85cf\u72b6\u6001\uff08\u8bb0\u5fc6\uff09  </li> <li>\\( h_t \\)\uff1a\u5f53\u524d\u9690\u85cf\u72b6\u6001  </li> <li>\\( y_t \\)\uff1a\u8f93\u51fa  </li> <li>\\( W \\)\uff1a\u6743\u91cd\u77e9\u9635\uff0c\\( b \\)\uff1a\u504f\u7f6e\u9879  </li> </ul> <p>\u56fe\u793a\u7ed3\u6784\uff08\u5c55\u5f00\u5f62\u5f0f\uff09\uff1a</p> <pre><code>x\u2081 \u2500\u2500\u25b6[RNN]\u2500\u2500\u25b6 h\u2081 \u2500\u2500\u25b6 y\u2081\n\u25b2\nx\u2082 \u2500\u2500\u25b6[RNN]\u2500\u2500\u25b6 h\u2082 \u2500\u2500\u25b6 y\u2082\n\u25b2\nx\u2083 \u2500\u2500\u25b6[RNN]\u2500\u2500\u25b6 h\u2083 \u2500\u2500\u25b6 y\u2083\n</code></pre>"},{"location":"machinelearning/ml/rnn/#3-rnn","title":"3\ufe0f\u20e3 RNN \u5b58\u5728\u7684\u95ee\u9898","text":"\u95ee\u9898 \u63cf\u8ff0 \u68af\u5ea6\u6d88\u5931 / \u7206\u70b8 \u96be\u4ee5\u8bad\u7ec3\u957f\u5e8f\u5217\uff0c\u5b66\u4e60\u957f\u671f\u4f9d\u8d56\u56f0\u96be \u77ed\u671f\u8bb0\u5fc6\u80fd\u529b\u6709\u9650 \u53ea\u80fd\u6355\u6349\u6700\u8fd1\u7684\u4fe1\u606f \u53c2\u6570\u66f4\u65b0\u4e0d\u7a33\u5b9a \u56e0\u4e3a\u6bcf\u4e00\u6b65\u90fd\u8981\u53cd\u5411\u4f20\u64ad\uff0c\u4f18\u5316\u56f0\u96be <p>\u2705 \u6539\u8fdb\u65b9\u6848\uff1aLSTM / GRU</p>"},{"location":"machinelearning/ml/rnn/#4-lstm","title":"4\ufe0f\u20e3 LSTM\uff1a\u957f\u77ed\u671f\u8bb0\u5fc6\u7f51\u7edc","text":"<p>LSTM\uff08Long Short-Term Memory\uff09\u901a\u8fc7\u95e8\u63a7\u673a\u5236\u89e3\u51b3\u4e86 RNN \u7684\u957f\u671f\u4f9d\u8d56\u95ee\u9898\u3002</p>"},{"location":"machinelearning/ml/rnn/#_2","title":"\u95e8\u63a7\u7ed3\u6784","text":"<ol> <li>\u9057\u5fd8\u95e8\uff1a    $$ f_t = \\sigma(W_f [h_{t-1}, x_t] + b_f) $$</li> <li>\u8f93\u5165\u95e8\uff1a    $$ i_t = \\sigma(W_i [h_{t-1}, x_t] + b_i) $$</li> <li>\u5019\u9009\u8bb0\u5fc6\uff1a    $$ \\tilde{C}t = \\tanh(W_c [h{t-1}, x_t] + b_c) $$</li> <li>\u66f4\u65b0\u8bb0\u5fc6\uff1a    $$ C_t = f_t * C_{t-1} + i_t * \\tilde{C}_t $$</li> <li>\u8f93\u51fa\u95e8\uff1a    $$ o_t = \\sigma(W_o [h_{t-1}, x_t] + b_o) $$</li> <li>\u9690\u85cf\u72b6\u6001\uff1a    $$ h_t = o_t * \\tanh(C_t) $$</li> </ol> <p>\u2705 \u652f\u6301\u957f\u671f\u4f9d\u8d56 \u2705 \u5e94\u7528\u4e8e\u5927\u89c4\u6a21 NLP\u3001\u8bed\u97f3\u3001\u65f6\u95f4\u5e8f\u5217\u4efb\u52a1</p>"},{"location":"machinelearning/ml/rnn/#5-seq2seq-","title":"5\ufe0f\u20e3 Seq2Seq \u6a21\u578b\uff08\u7f16\u7801\u5668-\u89e3\u7801\u5668\uff09","text":"<p>Sequence-to-Sequence\uff08\u5e8f\u5217\u5230\u5e8f\u5217\uff09\u6a21\u578b\u7528\u4e8e\u5c06\u8f93\u5165\u5e8f\u5217\u8f6c\u6362\u4e3a\u8f93\u51fa\u5e8f\u5217\uff08\u5982\u7ffb\u8bd1\u3001\u6458\u8981\u3001\u5bf9\u8bdd\u7cfb\u7edf\uff09\u3002</p>"},{"location":"machinelearning/ml/rnn/#_3","title":"\u57fa\u672c\u7ed3\u6784\uff1a","text":"<pre><code>\u8f93\u5165\u5e8f\u5217 \u2192 \u7f16\u7801\u5668RNN \u2192 \u4e0a\u4e0b\u6587\u5411\u91cf \u2192 \u89e3\u7801\u5668RNN \u2192 \u8f93\u51fa\u5e8f\u5217\n</code></pre> <ul> <li>\u7f16\u7801\u5668\uff08Encoder\uff09\uff1a\u8bfb\u53d6\u8f93\u5165\u5e8f\u5217\uff0c\u8f93\u51fa\u6700\u540e\u9690\u85cf\u72b6\u6001 \\( h_T \\)</li> <li>\u4e0a\u4e0b\u6587\u5411\u91cf\uff08Context\uff09\uff1a\u7528\u4e8e\u521d\u59cb\u5316\u89e3\u7801\u5668</li> <li>\u89e3\u7801\u5668\uff08Decoder\uff09\uff1a\u4ee5 context \u542f\u52a8\uff0c\u9010\u6b65\u751f\u6210\u8f93\u51fa\u5e8f\u5217</li> </ul> \u6a21\u5757 \u4f5c\u7528 \u7f16\u7801\u5668 \u538b\u7f29\u6574\u4e2a\u8f93\u5165\u4e3a\u4e00\u4e2a\u9690\u85cf\u72b6\u6001 \u89e3\u7801\u5668 \u4f7f\u7528\u9690\u85cf\u72b6\u6001\u751f\u6210\u76ee\u6807\u5e8f\u5217 \u95ee\u9898 \u4e0a\u4e0b\u6587\u5411\u91cf\u538b\u7f29\u6240\u6709\u4fe1\u606f\uff0c\u6548\u679c\u53d7\u9650"},{"location":"machinelearning/ml/rnn/#6-attention","title":"6\ufe0f\u20e3 \u6ce8\u610f\u529b\u673a\u5236\uff08Attention\uff09","text":"<p>\u6ce8\u610f\u529b\u673a\u5236\u8ba9 Seq2Seq \u66f4\u5f3a\u5927\uff0c\u89e3\u7801\u5668\u6bcf\u4e00\u6b65\u90fd\u80fd\u9009\u62e9\u6027\u5173\u6ce8\u8f93\u5165\u5e8f\u5217\u7684\u4e0d\u540c\u90e8\u5206\u3002</p>"},{"location":"machinelearning/ml/rnn/#_4","title":"\u539f\u7406\uff1a","text":"<ul> <li>\u8ba1\u7b97\u5f53\u524d\u89e3\u7801\u5668\u9690\u85cf\u72b6\u6001 \\( h_t \\) \u4e0e\u6240\u6709\u7f16\u7801\u5668\u8f93\u51fa \\( h_i \\) \u7684\u76f8\u5173\u6027</li> <li>\u4f7f\u7528 softmax \u5f97\u5230\u6ce8\u610f\u529b\u6743\u91cd \\( \\alpha_{t,i} \\)</li> <li>\u8ba1\u7b97\u4e0a\u4e0b\u6587\u5411\u91cf\uff1a</li> </ul> \\[ \\alpha_{t,i} = \\text{softmax}(score(h_t, h_i)) \\\\ c_t = \\sum_i \\alpha_{t,i} h_i \\] \u6a21\u578b\u7c7b\u578b \u63cf\u8ff0 \u52a0\u6027\u6ce8\u610f\u529b Bahdanau attention \u70b9\u79ef\u6ce8\u610f\u529b Luong attention \u81ea\u6ce8\u610f\u529b\uff08Self-Attention\uff09 Transformer \u4e2d\u6838\u5fc3\u7ec4\u4ef6 <p>\u2705 \u652f\u6301\u957f\u5e8f\u5217\u5efa\u6a21 \u2705 \u52a8\u6001\u4e0a\u4e0b\u6587\u5efa\u6a21\u80fd\u529b\u5f3a \u2705 \u662f Transformer \u7684\u6838\u5fc3\u6784\u5efa\u5757</p>"},{"location":"machinelearning/ml/rnn/#7-pytorch-lstm","title":"7\ufe0f\u20e3 PyTorch \u5b9e\u73b0\u7b80\u6613\u7248\uff08LSTM\uff09","text":"<pre><code>import torch\nimport torch.nn as nn\n\nclass LSTMClassifier(nn.Module):\n    def __init__(self, input_dim, hidden_dim, output_dim):\n        super().__init__()\n        self.lstm = nn.LSTM(input_dim, hidden_dim, batch_first=True)\n        self.fc = nn.Linear(hidden_dim, output_dim)\n\n    def forward(self, x):\n        output, (h_n, c_n) = self.lstm(x)\n        out = self.fc(h_n[-1])  # \u4f7f\u7528\u6700\u540e\u9690\u85cf\u72b6\u6001\n        return out\n\nmodel = LSTMClassifier(input_dim=100, hidden_dim=128, output_dim=2)\n</code></pre>"},{"location":"machinelearning/ml/rnn/#8","title":"8\ufe0f\u20e3 \u5404\u6a21\u578b\u5bf9\u6bd4\u603b\u7ed3","text":"\u6a21\u578b \u7279\u70b9 \u662f\u5426\u652f\u6301\u957f\u4f9d\u8d56 \u5e94\u7528\u573a\u666f RNN \u7ed3\u6784\u7b80\u5355\uff0c\u77ed\u671f\u8bb0\u5fc6 \u5426 \u7b80\u5355\u6587\u672c\u3001\u4f20\u611f\u5668\u6570\u636e LSTM \u6709\u95e8\u63a7\u7ed3\u6784\uff0c\u652f\u6301\u957f\u671f\u4f9d\u8d56 \u662f NLP\u3001\u8bed\u97f3\u3001\u65f6\u95f4\u5e8f\u5217 GRU \u7b80\u5316\u7248 LSTM\uff0c\u6548\u7387\u66f4\u9ad8 \u662f NLP\u3001\u5e8f\u5217\u5206\u7c7b Seq2Seq \u7f16\u7801-\u89e3\u7801\u7ed3\u6784\uff0c\u9002\u5408\u5e8f\u5217\u751f\u6210 \u6709\u9650 \u7ffb\u8bd1\u3001\u5bf9\u8bdd\u751f\u6210 Seq2Seq + Attention \u89e3\u51b3\u4fe1\u606f\u74f6\u9888\u95ee\u9898 \u5f3a \u7ffb\u8bd1\u3001\u6458\u8981\u3001\u95ee\u7b54\u7cfb\u7edf"},{"location":"machinelearning/ml/rnn/#9","title":"9\ufe0f\u20e3 \u5e94\u7528\u573a\u666f","text":"<ul> <li>\ud83d\udcd6 \u673a\u5668\u7ffb\u8bd1\uff08LSTM + Seq2Seq + Attention\uff09</li> <li>\ud83e\udde0 \u60c5\u611f\u5206\u6790</li> <li>\ud83d\udcc8 \u80a1\u7968/\u5929\u6c14\u9884\u6d4b\uff08\u65f6\u95f4\u5e8f\u5217\uff09</li> <li>\ud83d\udde3\ufe0f \u8bed\u97f3\u8bc6\u522b</li> <li>\ud83d\udcdd \u6587\u672c\u6458\u8981\u3001\u6587\u672c\u751f\u6210</li> <li>\ud83d\udcac ChatBot\u3001\u5bf9\u8bdd\u7cfb\u7edf</li> </ul>"},{"location":"machinelearning/ml/rnn/#_5","title":"\ud83d\udd1f \u603b\u7ed3","text":"\u9879\u76ee \u63cf\u8ff0 \u8f93\u5165\u7c7b\u578b \u5e8f\u5217\u6570\u636e\uff08\u6587\u672c\u3001\u8bed\u97f3\u3001\u65f6\u95f4\u5e8f\u5217\uff09 \u57fa\u672c\u7ed3\u6784 RNN \u2192 LSTM / GRU \u2192 Seq2Seq \u2192 \u6ce8\u610f\u529b\u673a\u5236 \u8bad\u7ec3\u65b9\u5f0f \u524d\u5411\u4f20\u64ad + \u53cd\u5411\u4f20\u64ad + \u65f6\u95f4\u53cd\u5411\u4f20\u64ad\uff08BPTT\uff09 \u6846\u67b6\u5b9e\u73b0 PyTorch\u3001TensorFlow\u3001Keras \u8fdb\u9636\u66ff\u4ee3\u65b9\u6848 Transformer\uff08\u5b8c\u5168\u57fa\u4e8e\u6ce8\u610f\u529b\uff0c\u65e0 RNN\uff09"},{"location":"machinelearning/ml/sample/","title":"\u7b2c\u516b\u7ae0\uff1a\u91c7\u6837","text":"<p>\u91c7\u6837\uff08Sampling\uff09\u662f\u673a\u5668\u5b66\u4e60\u548c\u6570\u636e\u5206\u6790\u4e2d\u5e38\u7528\u7684\u6280\u672f\uff0c\u7528\u4e8e\u4ece\u5927\u89c4\u6a21\u6570\u636e\u96c6\u4e2d\u9009\u53d6\u4e00\u4e2a\u4ee3\u8868\u6027\u5b50\u96c6\uff0c\u65b9\u4fbf\u8bad\u7ec3\u6a21\u578b\u6216\u8fdb\u884c\u7edf\u8ba1\u63a8\u65ad\u3002\u5408\u7406\u7684\u91c7\u6837\u65b9\u6cd5\u53ef\u4ee5\u6709\u6548\u51cf\u5c11\u8ba1\u7b97\u6210\u672c\uff0c\u540c\u65f6\u4fdd\u8bc1\u6a21\u578b\u6027\u80fd\u3002</p>"},{"location":"machinelearning/ml/sample/#1","title":"1\ufe0f\u20e3 \u91c7\u6837\u7684\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u6837\u672c\uff08Sample\uff09\uff1a\u4ece\u603b\u4f53\u4e2d\u62bd\u53d6\u7684\u4e00\u90e8\u5206\u6570\u636e\u3002</li> <li>\u603b\u4f53\uff08Population\uff09\uff1a\u7814\u7a76\u7684\u5168\u4f53\u6570\u636e\u96c6\u5408\u3002</li> <li>\u91c7\u6837\u76ee\u7684\uff1a</li> <li>\u964d\u4f4e\u8ba1\u7b97\u8d44\u6e90\u6d88\u8017</li> <li>\u51cf\u5c11\u6570\u636e\u4e0d\u5e73\u8861\u5f71\u54cd</li> <li>\u63d0\u9ad8\u6a21\u578b\u8bad\u7ec3\u6548\u7387</li> </ul>"},{"location":"machinelearning/ml/sample/#2","title":"2\ufe0f\u20e3 \u5e38\u89c1\u91c7\u6837\u65b9\u6cd5","text":""},{"location":"machinelearning/ml/sample/#21-simple-random-sampling","title":"2.1 \u7b80\u5355\u968f\u673a\u91c7\u6837\uff08Simple Random Sampling\uff09","text":"<ul> <li>\u6bcf\u4e2a\u6837\u672c\u88ab\u9009\u4e2d\u7684\u6982\u7387\u76f8\u7b49\uff0c\u72ec\u7acb\u968f\u673a\u62bd\u53d6\u3002</li> <li>\u9002\u7528\u4e8e\u6570\u636e\u5747\u5300\u5206\u5e03\uff0c\u65e0\u7c7b\u522b\u4e0d\u5e73\u8861\u3002</li> </ul>"},{"location":"machinelearning/ml/sample/#22-stratified-sampling","title":"2.2 \u5206\u5c42\u91c7\u6837\uff08Stratified Sampling\uff09","text":"<ul> <li>\u5148\u5c06\u6570\u636e\u6309\u7c7b\u522b\u6216\u67d0\u7279\u5f81\u5206\u5c42\uff0c\u518d\u6309\u6bd4\u4f8b\u4ece\u6bcf\u5c42\u62bd\u6837\u3002</li> <li>\u4fdd\u8bc1\u91c7\u6837\u6570\u636e\u7684\u7c7b\u522b\u6bd4\u4f8b\u548c\u603b\u4f53\u4e00\u81f4\uff0c\u9002\u5408\u7c7b\u522b\u4e0d\u5e73\u8861\u7684\u6570\u636e\u3002</li> </ul>"},{"location":"machinelearning/ml/sample/#23-systematic-sampling","title":"2.3 \u7cfb\u7edf\u91c7\u6837\uff08Systematic Sampling\uff09","text":"<ul> <li>\u5148\u968f\u673a\u9009\u53d6\u4e00\u4e2a\u8d77\u59cb\u70b9\uff0c\u7136\u540e\u6309\u7167\u56fa\u5b9a\u95f4\u9694\u9009\u53d6\u6837\u672c\u3002</li> <li>\u7b80\u5355\u9ad8\u6548\uff0c\u4f46\u5bf9\u6570\u636e\u6709\u5468\u671f\u6027\u53ef\u80fd\u5f15\u8d77\u504f\u5dee\u3002</li> </ul>"},{"location":"machinelearning/ml/sample/#24-oversampling","title":"2.4 \u8fc7\u91c7\u6837\uff08Oversampling\uff09","text":"<ul> <li>\u9488\u5bf9\u7c7b\u522b\u4e0d\u5e73\u8861\uff0c\u901a\u8fc7\u590d\u5236\u5c11\u6570\u7c7b\u6837\u672c\u6216\u751f\u6210\u65b0\u6837\u672c\uff08\u5982SMOTE\uff09\u6765\u589e\u52a0\u5c11\u6570\u7c7b\u6837\u672c\u6570\u3002</li> <li>\u89e3\u51b3\u7c7b\u522b\u6781\u5ea6\u4e0d\u5e73\u8861\u95ee\u9898\u3002</li> </ul>"},{"location":"machinelearning/ml/sample/#25-undersampling","title":"2.5 \u6b20\u91c7\u6837\uff08Undersampling\uff09","text":"<ul> <li>\u901a\u8fc7\u51cf\u5c11\u591a\u6570\u7c7b\u6837\u672c\u6570\u91cf\uff0c\u8fbe\u5230\u7c7b\u522b\u5e73\u8861\u3002</li> <li>\u53ef\u80fd\u4f1a\u4e22\u5931\u90e8\u5206\u6709\u7528\u4fe1\u606f\u3002</li> </ul>"},{"location":"machinelearning/ml/sample/#3-python","title":"3\ufe0f\u20e3 \u91c7\u6837\u4ee3\u7801\u793a\u4f8b\uff08Python\uff09","text":"<pre><code>from sklearn.model_selection import train_test_split\nfrom collections import Counter\nimport numpy as np\n\n# \u6a21\u62df\u6570\u636e\u53ca\u6807\u7b7e\nX = np.arange(1000).reshape((1000, 1))\ny = np.array([0]*900 + [1]*100)  # \u7c7b\u522b\u4e0d\u5e73\u8861\n\n# 3.1 \u7b80\u5355\u968f\u673a\u91c7\u6837\uff1a\u968f\u673a\u5212\u5206\u8bad\u7ec3\u6d4b\u8bd5\u96c6\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.2, random_state=42)\n\nprint(f\"\u8bad\u7ec3\u96c6\u7c7b\u522b\u5206\u5e03: {Counter(y_train)}\")\nprint(f\"\u6d4b\u8bd5\u96c6\u7c7b\u522b\u5206\u5e03: {Counter(y_test)}\")\n\n# 3.2 \u5206\u5c42\u91c7\u6837\uff1a\u4fdd\u6301\u7c7b\u522b\u6bd4\u4f8b\u4e0d\u53d8\nX_train_strat, X_test_strat, y_train_strat, y_test_strat = train_test_split(\n    X, y, test_size=0.2, random_state=42, stratify=y)\n\nprint(f\"\u5206\u5c42\u91c7\u6837\u8bad\u7ec3\u96c6\u7c7b\u522b\u5206\u5e03: {Counter(y_train_strat)}\")\nprint(f\"\u5206\u5c42\u91c7\u6837\u6d4b\u8bd5\u96c6\u7c7b\u522b\u5206\u5e03: {Counter(y_test_strat)}\")\n</code></pre>"},{"location":"machinelearning/ml/sample/#4","title":"4\ufe0f\u20e3 \u91c7\u6837\u6280\u5de7\u548c\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u4fdd\u6301\u6570\u636e\u4ee3\u8868\u6027\uff1a\u91c7\u6837\u540e\u6837\u672c\u5e94\u5c3d\u53ef\u80fd\u4ee3\u8868\u6574\u4f53\u6570\u636e\u7279\u5f81\u3002</li> <li>\u5904\u7406\u7c7b\u522b\u4e0d\u5e73\u8861\uff1a\u7528\u5206\u5c42\u91c7\u6837\u6216\u8fc7\u91c7\u6837\u3001\u6b20\u91c7\u6837\u65b9\u6cd5\u3002</li> <li>\u907f\u514d\u6570\u636e\u6cc4\u6f0f\uff1a\u8bad\u7ec3\u6d4b\u8bd5\u96c6\u5212\u5206\u8981\u5148\u5b8c\u6210\uff0c\u9632\u6b62\u8bad\u7ec3\u96c6\u4fe1\u606f\u6cc4\u9732\u5230\u6d4b\u8bd5\u96c6\u3002</li> <li>\u91c7\u6837\u6bd4\u4f8b\u5408\u7406\uff1a\u91c7\u6837\u8fc7\u5c11\u4f1a\u5bfc\u81f4\u6a21\u578b\u6b20\u62df\u5408\uff0c\u8fc7\u591a\u5219\u65e0\u6cd5\u964d\u4f4e\u8ba1\u7b97\u8d1f\u62c5\u3002</li> </ul>"},{"location":"machinelearning/ml/sample/#5","title":"5\ufe0f\u20e3 \u603b\u7ed3","text":"\u91c7\u6837\u65b9\u6cd5 \u4f18\u70b9 \u7f3a\u70b9 \u9002\u7528\u573a\u666f \u7b80\u5355\u968f\u673a\u91c7\u6837 \u7b80\u5355\u6613\u7528\uff0c\u5747\u5300\u62bd\u6837 \u4e0d\u9002\u5408\u7c7b\u522b\u4e0d\u5e73\u8861 \u6570\u636e\u5747\u5300\uff0c\u6837\u672c\u91cf\u8f83\u5927 \u5206\u5c42\u91c7\u6837 \u4fdd\u8bc1\u7c7b\u522b\u6bd4\u4f8b\uff0c\u4ee3\u8868\u6027\u597d \u5b9e\u73b0\u7a0d\u590d\u6742 \u7c7b\u522b\u5206\u5e03\u4e0d\u5747\uff0c\u9700\u4fdd\u7559\u7c7b\u522b\u6bd4\u4f8b \u7cfb\u7edf\u91c7\u6837 \u5b9e\u73b0\u7b80\u5355\uff0c\u8ba1\u7b97\u9ad8\u6548 \u53ef\u80fd\u5f15\u5165\u5468\u671f\u6027\u504f\u5dee \u6570\u636e\u65e0\u660e\u663e\u5468\u671f\u6027 \u8fc7\u91c7\u6837 \u89e3\u51b3\u5c11\u6570\u7c7b\u6837\u672c\u4e0d\u8db3 \u53ef\u80fd\u8fc7\u62df\u5408 \u7c7b\u522b\u6781\u5ea6\u4e0d\u5e73\u8861 \u6b20\u91c7\u6837 \u51cf\u5c11\u6570\u636e\u91cf\uff0c\u63d0\u9ad8\u8bad\u7ec3\u901f\u5ea6 \u53ef\u80fd\u4e22\u5931\u4fe1\u606f \u591a\u6570\u7c7b\u6837\u672c\u8fc7\u591a"},{"location":"machinelearning/ml/supervised/","title":"\u7b2c\u4e09\u7ae0\uff1a\u76d1\u7763\u5b66\u4e60","text":""},{"location":"machinelearning/ml/supervised/#_2","title":"\u4e00\u3001\u7ebf\u6027\u6a21\u578b","text":""},{"location":"machinelearning/ml/supervised/#11-linear-regression","title":"1.1 \u7ebf\u6027\u56de\u5f52\uff08Linear Regression\uff09","text":"<p>\u7ebf\u6027\u56de\u5f52\u662f\u4e00\u79cd\u6700\u57fa\u7840\u4f46\u975e\u5e38\u91cd\u8981\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c\u4e3b\u8981\u7528\u4e8e\u9884\u6d4b\u8fde\u7eed\u503c\u3002</p>"},{"location":"machinelearning/ml/supervised/#1","title":"1. \u4ec0\u4e48\u662f\u7ebf\u6027\u56de\u5f52\uff1f","text":"<p>\u7ebf\u6027\u56de\u5f52\u7684\u76ee\u6807\u662f\uff1a</p> <p>\u627e\u5230\u4e00\u6761\u6700\u4f73\u7684\u76f4\u7ebf\uff0c\u62df\u5408\u4e00\u7ec4\u70b9\u7684\u8d8b\u52bf\uff0c\u4ece\u800c\u8fdb\u884c\u9884\u6d4b\u3002</p> <p>\u6bd4\u5982\uff1a</p> <ul> <li>\u6839\u636e\u623f\u5b50\u7684\u9762\u79ef\u9884\u6d4b\u623f\u4ef7</li> <li>\u6839\u636e\u5b66\u751f\u7684\u5b66\u4e60\u65f6\u95f4\u9884\u6d4b\u8003\u8bd5\u6210\u7ee9</li> </ul> <p>\u8fd9\u5c31\u662f\u7ebf\u6027\u56de\u5f52\u7684\u7ecf\u5178\u5e94\u7528\u3002</p>"},{"location":"machinelearning/ml/supervised/#2","title":"2. \u4e00\u5143\u7ebf\u6027\u56de\u5f52\u516c\u5f0f","text":"<p>\u5047\u8bbe\u4f60\u6709\u4e00\u4e2a\u53d8\u91cf x\uff0c\u6211\u4eec\u60f3\u9884\u6d4b y\uff0c\u90a3\u4e48\u6a21\u578b\u5982\u4e0b\uff1a</p> <p>\\(y = wx + b\\)</p> <ul> <li>w\uff1a\u659c\u7387\uff08weight\uff09</li> <li>b\uff1a\u622a\u8ddd\uff08bias\uff09</li> <li>\u8fd9\u5c31\u662f\u6211\u4eec\u8981\u5b66\u7684\u53c2\u6570</li> </ul>"},{"location":"machinelearning/ml/supervised/#3","title":"3. \u76ee\u6807\u662f\u4ec0\u4e48\uff1f","text":"<p>\u6211\u4eec\u5e0c\u671b\u627e\u5230\u6700\u5408\u9002\u7684 w \u548c b\uff0c\u4f7f\u5f97\uff1a</p> <ul> <li>\u9884\u6d4b\u503c \\(\\hat{y}\\) \u5c3d\u53ef\u80fd\u63a5\u8fd1\u771f\u5b9e\u503c y</li> <li>\u635f\u5931\u51fd\u6570\uff08\u8bef\u5dee\uff09\u6700\u5c0f</li> </ul> <p>\u5e38\u7528\u7684\u635f\u5931\u51fd\u6570\u662f \u5747\u65b9\u8bef\u5dee\uff08MSE\uff09\uff1a</p> <p>\\(\\text{MSE} = \\frac{1}{n} \\sum_{i=1}^n (y_i - \\hat{y}_i)^2\\)</p>"},{"location":"machinelearning/ml/supervised/#4","title":"4. \u6a21\u578b\u8bad\u7ec3\uff08\u68af\u5ea6\u4e0b\u964d\uff09","text":"<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u68af\u5ea6\u4e0b\u964d\uff08Gradient Descent\uff09 \u6765\u4e0d\u65ad\u8c03\u6574 w \u548c b\uff0c\u76f4\u5230 MSE \u6700\u5c0f\u3002</p>"},{"location":"machinelearning/ml/supervised/#5-python-sklearn","title":"5. Python \u5b9e\u6218\u6f14\u793a\uff08sklearn\uff09","text":"<pre><code>from sklearn.linear_model import LinearRegression\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# \u6a21\u62df\u6570\u636e\uff1a\u623f\u5c4b\u9762\u79ef vs \u623f\u4ef7\nX = np.array([[50], [60], [80], [100], [120]])  # \u9762\u79ef\ny = np.array([150, 180, 240, 280, 310])        # \u623f\u4ef7\uff08\u5355\u4f4d\uff1a\u4e07\uff09\n\n# \u521b\u5efa\u6a21\u578b\u5e76\u8bad\u7ec3\nmodel = LinearRegression()\nmodel.fit(X, y)\n\n# \u9884\u6d4b\nX_test = np.array([[90]])\ny_pred = model.predict(X_test)\nprint(\"\u9884\u6d4b 90 \u5e73\u7c73\u623f\u5b50\u7684\u4ef7\u683c\uff1a\", y_pred[0], \"\u4e07\")\n\n# \u53ef\u89c6\u5316\nplt.scatter(X, y, color='blue', label='\u771f\u5b9e\u6570\u636e')\nplt.plot(X, model.predict(X), color='red', label='\u62df\u5408\u7ebf')\nplt.xlabel('\u9762\u79ef\uff08\u5e73\u65b9\u7c73\uff09')\nplt.ylabel('\u4ef7\u683c\uff08\u4e07\uff09')\nplt.title('\u7ebf\u6027\u56de\u5f52\uff1a\u9762\u79ef vs \u4ef7\u683c')\nplt.legend()\nplt.show()\n</code></pre>"},{"location":"machinelearning/ml/supervised/#6","title":"6. \u591a\u5143\u7ebf\u6027\u56de\u5f52","text":"<p>\u5f53\u6211\u4eec\u6709\u591a\u4e2a\u53d8\u91cf\uff08\u4f8b\u5982\u9762\u79ef\u3001\u5367\u5ba4\u6570\u91cf\u3001\u697c\u5c42\u7b49\uff09\uff0c\u6a21\u578b\u53d8\u6210\uff1a</p> <p>\\(y = w_1x_1 + w_2x_2 + \\dots + w_nx_n + b\\)</p> <p>Python \u8bad\u7ec3\u65b9\u5f0f\u5b8c\u5168\u76f8\u540c\uff0c\u53ea\u9700\u63d0\u4f9b\u591a\u4e2a\u7279\u5f81\u5373\u53ef\u3002</p>"},{"location":"machinelearning/ml/supervised/#7","title":"7. \u7ebf\u6027\u56de\u5f52\u7684\u4f18\u7f3a\u70b9","text":""},{"location":"machinelearning/ml/supervised/#_3","title":"\u4f18\u70b9\uff1a","text":"<ul> <li>\u7b80\u5355\u76f4\u89c2\uff0c\u6613\u4e8e\u7406\u89e3</li> <li>\u8bad\u7ec3\u901f\u5ea6\u5feb</li> <li>\u53ef\u89e3\u91ca\u6027\u5f3a\uff08\u6bcf\u4e2a\u53d8\u91cf\u7684\u6743\u91cd\u53ef\u89e3\u91ca\uff09</li> </ul>"},{"location":"machinelearning/ml/supervised/#_4","title":"\u7f3a\u70b9\uff1a","text":"<ul> <li>\u53ea\u80fd\u5904\u7406\u7ebf\u6027\u5173\u7cfb</li> <li>\u5bf9\u5f02\u5e38\u503c\u654f\u611f</li> <li>\u4e0d\u80fd\u5904\u7406\u591a\u5cf0\u6216\u975e\u7ebf\u6027\u6570\u636e</li> </ul>"},{"location":"machinelearning/ml/supervised/#8","title":"8. \u5e38\u89c1\u53d8\u79cd","text":"\u6a21\u578b \u7279\u70b9 \u5cad\u56de\u5f52\uff08Ridge\uff09 \u52a0\u5165 L2 \u6b63\u5219\u5316\uff0c\u9632\u6b62\u8fc7\u62df\u5408 Lasso \u56de\u5f52 \u52a0\u5165 L1 \u6b63\u5219\u5316\uff0c\u53ef\u7528\u4e8e\u7279\u5f81\u9009\u62e9 \u591a\u9879\u5f0f\u56de\u5f52 \u53ef\u62df\u5408\u66f2\u7ebf\uff08\u975e\u7ebf\u6027\uff09 \u903b\u8f91\u56de\u5f52\uff08Logistic Regression\uff09 \u867d\u53eb\u201c\u56de\u5f52\u201d\uff0c\u5176\u5b9e\u662f\u5206\u7c7b\u7b97\u6cd5"},{"location":"machinelearning/ml/supervised/#12-logistic-regression","title":"1.2 \u903b\u8f91\u56de\u5f52\uff08Logistic Regression\uff09","text":""},{"location":"machinelearning/ml/supervised/#1_1","title":"1. \u4ec0\u4e48\u662f\u903b\u8f91\u56de\u5f52\uff1f","text":"<p>\u903b\u8f91\u56de\u5f52\u662f\u4e00\u79cd\u7528\u4e8e\u4e8c\u5206\u7c7b\u95ee\u9898\u7684\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\uff0c\u5c3d\u7ba1\u540d\u5b57\u4e2d\u6709\u201c\u56de\u5f52\u201d\uff0c\u4f46\u5b83\u5176\u5b9e\u662f\u7528\u4e8e\u5206\u7c7b\u4efb\u52a1\u7684\u3002</p> <ul> <li>\u8f93\u5165\uff1a\u4e00\u7ec4\u7279\u5f81  </li> <li>\u8f93\u51fa\uff1a\u67d0\u4e2a\u7c7b\u522b\uff08\u4f8b\u5982\uff1a0 \u6216 1\uff09  </li> <li>\u76ee\u6807\uff1a\u5b66\u4e60\u4e00\u4e2a\u51fd\u6570\uff0c\u8f93\u5165\u7279\u5f81\u540e\u9884\u6d4b\u6837\u672c\u5c5e\u4e8e\u7c7b\u522b 1 \u7684\u6982\u7387  </li> </ul>"},{"location":"machinelearning/ml/supervised/#2_1","title":"2. \u5e94\u7528\u573a\u666f","text":"\u5e94\u7528\u9886\u57df \u793a\u4f8b \u533b\u7597\u8bca\u65ad \u5224\u65ad\u80bf\u7624\u662f\u826f\u6027\u6216\u6076\u6027 \u91d1\u878d\u98ce\u63a7 \u5224\u65ad\u662f\u5426\u53ef\u80fd\u8fdd\u7ea6 \u5e02\u573a\u8425\u9500 \u5224\u65ad\u7528\u6237\u662f\u5426\u4f1a\u70b9\u51fb\u5e7f\u544a \u793e\u4f1a\u8c03\u67e5\u5206\u6790 \u5224\u65ad\u7528\u6237\u662f\u5426\u652f\u6301\u67d0\u89c2\u70b9"},{"location":"machinelearning/ml/supervised/#3_1","title":"3. \u6a21\u578b\u516c\u5f0f\u4e0e\u539f\u7406","text":""},{"location":"machinelearning/ml/supervised/#_5","title":"\u2705 \u7ebf\u6027\u90e8\u5206","text":"<p>\u903b\u8f91\u56de\u5f52\u9996\u5148\u4f7f\u7528\u4e00\u4e2a\u7ebf\u6027\u6a21\u578b\uff1a</p> \\[ z = w^\\top x + b \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\( x \\)\uff1a\u7279\u5f81\u5411\u91cf  </li> <li>\\( w \\)\uff1a\u6743\u91cd\u5411\u91cf  </li> <li>\\( b \\)\uff1a\u504f\u7f6e\u9879  </li> </ul>"},{"location":"machinelearning/ml/supervised/#sigmoid","title":"\u2705 Sigmoid \u51fd\u6570","text":"<p>\u4e3a\u4e86\u628a \\( z \\) \u6620\u5c04\u5230 [0, 1] \u8303\u56f4\uff0c\u6211\u4eec\u4f7f\u7528 Sigmoid \u51fd\u6570\uff1a</p> \\[ \\sigma(z) = \\frac{1}{1 + e^{-z}} \\] <p>\u8f93\u51fa\u5c31\u662f\u5c5e\u4e8e\u7c7b\u522b 1 \u7684\u6982\u7387 \\( P(y=1|x) \\)\u3002</p>"},{"location":"machinelearning/ml/supervised/#_6","title":"\u2705 \u5206\u7c7b\u5224\u5b9a\u89c4\u5219","text":"\\[ \\hat{y} = \\begin{cases} 1, &amp; \\text{if } \\sigma(z) \\geq 0.5 \\\\ 0, &amp; \\text{otherwise} \\end{cases} \\]"},{"location":"machinelearning/ml/supervised/#4_1","title":"4. \u635f\u5931\u51fd\u6570\uff08\u5bf9\u6570\u635f\u5931\uff09","text":"<p>\u903b\u8f91\u56de\u5f52\u4f7f\u7528 \u5bf9\u6570\u635f\u5931\u51fd\u6570\uff08Log Loss\uff09\uff1a</p> \\[ L(y, \\hat{y}) = -y \\log(\\hat{y}) - (1 - y) \\log(1 - \\hat{y}) \\] <p>\u76ee\u6807\u662f\u6700\u5c0f\u5316\u6240\u6709\u6837\u672c\u7684\u5e73\u5747\u635f\u5931\u3002</p>"},{"location":"machinelearning/ml/supervised/#5","title":"5. \u6a21\u578b\u8bad\u7ec3\u8fc7\u7a0b","text":"<ol> <li>\u521d\u59cb\u5316\u6743\u91cd \\( w \\) \u548c\u504f\u7f6e \\( b \\)</li> <li>\u5bf9\u6bcf\u4e00\u8f6e\u8bad\u7ec3\uff08epoch\uff09\uff1a</li> <li>\u8ba1\u7b97\u9884\u6d4b\u503c \\( \\hat{y} \\)</li> <li>\u8ba1\u7b97\u635f\u5931\u51fd\u6570</li> <li>\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u66f4\u65b0\u53c2\u6570\uff1a      $$      w := w - \\eta \\cdot \\nabla_w L, \\quad b := b - \\eta \\cdot \\nabla_b L      $$</li> <li>\u76f4\u5230\u635f\u5931\u6536\u655b\u6216\u8fbe\u5230\u8fed\u4ee3\u4e0a\u9650</li> </ol>"},{"location":"machinelearning/ml/supervised/#6-python-scikit-learn","title":"6. Python \u5b9e\u73b0\uff08\u4f7f\u7528 scikit-learn\uff09","text":"<pre><code>from sklearn.linear_model import LogisticRegression\nfrom sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\n\n# \u52a0\u8f7d\u6570\u636e\uff1a\u4f7f\u7528 Iris \u6570\u636e\u96c6\u4e2d\u4e24\u4e2a\u7c7b\u522b\niris = load_iris()\nX = iris.data[iris.target != 2]\ny = iris.target[iris.target != 2]\n\n# \u5212\u5206\u6570\u636e\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)\n\n# \u6a21\u578b\u8bad\u7ec3\nmodel = LogisticRegression()\nmodel.fit(X_train, y_train)\n\n# \u6a21\u578b\u9884\u6d4b\ny_pred = model.predict(X_test)\n\n# \u8bc4\u4f30\u51c6\u786e\u7387\nfrom sklearn.metrics import accuracy_score\nprint(\"Accuracy:\", accuracy_score(y_test, y_pred))\n</code></pre>"},{"location":"machinelearning/ml/supervised/#7_1","title":"7.  \u4f18\u70b9\u4e0e\u7f3a\u70b9","text":"\u4f18\u70b9 \u7f3a\u70b9 \u7b80\u5355\u9ad8\u6548\uff0c\u9002\u7528\u4e8e\u7ebf\u6027\u95ee\u9898 \u5bf9\u975e\u7ebf\u6027\u95ee\u9898\u8868\u73b0\u8f83\u5dee \u6982\u7387\u8f93\u51fa\uff0c\u6a21\u578b\u53ef\u89e3\u91ca\u6027\u5f3a \u5bb9\u6613\u6b20\u62df\u5408 \u8bad\u7ec3\u901f\u5ea6\u5feb\uff0c\u9002\u5408\u5927\u6837\u672c \u5bf9\u5f02\u5e38\u503c\u654f\u611f"},{"location":"machinelearning/ml/supervised/#13-ridge-regression-lasso","title":"1.3 \u5cad\u56de\u5f52\uff08Ridge Regression\uff09\u548c Lasso\u56de\u5f52","text":""},{"location":"machinelearning/ml/supervised/#1_2","title":"1. \u4e3a\u4ec0\u4e48\u9700\u8981\u6b63\u5219\u5316\uff1f","text":"<p>\u5728\u4f7f\u7528\u666e\u901a\u7ebf\u6027\u56de\u5f52\u65f6\uff0c\u53ef\u80fd\u4f1a\u9047\u5230\u4ee5\u4e0b\u95ee\u9898\uff1a</p> <ul> <li>\u7279\u5f81\u6570\u91cf\u591a\uff08\u9ad8\u7ef4\uff09</li> <li>\u7279\u5f81\u4e4b\u95f4\u5b58\u5728\u5171\u7ebf\u6027\uff08Multicollinearity\uff09</li> <li>\u6a21\u578b\u5bb9\u6613\u8fc7\u62df\u5408\uff08Overfitting\uff09</li> </ul> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u6b63\u5219\u5316\u65b9\u6cd5\uff1a</p> <ul> <li>Ridge Regression\uff08\u5cad\u56de\u5f52\uff09\uff1aL2 \u6b63\u5219\u5316</li> <li>Lasso Regression\uff1aL1 \u6b63\u5219\u5316</li> </ul>"},{"location":"machinelearning/ml/supervised/#2-ridge-regression","title":"2.  \u5cad\u56de\u5f52\uff08Ridge Regression\uff09","text":"<p>\u5728\u666e\u901a\u6700\u5c0f\u4e8c\u4e58\u7684\u635f\u5931\u51fd\u6570\u57fa\u7840\u4e0a\uff0c\u52a0\u4e0a\u4e86 L2 \u6b63\u5219\u9879\uff1a</p> \\[ \\text{Loss}{\\text{Ridge}} = \\sum{i=1}^n (y_i - \\hat{y}i)^2 + \\lambda \\sum{j=1}^p w_j^2 \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\(\\lambda\\)\uff1a\u6b63\u5219\u5316\u5f3a\u5ea6\uff08\u8d85\u53c2\u6570\uff09</li> <li>\\(w_j\\)\uff1a\u56de\u5f52\u7cfb\u6570</li> </ul> <p>\u7279\u70b9</p> <ul> <li>\u7f29\u5c0f\u7cfb\u6570\uff0c\u4f46\u4e0d\u4f1a\u4f7f\u5176\u53d8\u4e3a 0</li> <li>\u66f4\u9002\u7528\u4e8e\u6240\u6709\u7279\u5f81\u90fd\u6709\u8d21\u732e\u7684\u60c5\u51b5</li> </ul>"},{"location":"machinelearning/ml/supervised/#3-lasso-lasso-regression","title":"3. Lasso \u56de\u5f52\uff08Lasso Regression\uff09","text":"<p>Lasso \u5728\u635f\u5931\u51fd\u6570\u4e2d\u52a0\u5165\u4e86 L1 \u6b63\u5219\u9879\uff1a</p> \\[ \\text{Loss}{\\text{Lasso}} = \\sum{i=1}^n (y_i - \\hat{y}i)^2 + \\lambda \\sum{j=1}^p |w_j| \\] <p>\u7279\u70b9</p> <ul> <li>\u53ef\u4ee5\u8ba9\u67d0\u4e9b\u7cfb\u6570\u53d8\u4e3a 0\uff08\u53d8\u91cf\u9009\u62e9\uff09</li> <li>\u66f4\u9002\u7528\u4e8e\u7279\u5f81\u591a\u3001\u4f46\u90e8\u5206\u7279\u5f81\u4e0d\u91cd\u8981\u7684\u573a\u666f</li> </ul>"},{"location":"machinelearning/ml/supervised/#4-ridge-vs-lasso","title":"4.  Ridge vs Lasso \u5bf9\u6bd4","text":"\u5bf9\u6bd4\u70b9 Ridge \u56de\u5f52 Lasso \u56de\u5f52 \u6b63\u5219\u5316\u7c7b\u578b L2 \u6b63\u5219\u5316 L1 \u6b63\u5219\u5316 \u662f\u5426\u7a00\u758f \u5426 \u662f\uff08\u53ef\u8fdb\u884c\u7279\u5f81\u9009\u62e9\uff09 \u7cfb\u6570\u4e3a 0 \u4e0d\u53ef\u80fd \u53ef\u80fd \u5e94\u7528\u573a\u666f \u6240\u6709\u7279\u5f81\u90fd\u76f8\u5173 \u90e8\u5206\u7279\u5f81\u76f8\u5173"},{"location":"machinelearning/ml/supervised/#5-python-scikit-learn","title":"5. Python \u5b9e\u73b0\uff08scikit-learn\uff09","text":""},{"location":"machinelearning/ml/supervised/#_7","title":"\ud83d\udccc \u5cad\u56de\u5f52\u793a\u4f8b","text":"<pre><code>from sklearn.linear_model import Ridge\nfrom sklearn.datasets import load_boston\nfrom sklearn.model_selection import train_test_split\n\n# \u52a0\u8f7d\u6570\u636e\nX, y = load_boston(return_X_y=True)\nX_train, X_test, y_train, y_test = train_test_split(X, y)\n\n# \u5efa\u7acb\u6a21\u578b\nridge = Ridge(alpha=1.0)\nridge.fit(X_train, y_train)\n\n# \u9884\u6d4b\u4e0e\u8bc4\u4f30\nprint(\"Ridge score:\", ridge.score(X_test, y_test))\n</code></pre>"},{"location":"machinelearning/ml/supervised/#lasso","title":"\ud83d\udccc Lasso \u56de\u5f52\u793a\u4f8b","text":"<pre><code>from sklearn.linear_model import Lasso\n\n# \u5efa\u7acb\u6a21\u578b\nlasso = Lasso(alpha=0.1)\nlasso.fit(X_train, y_train)\n\n# \u9884\u6d4b\u4e0e\u8bc4\u4f30\nprint(\"Lasso score:\", lasso.score(X_test, y_test))\n</code></pre>"},{"location":"machinelearning/ml/supervised/#6-alpha","title":"6. \u6b63\u5219\u5316\u53c2\u6570 \\(\\alpha\\) \u7684\u9009\u62e9","text":"<ul> <li>\\(\\alpha\\) \u8d8a\u5927 \u2192 \u6b63\u5219\u5316\u8d8a\u5f3a \u2192 \u6a21\u578b\u66f4\u7b80\u5355\uff0c\u53ef\u80fd\u6b20\u62df\u5408</li> <li>\\(\\alpha\\) \u8d8a\u5c0f \u2192 \u6b63\u5219\u5316\u8d8a\u5f31 \u2192 \u6a21\u578b\u66f4\u590d\u6742\uff0c\u53ef\u80fd\u8fc7\u62df\u5408</li> </ul> <p>\u53ef\u4ee5\u4f7f\u7528 GridSearchCV \u6216 RidgeCV\u3001LassoCV \u81ea\u52a8\u9009\u62e9\u6700\u4f18\u53c2\u6570\u3002</p>"},{"location":"machinelearning/ml/supervised/#_8","title":"\u4e8c\u3001\u51b3\u7b56\u6811\u4e0e\u96c6\u6210\u65b9\u6cd5","text":""},{"location":"machinelearning/ml/supervised/#21-decision-tree","title":"2.1 \u51b3\u7b56\u6811\uff08Decision Tree\uff09","text":""},{"location":"machinelearning/ml/supervised/#1_3","title":"1.  \u4ec0\u4e48\u662f\u51b3\u7b56\u6811\uff1f","text":"<p>\u51b3\u7b56\u6811\u662f\u4e00\u79cd\u6811\u72b6\u7ed3\u6784\u7684\u673a\u5668\u5b66\u4e60\u6a21\u578b\uff0c\u5e38\u7528\u4e8e\u5206\u7c7b\u548c\u56de\u5f52\u4efb\u52a1\u3002\u5b83\u901a\u8fc7\u4e00\u7cfb\u5217\u95ee\u9898\u5224\u65ad\u5c06\u6837\u672c\u5212\u5206\u4e3a\u4e0d\u540c\u7c7b\u522b\uff0c\u7ed3\u6784\u7c7b\u4f3c\u4e8e\u201c\u4e8c\u5341\u4e2a\u95ee\u9898\u201d\u3002</p> <pre><code>        \u662f\u5426\u4e0b\u96e8\uff1f\n         /    \\\n       \u662f      \u5426\n      /          \\\n  \u662f\u5426\u5e26\u4f1e\uff1f     \u662f\u5426\u6234\u58a8\u955c\uff1f\n</code></pre>"},{"location":"machinelearning/ml/supervised/#2_2","title":"2. \u51b3\u7b56\u6811\u7684\u7ec4\u6210\u7ed3\u6784","text":"\u5143\u7d20 \u8bf4\u660e \u6839\u8282\u70b9 \u6811\u7684\u8d77\u70b9\uff0c\u5bf9\u6574\u4e2a\u6570\u636e\u8fdb\u884c\u7b2c\u4e00\u6b21\u5212\u5206 \u5185\u90e8\u8282\u70b9 \u6bcf\u4e2a\u5224\u65ad\u6761\u4ef6\u6240\u5728\u7684\u4f4d\u7f6e \u53f6\u5b50\u8282\u70b9 \u6700\u7ec8\u51b3\u7b56\u7ed3\u679c\uff08\u5206\u7c7b\u6216\u6570\u503c\uff09 \u5206\u652f \u4ece\u4e00\u4e2a\u8282\u70b9\u5230\u53e6\u4e00\u4e2a\u8282\u70b9\u7684\u8def\u5f84"},{"location":"machinelearning/ml/supervised/#3_2","title":"3. \u51b3\u7b56\u6811\u7684\u6784\u5efa\u6d41\u7a0b","text":"<ol> <li>\u9009\u62e9\u4e00\u4e2a\u6700\u4f18\u7279\u5f81\u8fdb\u884c\u5212\u5206</li> <li>\u6839\u636e\u8be5\u7279\u5f81\u5c06\u6570\u636e\u96c6\u5212\u5206\u6210\u5b50\u96c6</li> <li>\u5bf9\u6bcf\u4e2a\u5b50\u96c6\u91cd\u590d\u6b65\u9aa4 1 \u548c 2\uff0c\u76f4\u5230\u6ee1\u8db3\u7ec8\u6b62\u6761\u4ef6\uff08\u5982\u6811\u6df1\u5ea6\u6216\u6837\u672c\u6570\uff09</li> </ol>"},{"location":"machinelearning/ml/supervised/#4_2","title":"4.  \u7279\u5f81\u9009\u62e9\u6807\u51c6\uff08\u6838\u5fc3\uff09","text":""},{"location":"machinelearning/ml/supervised/#id3","title":"\ud83d\udd39 \u4fe1\u606f\u589e\u76ca\uff08ID3\uff09","text":"<ul> <li>\u8861\u91cf\u5212\u5206\u540e\u4fe1\u606f\u7684\u4e0d\u786e\u5b9a\u6027\u964d\u4f4e\u7a0b\u5ea6</li> <li>\u4f7f\u7528\u71b5\uff08Entropy\uff09\u8fdb\u884c\u8861\u91cf\uff1a</li> </ul> \\[ Gain(D, A) = Entropy(D) - \\sum_{v=1}^V \\frac{|D_v|}{|D|} Entropy(D_v) \\]"},{"location":"machinelearning/ml/supervised/#cart","title":"\ud83d\udd39 \u57fa\u5c3c\u6307\u6570\uff08CART\uff09","text":"<ul> <li>\u8861\u91cf\u6570\u636e\u7684\u7eaf\u5ea6\uff0c\u503c\u8d8a\u5c0f\u7eaf\u5ea6\u8d8a\u9ad8\uff1a</li> </ul> \\[ Gini(D) = 1 - \\sum_{k=1}^K p_k^2 \\]"},{"location":"machinelearning/ml/supervised/#c45","title":"\ud83d\udd39 \u4fe1\u606f\u589e\u76ca\u7387\uff08C4.5\uff09","text":"<ul> <li>\u4fe1\u606f\u589e\u76ca\u5f52\u4e00\u5316\u540e\uff0c\u66f4\u9002\u5408\u591a\u503c\u7279\u5f81\u3002</li> </ul>"},{"location":"machinelearning/ml/supervised/#5_1","title":"5. \u51b3\u7b56\u6811\u7684\u4f18\u7f3a\u70b9","text":"\u4f18\u70b9 \u7f3a\u70b9 \u53ef\u89c6\u5316\u3001\u89e3\u91ca\u6027\u5f3a \u5bb9\u6613\u8fc7\u62df\u5408 \u5bf9\u975e\u7ebf\u6027\u5173\u7cfb\u5efa\u6a21\u80fd\u529b\u5f3a \u5bf9\u566a\u58f0\u548c\u5c0f\u6837\u672c\u654f\u611f \u5904\u7406\u7f3a\u5931\u503c\u548c\u4e0d\u9700\u8981\u5f52\u4e00\u5316 \u6811\u7ed3\u6784\u53ef\u80fd\u4e0d\u7a33\u5b9a \u53ef\u5904\u7406\u6570\u503c\u548c\u7c7b\u522b\u578b\u53d8\u91cf \u6027\u80fd\u4e0d\u5982\u96c6\u6210\u65b9\u6cd5\uff08\u5982\u968f\u673a\u68ee\u6797\uff09"},{"location":"machinelearning/ml/supervised/#6-python-sklearn","title":"6. Python \u5b9e\u73b0\uff08sklearn\uff09","text":"<pre><code>from sklearn.datasets import load_iris\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn import tree\nimport matplotlib.pyplot as plt\n\n# \u52a0\u8f7d\u6570\u636e\nX, y = load_iris(return_X_y=True)\n\n# \u5efa\u7acb\u6a21\u578b\nclf = DecisionTreeClassifier(criterion=\"gini\", max_depth=3)\nclf.fit(X, y)\n\n# \u53ef\u89c6\u5316\nplt.figure(figsize=(12,8))\ntree.plot_tree(clf, feature_names=load_iris().feature_names, class_names=load_iris().target_names, filled=True)\nplt.show()\n</code></pre>"},{"location":"machinelearning/ml/supervised/#7_2","title":"7. \u51b3\u7b56\u6811\u8d85\u53c2\u6570","text":"\u53c2\u6570 \u4f5c\u7528\u8bf4\u660e <code>criterion</code> \u7279\u5f81\u9009\u62e9\u6807\u51c6\uff0c\u5982 <code>\"gini\"</code>\u3001<code>\"entropy\"</code> <code>max_depth</code> \u6700\u5927\u6811\u6df1\u5ea6 <code>min_samples_split</code> \u5185\u90e8\u8282\u70b9\u518d\u5212\u5206\u6240\u9700\u7684\u6700\u5c0f\u6837\u672c\u6570 <code>min_samples_leaf</code> \u53f6\u5b50\u8282\u70b9\u6240\u9700\u7684\u6700\u5c0f\u6837\u672c\u6570 <code>max_features</code> \u6bcf\u6b21\u5212\u5206\u65f6\u8003\u8651\u7684\u6700\u5927\u7279\u5f81\u6570"},{"location":"machinelearning/ml/supervised/#22-random-forest","title":"2.2 \u968f\u673a\u68ee\u6797\uff08Random Forest\uff09","text":""},{"location":"machinelearning/ml/supervised/#1_4","title":"1\ufe0f\u20e3 \u4ec0\u4e48\u662f\u968f\u673a\u68ee\u6797\uff1f","text":"<p>\u968f\u673a\u68ee\u6797\u662f\u4e00\u79cd\u96c6\u6210\u5b66\u4e60\u65b9\u6cd5\uff08Ensemble Learning\uff09\uff0c\u901a\u8fc7\u7ec4\u5408\u591a\u4e2a\u51b3\u7b56\u6811\u6765\u8fdb\u884c\u5206\u7c7b\u6216\u56de\u5f52\u3002\u5b83\u7684\u601d\u60f3\u662f \u201c\u4f17\u4eba\u62fe\u67f4\u706b\u7130\u9ad8\u201d\uff1a\u5355\u68f5\u6811\u53ef\u80fd\u4e0d\u51c6\uff0c\u4f46\u4e00\u7fa4\u6811\u7684\u201c\u6295\u7968\u201d\u66f4\u7a33\u5065\u3002</p>"},{"location":"machinelearning/ml/supervised/#2_3","title":"2\ufe0f\u20e3 \u5de5\u4f5c\u539f\u7406\uff08\u7b80\u5316\u6d41\u7a0b\uff09","text":"<ol> <li>\u6570\u636e\u91c7\u6837\uff08Bootstrap\uff09\uff1a<ul> <li>\u4ece\u539f\u59cb\u6570\u636e\u4e2d\u6709\u653e\u56de\u5730\u91c7\u6837\uff0c\u751f\u6210\u591a\u4e2a\u5b50\u6570\u636e\u96c6\uff08\u6bcf\u68f5\u6811\u4e00\u4e2a\uff09\u3002</li> </ul> </li> <li>\u8bad\u7ec3\u591a\u4e2a\u51b3\u7b56\u6811\uff1a<ul> <li>\u6bcf\u68f5\u6811\u5728\u8bad\u7ec3\u65f6\uff0c\u5728\u6bcf\u4e2a\u8282\u70b9\u968f\u673a\u9009\u62e9\u4e00\u90e8\u5206\u7279\u5f81\u8fdb\u884c\u5212\u5206\uff08\u7279\u5f81\u5b50\u96c6\uff09\u3002</li> </ul> </li> <li>\u9884\u6d4b\u9636\u6bb5\uff1a<ul> <li>\u5206\u7c7b\u4efb\u52a1\uff1a\u591a\u6570\u6295\u7968\u3002</li> <li>\u56de\u5f52\u4efb\u52a1\uff1a\u53d6\u5e73\u5747\u503c\u3002</li> </ul> </li> </ol>"},{"location":"machinelearning/ml/supervised/#3-vs","title":"3\ufe0f\u20e3 \u968f\u673a\u68ee\u6797 vs \u51b3\u7b56\u6811","text":"\u9879\u76ee \u51b3\u7b56\u6811 \u968f\u673a\u68ee\u6797 \u662f\u5426\u6613\u8fc7\u62df\u5408 \u2705 \u662f \u274c \u51cf\u5c11\u8fc7\u62df\u5408 \u6a21\u578b\u7a33\u5b9a\u6027 \u274c \u5bf9\u6570\u636e\u53d8\u5316\u654f\u611f \u2705 \u7a33\u5b9a \u53ef\u89e3\u91ca\u6027 \u2705 \u5f3a \u274c \u8f83\u5f31 \u8bad\u7ec3\u65f6\u95f4 \u23f1\ufe0f \u5feb \u23f1\ufe0f \u6162\uff08\u8bad\u7ec3\u591a\u68f5\u6811\uff09 \u51c6\u786e\u7387 \u4e00\u822c \u8f83\u9ad8"},{"location":"machinelearning/ml/supervised/#4_3","title":"4\ufe0f\u20e3 \u968f\u673a\u6027\u6765\u6e90","text":"<ul> <li>Bagging\uff08\u6837\u672c\u968f\u673a\uff09\uff1a\u8bad\u7ec3\u6570\u636e\u901a\u8fc7\u968f\u673a\u91c7\u6837\u751f\u6210\u5b50\u96c6</li> <li>\u7279\u5f81\u968f\u673a\u6027\uff1a\u6bcf\u6b21\u5206\u88c2\u8282\u70b9\u65f6\uff0c\u53ea\u8003\u8651\u90e8\u5206\u7279\u5f81\u800c\u975e\u5168\u90e8</li> </ul> <p>\u8fd9\u4e24\u79cd\u201c\u968f\u673a\u6027\u201d\u8ba9\u6bcf\u68f5\u6811\u4e4b\u95f4\u5dee\u5f02\u66f4\u5927\uff0c\u4ece\u800c\u51cf\u5c11\u65b9\u5dee\uff0c\u63d0\u5347\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\u3002</p>"},{"location":"machinelearning/ml/supervised/#5_2","title":"5\ufe0f\u20e3 \u4f18\u70b9\u4e0e\u7f3a\u70b9","text":"\u4f18\u70b9 \u7f3a\u70b9 \u6297\u8fc7\u62df\u5408\u80fd\u529b\u5f3a \u6a21\u578b\u8f83\u5927\uff0c\u4e0d\u6613\u90e8\u7f72 \u53ef\u5904\u7406\u9ad8\u7ef4\u6570\u636e\u548c\u7f3a\u5931\u503c \u53ef\u89e3\u91ca\u6027\u4e0d\u5982\u5355\u68f5\u51b3\u7b56\u6811 \u5bf9\u5f02\u5e38\u503c\u9c81\u68d2 \u8bad\u7ec3\u65f6\u95f4\u548c\u5185\u5b58\u5f00\u9500\u8f83\u5927 \u9002\u5408\u5e76\u884c\u8bad\u7ec3 \u5bf9\u5c0f\u6570\u636e\u96c6\u53ef\u80fd\u8fc7\u62df\u5408"},{"location":"machinelearning/ml/supervised/#6-python-sklearn_1","title":"6\ufe0f\u20e3 Python \u5b9e\u73b0\uff08\u4f7f\u7528 sklearn\uff09","text":"<pre><code>from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\n\n# \u6570\u636e\u52a0\u8f7d\nX, y = load_iris(return_X_y=True)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)\n\n# \u6a21\u578b\u8bad\u7ec3\nmodel = RandomForestClassifier(n_estimators=100, max_depth=3, random_state=42)\nmodel.fit(X_train, y_train)\n\n# \u9884\u6d4b\u4e0e\u8bc4\u4f30\ny_pred = model.predict(X_test)\nprint(\"\u51c6\u786e\u7387:\", accuracy_score(y_test, y_pred))\n</code></pre>"},{"location":"machinelearning/ml/supervised/#7_3","title":"7\ufe0f\u20e3 \u5e38\u7528\u8d85\u53c2\u6570","text":"\u53c2\u6570 \u8bf4\u660e <code>n_estimators</code> \u68ee\u6797\u4e2d\u6811\u7684\u6570\u91cf\uff08\u8d8a\u591a\u8d8a\u7a33\u5b9a\uff0c\u8ba1\u7b97\u91cf\u8d8a\u5927\uff09 <code>max_depth</code> \u6bcf\u68f5\u6811\u7684\u6700\u5927\u6df1\u5ea6\uff0c\u9632\u6b62\u8fc7\u62df\u5408 <code>max_features</code> \u6bcf\u6b21\u5212\u5206\u65f6\u8003\u8651\u7684\u6700\u5927\u7279\u5f81\u6570 <code>min_samples_split</code> \u5185\u90e8\u8282\u70b9\u518d\u5212\u5206\u6240\u9700\u7684\u6700\u5c0f\u6837\u672c\u6570 <code>min_samples_leaf</code> \u53f6\u5b50\u8282\u70b9\u6700\u5c11\u6837\u672c\u6570\uff0c\u589e\u5927\u53ef\u9632\u6b62\u8fc7\u62df\u5408 <code>bootstrap</code> \u662f\u5426\u8fdb\u884c\u6709\u653e\u56de\u91c7\u6837\uff08\u9ed8\u8ba4 <code>True</code>\uff09 <code>random_state</code> \u968f\u673a\u79cd\u5b50\uff0c\u7528\u4e8e\u7ed3\u679c\u590d\u73b0 <code>n_jobs</code> \u5e76\u884c\u6267\u884c\u7684\u7ebf\u7a0b\u6570\uff08\u5982\u8bbe\u4e3a <code>-1</code> \u5219\u4f7f\u7528\u6240\u6709CPU\uff09 <code>criterion</code> \u5206\u88c2\u8282\u70b9\u7684\u6807\u51c6\uff08\u5982 <code>\"gini\"</code> \u6216 <code>\"entropy\"</code>\uff09"},{"location":"machinelearning/ml/supervised/#8_1","title":"8\ufe0f\u20e3 \u5e94\u7528\u573a\u666f","text":"<ul> <li>\u533b\u7597\u8bca\u65ad\uff08\u9884\u6d4b\u75be\u75c5\uff09</li> <li>\u91d1\u878d\u4fe1\u7528\u8bc4\u5206</li> <li>\u5ba2\u6237\u6d41\u5931\u9884\u6d4b</li> <li>\u6587\u672c\u5206\u7c7b\u3001\u5783\u573e\u90ae\u4ef6\u68c0\u6d4b</li> <li>\u56fe\u50cf\u8bc6\u522b\u4e2d\u7684\u521d\u7ea7\u7279\u5f81\u5206\u7c7b\u4efb\u52a1</li> </ul>"},{"location":"machinelearning/ml/supervised/#23-gradient-boosting","title":"2.3 \u68af\u5ea6\u63d0\u5347\u6811\uff08Gradient Boosting\uff09","text":""},{"location":"machinelearning/ml/supervised/#1_5","title":"1\ufe0f\u20e3 \u4ec0\u4e48\u662f\u68af\u5ea6\u63d0\u5347\u6811\uff1f","text":"<p>\u68af\u5ea6\u63d0\u5347\u6811\uff08GBDT\uff09\u662f\u4e00\u79cd\u96c6\u6210\u5b66\u4e60\u65b9\u6cd5\uff0c\u5c5e\u4e8e Boosting \u7cfb\u5217\u3002\u5b83\u901a\u8fc7\u4e32\u884c\u5730\u8bad\u7ec3\u591a\u4e2a\u51b3\u7b56\u6811\uff0c\u6bcf\u68f5\u6811\u90fd\u62df\u5408\u4e0a\u4e00\u6b21\u9884\u6d4b\u7684\u6b8b\u5dee\uff08\u8bef\u5dee\uff09\uff0c\u4ece\u800c\u9010\u6b65\u4f18\u5316\u6574\u4e2a\u6a21\u578b\u7684\u9884\u6d4b\u80fd\u529b\u3002</p> <p>\ud83d\udccc \u4e00\u53e5\u8bdd\u603b\u7ed3\uff1aGBDT = \u591a\u68f5\u51b3\u7b56\u6811 + \u68af\u5ea6\u4e0b\u964d\u601d\u60f3</p>"},{"location":"machinelearning/ml/supervised/#2_4","title":"2\ufe0f\u20e3 \u5de5\u4f5c\u539f\u7406","text":"<p>GBDT \u662f\u4e00\u4e2a\u9010\u6b65\u8fed\u4ee3\u7684\u8fc7\u7a0b\uff1a</p> <ol> <li>\u5148\u8bad\u7ec3\u4e00\u68f5\u51b3\u7b56\u6811 <code>f\u2081(x)</code>\uff0c\u9884\u6d4b\u76ee\u6807 <code>y</code>\u3002</li> <li>\u8ba1\u7b97\u6b8b\u5dee\uff1a<code>r\u2081 = y - f\u2081(x)</code></li> <li>\u518d\u8bad\u7ec3\u7b2c\u4e8c\u68f5\u6811 <code>f\u2082(x)</code> \u6765\u62df\u5408\u6b8b\u5dee <code>r\u2081</code></li> <li>\u5f97\u5230\u65b0\u6a21\u578b\uff1a<code>y_pred = f\u2081(x) + f\u2082(x)</code></li> <li>\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u6700\u7ec8\u6a21\u578b\u4e3a\uff1a</li> </ol> \\[ F(x) = \\sum_{m=1}^{M} \\gamma_m f_m(x) \\] <p>\u5176\u4e2d\u6bcf\u4e00\u8f6e\u901a\u8fc7\u8d1f\u68af\u5ea6\u65b9\u5411\u4f18\u5316\u635f\u5931\u51fd\u6570\u3002</p>"},{"location":"machinelearning/ml/supervised/#3-gbdt","title":"3\ufe0f\u20e3 GBDT \u4e0e\u968f\u673a\u68ee\u6797\u5bf9\u6bd4","text":"\u9879\u76ee \u968f\u673a\u68ee\u6797\uff08RF\uff09 \u68af\u5ea6\u63d0\u5347\u6811\uff08GBDT\uff09 \u8bad\u7ec3\u65b9\u5f0f \u5e76\u884c\u8bad\u7ec3\u591a\u68f5\u6811 \u4e32\u884c\u8bad\u7ec3\uff0c\u6bcf\u68f5\u6811\u4f9d\u8d56\u4e0a\u4e00\u68f5 \u96c6\u6210\u65b9\u5f0f \u591a\u6570\u6295\u7968\u6216\u5e73\u5747\u503c \u6b8b\u5dee\u62df\u5408 + \u52a0\u6743\u6c42\u548c \u504f\u5dee\u4e0e\u65b9\u5dee \u964d\u4f4e\u65b9\u5dee \u964d\u4f4e\u504f\u5dee \u5bf9\u5f02\u5e38\u503c\u654f\u611f\u6027 \u8f83\u4f4e \u8f83\u9ad8\uff08\u4f7f\u7528\u4e86\u6b8b\u5dee\u62df\u5408\uff09 \u901f\u5ea6 \u8f83\u5feb \u8f83\u6162"},{"location":"machinelearning/ml/supervised/#4_4","title":"4\ufe0f\u20e3 \u635f\u5931\u51fd\u6570\u4e0e\u68af\u5ea6","text":"<p>GBDT \u53ef\u7528\u4e8e\u56de\u5f52\u548c\u5206\u7c7b\uff0c\u5176\u6838\u5fc3\u662f\u901a\u8fc7\u635f\u5931\u51fd\u6570\u7684\u68af\u5ea6\u65b9\u5411\u66f4\u65b0\u6a21\u578b\u3002</p> <ul> <li>\u56de\u5f52\u95ee\u9898\u5e38\u7528\uff1a MSE\uff08\u5747\u65b9\u8bef\u5dee\uff09</li> <li>\u5206\u7c7b\u95ee\u9898\u5e38\u7528\uff1a \u5bf9\u6570\u635f\u5931\uff08log loss\uff09</li> </ul> <p>\u6bcf\u4e00\u8f6e\u90fd\u662f\u5bf9\u635f\u5931\u51fd\u6570\u5173\u4e8e\u9884\u6d4b\u503c\u7684\u8d1f\u68af\u5ea6\u65b9\u5411\u8fdb\u884c\u62df\u5408\u3002</p>"},{"location":"machinelearning/ml/supervised/#5-python-sklearn_1","title":"5\ufe0f\u20e3 Python \u793a\u4f8b\uff08\u4f7f\u7528 <code>sklearn</code>\uff09","text":"<pre><code>from sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\n\n# \u52a0\u8f7d\u6570\u636e\nX, y = load_iris(return_X_y=True)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n\n# \u8bad\u7ec3 GBDT \u6a21\u578b\nmodel = GradientBoostingClassifier(n_estimators=100, learning_rate=0.1, max_depth=3)\nmodel.fit(X_train, y_train)\n\n# \u9884\u6d4b\u4e0e\u8bc4\u4f30\ny_pred = model.predict(X_test)\nprint(\"\u51c6\u786e\u7387:\", accuracy_score(y_test, y_pred))\n</code></pre>"},{"location":"machinelearning/ml/supervised/#6_1","title":"6\ufe0f\u20e3 \u5e38\u7528\u8d85\u53c2\u6570","text":"\u53c2\u6570 \u542b\u4e49 <code>n_estimators</code> \u5f31\u5b66\u4e60\u5668\u7684\u6570\u91cf\uff0c\u5373\u6811\u7684\u68f5\u6570 <code>learning_rate</code> \u5b66\u4e60\u7387\uff0c\u63a7\u5236\u6bcf\u68f5\u6811\u5bf9\u6700\u7ec8\u7ed3\u679c\u7684\u8d21\u732e\uff0c\u8f83\u5c0f\u53ef\u63d0\u5347\u7cbe\u5ea6 <code>max_depth</code> \u6bcf\u68f5\u6811\u7684\u6700\u5927\u6df1\u5ea6\uff0c\u63a7\u5236\u6a21\u578b\u590d\u6742\u5ea6 <code>min_samples_split</code> \u5185\u90e8\u8282\u70b9\u518d\u5212\u5206\u6240\u9700\u7684\u6700\u5c0f\u6837\u672c\u6570 <code>min_samples_leaf</code> \u53f6\u5b50\u8282\u70b9\u6700\u5c11\u6837\u672c\u6570\uff0c\u907f\u514d\u8fc7\u62df\u5408 <code>subsample</code> \u6bcf\u68f5\u6811\u8bad\u7ec3\u6240\u7528\u6570\u636e\u7684\u6bd4\u4f8b\uff0c&lt;1 \u53ef\u5f15\u5165\u968f\u673a\u6027\u9632\u8fc7\u62df\u5408 <code>loss</code> \u635f\u5931\u51fd\u6570\u7c7b\u578b\uff0c\u5982 <code>squared_error</code> \u6216 <code>log_loss</code> <code>max_features</code> \u5bfb\u627e\u6700\u4f73\u5212\u5206\u65f6\u8003\u8651\u7684\u7279\u5f81\u6570\u91cf"},{"location":"machinelearning/ml/supervised/#7_4","title":"7\ufe0f\u20e3 \u4f18\u70b9\u4e0e\u7f3a\u70b9","text":"\u4f18\u70b9 \u7f3a\u70b9 \u7cbe\u5ea6\u9ad8\uff0c\u6548\u679c\u901a\u5e38\u4f18\u4e8e\u5355\u68f5\u51b3\u7b56\u6811 \u8bad\u7ec3\u65f6\u95f4\u8f83\u957f\uff0c\u4e0d\u80fd\u5e76\u884c\u8bad\u7ec3 \u53ef\u7528\u4e8e\u56de\u5f52\u548c\u5206\u7c7b\u4efb\u52a1 \u5bf9\u5f02\u5e38\u503c\u8f83\u654f\u611f \u53ef\u7075\u6d3b\u9009\u62e9\u635f\u5931\u51fd\u6570 \u5bf9\u53c2\u6570\u8c03\u8282\u8f83\u4e3a\u654f\u611f\uff0c\u8c03\u53c2\u8f83\u590d\u6742 \u53ef\u4ee5\u6355\u6349\u7279\u5f81\u95f4\u7684\u975e\u7ebf\u6027\u4ea4\u4e92\u5173\u7cfb \u4e0d\u9002\u5408\u5b9e\u65f6\u9884\u6d4b\uff0c\u63a8\u7406\u901f\u5ea6\u8f83\u6162 \u5f3a\u5927\u7684\u6cdb\u5316\u80fd\u529b \u5982\u679c\u6811\u7684\u6570\u91cf\u8fc7\u591a\u53ef\u80fd\u8fc7\u62df\u5408"},{"location":"machinelearning/ml/supervised/#svm","title":"\u4e09\u3001\u652f\u6301\u5411\u91cf\u673a\uff08SVM\uff09","text":""},{"location":"machinelearning/ml/supervised/#1-svm","title":"1\ufe0f\u20e3 \u4ec0\u4e48\u662f SVM\uff1f","text":"<p>SVM\uff08Support Vector Machine\uff0c\u652f\u6301\u5411\u91cf\u673a\uff09\u662f\u4e00\u79cd\u76d1\u7763\u5b66\u4e60\u7684\u5206\u7c7b\u7b97\u6cd5\u3002</p> <p>\u5b83\u7684\u76ee\u6807\u662f\uff1a</p> <p>\u627e\u5230\u4e00\u6761\u6700\u4f73\u7684\u201c\u5206\u754c\u7ebf\u201d\uff08\u4e5f\u79f0\u4e3a\u8d85\u5e73\u9762\uff09\uff0c\u628a\u4e0d\u540c\u7c7b\u522b\u7684\u6570\u636e\u5206\u5f00\uff0c\u5e76\u5c3d\u53ef\u80fd\u4fdd\u6301\u8ddd\u79bb\u6700\u5927\uff08\u5b89\u5168\u95f4\u9694\u6700\u5927\uff09\u3002</p>"},{"location":"machinelearning/ml/supervised/#2-svm","title":"2\ufe0f\u20e3 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528 SVM\uff1f","text":"<p>SVM \u7279\u522b\u9002\u5408\u4ee5\u4e0b\u573a\u666f\uff1a</p> <ul> <li>\u6837\u672c\u6570\u91cf\u4e0d\u591a\uff0c\u4f46\u7279\u5f81\u5f88\u591a\uff08\u9ad8\u7ef4\u6570\u636e\uff09</li> <li>\u5206\u7c7b\u4efb\u52a1\u8981\u6c42\u9ad8\u51c6\u786e\u7387</li> <li>\u60f3\u8981\u627e\u5230\u201c\u9c81\u68d2\u6027\u5f3a\u201d\u7684\u5206\u7c7b\u8fb9\u754c</li> </ul>"},{"location":"machinelearning/ml/supervised/#3-svm","title":"3\ufe0f\u20e3 SVM \u7684\u5de5\u4f5c\u539f\u7406","text":""},{"location":"machinelearning/ml/supervised/#_9","title":"\u7ebf\u6027\u53ef\u5206\u60c5\u51b5\uff1a","text":"<p>SVM \u627e\u4e00\u6761\u201c\u6700\u4f73\u76f4\u7ebf\u201d\uff08\u6216\u8d85\u5e73\u9762\uff09\uff0c\u628a\u4e24\u7c7b\u70b9\uff08\u4f8b\u5982\u732b vs \u72d7\uff09\u5b8c\u5168\u5206\u5f00\uff0c\u540c\u65f6\uff1a</p> <p>\u2705 \u4fdd\u8bc1\u4e24\u8fb9\u7684\u70b9\u79bb\u5206\u754c\u7ebf\u5c3d\u53ef\u80fd\u8fdc</p> <p>\u2705 \u4e2d\u95f4\u7684\u201c\u5b89\u5168\u5e26\u201d\uff08\u95f4\u9694\uff09\u8d8a\u5bbd\u8d8a\u597d</p> <p></p>"},{"location":"machinelearning/ml/supervised/#_10","title":"\u6570\u5b66\u5f62\u5f0f","text":"<p>\u5047\u8bbe\u6211\u4eec\u8981\u627e\u7684\u8d85\u5e73\u9762\u662f\uff1a</p> <p><pre><code>w\u00b7x + b = 0\n</code></pre> \u5176\u4e2d\uff1a</p> <ul> <li>w \u662f\u6cd5\u5411\u91cf\uff0c\u51b3\u5b9a\u65b9\u5411</li> <li>b \u662f\u504f\u7f6e\uff0c\u51b3\u5b9a\u8ddd\u79bb\u539f\u70b9\u591a\u8fdc</li> </ul> <p>\u5206\u7c7b\u89c4\u5219\uff1a</p> <ul> <li>\u6b63\u7c7b\uff1aw\u00b7x + b \u2265 +1</li> <li>\u8d1f\u7c7b\uff1aw\u00b7x + b \u2264 -1</li> </ul> <p>\u76ee\u6807\u662f\uff1a\u6700\u5927\u5316\u95f4\u9694 = 2 / ||w||</p>"},{"location":"machinelearning/ml/supervised/#4-vs","title":"4\ufe0f\u20e3 \u786c\u95f4\u9694 vs \u8f6f\u95f4\u9694","text":""},{"location":"machinelearning/ml/supervised/#hard-margin","title":"\u786c\u95f4\u9694\uff08Hard Margin\uff09\uff1a","text":"<ul> <li>\u8981\u6c42\u6570\u636e\u5b8c\u5168\u53ef\u5206</li> <li>\u4e0d\u5141\u8bb8\u6709\u4efb\u4f55\u5206\u7c7b\u9519\u8bef</li> <li>\u9002\u5408\u5e72\u51c0\u6570\u636e\uff0c\u4f46\u73b0\u5b9e\u4e2d\u5f88\u5c11</li> </ul>"},{"location":"machinelearning/ml/supervised/#soft-margin","title":"\u8f6f\u95f4\u9694\uff08Soft Margin\uff09\uff1a","text":"<ul> <li>\u5141\u8bb8\u90e8\u5206\u9519\u8bef\u5206\u7c7b\uff08\u5f15\u5165\u677e\u5f1b\u53d8\u91cf \u03be\uff09</li> <li>\u5e73\u8861\u201c\u95f4\u9694\u6700\u5927\u201d\u548c\u201c\u5206\u7c7b\u9519\u8bef\u6700\u5c0f\u201d</li> <li>\u66f4\u9002\u5408\u771f\u5b9e\u6570\u636e</li> </ul>"},{"location":"machinelearning/ml/supervised/#5_3","title":"5\ufe0f\u20e3 \u6838\u51fd\u6570\uff08\u5904\u7406\u975e\u7ebf\u6027\u95ee\u9898\uff09","text":"<p>\u6709\u4e9b\u6570\u636e\u7528\u76f4\u7ebf\u6839\u672c\u5206\u4e0d\u5f00\u600e\u4e48\u529e\uff1f</p> <p>Info</p> <p>\ud83d\udc49 \u7b54\u6848\u662f\uff1a\u7528\u6838\u51fd\u6570\u628a\u6570\u636e\u201c\u6620\u5c04\u201d\u5230\u9ad8\u7ef4\u7a7a\u95f4\uff0c\u5728\u9ad8\u7ef4\u7a7a\u95f4\u91cc\u5206\u5f00\uff01</p>"},{"location":"machinelearning/ml/supervised/#6-python-svm","title":"6\ufe0f\u20e3 Python \u5b9e\u73b0 SVM \u5206\u7c7b\uff08\u7ebf\u6027\u6838\uff09","text":"<pre><code>from sklearn import datasets\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.svm import SVC\nimport matplotlib.pyplot as plt\n\n# \u751f\u6210\u7b80\u5355\u6570\u636e\nX, y = datasets.make_classification(n_samples=100, n_features=2, \n                                     n_redundant=0, n_clusters_per_class=1, random_state=42)\n\n# \u5212\u5206\u8bad\u7ec3\u548c\u6d4b\u8bd5\u96c6\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# \u521b\u5efa\u6a21\u578b\uff0c\u4f7f\u7528\u7ebf\u6027\u6838\nclf = SVC(kernel='linear')\nclf.fit(X_train, y_train)\n\n# \u8f93\u51fa\u51c6\u786e\u7387\nprint(\"\u51c6\u786e\u7387:\", clf.score(X_test, y_test))\n\n# \u53ef\u89c6\u5316\nplt.scatter(X[:, 0], X[:, 1], c=y)\nplt.title(\"\u652f\u6301\u5411\u91cf\u673a\u5206\u7c7b\u6548\u679c\")\nplt.show()\n</code></pre>"},{"location":"machinelearning/ml/supervised/#7-svm","title":"7\ufe0f\u20e3 SVM \u7684\u4f18\u7f3a\u70b9","text":""},{"location":"machinelearning/ml/supervised/#_11","title":"\u2705 \u4f18\u70b9","text":"<ul> <li>\u5206\u7c7b\u51c6\u786e\u7387\u9ad8\uff0c\u7279\u522b\u662f\u9ad8\u7ef4\u6570\u636e</li> <li>\u5bf9\u5c0f\u6837\u672c\u6709\u6548</li> <li>\u53ef\u4ee5\u4f7f\u7528\u6838\u51fd\u6570\u6269\u5c55\u5230\u975e\u7ebf\u6027\u5206\u7c7b</li> <li>\u7406\u8bba\u57fa\u7840\u5f3a\uff0c\u6cdb\u5316\u80fd\u529b\u597d</li> </ul>"},{"location":"machinelearning/ml/supervised/#_12","title":"\u274c \u7f3a\u70b9","text":"<ul> <li>\u5bf9\u53c2\u6570\u654f\u611f\uff08\u5982 C\u3001\u6838\u53c2\u6570\uff09</li> <li>\u4e0d\u9002\u5408\u5927\u6570\u636e\u96c6\uff08\u8bad\u7ec3\u6162\uff09</li> <li>\u5bf9\u566a\u58f0\u548c\u91cd\u53e0\u6570\u636e\u4e0d\u592a\u7a33\u5065</li> </ul>"},{"location":"machinelearning/ml/supervised/#_13","title":"\u56db\u3001\u8d1d\u53f6\u65af\u65b9\u6cd5","text":""},{"location":"machinelearning/ml/supervised/#41-naive-bayes","title":"4.1 \u6734\u7d20\u8d1d\u53f6\u65af\uff08Naive Bayes\uff09","text":""},{"location":"machinelearning/ml/supervised/#1_6","title":"1\ufe0f\u20e3 \u57fa\u672c\u6982\u5ff5","text":"<p>\u6734\u7d20\u8d1d\u53f6\u65af\u662f\u4e00\u79cd\u57fa\u4e8e\u8d1d\u53f6\u65af\u5b9a\u7406\uff08Bayes Theorem\uff09\u7684\u5206\u7c7b\u7b97\u6cd5\uff0c\u9002\u7528\u4e8e\u6587\u672c\u5206\u7c7b\u3001\u5783\u573e\u90ae\u4ef6\u68c0\u6d4b\u3001\u60c5\u611f\u5206\u6790\u7b49\u4efb\u52a1\u3002</p>"},{"location":"machinelearning/ml/supervised/#_14","title":"\u8d1d\u53f6\u65af\u5b9a\u7406\uff1a","text":"\\[ P(A|B) = \\frac{P(B|A) \\cdot P(A)}{P(B)} \\] <p>\u89e3\u91ca\uff1a</p> <ul> <li>\\(P(A|B)\\)\uff1a\u5728\u5df2\u77e5 B \u7684\u6761\u4ef6\u4e0b A \u53d1\u751f\u7684\u6982\u7387\uff08\u540e\u9a8c\u6982\u7387\uff09  </li> <li>\\(P(B|A)\\)\uff1a\u5728 A \u53d1\u751f\u7684\u524d\u63d0\u4e0b B \u53d1\u751f\u7684\u6982\u7387\uff08\u4f3c\u7136\uff09  </li> <li>\\(P(A)\\)\uff1aA \u53d1\u751f\u7684\u5148\u9a8c\u6982\u7387  </li> <li>\\(P(B)\\)\uff1aB \u53d1\u751f\u7684\u603b\u6982\u7387  </li> </ul>"},{"location":"machinelearning/ml/supervised/#2_5","title":"2\ufe0f\u20e3 \u6734\u7d20\u8d1d\u53f6\u65af\u7684\u201c\u6734\u7d20\u201d\u5047\u8bbe","text":"<p>\u6734\u7d20\u8d1d\u53f6\u65af\u7b97\u6cd5\u5047\u8bbe\uff1a</p> <p>\u7279\u5f81\u4e4b\u95f4\u662f\u6761\u4ef6\u72ec\u7acb\u7684\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u6587\u672c\u6709\u591a\u4e2a\u8bcd\uff08\u7279\u5f81\uff09\uff0c\u6734\u7d20\u8d1d\u53f6\u65af\u4f1a\u8ba4\u4e3a\u8fd9\u4e9b\u8bcd\u662f\u5f7c\u6b64\u72ec\u7acb\u5f71\u54cd\u7ed3\u679c\u7684\u3002</p>"},{"location":"machinelearning/ml/supervised/#3_3","title":"3\ufe0f\u20e3 \u516c\u5f0f\u63a8\u5bfc","text":"<p>\u8bbe\u6709\u7279\u5f81\u5411\u91cf \\(X = (x_1, x_2, ..., x_n)\\)\uff0c\u7c7b\u522b\u4e3a \\(C_k\\)\uff0c\u76ee\u6807\u662f\u8ba1\u7b97\uff1a</p> \\[ P(C_k|X) \\propto P(C_k) \\cdot \\prod_{i=1}^{n} P(x_i|C_k) \\] <ul> <li>\\(P(C_k)\\)\uff1a\u7c7b\u522b \\(C_k\\) \u7684\u5148\u9a8c\u6982\u7387  </li> <li>\\(P(x_i|C_k)\\)\uff1a\u5728\u7c7b\u522b\u4e3a \\(C_k\\) \u7684\u6761\u4ef6\u4e0b\uff0c\u7b2c \\(i\\) \u4e2a\u7279\u5f81\u51fa\u73b0\u7684\u6982\u7387  </li> </ul>"},{"location":"machinelearning/ml/supervised/#4_5","title":"4\ufe0f\u20e3 \u5e38\u89c1\u7684\u4e09\u79cd\u6734\u7d20\u8d1d\u53f6\u65af\u6a21\u578b","text":"\u7c7b\u578b \u7279\u5f81\u53d8\u91cf\u7c7b\u578b \u4e3e\u4f8b \u9ad8\u65af\u6734\u7d20\u8d1d\u53f6\u65af \u8fde\u7eed\u503c \u8eab\u9ad8\u3001\u4f53\u91cd\u3001\u6e29\u5ea6\u7b49 \u591a\u9879\u5f0f\u6734\u7d20\u8d1d\u53f6\u65af \u8bcd\u9891\u8ba1\u6570 \u6587\u672c\u5206\u7c7b\uff08\u8bcd\u51fa\u73b0\u6b21\u6570\uff09 \u4f2f\u52aa\u5229\u6734\u7d20\u8d1d\u53f6\u65af \u4e8c\u503c\u53d8\u91cf \u6587\u672c\u4e2d\u67d0\u8bcd\u662f\u5426\u51fa\u73b0\uff080/1\uff09"},{"location":"machinelearning/ml/supervised/#5_4","title":"5\ufe0f\u20e3 \u901a\u4fd7\u4f8b\u5b50\uff1a\u5929\u6c14\u4e0e\u6253\u7403\u9884\u6d4b","text":"<p>\u5047\u8bbe\u4f60\u60f3\u6839\u636e\u5929\u6c14\u9884\u6d4b\u662f\u5426\u53bb\u6253\u7403\uff0c\u6709\u5982\u4e0b\u8bad\u7ec3\u6570\u636e\uff1a</p> \u5929\u6c14 \u6e7f\u5ea6 \u98ce\u5927 \u53bb\u6253\u7403 \u6674\u5929 \u9ad8 \u5426 \u5426 \u9634\u5929 \u9ad8 \u5426 \u662f \u96e8\u5929 \u9ad8 \u5426 \u662f \u96e8\u5929 \u4f4e \u662f \u5426 \u6674\u5929 \u4f4e \u662f \u662f"},{"location":"machinelearning/ml/supervised/#1_7","title":"\u6b65\u9aa41\uff1a\u8ba1\u7b97\u5148\u9a8c\u6982\u7387","text":"<ul> <li>\u53bb\u6253\u7403\uff08\u662f\uff09\uff1a3/5  </li> <li>\u4e0d\u53bb\u6253\u7403\uff08\u5426\uff09\uff1a2/5  </li> </ul>"},{"location":"machinelearning/ml/supervised/#2_6","title":"\u6b65\u9aa42\uff1a\u8ba1\u7b97\u6761\u4ef6\u6982\u7387\uff08\u4ee5\u201c\u6674\u5929, \u9ad8\u6e7f\u5ea6, \u65e0\u98ce\u201d\u4e3a\u4f8b\uff09","text":"<ul> <li>\\(P(\u6674\u5929|\u662f)\\)\uff0c\\(P(\u9ad8\u6e7f\u5ea6|\u662f)\\)\uff0c\\(P(\u65e0\u98ce|\u662f)\\) </li> <li>\\(P(\u6674\u5929|\u5426)\\)\uff0c\\(P(\u9ad8\u6e7f\u5ea6|\u5426)\\)\uff0c\\(P(\u65e0\u98ce|\u5426)\\) </li> </ul>"},{"location":"machinelearning/ml/supervised/#3_4","title":"\u6b65\u9aa43\uff1a\u4ee3\u5165\u8d1d\u53f6\u65af\u516c\u5f0f\u8ba1\u7b97\u540e\u9a8c\u6982\u7387","text":"<p>\u6bd4\u8f83 \\(P(\u662f|\u6674\u5929, \u9ad8, \u65e0\u98ce)\\) \u548c \\(P(\u5426|\u6674\u5929, \u9ad8, \u65e0\u98ce)\\)\uff0c\u54ea\u4e2a\u5927\u5c31\u9884\u6d4b\u54ea\u4e2a\u7c7b\u522b\u3002</p>"},{"location":"machinelearning/ml/supervised/#6-sklearn","title":"6\ufe0f\u20e3 \u4ee3\u7801\u793a\u4f8b\uff08\u4f7f\u7528 sklearn\uff09","text":"<pre><code>from sklearn.naive_bayes import MultinomialNB\nfrom sklearn.feature_extraction.text import CountVectorizer\n\n# \u793a\u4f8b\u6587\u672c\u548c\u6807\u7b7e\ntexts = [\"\u6211 \u559c\u6b22 \u7bee\u7403\", \"\u4f60 \u559c\u6b22 \u8db3\u7403\", \"\u4ed6 \u8ba8\u538c \u7bee\u7403\", \"\u6211 \u559c\u6b22 \u8db3\u7403\"]\nlabels = [\"\u6b63\u9762\", \"\u6b63\u9762\", \"\u8d1f\u9762\", \"\u6b63\u9762\"]\n\n# \u5411\u91cf\u5316\u6587\u672c\nvectorizer = CountVectorizer()\nX = vectorizer.fit_transform(texts)\n\n# \u8bad\u7ec3\u6a21\u578b\nmodel = MultinomialNB()\nmodel.fit(X, labels)\n\n# \u9884\u6d4b\ntest = vectorizer.transform([\"\u6211 \u559c\u6b22 \u8db3\u7403\"])\nprint(model.predict(test))  # \u8f93\u51fa\uff1a['\u6b63\u9762']\n</code></pre>"},{"location":"machinelearning/ml/supervised/#7_5","title":"7\ufe0f\u20e3 \u4f18\u7f3a\u70b9","text":""},{"location":"machinelearning/ml/supervised/#_15","title":"\u2705 \u4f18\u70b9","text":"<ul> <li>\u8bad\u7ec3\u901f\u5ea6\u5feb\uff1a\u4e0d\u9700\u8981\u590d\u6742\u8ba1\u7b97</li> <li>\u5bf9\u9ad8\u7ef4\u6570\u636e\u6709\u6548\uff1a\u5982\u6587\u672c\u5206\u7c7b</li> <li>\u5b9e\u73b0\u7b80\u5355\uff1a\u6613\u4e8e\u7406\u89e3\u4e0e\u5b9e\u73b0</li> </ul>"},{"location":"machinelearning/ml/supervised/#_16","title":"\u274c \u7f3a\u70b9","text":"<ul> <li>\u5047\u8bbe\u7279\u5f81\u72ec\u7acb\uff1a\u5b9e\u9645\u4e2d\u7279\u5f81\u5f80\u5f80\u76f8\u5173</li> <li>\u5bf9\u6982\u7387\u4e3a0\u654f\u611f\uff1a\u9700\u8981\u5e73\u6ed1\u5904\u7406\uff08\u5982\u62c9\u666e\u62c9\u65af\u5e73\u6ed1\uff09</li> </ul>"},{"location":"machinelearning/ml/supervised/#8_2","title":"8\ufe0f\u20e3 \u5e73\u6ed1\u6280\u672f\uff08\u62c9\u666e\u62c9\u65af\u5e73\u6ed1\uff09","text":"<p>\u5f53\u67d0\u4e2a\u6761\u4ef6\u6982\u7387\u4e3a 0 \u65f6\uff0c\u6574\u4e2a\u4e58\u79ef\u4e3a 0\uff0c\u5bfc\u81f4\u9884\u6d4b\u5931\u8d25\u3002</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a</p> \\[ P(x_i|C_k) = \\frac{count(x_i, C_k) + 1}{count(C_k) + V} \\] <p>\u5176\u4e2d (V) \u662f\u7279\u5f81\u603b\u6570\u3002</p>"},{"location":"machinelearning/ml/supervised/#9","title":"9\ufe0f\u20e3 \u5e94\u7528\u573a\u666f","text":"<ul> <li>\ud83d\udce7 \u5783\u573e\u90ae\u4ef6\u5206\u7c7b</li> <li>\ud83d\udcac \u6587\u672c\u60c5\u611f\u5206\u6790</li> <li>\ud83e\uddec \u533b\u7597\u8bca\u65ad\u5206\u7c7b</li> <li>\ud83e\uddfe \u65b0\u95fb\u5206\u7c7b</li> </ul>"},{"location":"machinelearning/ml/supervised/#42","title":"4.2 \u8d1d\u53f6\u65af\u7f51\u7edc","text":""},{"location":"machinelearning/ml/supervised/#1_8","title":"1\ufe0f\u20e3 \u4ec0\u4e48\u662f\u8d1d\u53f6\u65af\u7f51\u7edc\uff1f","text":"<p>\u8d1d\u53f6\u65af\u7f51\u7edc\uff08Bayesian Network\uff0c\u7b80\u79f0 BN\uff09\u662f\u4e00\u79cd\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09\u6a21\u578b\uff0c\u7528\u4e8e\u8868\u793a\u53d8\u91cf\u4e4b\u95f4\u7684\u6982\u7387\u5173\u7cfb\uff0c\u7ed3\u5408\u4e86\u56fe\u8bba\u4e0e\u6982\u7387\u8bba\u7684\u601d\u60f3\u3002</p> <p>\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u6bcf\u6761\u8fb9\u4ee3\u8868\u53d8\u91cf\u95f4\u7684\u6761\u4ef6\u4f9d\u8d56\u5173\u7cfb\u3002</p>"},{"location":"machinelearning/ml/supervised/#2_7","title":"2\ufe0f\u20e3 \u57fa\u672c\u7ec4\u6210","text":"<ol> <li>\u8282\u70b9\uff08Node\uff09\uff1a\u8868\u793a\u968f\u673a\u53d8\u91cf  </li> <li>\u6709\u5411\u8fb9\uff08Directed Edge\uff09\uff1a\u8868\u793a\u53d8\u91cf\u95f4\u7684\u4f9d\u8d56  </li> <li>\u6761\u4ef6\u6982\u7387\u8868\uff08Conditional Probability Table, CPT\uff09\uff1a\u8868\u793a\u5728\u7ed9\u5b9a\u7236\u8282\u70b9\u7684\u6761\u4ef6\u4e0b\uff0c\u8be5\u53d8\u91cf\u7684\u6982\u7387\u5206\u5e03</li> </ol>"},{"location":"machinelearning/ml/supervised/#3_5","title":"3\ufe0f\u20e3 \u5f62\u5f0f\u5b9a\u4e49","text":"<p>\u8d1d\u53f6\u65af\u7f51\u7edc\u662f\u4e00\u4e2a\u4e09\u5143\u7ec4\uff1a</p> \\[ G = (X, E, P) \\] <ul> <li>\\(X = \\{X_1, X_2, ..., X_n\\}\\)\uff1a\u53d8\u91cf\u96c6\u5408  </li> <li>\\(E\\)\uff1a\u8fb9\u7684\u96c6\u5408\uff0c\u6784\u6210\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09  </li> <li>\\(P = \\{P(X_i | Pa(X_i))\\}\\)\uff1a\u6bcf\u4e2a\u53d8\u91cf\u7684\u6761\u4ef6\u6982\u7387\u5206\u5e03\uff08Pa \u8868\u793a\u7236\u8282\u70b9\uff09</li> </ul>"},{"location":"machinelearning/ml/supervised/#4_6","title":"4\ufe0f\u20e3 \u4f8b\u5b50\uff1a\u611f\u5192\u8bca\u65ad\u6a21\u578b","text":"<p>\u8003\u8651\u5982\u4e0b\u53d8\u91cf\uff1a</p> <ul> <li>C\uff1a\u611f\u5192\uff08Cold\uff09</li> <li>F\uff1a\u53d1\u70e7\uff08Fever\uff09</li> <li>S\uff1a\u6253\u55b7\u568f\uff08Sneeze\uff09</li> </ul>"},{"location":"machinelearning/ml/supervised/#_17","title":"\u56fe\u7ed3\u6784\uff1a","text":"<p><pre><code>   C\n  / \\\n F   S\n</code></pre> F \u548c S \u90fd\u7531 C \u51b3\u5b9a</p> <p>\u6761\u4ef6\u6982\u7387\u8868\u793a\uff1a</p> <ul> <li>P(C)\uff1a\u611f\u5192\u7684\u5148\u9a8c\u6982\u7387</li> <li>P(F|C)\uff1a\u5728\u611f\u5192\u60c5\u51b5\u4e0b\u53d1\u70e7\u7684\u6982\u7387</li> <li>P(S|C)\uff1a\u5728\u611f\u5192\u60c5\u51b5\u4e0b\u6253\u55b7\u568f\u7684\u6982\u7387</li> </ul>"},{"location":"machinelearning/ml/supervised/#5_5","title":"5\ufe0f\u20e3 \u8054\u5408\u6982\u7387\u5206\u5e03","text":"<p>\u901a\u8fc7\u94fe\u5f0f\u6cd5\u5219\uff0c\u6709\uff1a</p> <p>\\(P(C, F, S) = P(C) \\cdot P(F|C) \\cdot P(S|C)\\)</p> <p>\u8d1d\u53f6\u65af\u7f51\u7edc\u7684\u4f18\u70b9\u662f\u628a\u590d\u6742\u7684\u8054\u5408\u6982\u7387\u62c6\u5206\u4e3a\u66f4\u5bb9\u6613\u8ba1\u7b97\u7684\u5c40\u90e8\u6761\u4ef6\u6982\u7387\u3002</p>"},{"location":"machinelearning/ml/supervised/#6-inference","title":"6\ufe0f\u20e3 \u63a8\u7406\uff08Inference\uff09","text":""},{"location":"machinelearning/ml/supervised/#_18","title":"\u95ee\u9898\u793a\u4f8b\uff1a","text":"<p>\u5982\u679c\u77e5\u9053\u67d0\u4eba\u53d1\u70e7\uff08\\(F = 1\\)\uff09\uff0c\u6c42\u4ed6\u611f\u5192\u7684\u6982\u7387\uff08\\(P(C=1 \\mid F=1)\\)\uff09</p>"},{"location":"machinelearning/ml/supervised/#_19","title":"\u4f7f\u7528\u8d1d\u53f6\u65af\u516c\u5f0f\uff1a","text":"\\[ P(C=1 \\mid F=1) = \\frac{P(F=1 \\mid C=1) \\cdot P(C=1)}{P(F=1)} \\] <p>\u5176\u4e2d \\(P(F=1)\\) \u53ef\u901a\u8fc7\u5168\u6982\u7387\u516c\u5f0f\u8ba1\u7b97\uff1a</p> \\[ P(F=1) = P(F=1 \\mid C=1) \\cdot P(C=1) + P(F=1 \\mid C=0) \\cdot P(C=0) \\]"},{"location":"machinelearning/ml/supervised/#_20","title":"\u6b65\u9aa4\u603b\u7ed3\uff1a","text":"<ol> <li>\u5229\u7528 \u8d1d\u53f6\u65af\u516c\u5f0f \u8fdb\u884c\u53cd\u63a8\u3002</li> <li>\u82e5\u5206\u6bcd\u672a\u77e5\uff0c\u4f7f\u7528\u5168\u6982\u7387\u516c\u5f0f\u5c55\u5f00\u3002</li> <li>\u53ef\u4ee5\u7528\u8868\u683c\u3001\u63a8\u7406\u5f15\u64ce\uff08\u5982 pgmpy\uff09\u6c42\u89e3\u3002</li> </ol>"},{"location":"machinelearning/ml/supervised/#7_6","title":"7\ufe0f\u20e3 \u5efa\u6a21\u6d41\u7a0b","text":"<ol> <li>\u786e\u5b9a\u53d8\u91cf\uff1a\u5982\u5929\u6c14\u3001\u75be\u75c5\u3001\u75c7\u72b6\u7b49  </li> <li>\u786e\u5b9a\u4f9d\u8d56\u5173\u7cfb\uff08\u56fe\u7ed3\u6784\uff09 </li> <li>\u6536\u96c6\u6570\u636e\uff0c\u6784\u5efa CPT\uff08\u6761\u4ef6\u6982\u7387\u8868\uff09 </li> <li>\u63a8\u7406\u8ba1\u7b97\u6216\u91c7\u6837\uff08\u5982\u9884\u6d4b\u3001\u51b3\u7b56\u7b49\uff09</li> </ol>"},{"location":"machinelearning/ml/supervised/#8_3","title":"8\ufe0f\u20e3 \u5e94\u7528\u573a\u666f","text":"\u573a\u666f \u63cf\u8ff0 \u533b\u7597\u8bca\u65ad \u75be\u75c5\u3001\u75c7\u72b6\u4e4b\u95f4\u7684\u56e0\u679c\u5efa\u6a21 \u98ce\u9669\u8bc4\u4f30 \u91d1\u878d\u6b3a\u8bc8\u3001\u4fe1\u7528\u8fdd\u7ea6\u5206\u6790 \u667a\u80fd\u63a8\u8350\u7cfb\u7edf \u7528\u6237\u504f\u597d\u5efa\u6a21 \u673a\u5668\u6545\u969c\u8bca\u65ad \u5404\u79cd\u90e8\u4ef6\u72b6\u6001\u5efa\u6a21 NLP \u8bed\u4e49\u5efa\u6a21 \u8bcd\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb"},{"location":"machinelearning/ml/supervised/#9-python-pgmpy","title":"9\ufe0f\u20e3 \u4ee3\u7801\u793a\u4f8b\uff08\u4f7f\u7528 Python <code>pgmpy</code> \u5e93\uff09","text":"<pre><code>from pgmpy.models import BayesianNetwork\nfrom pgmpy.factors.discrete import TabularCPD\nfrom pgmpy.inference import VariableElimination\n\n# \u6784\u5efa\u8d1d\u53f6\u65af\u7f51\u7edc\u7ed3\u6784\nmodel = BayesianNetwork([('C', 'F'), ('C', 'S')])\n\n# \u5b9a\u4e49\u6761\u4ef6\u6982\u7387\u8868\ncpd_c = TabularCPD(variable='C', variable_card=2, values=[[0.7], [0.3]])\ncpd_f = TabularCPD(variable='F', variable_card=2,\n                   values=[[0.9, 0.2], [0.1, 0.8]],\n                   evidence=['C'], evidence_card=[2])\ncpd_s = TabularCPD(variable='S', variable_card=2,\n                   values=[[0.8, 0.3], [0.2, 0.7]],\n                   evidence=['C'], evidence_card=[2])\n\n# \u52a0\u5165\u6a21\u578b\nmodel.add_cpds(cpd_c, cpd_f, cpd_s)\n\n# \u9a8c\u8bc1\u6a21\u578b\nassert model.check_model()\n\n# \u63a8\u7406\uff1a\u5df2\u77e5 F=1\uff0c\u6c42 C \u7684\u6982\u7387\ninfer = VariableElimination(model)\nresult = infer.query(variables=['C'], evidence={'F': 1})\nprint(result)\n</code></pre>"},{"location":"machinelearning/ml/supervised/#_21","title":"\u4e94\u3001 \u6700\u8fd1\u90bb\u7b97\u6cd5","text":""},{"location":"machinelearning/ml/supervised/#51-kk-nearest-neighbors-knn","title":"5.1 K\u8fd1\u90bb\uff08K-Nearest Neighbors, KNN\uff09","text":""},{"location":"machinelearning/ml/supervised/#1_9","title":"1\ufe0f\u20e3 \u6982\u8ff0","text":"<p>K-\u8fd1\u90bb\u7b97\u6cd5\uff08K-Nearest Neighbors, KNN\uff09 \u662f\u4e00\u79cd\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\uff0c\u53ef\u7528\u4e8e\u5206\u7c7b\u548c\u56de\u5f52\u3002\u5176\u57fa\u672c\u601d\u60f3\u662f\uff1a</p> <p>\u4e00\u4e2a\u6837\u672c\u7684\u7c7b\u522b\u6216\u6570\u503c\u7531\u5176\u5728\u7279\u5f81\u7a7a\u95f4\u4e2d\u6700\u90bb\u8fd1\u7684 K \u4e2a\u6837\u672c\u6240\u51b3\u5b9a\u3002</p> <p>KNN \u662f\u4e00\u79cd\u57fa\u4e8e\u5b9e\u4f8b\u7684\u5b66\u4e60\uff08lazy learning\uff09\u65b9\u6cd5\uff0c\u5b83\u4e0d\u663e\u5f0f\u5730\u6784\u9020\u6a21\u578b\uff0c\u800c\u662f\u7b49\u5230\u9884\u6d4b\u65f6\u624d\u8fdb\u884c\u8ba1\u7b97\u3002</p>"},{"location":"machinelearning/ml/supervised/#2_8","title":"2\ufe0f\u20e3 \u6838\u5fc3\u601d\u60f3","text":""},{"location":"machinelearning/ml/supervised/#_22","title":"\u5206\u7c7b\u4efb\u52a1\uff1a","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5f85\u5206\u7c7b\u6837\u672c\uff0c\u627e\u51fa\u5176\u5728\u8bad\u7ec3\u96c6\u4e2d\u6700\u8fd1\u7684 K \u4e2a\u90bb\u5c45\uff0c\u6839\u636e\u8fd9 K \u4e2a\u90bb\u5c45\u7684\u591a\u6570\u7c7b\u522b\uff0c\u786e\u5b9a\u8be5\u6837\u672c\u7684\u7c7b\u522b\u3002</p>"},{"location":"machinelearning/ml/supervised/#_23","title":"\u56de\u5f52\u4efb\u52a1\uff1a","text":"<p>\u8f93\u51fa K \u4e2a\u90bb\u5c45\u7684\u5e73\u5747\u503c\u6216\u52a0\u6743\u5e73\u5747\u503c\u4f5c\u4e3a\u9884\u6d4b\u503c\u3002</p>"},{"location":"machinelearning/ml/supervised/#3_6","title":"3\ufe0f\u20e3 \u57fa\u672c\u6b65\u9aa4","text":"<ol> <li>\u9009\u62e9\u4e00\u4e2a\u6574\u6570 \\( K \\) \u503c\u3002</li> <li>\u8ba1\u7b97\u5f85\u9884\u6d4b\u6837\u672c\u4e0e\u8bad\u7ec3\u96c6\u4e2d\u6240\u6709\u6837\u672c\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002</li> <li>\u9009\u51fa\u8ddd\u79bb\u6700\u8fd1\u7684 K \u4e2a\u6837\u672c\u3002</li> <li>\u5206\u7c7b\u4efb\u52a1\uff1a\u4f7f\u7528\u591a\u6570\u6295\u7968\u6cd5\u51b3\u5b9a\u5206\u7c7b\u3002    \u56de\u5f52\u4efb\u52a1\uff1a\u4f7f\u7528\u5e73\u5747\u503c\u6216\u52a0\u6743\u5e73\u5747\u503c\u8fdb\u884c\u9884\u6d4b\u3002</li> </ol>"},{"location":"machinelearning/ml/supervised/#4_7","title":"4\ufe0f\u20e3 \u5e38\u89c1\u8ddd\u79bb\u5ea6\u91cf","text":""},{"location":"machinelearning/ml/supervised/#1-euclidean-distance","title":"1\ufe0f\u20e3 \u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\uff08Euclidean Distance\uff09","text":"\\[ d(x, y) = \\sqrt{ \\sum_{i=1}^n (x_i - y_i)^2 } \\]"},{"location":"machinelearning/ml/supervised/#2-manhattan-distance","title":"2\ufe0f\u20e3 \u66fc\u54c8\u987f\u8ddd\u79bb\uff08Manhattan Distance\uff09","text":"\\[ d(x, y) = \\sum_{i=1}^n |x_i - y_i| \\]"},{"location":"machinelearning/ml/supervised/#3-minkowski-distance","title":"3\ufe0f\u20e3 \u95f5\u53ef\u592b\u65af\u57fa\u8ddd\u79bb\uff08Minkowski Distance\uff09","text":"\\[ d(x, y) = \\left( \\sum_{i=1}^n |x_i - y_i|^p \\right)^{1/p} \\]"},{"location":"machinelearning/ml/supervised/#5-k","title":"5\ufe0f\u20e3 K \u7684\u9009\u62e9","text":"K \u503c \u7279\u5f81 K \u8f83\u5c0f \u6a21\u578b\u5bf9\u566a\u58f0\u654f\u611f\uff0c\u5bb9\u6613\u8fc7\u62df\u5408 K \u8f83\u5927 \u6a21\u578b\u8fc7\u4e8e\u5e73\u6ed1\uff0c\u5bb9\u6613\u6b20\u62df\u5408 \u4e00\u822c\u9009\u62e9 \u901a\u8fc7\u4ea4\u53c9\u9a8c\u8bc1\u9009\u62e9\u6700\u4f18\u7684 K \u503c"},{"location":"machinelearning/ml/supervised/#6_2","title":"6\ufe0f\u20e3 \u4f18\u70b9\u4e0e\u7f3a\u70b9","text":"\u4f18\u70b9 \u7f3a\u70b9 \u539f\u7406\u7b80\u5355\u3001\u6613\u4e8e\u5b9e\u73b0 \u9884\u6d4b\u6162\uff0c\u9700\u5b58\u50a8\u6240\u6709\u6570\u636e \u65e0\u9700\u8bad\u7ec3\u8fc7\u7a0b\uff0c\u9002\u5408\u5c0f\u6570\u636e\u96c6 \u5bf9\u9ad8\u7ef4\u6570\u636e\uff08\u7ef4\u5ea6\u707e\u96be\uff09\u4e0d\u9002\u7528 \u53ef\u4ee5\u5904\u7406\u591a\u5206\u7c7b\u95ee\u9898 \u5bf9\u5f02\u5e38\u503c\u654f\u611f\uff0c\u4f9d\u8d56\u8ddd\u79bb\u5ea6\u91cf\u65b9\u5f0f"},{"location":"machinelearning/ml/supervised/#7-sklearn","title":"7\ufe0f\u20e3 \u4ee3\u7801\u5b9e\u73b0\uff08\u4ee5 sklearn \u4e3a\u4f8b\uff09","text":"<pre><code>from sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score\n\n# \u52a0\u8f7d\u6570\u636e\niris = load_iris()\nX = iris.data\ny = iris.target\n\n# \u5212\u5206\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n\n# \u521b\u5efa KNN \u5206\u7c7b\u5668\uff0cK=3\nknn = KNeighborsClassifier(n_neighbors=3)\nknn.fit(X_train, y_train)\n\n# \u9884\u6d4b\ny_pred = knn.predict(X_test)\n\n# \u51c6\u786e\u7387\nprint(\"\u51c6\u786e\u7387\uff1a\", accuracy_score(y_test, y_pred))\n</code></pre>"},{"location":"machinelearning/ml/supervised/#8-knn","title":"8\ufe0f\u20e3 KNN \u5e94\u7528\u573a\u666f","text":"\u5e94\u7528\u9886\u57df \u793a\u4f8b \u533b\u7597\u8bca\u65ad \u6839\u636e\u75c7\u72b6\u9884\u6d4b\u75be\u75c5 \u63a8\u8350\u7cfb\u7edf \u57fa\u4e8e\u7528\u6237\u76f8\u4f3c\u6027\u8fdb\u884c\u63a8\u8350 \u6587\u672c\u5206\u7c7b \u65b0\u95fb\u3001\u90ae\u4ef6\u3001\u60c5\u611f\u5206\u6790\u7b49\u6587\u672c\u5206\u7c7b\u4efb\u52a1 \u56fe\u50cf\u8bc6\u522b \u901a\u8fc7\u50cf\u7d20\u7279\u5f81\u8bc6\u522b\u6570\u5b57\u3001\u7269\u4f53"},{"location":"machinelearning/ml/supervised/#_24","title":"\u516d\u3001\u795e\u7ecf\u7f51\u7edc\u4e0e\u6df1\u5ea6\u5b66\u4e60","text":""},{"location":"machinelearning/ml/supervised/#61-mlp","title":"6.1 \u591a\u5c42\u611f\u77e5\u673a\uff08MLP\uff09","text":""},{"location":"machinelearning/ml/supervised/#1_10","title":"1\ufe0f\u20e3 \u6982\u8ff0","text":"<p>\u591a\u5c42\u611f\u77e5\u673a\uff08MLP\uff09\u662f\u4e00\u79cd\u524d\u9988\u795e\u7ecf\u7f51\u7edc\uff0c\u7531\u591a\u4e2a\u795e\u7ecf\u5143\u5c42\u6784\u6210\uff1a</p> <ul> <li>\u8f93\u5165\u5c42\uff08Input Layer\uff09</li> <li>\u4e00\u4e2a\u6216\u591a\u4e2a\u9690\u85cf\u5c42\uff08Hidden Layers\uff09</li> <li>\u8f93\u51fa\u5c42\uff08Output Layer\uff09</li> </ul> <p>\u7279\u70b9\uff1a</p> <ul> <li>\u5168\u8fde\u63a5\u7ed3\u6784\uff08Fully Connected\uff09</li> <li>\u53ef\u7528\u4e8e\u5206\u7c7b\u4e0e\u56de\u5f52\u4efb\u52a1</li> <li>\u662f\u6df1\u5ea6\u5b66\u4e60\u4e2d\u7684\u57fa\u7840\u7ec4\u6210\u6a21\u5757</li> </ul>"},{"location":"machinelearning/ml/supervised/#2_9","title":"2\ufe0f\u20e3 \u7f51\u7edc\u7ed3\u6784\u56fe","text":"<pre><code>\u8f93\u5165\u5c42 \u2192 \u9690\u85cf\u5c421 \u2192 \u9690\u85cf\u5c422 \u2192 \u2026 \u2192 \u8f93\u51fa\u5c42\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u8f93\u5165\u5c42\uff1a\u8282\u70b9\u6570 = \u7279\u5f81\u7ef4\u5ea6  </li> <li>\u9690\u85cf\u5c42\uff1a\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u6bcf\u5c42\u8282\u70b9\u6570\u53ef\u8c03  </li> <li>\u8f93\u51fa\u5c42\uff1a<ul> <li>\u5206\u7c7b\u4efb\u52a1\uff1a\u8282\u70b9\u6570 = \u7c7b\u522b\u6570</li> <li>\u56de\u5f52\u4efb\u52a1\uff1a\u8282\u70b9\u6570 = 1</li> </ul> </li> </ul>"},{"location":"machinelearning/ml/supervised/#3-forward-propagation","title":"3\ufe0f\u20e3 \u524d\u5411\u4f20\u64ad\uff08Forward Propagation\uff09","text":"<p>\u6bcf\u5c42\u7684\u8ba1\u7b97\u5982\u4e0b\uff1a</p> \\[ z^{(l)} = W^{(l)} a^{(l-1)} + b^{(l)} \\] \\[ a^{(l)} = \\sigma(z^{(l)}) \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\( a^{(l-1)} \\)\uff1a\u4e0a\u4e00\u5c42\u7684\u8f93\u51fa</li> <li>\\( W^{(l)} \\)\u3001\\( b^{(l)} \\)\uff1a\u5f53\u524d\u5c42\u7684\u6743\u91cd\u4e0e\u504f\u7f6e</li> <li>\\( \\sigma \\)\uff1a\u6fc0\u6d3b\u51fd\u6570\uff0c\u5982 ReLU\u3001Sigmoid \u7b49</li> </ul>"},{"location":"machinelearning/ml/supervised/#4_8","title":"4\ufe0f\u20e3 \u5e38\u89c1\u6fc0\u6d3b\u51fd\u6570","text":"\u6fc0\u6d3b\u51fd\u6570 \u6570\u5b66\u8868\u8fbe\u5f0f \u7279\u70b9 Sigmoid \\( \\sigma(x) = \\frac{1}{1 + e^{-x}} \\) \u8f93\u51fa\u8303\u56f4\u5728 (0, 1)\uff0c\u5bb9\u6613\u51fa\u73b0\u68af\u5ea6\u6d88\u5931 Tanh \\( \\tanh(x) = \\frac{e^x - e^{-x}}{e^x + e^{-x}} \\) \u8f93\u51fa\u8303\u56f4 (-1, 1)\uff0c\u96f6\u4e2d\u5fc3\uff0c\u6709\u52a9\u4e8e\u6536\u655b ReLU \\( \\mathrm{ReLU}(x) = \\max(0, x) \\) \u8ba1\u7b97\u7b80\u5355\uff0c\u7f13\u89e3\u68af\u5ea6\u6d88\u5931\uff0c\u8bad\u7ec3\u6548\u679c\u597d"},{"location":"machinelearning/ml/supervised/#5-backpropagation","title":"5\ufe0f\u20e3 \u53cd\u5411\u4f20\u64ad\uff08Backpropagation\uff09","text":"<p>\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u7528\u4e8e\u8ba1\u7b97\u68af\u5ea6\uff0c\u66f4\u65b0\u6743\u91cd\u548c\u504f\u7f6e\u3002</p> <p>\u8ba1\u7b97\u8f93\u51fa\u5c42\u8bef\u5dee\uff1a</p> \\[ \\delta^{(L)} = \\nabla_a L \\circ \\sigma'(z^{(L)}) \\] <p>\u8bef\u5dee\u9010\u5c42\u53cd\u4f20\uff1a</p> \\[ \\delta^{(l)} = \\left(W^{(l+1)}\\right)^{T} \\delta^{(l+1)} \\circ \\sigma'(z^{(l)}) \\] <p>\u53c2\u6570\u68af\u5ea6\u8ba1\u7b97\uff1a</p> \\[ \\nabla_{W^{(l)}} L = \\delta^{(l)} (a^{(l-1)})^{T} \\] \\[ \\nabla_{b^{(l)}} L = \\delta^{(l)} \\] <p>\u53c2\u6570\u66f4\u65b0\uff08\u5b66\u4e60\u7387\u4e3a \\( \\eta \\)\uff09\uff1a</p> \\[ W^{(l)} \\leftarrow W^{(l)} - \\eta \\nabla_{W^{(l)}} L \\] \\[ b^{(l)} \\leftarrow b^{(l)} - \\eta \\nabla_{b^{(l)}} L \\]"},{"location":"machinelearning/ml/supervised/#6_3","title":"6\ufe0f\u20e3 \u635f\u5931\u51fd\u6570","text":"\u4efb\u52a1\u7c7b\u578b \u5e38\u7528\u635f\u5931\u51fd\u6570 \u6570\u5b66\u8868\u8fbe\u5f0f \u56de\u5f52 \u5747\u65b9\u8bef\u5dee\uff08MSE\uff09 \\( \\mathrm{MSE} = \\frac{1}{n} \\sum_{i=1}^n (y_i - \\hat{y}_i)^2 \\) \u5206\u7c7b \u4ea4\u53c9\u71b5\u635f\u5931\uff08Cross Entropy\uff09 \\( \\mathrm{CE} = - \\sum_{i} y_i \\log(\\hat{y}_i) \\)"},{"location":"machinelearning/ml/supervised/#7-pytorch","title":"7\ufe0f\u20e3 PyTorch \u5b9e\u73b0\u793a\u4f8b","text":"<pre><code>import torch\nimport torch.nn as nn\nimport torch.optim as optim\n\nclass MLP(nn.Module):\n    def __init__(self):\n        super().__init__()\n        self.net = nn.Sequential(\n            nn.Linear(4, 16),\n            nn.ReLU(),\n            nn.Linear(16, 3)\n        )\n    def forward(self, x):\n        return self.net(x)\n\nmodel = MLP()\nloss_fn = nn.CrossEntropyLoss()\noptimizer = optim.Adam(model.parameters())\n\n# \u793a\u4f8b\u8bad\u7ec3\u8fc7\u7a0b\nfor epoch in range(100):\n    inputs = torch.randn(10, 4)  # \u5047\u8bbe\u8f93\u516510\u4e2a\u6837\u672c\uff0c4\u7ef4\u7279\u5f81\n    targets = torch.randint(0, 3, (10,))  # \u5047\u8bbe3\u5206\u7c7b\n    outputs = model(inputs)\n    loss = loss_fn(outputs, targets)\n    optimizer.zero_grad()\n    loss.backward()\n    optimizer.step()\n</code></pre>"},{"location":"machinelearning/ml/supervised/#62-cnn","title":"6.2 \u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09","text":""},{"location":"machinelearning/ml/supervised/#1_11","title":"1\ufe0f\u20e3 \u6982\u8ff0","text":"<p>\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09\u662f\u4e00\u79cd\u4e13\u95e8\u7528\u4e8e\u5904\u7406\u5177\u6709\u7f51\u683c\u7ed3\u6784\u6570\u636e\uff08\u5982\u56fe\u50cf\uff09\u7684\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u3002\u5b83\u901a\u8fc7\u5377\u79ef\u64cd\u4f5c\u81ea\u52a8\u63d0\u53d6\u8f93\u5165\u6570\u636e\u4e2d\u7684\u5c40\u90e8\u7279\u5f81\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u56fe\u50cf\u8bc6\u522b\u3001\u89c6\u9891\u5206\u6790\u3001\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7b49\u9886\u57df\u3002</p> <p>CNN \u7684\u4e3b\u8981\u7279\u70b9\uff1a</p> <ul> <li>\u5c40\u90e8\u8fde\u63a5\uff1a\u5377\u79ef\u6838\u53ea\u4f5c\u7528\u4e8e\u8f93\u5165\u7684\u5c40\u90e8\u533a\u57df</li> <li>\u6743\u91cd\u5171\u4eab\uff1a\u540c\u4e00\u5377\u79ef\u6838\u53c2\u6570\u5728\u6574\u4e2a\u8f93\u5165\u4e0a\u5171\u4eab\uff0c\u51cf\u5c11\u53c2\u6570\u6570\u91cf</li> <li>\u4e0b\u91c7\u6837\uff08Pooling\uff09\uff1a\u7f29\u51cf\u6570\u636e\u7ef4\u5ea6\uff0c\u63d0\u53d6\u91cd\u8981\u7279\u5f81\uff0c\u51cf\u5c11\u8ba1\u7b97\u91cf</li> </ul>"},{"location":"machinelearning/ml/supervised/#2-cnn","title":"2\ufe0f\u20e3 CNN \u4e3b\u8981\u7ed3\u6784\u7ec4\u6210","text":"<ul> <li> <p>\u5377\u79ef\u5c42\uff08Convolutional Layer\uff09   \u5229\u7528\u5377\u79ef\u6838\u5bf9\u8f93\u5165\u505a\u6ed1\u52a8\u7a97\u53e3\u5377\u79ef\u64cd\u4f5c\uff0c\u63d0\u53d6\u5c40\u90e8\u7279\u5f81\u3002</p> </li> <li> <p>\u6fc0\u6d3b\u51fd\u6570\uff08Activation Function\uff09   \u5e38\u7528 ReLU\uff0c\u589e\u52a0\u7f51\u7edc\u975e\u7ebf\u6027\u3002</p> </li> <li> <p>\u6c60\u5316\u5c42\uff08Pooling Layer\uff09   \u5bf9\u7279\u5f81\u56fe\u964d\u91c7\u6837\uff0c\u5e38\u7528\u6700\u5927\u6c60\u5316\uff08Max Pooling\uff09\u3002</p> </li> <li> <p>\u5168\u8fde\u63a5\u5c42\uff08Fully Connected Layer\uff09   \u7528\u4e8e\u5c06\u5377\u79ef\u63d0\u53d6\u7684\u7279\u5f81\u6620\u5c04\u5230\u6700\u7ec8\u8f93\u51fa\uff08\u5982\u5206\u7c7b\u6982\u7387\uff09\u3002</p> </li> </ul>"},{"location":"machinelearning/ml/supervised/#3_7","title":"3\ufe0f\u20e3 \u5377\u79ef\u64cd\u4f5c","text":"<p>\u5047\u8bbe\u8f93\u5165\u77e9\u9635\u4e3a \\(X\\)\uff0c\u5377\u79ef\u6838\u4e3a \\(K\\)\uff0c\u8f93\u51fa\u77e9\u9635\u4e3a \\(Y\\)\uff0c\u5377\u79ef\u8ba1\u7b97\u4e3a\uff1a</p> \\[ Y(i,j) = \\sum_m \\sum_n X(i+m, j+n) \\times K(m,n) \\] <p>\u5176\u4e2d \\(i,j\\) \u4e3a\u8f93\u51fa\u4f4d\u7f6e\u7d22\u5f15\uff0c\\(m,n\\) \u904d\u5386\u5377\u79ef\u6838\u5927\u5c0f\u3002</p>"},{"location":"machinelearning/ml/supervised/#4_9","title":"4\ufe0f\u20e3 \u6fc0\u6d3b\u51fd\u6570","text":"<p>\u5e38\u7528\u6fc0\u6d3b\u51fd\u6570\u4e3a ReLU\uff1a</p> \\[ \\mathrm{ReLU}(x) = \\max(0, x) \\]"},{"location":"machinelearning/ml/supervised/#5_6","title":"5\ufe0f\u20e3 \u6c60\u5316\u5c42","text":"<p>\u6700\u5927\u6c60\u5316\uff08Max Pooling\uff09\u4ee5\u7a97\u53e3\u6ed1\u52a8\uff0c\u9009\u53d6\u7a97\u53e3\u5185\u6700\u5927\u503c\uff0c\u516c\u5f0f\u793a\u610f\uff1a</p> \\[ Y(i,j) = \\max_{\\substack{m=1,...,k \\\\ n=1,...,k}} X(s \\cdot i + m, s \\cdot j + n) \\] <p>\u5176\u4e2d \\(k\\) \u4e3a\u6c60\u5316\u7a97\u53e3\u5927\u5c0f\uff0c\\(s\\) \u4e3a\u6b65\u5e45\u3002</p>"},{"location":"machinelearning/ml/supervised/#6_4","title":"6\ufe0f\u20e3 \u524d\u5411\u4f20\u64ad\u6d41\u7a0b\u793a\u610f","text":"<p>\u8f93\u5165 \u2192 \u5377\u79ef\u5c42 \u2192 \u6fc0\u6d3b\u51fd\u6570 \u2192 \u6c60\u5316\u5c42 \u2192 \u5168\u8fde\u63a5\u5c42 \u2192 \u8f93\u51fa</p>"},{"location":"machinelearning/ml/supervised/#7-cnn","title":"7\ufe0f\u20e3 CNN \u5e94\u7528\u573a\u666f","text":"\u5e94\u7528\u9886\u57df \u8bf4\u660e \u56fe\u50cf\u5206\u7c7b \u8bc6\u522b\u56fe\u50cf\u6240\u5c5e\u7c7b\u522b \u76ee\u6807\u68c0\u6d4b \u5b9a\u4f4d\u56fe\u50cf\u4e2d\u76ee\u6807\u7269\u4f53 \u56fe\u50cf\u5206\u5272 \u50cf\u7d20\u7ea7\u5206\u7c7b \u89c6\u9891\u5206\u6790 \u52a8\u4f5c\u8bc6\u522b\u3001\u4e8b\u4ef6\u68c0\u6d4b \u81ea\u7136\u8bed\u8a00\u5904\u7406 \u6587\u672c\u5206\u7c7b\u3001\u60c5\u611f\u5206\u6790\uff08\u7ed3\u54081D\u5377\u79ef\uff09"},{"location":"machinelearning/ml/supervised/#8-pytorch","title":"8\ufe0f\u20e3 \u7b80\u5355 PyTorch \u5b9e\u73b0\u793a\u4f8b","text":"<pre><code>import torch\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass SimpleCNN(nn.Module):\n    def __init__(self):\n        super().__init__()\n        self.conv1 = nn.Conv2d(in_channels=3, out_channels=16, kernel_size=3, padding=1)\n        self.pool = nn.MaxPool2d(kernel_size=2, stride=2)\n        self.fc1 = nn.Linear(16 * 16 * 16, 10)  # \u5047\u8bbe\u8f93\u5165\u56fe\u50cf\u5927\u5c0f\u4e3a 32x32\uff0c3\u901a\u9053\uff0c\u8f93\u51fa10\u7c7b\n\n    def forward(self, x):\n        x = self.pool(F.relu(self.conv1(x)))  # \u5377\u79ef + ReLU + \u6c60\u5316\n        x = torch.flatten(x, 1)               # \u5c55\u5e73\u9664batch\u5916\u6240\u6709\u7ef4\u5ea6\n        x = self.fc1(x)                       # \u5168\u8fde\u63a5\u5c42\n        return x\n\nmodel = SimpleCNN()\nprint(model)\n</code></pre>"},{"location":"machinelearning/ml/supervised/#63-rnnlstm","title":"6.3 \u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff08RNN/LSTM\uff09","text":""},{"location":"machinelearning/ml/supervised/#1_12","title":"1\ufe0f\u20e3 \u6982\u8ff0","text":"<p>\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff08RNN\uff09\u662f\u4e00\u7c7b\u9002\u5408\u5904\u7406\u5e8f\u5217\u6570\u636e\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u80fd\u6355\u6349\u65f6\u95f4\u6216\u987a\u5e8f\u4e0a\u7684\u4f9d\u8d56\u5173\u7cfb\u3002\u5b83\u901a\u8fc7\u9690\u85cf\u72b6\u6001\uff08hidden state\uff09\u5c06\u8fc7\u53bb\u7684\u4fe1\u606f\u4f20\u9012\u5230\u5f53\u524d\u65f6\u523b\u3002</p> <p>\u957f\u77ed\u671f\u8bb0\u5fc6\u7f51\u7edc\uff08LSTM\uff09\u662fRNN\u7684\u6539\u8fdb\u7248\u672c\uff0c\u89e3\u51b3\u4e86\u4f20\u7edfRNN\u68af\u5ea6\u6d88\u5931\u548c\u957f\u671f\u4f9d\u8d56\u96be\u4ee5\u6355\u83b7\u7684\u95ee\u9898\uff0c\u80fd\u591f\u66f4\u597d\u5730\u8bb0\u5fc6\u957f\u8ddd\u79bb\u4fe1\u606f\u3002</p>"},{"location":"machinelearning/ml/supervised/#2-rnn","title":"2\ufe0f\u20e3 RNN \u57fa\u672c\u7ed3\u6784","text":"<p>RNN \u6bcf\u4e2a\u65f6\u95f4\u6b65 \\(t\\) \u63a5\u6536\u8f93\u5165 \\(x_t\\) \u548c\u4e0a\u4e00\u65f6\u523b\u9690\u85cf\u72b6\u6001 \\(h_{t-1}\\)\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u85cf\u72b6\u6001 \\(h_t\\) \u548c\u8f93\u51fa \\(y_t\\)\uff1a</p> \\[ h_t = \\tanh(W_{xh} x_t + W_{hh} h_{t-1} + b_h) \\] \\[ y_t = W_{hy} h_t + b_y \\]"},{"location":"machinelearning/ml/supervised/#3-lstm","title":"3\ufe0f\u20e3 LSTM \u7ed3\u6784","text":"<p>LSTM \u4f7f\u7528\u95e8\u63a7\u673a\u5236\u63a7\u5236\u4fe1\u606f\u6d41\uff0c\u5305\u542b\u4e09\u4e2a\u95e8\uff1a</p> <ul> <li>\u8f93\u5165\u95e8 \\(i_t\\)\uff1a\u63a7\u5236\u65b0\u4fe1\u606f\u5199\u5165\u591a\u5c11</li> <li>\u9057\u5fd8\u95e8 \\(f_t\\)\uff1a\u63a7\u5236\u4fdd\u7559\u591a\u5c11\u8fc7\u53bb\u72b6\u6001</li> <li>\u8f93\u51fa\u95e8 \\(o_t\\)\uff1a\u63a7\u5236\u8f93\u51fa\u591a\u5c11\u5f53\u524d\u72b6\u6001</li> </ul> <p>\u6838\u5fc3\u5355\u5143\u72b6\u6001 \\(C_t\\) \u548c\u9690\u85cf\u72b6\u6001 \\(h_t\\) \u8ba1\u7b97\u5982\u4e0b\uff1a</p> \\[ f_t = \\sigma(W_f x_t + U_f h_{t-1} + b_f) \\] \\[ i_t = \\sigma(W_i x_t + U_i h_{t-1} + b_i) \\] \\[ \\tilde{C}_t = \\tanh(W_c x_t + U_c h_{t-1} + b_c) \\] \\[ C_t = f_t \\odot C_{t-1} + i_t \\odot \\tilde{C}_t \\] \\[ o_t = \\sigma(W_o x_t + U_o h_{t-1} + b_o) \\] \\[ h_t = o_t \\odot \\tanh(C_t) \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\(\\sigma\\)\uff1aSigmoid\u6fc0\u6d3b\u51fd\u6570</li> <li>\\(\\odot\\)\uff1a\u9010\u5143\u7d20\u4e58\u79ef</li> </ul>"},{"location":"machinelearning/ml/supervised/#4-rnn-lstm","title":"4\ufe0f\u20e3 RNN \u4e0e LSTM \u7684\u533a\u522b","text":"\u7279\u70b9 RNN LSTM \u8bb0\u5fc6\u80fd\u529b \u5bb9\u6613\u68af\u5ea6\u6d88\u5931\uff0c\u77ed\u671f\u8bb0\u5fc6 \u95e8\u63a7\u673a\u5236\uff0c\u6709\u6548\u957f\u77ed\u671f\u8bb0\u5fc6 \u7ed3\u6784\u590d\u6742\u5ea6 \u7b80\u5355 \u7ed3\u6784\u590d\u6742\uff0c\u8ba1\u7b97\u91cf\u5927 \u5e94\u7528\u573a\u666f \u7b80\u5355\u5e8f\u5217\u4efb\u52a1 \u590d\u6742\u957f\u5e8f\u5217\u4efb\u52a1"},{"location":"machinelearning/ml/supervised/#5_7","title":"5\ufe0f\u20e3 \u5e94\u7528\u573a\u666f","text":"\u5e94\u7528\u9886\u57df \u8bf4\u660e \u8bed\u8a00\u6a21\u578b \u9884\u6d4b\u4e0b\u4e00\u4e2a\u8bcd \u673a\u5668\u7ffb\u8bd1 \u5e8f\u5217\u5230\u5e8f\u5217\u7ffb\u8bd1 \u8bed\u97f3\u8bc6\u522b \u97f3\u9891\u5e8f\u5217\u8f6c\u6587\u5b57 \u65f6\u95f4\u5e8f\u5217\u9884\u6d4b \u80a1\u7968\u4ef7\u683c\u3001\u6c14\u8c61\u6570\u636e\u7b49"},{"location":"machinelearning/ml/supervised/#6-pytorch","title":"6\ufe0f\u20e3 PyTorch \u7b80\u5355\u793a\u4f8b","text":"<pre><code>import torch\nimport torch.nn as nn\n\nclass SimpleRNN(nn.Module):\n    def __init__(self, input_size, hidden_size, output_size):\n        super().__init__()\n        self.rnn = nn.RNN(input_size, hidden_size, batch_first=True)\n        self.fc = nn.Linear(hidden_size, output_size)\n\n    def forward(self, x):\n        out, _ = self.rnn(x)      # out: (batch, seq_len, hidden_size)\n        out = out[:, -1, :]       # \u53d6\u6700\u540e\u65f6\u95f4\u6b65\u8f93\u51fa\n        out = self.fc(out)\n        return out\n\nclass SimpleLSTM(nn.Module):\n    def __init__(self, input_size, hidden_size, output_size):\n        super().__init__()\n        self.lstm = nn.LSTM(input_size, hidden_size, batch_first=True)\n        self.fc = nn.Linear(hidden_size, output_size)\n\n    def forward(self, x):\n        out, _ = self.lstm(x)     # out: (batch, seq_len, hidden_size)\n        out = out[:, -1, :]       # \u53d6\u6700\u540e\u65f6\u95f4\u6b65\u8f93\u51fa\n        out = self.fc(out)\n        return out\n\n# \u793a\u4f8b\u4f7f\u7528\nrnn_model = SimpleRNN(input_size=10, hidden_size=20, output_size=1)\nlstm_model = SimpleLSTM(input_size=10, hidden_size=20, output_size=1)\n\nsample_input = torch.randn(5, 15, 10)  # batch=5, seq_len=15, feature=10\nrnn_out = rnn_model(sample_input)\nlstm_out = lstm_model(sample_input)\nprint(rnn_out.shape, lstm_out.shape)\n</code></pre>"},{"location":"machinelearning/ml/unsupervised/","title":"\u7b2c\u4e94\u7ae0\uff1a\u975e\u76d1\u7763\u5b66\u4e60","text":""},{"location":"machinelearning/ml/unsupervised/#1","title":"1\ufe0f\u20e3 \u4ec0\u4e48\u662f\u65e0\u76d1\u7763\u5b66\u4e60\uff1f","text":"<p>\u65e0\u76d1\u7763\u5b66\u4e60\u662f\u4e00\u7c7b\u5728\u6ca1\u6709\u6807\u7b7e\u6570\u636e\u7684\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7\u5206\u6790\u6570\u636e\u7684\u7ed3\u6784\u3001\u5206\u5e03\u6216\u9690\u85cf\u6a21\u5f0f\u6765\u8fdb\u884c\u5b66\u4e60\u7684\u65b9\u6cd5\u3002 \u5e38\u7528\u4e8e\u6570\u636e\u63a2\u7d22\u3001\u805a\u7c7b\u3001\u964d\u7ef4\u3001\u5f02\u5e38\u68c0\u6d4b\u7b49\u4efb\u52a1\u3002</p>"},{"location":"machinelearning/ml/unsupervised/#2-vs","title":"2\ufe0f\u20e3 \u65e0\u76d1\u7763\u5b66\u4e60 vs \u76d1\u7763\u5b66\u4e60","text":"\u6bd4\u8f83\u7ef4\u5ea6 \u65e0\u76d1\u7763\u5b66\u4e60 \u76d1\u7763\u5b66\u4e60 \u662f\u5426\u6709\u6807\u7b7e \u274c \u65e0\u6807\u7b7e \u2705 \u6709\u6807\u7b7e \u5b66\u4e60\u76ee\u6807 \u6316\u6398\u7ed3\u6784\u3001\u5206\u5e03\u3001\u89c4\u5f8b \u5b66\u4e60\u8f93\u5165\u4e0e\u8f93\u51fa\u7684\u6620\u5c04\u5173\u7cfb \u5e94\u7528\u7c7b\u578b \u805a\u7c7b\u3001\u964d\u7ef4\u3001\u5173\u8054\u5206\u6790\u3001\u5f02\u5e38\u68c0\u6d4b\u7b49 \u5206\u7c7b\u3001\u56de\u5f52\u3001\u5e8f\u5217\u6807\u6ce8\u7b49 \u5e38\u89c1\u7b97\u6cd5 K-Means\u3001PCA\u3001AutoEncoder\u7b49 \u51b3\u7b56\u6811\u3001SVM\u3001\u795e\u7ecf\u7f51\u7edc\u7b49"},{"location":"machinelearning/ml/unsupervised/#3","title":"3\ufe0f\u20e3 \u5e38\u89c1\u7684\u65e0\u76d1\u7763\u5b66\u4e60\u6a21\u578b","text":"\u6a21\u578b\u540d\u79f0 \u7c7b\u578b \u7b80\u4ecb\u4e0e\u5e94\u7528 K-Means \u805a\u7c7b \u805a\u7c7b \u5c06\u6570\u636e\u5212\u5206\u4e3a \\(k\\) \u4e2a\u7c07\uff0c\u9002\u5408\u7403\u5f62\u805a\u7c7b DBSCAN \u805a\u7c7b \u57fa\u4e8e\u5bc6\u5ea6\u7684\u805a\u7c7b\uff0c\u9002\u7528\u4e8e\u4efb\u610f\u5f62\u72b6\u7c07\uff0c\u80fd\u53d1\u73b0\u5f02\u5e38\u70b9 \u5c42\u6b21\u805a\u7c7b \u805a\u7c7b \u6784\u5efa\u805a\u7c7b\u6811\u72b6\u7ed3\u6784\uff0c\u53ef\u8fdb\u884c\u5206\u5c42\u805a\u7c7b PCA \u964d\u7ef4 \u5bfb\u627e\u4e3b\u6210\u5206\u65b9\u5411\uff0c\u5e38\u7528\u4e8e\u6570\u636e\u538b\u7f29\u4e0e\u53ef\u89c6\u5316 t-SNE \u964d\u7ef4 \u4fdd\u7559\u5c40\u90e8\u7ed3\u6784\uff0c\u9002\u5408\u9ad8\u7ef4\u53ef\u89c6\u5316 UMAP \u964d\u7ef4 \u4fdd\u6301\u62d3\u6251\u7ed3\u6784\uff0c\u901f\u5ea6\u66f4\u5feb\uff0c\u652f\u6301\u5927\u89c4\u6a21\u6570\u636e AutoEncoder \u964d\u7ef4/\u91cd\u5efa \u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u7f16\u7801\u8f93\u5165\u8868\u793a\uff0c\u9002\u5408\u975e\u7ebf\u6027\u7279\u5f81\u538b\u7f29 Apriori / FP-Growth \u5173\u8054\u5206\u6790 \u6316\u6398\u9891\u7e41\u9879\u96c6\u4e0e\u5173\u8054\u89c4\u5219\uff0c\u7528\u4e8e\u63a8\u8350\u7cfb\u7edf\u4e0e\u5e02\u573a\u5206\u6790"},{"location":"machinelearning/ml/unsupervised/#4-k-means","title":"4\ufe0f\u20e3 K-Means \u805a\u7c7b\u7b97\u6cd5","text":""},{"location":"machinelearning/ml/unsupervised/#_2","title":"\ud83d\udccc \u7b97\u6cd5\u6d41\u7a0b\uff1a","text":"<ol> <li>\u968f\u673a\u9009\u62e9 \\(k\\) \u4e2a\u521d\u59cb\u805a\u7c7b\u4e2d\u5fc3</li> <li>\u5c06\u6bcf\u4e2a\u6837\u672c\u5206\u914d\u7ed9\u6700\u8fd1\u7684\u4e2d\u5fc3</li> <li>\u91cd\u65b0\u8ba1\u7b97\u6bcf\u4e2a\u7c07\u7684\u8d28\u5fc3</li> <li>\u91cd\u590d\u6b65\u9aa4 2 \u548c 3\uff0c\u76f4\u5230\u805a\u7c7b\u4e2d\u5fc3\u6536\u655b</li> </ol>"},{"location":"machinelearning/ml/unsupervised/#_3","title":"\u2705 \u4f18\u70b9\uff1a","text":"<ul> <li>\u7b80\u5355\u9ad8\u6548\uff0c\u6613\u4e8e\u5b9e\u73b0</li> <li>\u9002\u5408\u5927\u89c4\u6a21\u6837\u672c</li> </ul>"},{"location":"machinelearning/ml/unsupervised/#_4","title":"\u26a0\ufe0f \u7f3a\u70b9\uff1a","text":"<ul> <li>\u9700\u9884\u5148\u8bbe\u5b9a \\(k\\)</li> <li>\u5bf9\u521d\u59cb\u4e2d\u5fc3\u654f\u611f</li> <li>\u4e0d\u9002\u5408\u975e\u51f8\u5f62\u72b6\u6216\u5bc6\u5ea6\u4e0d\u540c\u7684\u7c07</li> </ul>"},{"location":"machinelearning/ml/unsupervised/#5-pca","title":"5\ufe0f\u20e3 PCA \u4e3b\u6210\u5206\u5206\u6790","text":"<p>PCA \u662f\u4e00\u79cd\u7ebf\u6027\u964d\u7ef4\u65b9\u6cd5\uff0c\u901a\u8fc7\u6295\u5f71\u5230\u6700\u5927\u65b9\u5dee\u65b9\u5411\u5b9e\u73b0\u7ef4\u5ea6\u538b\u7f29\u3002</p>"},{"location":"machinelearning/ml/unsupervised/#_5","title":"\u6570\u5b66\u8868\u8fbe\uff1a","text":"<ol> <li>\u5bf9\u6837\u672c\u77e9\u9635 \\(X \\in \\mathbb{R}^{n \\times d}\\) \u6807\u51c6\u5316  </li> <li>\u8ba1\u7b97\u534f\u65b9\u5dee\u77e9\u9635\uff1a    $$    C = \\frac{1}{n} X^T X    $$</li> <li>\u8fdb\u884c\u7279\u5f81\u503c\u5206\u89e3\uff1a    $$    C = V \\Lambda V^T    $$</li> <li>\u9009\u62e9\u524d \\(k\\) \u4e2a\u6700\u5927\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf \\(W_k\\)</li> <li>\u6295\u5f71\u81f3\u4f4e\u7ef4\u7a7a\u95f4\uff1a    $$    X_{\\text{new}} = X W_k    $$</li> </ol>"},{"location":"machinelearning/ml/unsupervised/#6-autoencoder","title":"6\ufe0f\u20e3 AutoEncoder \u7b80\u4ecb","text":"<p>AutoEncoder \u662f\u4e00\u79cd\u65e0\u76d1\u7763\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\uff0c\u7528\u4e8e\u5b66\u4e60\u4f4e\u7ef4\u7f16\u7801\u3002</p>"},{"location":"machinelearning/ml/unsupervised/#_6","title":"\u7ed3\u6784\uff1a","text":"<p>\u8f93\u5165\u5c42 \u2192 \u7f16\u7801\u5668 \u2192 \u6f5c\u5c42\u8868\u793a\uff08\u4f4e\u7ef4\uff09 \u2192 \u89e3\u7801\u5668 \u2192 \u91cd\u6784\u8f93\u51fa\u5c42</p> <ul> <li>\u7f16\u7801\u5668\u538b\u7f29\u8f93\u5165\u4fe1\u606f</li> <li>\u89e3\u7801\u5668\u5c1d\u8bd5\u8fd8\u539f\u8f93\u5165</li> <li>\u635f\u5931\u51fd\u6570\u901a\u5e38\u4e3a\u91cd\u6784\u8bef\u5dee\uff08\u5982 MSE\uff09</li> </ul>"},{"location":"machinelearning/ml/unsupervised/#7-python-k-means","title":"7\ufe0f\u20e3 Python \u793a\u4f8b\uff1aK-Means + \u53ef\u89c6\u5316","text":"<pre><code>from sklearn.datasets import make_blobs\nfrom sklearn.cluster import KMeans\nimport matplotlib.pyplot as plt\n\n# \u751f\u6210\u6837\u672c\u6570\u636e\nX, y = make_blobs(n_samples=300, centers=3, random_state=42)\n\n# \u5efa\u7acb\u6a21\u578b\nkmeans = KMeans(n_clusters=3, random_state=42)\nlabels = kmeans.fit_predict(X)\n\n# \u53ef\u89c6\u5316\u805a\u7c7b\u7ed3\u679c\nplt.scatter(X[:, 0], X[:, 1], c=labels, cmap='viridis')\nplt.scatter(kmeans.cluster_centers_[:, 0],\n            kmeans.cluster_centers_[:, 1],\n            s=200, c='red', marker='X')\nplt.title(\"K-Means Clustering\")\nplt.xlabel(\"Feature 1\")\nplt.ylabel(\"Feature 2\")\nplt.show()\n</code></pre>"},{"location":"machinelearning/ml/unsupervised/#8","title":"8\ufe0f\u20e3 \u65e0\u76d1\u7763\u5b66\u4e60\u7684\u5e94\u7528\u573a\u666f","text":"\u5e94\u7528\u9886\u57df \u5b9e\u4f8b\u8bf4\u660e \u5ba2\u6237\u7ec6\u5206 \u6839\u636e\u7528\u6237\u884c\u4e3a\u8fdb\u884c\u805a\u7c7b\uff0c\u8fdb\u884c\u4e2a\u6027\u5316\u8425\u9500 \u56fe\u50cf\u538b\u7f29 \u5229\u7528 AutoEncoder \u964d\u4f4e\u56fe\u50cf\u5b58\u50a8\u7a7a\u95f4 \u5f02\u5e38\u68c0\u6d4b \u8bc6\u522b\u7f51\u7edc\u653b\u51fb\u3001\u4fe1\u7528\u5361\u6b3a\u8bc8\u7b49\u5f02\u5e38\u884c\u4e3a \u6570\u636e\u53ef\u89c6\u5316 \u4f7f\u7528 PCA\u3001t-SNE \u6216 UMAP \u5c06\u9ad8\u7ef4\u6570\u636e\u964d\u7ef4 \u63a8\u8350\u7cfb\u7edf \u57fa\u4e8e\u7528\u6237\u884c\u4e3a\u76f8\u4f3c\u6027\u6216\u5173\u8054\u89c4\u5219\u63a8\u8350\u5546\u54c1"},{"location":"machinelearning/ml/unsupervised/#9","title":"9\ufe0f\u20e3 \u603b\u7ed3","text":"\u65b9\u6cd5 \u7c7b\u578b \u5178\u578b\u5e94\u7528 \u662f\u5426\u9700\u6307\u5b9a\u8d85\u53c2 K-Means \u805a\u7c7b \u5ba2\u6237\u5206\u7fa4\u3001\u56fe\u50cf\u5206\u5272 \u2705 \u9700\u8981\u6307\u5b9a\u805a\u7c7b\u6570 \\(k\\) DBSCAN \u805a\u7c7b \u5f02\u5e38\u68c0\u6d4b\u3001\u7a7a\u95f4\u805a\u7c7b \u2705 \u9700\u8981\u8bbe\u7f6e\u534a\u5f84\u548c\u6700\u5c0f\u70b9\u6570 PCA \u964d\u7ef4 \u6570\u636e\u538b\u7f29\u3001\u7279\u5f81\u63d0\u53d6\u3001\u9884\u5904\u7406 \u2705 \u9700\u8981\u8bbe\u5b9a\u964d\u7ef4\u76ee\u6807\u7ef4\u5ea6 AutoEncoder \u964d\u7ef4 \u56fe\u50cf\u538b\u7f29\u3001\u975e\u7ebf\u6027\u7279\u5f81\u5b66\u4e60 \u2705 \u9700\u8981\u8bbe\u5b9a\u7f51\u7edc\u7ed3\u6784 t-SNE / UMAP \u964d\u7ef4 \u9ad8\u7ef4\u6570\u636e\u53ef\u89c6\u5316 \u2705 \u6709\u591a\u4e2a\u53ef\u8c03\u53c2\u6570"},{"location":"machinelearning/ml-action/knn/","title":"KNN \u7b97\u6cd5","text":""},{"location":"machinelearning/ml-action/knn/#_1","title":"\u4e00\u3001\u539f\u7406\u7bc7","text":""},{"location":"machinelearning/ml-action/knn/#_2","title":"\u4e8c\u3001\u4ee3\u7801\u7bc7","text":""},{"location":"machinelearning/ml-action/knn/#1","title":"1\u3001\u6570\u636e\u51c6\u5907\u548c\u53ef\u89c6\u5316","text":"<pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\nplt.rcParams['font.family'] = ['Heiti TC']\n\n# \u52a0\u8f7d\u6570\u636e\u96c6 MNIST\n\nX = np.loadtxt(\"mnist_x\", delimiter=\" \")  # \u6570\u636e\nY = np.loadtxt(\"mnist_y\")  # \u5bf9\u5e94\u7684\u6807\u7b7e\n\n# \u53ef\u89c6\u5316\u7b2c\u4e00\u6761\u6570\u636e\nnum_data = np.reshape(np.array(X[0], dtype=int), (28, 28))\nplt.figure()\nplt.imshow(num_data, cmap='gray')\n</code></pre>"},{"location":"machinelearning/ml-action/knn/#2","title":"2\u3001\u5212\u5206\u6570\u636e\u96c6","text":"<pre><code># \u5212\u5206\u6570\u636e\u96c6\n\nsplit = int(len(Y) * 0.8)\n\n# \u6253\u4e71\u6570\u636e\nnp.random.seed(42)\nidx = np.random.permutation(np.arange(len(X)))  # np.random.permutation \u7528\u4e8e\u751f\u6210\u4e00\u4e2a\u968f\u673a\u6392\u5217\nX = X[idx]\nY = Y[idx]\n\nx_tain, x_test = X[:split], X[split:]\ny_tain, y_test = Y[:split], Y[split:]\n\nprint(x_tain.shape)\nprint(x_test.shape)\n</code></pre>"},{"location":"machinelearning/ml-action/knn/#3","title":"3\u3001\u5b9e\u73b0\u4ee3\u7801\uff08\u624b\u6495\u7248\uff09","text":""},{"location":"machinelearning/ml-action/knn/#_3","title":"\u6b27\u6c0f\u8ddd\u79bb","text":"<pre><code>def distance(a, b):\n    return np.sqrt(np.sum((a - b) ** 2))\n</code></pre>"},{"location":"machinelearning/ml-action/knn/#knn_1","title":"KNN","text":"<pre><code>class KNN:\n    def __init__(self, k, label_num):\n        self.k = k\n        self.label_num = label_num  # \u7c7b\u522b\u7684\u6570\u91cf\n\n    def fit(self, x_train, y_train):\n        self.x_train = x_train\n        self.y_train = y_train\n\n    def get_close_k_neighbors(self, x):\n        # \u8ba1\u7b97\u5df2\u77e5\u6837\u672c\u548c\u76ee\u6807\u6837\u672c x \u4e4b\u95f4\u7684\u8ddd\u79bb\n        distances = list(map(lambda a: distance(a, x), self.x_train))\n\n        # \u6309\u7167\u8ddd\u79bb\u5927\u5c0f\u6392\u5e8f\uff0c\u5e76\u5f97\u5230\u5bf9\u5e94\u7684\u4e0b\u6807\n        knn_index = np.argsort(distances)\n        # \u83b7\u53d6\u6700\u8fd1\u7684 k\u4e2a\u4e0b\u6807\n        knn_index = knn_index[:self.k]\n        return knn_index\n\n    def get_label(self, x):\n        knn_index = self.get_close_k_neighbors(x)\n        # \u7edf\u8ba1\u7c7b\u522b\n        label_statistic = np.zeros(shape=[self.label_num], dtype=int)\n        for index in knn_index:\n            label = int(self.y_train[index])\n            label_statistic[label] += 1\n\n        # \u8fd4\u56de\u6570\u91cf\u6700\u591a\u7684\u7c7b\u522b\n        return np.argmax(label_statistic)\n\n    def predict(self, x_test):\n        # \u9884\u6d4b\u6837\u672c\u7c7b\u522b\n        labels = np.zeros(shape=[len(x_test)], dtype=int)\n        for i, x in enumerate(x_test):\n            labels[i] = self.get_label(x)\n\n        return labels\n</code></pre>"},{"location":"machinelearning/ml-action/knn/#_4","title":"\u9a8c\u8bc1\u6548\u679c","text":"<pre><code>for k in range(1, 11):\n    knn = KNN(k, label_num=10)\n    knn.fit(x_tain, y_tain)\n    pred_label = knn.predict(x_test)\n\n    acc = np.mean(pred_label == y_test)\n    print(f\"k={k}, \u9884\u6d4b\u7684\u51c6\u786e\u7387\u4e3a\uff1a{acc * 100:.2f}%\")\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c</p> <pre><code>    k=1, \u9884\u6d4b\u7684\u51c6\u786e\u7387\u4e3a\uff1a89.00%\n    k=2, \u9884\u6d4b\u7684\u51c6\u786e\u7387\u4e3a\uff1a89.00%\n    k=3, \u9884\u6d4b\u7684\u51c6\u786e\u7387\u4e3a\uff1a91.00%\n    k=4, \u9884\u6d4b\u7684\u51c6\u786e\u7387\u4e3a\uff1a90.00%\n    k=5, \u9884\u6d4b\u7684\u51c6\u786e\u7387\u4e3a\uff1a88.00%\n    k=6, \u9884\u6d4b\u7684\u51c6\u786e\u7387\u4e3a\uff1a87.00%\n    k=7, \u9884\u6d4b\u7684\u51c6\u786e\u7387\u4e3a\uff1a85.00%\n    k=8, \u9884\u6d4b\u7684\u51c6\u786e\u7387\u4e3a\uff1a86.50%\n    k=9, \u9884\u6d4b\u7684\u51c6\u786e\u7387\u4e3a\uff1a86.00%\n    k=10, \u9884\u6d4b\u7684\u51c6\u786e\u7387\u4e3a\uff1a87.00%\n</code></pre>"},{"location":"machinelearning/ml-action/knn/#4sklearn","title":"4\u3001\u5b9e\u73b0\u4ee3\u7801\uff08sklearn\u7248\uff09","text":""},{"location":"machinelearning/ml-action/knn/#_5","title":"\u4e09\u3001\u9879\u76ee\u5b9e\u6218","text":""},{"location":"machinelearning/ml-action/knn/#_6","title":"\u8272\u5f69\u98ce\u683c\u8fc1\u79fb","text":""},{"location":"machinelearning/ml-action/knn/#_7","title":"\u6570\u636e\u53ef\u89c6\u5316","text":"<pre><code>import numpy as np\nfrom matplotlib import pyplot as plt\nfrom skimage import io\nfrom skimage.color import rgb2lab, lab2rgb\nfrom sklearn.neighbors import KNeighborsRegressor # KNN \u56de\u5f52\u5668\nimport os\n\npath = \"style_transfer\"\n\ndata_dir = os.path.join(path, \"vangogh\")\nfig = plt.figure(figsize=(16,8))\n\nfor i,file in enumerate(os.listdir(data_dir)[:3]):\n    img = io.imread(os.path.join(data_dir, file))\n    ax = fig.add_subplot(1,3,i+1)\n    ax.imshow(img)\n    ax.set_title(file)\n\nplt.show()\n</code></pre>"},{"location":"machinelearning/ml-action/knn/#_8","title":"\u63d0\u53d6\u8bad\u7ec3\u6570\u636e","text":"<pre><code>block_size = 1 # block_size \u8868\u793a\u5411\u5916\u6269\u5c55\u7684\u5c42\u6570\uff0c\u6269\u5c55 1 \u5c42\u5373 3*3\n\ndef read_style_image(filename,size = block_size):\n    # \u8bfb\u5165\u98ce\u683c\u56fe\u50cf\uff0c\u5f97\u5230\u6620\u5c04 x-&gt;y\n    # \u5176\u4e2d X \u5b58\u50a8 3*3\u50cf\u7d20\u7684\u7070\u5ea6\u503c\uff0cY \u5b58\u50a8\u4e2d\u5fc3\u683c\u5b50\u7684\u8272\u5f69\u503c\n    # \u8bfb\u53d6\u56fe\u50cf\u6587\u4ef6\uff0c\u8bbe\u56fe\u50cf\u5bbd\u4e3a W,\u9ad8\u4e3a H.\u5f97\u5230 W*H*3 \u7684 RGB \u77e9\u9635\n\n    img = io.imread(filename)\n    fig = plt.figure()\n    plt.imshow(img)\n    plt.show()\n\n    # \u5c06 RGB \u77e9\u9635\u8f6c\u6362\u4e3a LAB \u8868\u793a\u6cd5\u7684\u77e9\u9635\uff0c\u5927\u5c0f\u4ecd\u7136\u662f w*h*3\uff0c\u4e09\u7ef4\u5206\u522b\u662f L\u3001A\u3001B\n    img = rgb2lab(img)\n\n    # \u83b7\u53d6\u56fe\u50cf\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\n    width, height = img.shape[:2]\n\n    X = []\n    Y = []\n\n    # \u679a\u4e3e\u5168\u90e8\u53ef\u80fd\u7684\u4e2d\u5fc3\u683c\u5b50\n    for x in range(size,width-size):\n        for y in range(size,height-size):\n            # \u4fdd\u5b58\u6240\u6709\u7a97\u53e3\n            X.append(img[x-size:x+size+1,y-size:y+size+1,0].flatten()) # 3*3\u50cf\u7d20\u7a97\u53e3\u7684\u7070\u5ea6\u503c\n            Y.append(img[x,y,1:])\n\n    return X,Y\n</code></pre>"},{"location":"machinelearning/ml-action/knn/#_9","title":"\u6784\u5efa\u6a21\u578b","text":"<pre><code>X, Y = read_style_image(os.path.join(path, \"style.jpg\"))\n\nknn = KNeighborsRegressor(n_neighbors=4,weights=\"distance\")\nknn.fit(X,Y)\n</code></pre>"},{"location":"machinelearning/ml-action/knn/#_10","title":"\u98ce\u683c\u8fc1\u79fb\u51fd\u6570","text":"<pre><code>def rebuild(img,size=block_size):\n    fig = plt.figure()\n    plt.imshow(img)\n    plt.show()\n\n    # \u5c06\u5185\u5bb9\u56fe\u50cf\u8f6c\u4e3a LAB \u8868\u793a\n    img = rgb2lab(img)\n    width, height = img.shape[:2]\n\n    # \u521d\u59cb\u5316\u8f93\u51fa\u56fe\u50cf\u5bf9\u5e94\u7684\u77e9\u9635\n    photo = np.zeros((width,height,3))\n\n    # \u679a\u4e3e\u5185\u5bb9\u56fe\u50cf\u7684\u4e2d\u5fc3\u683c\u5b50\uff0c\u4fdd\u5b58\u6240\u6709\u7a97\u53e3\n    X = []\n    for x in range(size,width-size):\n        for y in range(size,height-size):\n            # \u5f97\u5230\u4e2d\u5fc3\u683c\u5b50\u5bf9\u5e94\u7684\u7a97\u53e3\n            window = img[x-size:x+size+1,y-size:y+size+1,0].flatten()\n            X.append(window)\n\n    X = np.array(X)\n\n    # \u7528 KNN \u56de\u5f52\u5668\u9884\u6d4b\u989c\u8272\n    pred_ab = knn.predict(X).reshape(width-2*size,height-2*size,-1)\n\n    # \u8bbe\u7f6e\u8f93\u51fa\u56fe\u50cf\n    photo[:,:,0] = img[:,:,0]\n    photo[size:width-size,size:height-size,1:] = pred_ab\n\n    # \u7531\u4e8e\u6700\u5916\u9762 size \u5c42 \u65e0\u6cd5\u6784\u9020\u7a97\u53e3\uff0c\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u76f4\u63a5\u628a\u8fd9\u4e9b\u50cf\u7d20\u526a\u6389\n    photo = photo[size:width-size,size:height-size,:]\n    return photo\n</code></pre>"},{"location":"machinelearning/ml-action/knn/#_11","title":"\u6548\u679c\u5c55\u793a","text":"<pre><code>content = io.imread(os.path.join(path, \"input.jpg\"))\nnew_photo = rebuild(content)\n\nnew_photo = lab2rgb(new_photo)\n\nfig = plt.figure()\nplt.imshow(new_photo)\nplt.show()\n</code></pre>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/","title":"\u7b2c\u4e00\u7ae0\uff1a\u673a\u5668\u5b66\u4e60\u57fa\u7840\u6982\u5ff5","text":""},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#_2","title":"\u4ec0\u4e48\u662f\u673a\u5668\u5b66\u4e60\uff1f","text":"<p>\u673a\u5668\u5b66\u4e60\uff08Machine Learning, ML\uff09\uff1a\u901a\u8fc7\u7b97\u6cd5\u8ba9\u8ba1\u7b97\u673a\u4ece\u6570\u636e\u4e2d\u81ea\u52a8\u5b66\u4e60\u89c4\u5f8b\uff0c\u5e76\u5229\u7528\u5b66\u4e60\u5230\u7684\u6a21\u578b\u8fdb\u884c\u9884\u6d4b\u6216\u51b3\u7b56\uff0c\u800c\u65e0\u9700\u663e\u5f0f\u7f16\u7a0b\u3002</p>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#vs-vs","title":"\u76d1\u7763\u5b66\u4e60 vs \u975e\u76d1\u7763\u5b66\u4e60 vs \u5f3a\u5316\u5b66\u4e60","text":""},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#supervised-learning","title":"\u76d1\u7763\u5b66\u4e60 (Supervised Learning)","text":"<ul> <li>\u5b9a\u4e49: \u5728\u76d1\u7763\u5b66\u4e60\u4e2d\uff0c\u6a21\u578b\u901a\u8fc7\u5e26\u6807\u7b7e\u7684\u6570\u636e\u96c6\u8fdb\u884c\u8bad\u7ec3\u3002\u6bcf\u4e2a\u8f93\u5165\u6570\u636e\u90fd\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u8f93\u51fa\u6807\u7b7e\u3002</li> <li>\u5e94\u7528\u793a\u4f8b: \u56fe\u50cf\u5206\u7c7b\u3001\u5783\u573e\u90ae\u4ef6\u68c0\u6d4b\u3001\u623f\u4ef7\u9884\u6d4b\u7b49\u3002</li> <li>\u4f18\u70b9: \u51c6\u786e\u6027\u9ad8\uff0c\u9002\u7528\u4e8e\u5df2\u77e5\u7c7b\u522b\u7684\u60c5\u51b5\u3002</li> <li>\u7f3a\u70b9: \u9700\u8981\u5927\u91cf\u7684\u6807\u6ce8\u6570\u636e\uff0c\u6210\u672c\u8f83\u9ad8\u3002</li> </ul>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#unsupervised-learning","title":"\u975e\u76d1\u7763\u5b66\u4e60 (Unsupervised Learning)","text":"<ul> <li>\u5b9a\u4e49: \u975e\u76d1\u7763\u5b66\u4e60\u4f7f\u7528\u6ca1\u6709\u6807\u7b7e\u7684\u6570\u636e\u96c6\u8fdb\u884c\u8bad\u7ec3\u3002\u6a21\u578b\u8bd5\u56fe\u4ece\u6570\u636e\u4e2d\u53d1\u73b0\u6f5c\u5728\u7684\u6a21\u5f0f\u6216\u7ed3\u6784\u3002</li> <li>\u5e94\u7528\u793a\u4f8b: \u805a\u7c7b\u5206\u6790\u3001\u964d\u7ef4\uff08PCA\uff09\u3001\u63a8\u8350\u7cfb\u7edf\u7b49\u3002</li> <li>\u4f18\u70b9: \u6210\u672c\u8f83\u4f4e\uff0c\u9002\u7528\u4e8e\u672a\u77e5\u7ed3\u6784\u7684\u6570\u636e\u3002</li> <li>\u7f3a\u70b9: \u7ed3\u679c\u89e3\u91ca\u96be\u5ea6\u8f83\u5927\uff0c\u53ef\u80fd\u4e0d\u5982\u76d1\u7763\u5b66\u4e60\u51c6\u786e\u3002</li> </ul>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#reinforcement-learning","title":"\u5f3a\u5316\u5b66\u4e60 (Reinforcement Learning)","text":"<ul> <li>\u5b9a\u4e49: \u5f3a\u5316\u5b66\u4e60\u662f\u4e00\u79cd\u8bd5\u9519\u7684\u5b66\u4e60\u65b9\u6cd5\u3002\u667a\u80fd\u4f53\u5728\u73af\u5883\u4e2d\u6267\u884c\u52a8\u4f5c\uff0c\u5e76\u6839\u636e\u73af\u5883\u53cd\u9988\u7684\u5956\u52b1\u4fe1\u53f7\u8c03\u6574\u7b56\u7565\u4ee5\u6700\u5927\u5316\u7d2f\u79ef\u5956\u52b1\u3002</li> <li>\u5e94\u7528\u793a\u4f8b: \u6e38\u620fAI\u3001\u673a\u5668\u4eba\u63a7\u5236\u3001\u81ea\u52a8\u9a7e\u9a76\u7b49\u3002</li> <li>\u4f18\u70b9: \u9002\u7528\u4e8e\u52a8\u6001\u73af\u5883\uff0c\u80fd\u591f\u5904\u7406\u590d\u6742\u7684\u51b3\u7b56\u95ee\u9898\u3002</li> <li>\u7f3a\u70b9: \u8bad\u7ec3\u65f6\u95f4\u957f\uff0c\u9700\u8981\u6a21\u62df\u5927\u91cf\u73af\u5883\u4e92\u52a8\u3002</li> </ul>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#f1","title":"\u6a21\u578b\u8bc4\u4f30\uff1a\u51c6\u786e\u7387\u3001\u7cbe\u786e\u7387\u3001\u53ec\u56de\u7387\u3001F1 \u503c","text":""},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#_3","title":"\u5206\u7c7b\u6307\u6807","text":"<p>\u5206\u7c7b\u7ed3\u679c \u5728\u6df1\u5165\u7814\u7a76\u5206\u7c7b\u6307\u6807\u4e4b\u524d\uff0c\u6211\u4eec\u5fc5\u987b\u4e86\u89e3\u4ee5\u4e0b\u6982\u5ff5\uff1a</p> <ul> <li>\u771f\u6b63\u4f8b (TP)\uff1a\u6a21\u578b\u6b63\u786e\u9884\u6d4b\u6b63\u7c7b\u7684\u60c5\u51b5\u3002</li> <li>\u5047\u6b63\u4f8b (FP)\uff1a\u6a21\u578b\u9884\u6d4b\u4e3a\u6b63\u7c7b\uff0c\u4f46\u5b9e\u9645\u7c7b\u4e3a\u8d1f\u7c7b\u7684\u60c5\u51b5\u3002</li> <li>\u771f\u53cd\u4f8b (TN)\uff1a\u6a21\u578b\u6b63\u786e\u9884\u6d4b\u8d1f\u7c7b\u7684\u60c5\u51b5\u3002</li> <li>\u5047\u53cd\u4f8b (FN)\uff1a\u6a21\u578b\u9884\u6d4b\u4e3a\u9634\u6027\u7c7b\u522b\uff0c\u4f46\u5b9e\u9645\u7c7b\u522b\u4e3a\u9633\u6027\u7684\u60c5\u51b5\u3002</li> </ul>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#_4","title":"\u51c6\u786e\u5ea6","text":"<p>\u51c6\u786e\u7387\u662f\u6700\u76f4\u63a5\u7684\u5206\u7c7b\u6307\u6807\uff0c\u8861\u91cf\u6b63\u786e\u9884\u6d4b\u7684\u6bd4\u4f8b\u3002\u867d\u7136\u51c6\u786e\u7387\u6613\u4e8e\u7406\u89e3\u548c\u8ba1\u7b97\uff0c\u4f46\u5728\u7c7b\u522b\u4e0d\u5e73\u8861\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u4f1a\u4ea7\u751f\u8bef\u5bfc\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8003\u8651\u5176\u4ed6\u6307\u6807\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002</p> <p></p> <ul> <li>\u6613\u4e8e\u7406\u89e3\u548c\u6c9f\u901a\uff0c\u5e76\u63d0\u4f9b\u5bf9\u6a21\u578b\u6027\u80fd\u7684\u7b80\u5355\u8bc4\u4f30\u3002</li> <li>\u4e0d\u9002\u5408\u4e0d\u5e73\u8861\u7684\u7c7b\u522b\uff0c\u56e0\u4e3a\u5b83\u53ef\u80fd\u6709\u5229\u4e8e\u591a\u6570\u7c7b\u522b\u3002</li> <li>\u65e0\u6cd5\u533a\u5206\u5047\u9633\u6027\u548c\u5047\u9634\u6027\u3002</li> <li>\u5e94\u4e0e\u5176\u4ed6\u6307\u6807\u7ed3\u5408\u4f7f\u7528\u3002</li> </ul> <p>\u8fd9\u662f\u4e00\u79cd\u5728 Python \u4e2d\u8ba1\u7b97\u51c6\u786e\u5ea6\u5f97\u5206\u7684\u65b9\u6cd5\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u5c06\u6a21\u578b\u9884\u6d4b\u7684\u503c ( y_pred ) \u4e0e\u771f\u5b9e\u503c ( y_test ) \u8fdb\u884c\u6bd4\u8f83\uff1a</p> <pre><code>from sklearn.metrics import precision_score \n# \u8ba1\u7b97\u6a21\u578b\u7684\u7cbe\u786e\u5ea6\u5f97\u5206\n\nmodel_precision = precision_score(y_test, y_pred) \n\nprint(\"Precision:\", model_precision)\n</code></pre>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#_5","title":"\u6df7\u6dc6\u77e9\u9635","text":"<p>\u6df7\u6dc6\u77e9\u9635\u662f\u4e00\u4e2a\u8868\u683c\uff0c\u603b\u7ed3\u4e86\u5206\u7c7b\u6a21\u578b\u7684\u8868\u73b0\uff0c\u901a\u8fc7\u6bd4\u8f83\u9884\u6d4b\u503c\u548c\u5b9e\u9645\u503c\u3002\u5b83\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6a21\u578b\u8868\u73b0\u7684\u76f4\u89c2\u8868\u793a\uff0c\u5e2e\u52a9\u8bc6\u522b\u6a21\u578b\u7684\u9519\u8bef\u4e4b\u5904\u3002\u5b83\u663e\u793a\u4e86\u6211\u4eec\u7684\u6240\u6709\u56db\u4e2a\u5206\u7c7b\u7ed3\u679c\u3002\u6df7\u6dc6\u77e9\u9635\u63d0\u4f9b\u4e86\u6a21\u578b\u6027\u80fd\u7684\u76f4\u89c2\u8868\u793a\uff0c\u5e76\u6709\u52a9\u4e8e\u8bc6\u522b\u6a21\u578b\u5728\u54ea\u91cc\u72af\u4e86\u9519\u8bef\u3002</p> <p></p> <ul> <li>\u63d0\u4f9b\u771f\u9633\u6027\u3001\u5047\u9633\u6027\u3001\u771f\u9634\u6027\u548c\u5047\u9634\u6027\u7684\u8be6\u7ec6\u5206\u7c7b\u3002</li> <li>\u6df1\u5165\u4e86\u89e3\u6bcf\u4e2a\u7c7b\u522b\u7684\u6a21\u578b\u6027\u80fd\uff0c\u6709\u52a9\u4e8e\u8bc6\u522b\u5f31\u70b9\u548c\u504f\u5dee\u3002</li> <li>\u4f5c\u4e3a\u8ba1\u7b97\u5404\u79cd\u6307\u6807\u7684\u57fa\u7840\uff0c\u4f8b\u5982\u7cbe\u786e\u5ea6\u3001\u53ec\u56de\u7387\u3001F1 \u5206\u6570\u548c\u51c6\u786e\u5ea6\u3002</li> <li>\u53ef\u80fd\u66f4\u96be\u4ee5\u89e3\u91ca\u548c\u6c9f\u901a\uff0c\u56e0\u4e3a\u5b83\u4e0d\u63d0\u4f9b\u6574\u4f53\u6a21\u578b\u6027\u80fd\u7684\u5355\u4e00\u503c\uff08\u51fa\u4e8e\u6bd4\u8f83\u76ee\u7684\u53ef\u80fd\u9700\u8981\u8be5\u503c\uff09\u3002</li> </ul> <p>\u5728 Python \u4e2d\u7ed8\u5236\u6df7\u6dc6\u77e9\u9635\u7684\u4e00\u79cd\u7b80\u5355\u65b9\u6cd5\u662f\uff1a</p> <pre><code>from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n\n# \u8ba1\u7b97\u6df7\u6dc6\u77e9\u9635\nconf_matrix = confusion_matrix(y_test, y_pred)\n\n# \u5c55\u793a\u6df7\u6dc6\u77e9\u9635\ndisp = ConfusionMatrixDisplay(confusion_matrix=conf_matrix, display_labels=model.classes_)\ndisp.plot()\n</code></pre>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#_6","title":"\u7cbe\u786e\u5ea6","text":"<p>\u7cbe\u786e\u5ea6\uff0c\u5c31\u662f\u6211\u4eec\u6a21\u578b\u9884\u6d4b\u51fa\u6765\u7684\u6b63\u7c7b\u4e2d\u6240\u5360\u7684\u4efd\u989d\u3002</p> <p></p> <p>\u8fd9\u4e2a\u6307\u6807\uff0c\u7279\u522b\u5728\u90a3\u4e9b\u628a\u5047\u9633\u6027\u770b\u5f97\u6bd4\u8f83\u91cd\u7684\u573a\u666f\u4e0b\u683c\u5916\u91cd\u8981\uff0c\u6bd4\u5982\u8bf4\u8fc7\u6ee4\u5783\u573e\u90ae\u4ef6\u6216\u8005\u662f\u533b\u5b66\u4e0a\u7684\u8bca\u65ad\u3002\u4f46\u5149\u6709\u7cbe\u786e\u5ea6\u8fd8\u4e0d\u591f\uff0c\u56e0\u4e3a\u5b83\u6ca1\u529e\u6cd5\u544a\u8bc9\u6211\u4eec\u5047\u9634\u6027\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u4e00\u822c\u4f1a\u8ddf\u53ec\u56de\u7387\u4e00\u8d77\u642d\u914d\u4f7f\u7528\u3002</p> <ul> <li>\u5728\u8bef\u62a5\u7684\u4ee3\u4ef7\u7279\u522b\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u7cbe\u786e\u5ea6\u5c31\u663e\u5f97\u5c24\u4e3a\u5173\u952e\u4e86\u3002</li> <li>\u6613\u4e8e\u7406\u89e3\u548c\u6c9f\u901a\u3002</li> <li>\u4f46\u5b83\u5c31\u662f\u4e0d\u6d89\u53ca\u90a3\u4e9b\u88ab\u6a21\u578b\u9519\u8fc7\u7684\u6b63\u7c7b\uff0c\u5373\u5047\u9634\u6027\u7684\u6570\u91cf\u3002</li> <li>\u9002\u7528\u4e8e\u4e0d\u5e73\u8861\u6570\u636e\u3002\u4f46\u662f\uff0c\u5b83\u5e94\u8be5\u4e0e\u5176\u4ed6\u6307\u6807\u7ed3\u5408\u4f7f\u7528\uff0c\u56e0\u4e3a\u9ad8\u7cbe\u5ea6\u53ef\u80fd\u4f1a\u4ee5\u727a\u7272\u4e0d\u5e73\u8861\u6570\u636e\u96c6\u7684\u53ec\u56de\u7387\u4e3a\u4ee3\u4ef7</li> </ul>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#_7","title":"\u53ec\u56de\u7387","text":"<p>\u53ec\u56de\u7387\uff08\u7075\u654f\u5ea6\uff09 \u53ec\u56de\u7387\uff0c\u4e5f\u53eb\u7075\u654f\u5ea6\uff0c\u662f\u8bc4\u4f30\u5728\u6240\u6709\u771f\u6b63\u7684\u6b63\u4f8b\u4e2d\uff0c\u6709\u591a\u5c11\u88ab\u6211\u4eec\u7684\u6a21\u578b\u6b63\u786e\u8bc6\u522b\u51fa\u6765\u7684\u6bd4\u4f8b\u3002</p> <p></p> <p>\u5728\u90a3\u4e9b\u9519\u8fc7\u771f\u9633\u6027\u7684\u4ee3\u4ef7\u6781\u5176\u91cd\u5927\u7684\u573a\u5408\u2014\u2014\u6bd4\u5982\u764c\u75c7\u7b5b\u67e5\u6216\u8005\u9632\u8303\u4fe1\u7528\u8bc8\u9a97\uff0c\u6216\u662f\u5728\u90a3\u79cd\u6b63\u7c7b\u76f8\u5bf9\u8f83\u5c11\u7684\u6570\u636e\u96c6\u91cc\u2014\u2014\u53ec\u56de\u7387\u7684\u91cd\u8981\u6027\u4e0d\u8a00\u800c\u55bb\u3002\u6b63\u5982\u53ec\u56de\u7387\u9700\u8981\u548c\u7cbe\u786e\u7387\u4e00\u6837\u7684\u642d\u6863\u4e00\u6837\uff0c\u4e3a\u4e86\u8fbe\u5230\u4e00\u79cd\u8bc4\u4f30\u7684\u5e73\u8861\uff0c\u53ec\u56de\u7387\u4e5f\u9700\u8981\u548c\u5176\u4ed6\u6307\u6807\u4e00\u5e76\u53c2\u8003\u3002</p> <ul> <li>\u5728\u9519\u5931\u771f\u9633\u6027\u7684\u540e\u679c\u975e\u5e38\u4e25\u91cd\u65f6\uff0c\u53ec\u56de\u7387\u663e\u5f97\u683c\u5916\u5173\u952e\u3002</li> <li>\u6613\u4e8e\u7406\u89e3\u548c\u6c9f\u901a\u3002</li> <li>\u4e0d\u8003\u8651\u8bef\u62a5\u7684\u6570\u91cf\u3002</li> <li>\u9002\u7528\u4e8e\u4e0d\u5e73\u8861\u6570\u636e\u3002\u7136\u800c\uff0c\u5b83\u5e94\u8be5\u4e0e\u5176\u4ed6\u6307\u6807\u7ed3\u5408\u8d77\u6765\uff0c\u56e0\u4e3a\u9ad8\u53ec\u56de\u7387\u53ef\u80fd\u4f1a\u4ee5\u727a\u7272\u4e0d\u5e73\u8861\u6570\u636e\u96c6\u7684\u7cbe\u5ea6\u4e3a\u4ee3\u4ef7\u3002</li> </ul>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#f1-","title":"F1-\u5206\u6570","text":"<p>F1 \u5206\u6570\u662f\u7cbe\u786e\u7387\u548c\u53ec\u56de\u7387\u7684\u8c03\u548c\u5e73\u5747\u503c\uff0c\u63d0\u4f9b\u4e86\u5e73\u8861\u4e24\u8005\u7684\u5355\u4e00\u6307\u6807\u3002</p> <p></p> <p>\u5f53\u8bef\u62a5\u548c\u6f0f\u62a5\u540c\u6837\u91cd\u8981\u5e76\u4e14\u60a8\u5bfb\u6c42\u7cbe\u786e\u7387\u548c\u53ec\u56de\u7387\u4e4b\u95f4\u7684\u5e73\u8861\u65f6\uff0cF1 \u5206\u6570\u975e\u5e38\u6709\u7528\u3002</p> <ul> <li>F1-Score \u5e73\u8861\u7cbe\u786e\u5ea6\u548c\u53ec\u56de\u7387\uff1a\u5f53\u8bef\u62a5\u548c\u6f0f\u62a5\u90fd\u5f88\u91cd\u8981\u65f6\u5f88\u6709\u7528\u3002</li> <li>\u5bf9\u4e8e\u4e0d\u5e73\u8861\u7684\u6570\u636e\u7279\u522b\u6709\u7528\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u5728\u7cbe\u786e\u5ea6\u548c\u53ec\u56de\u7387\u4e4b\u95f4\u8fdb\u884c\u6743\u8861\u3002</li> <li>\u504f\u5411\u4e8e\u5177\u6709\u76f8\u4f3c\u7cbe\u5ea6\u548c\u53ec\u56de\u7387\u7684\u6a21\u578b\uff0c\u8fd9\u53ef\u80fd\u5e76\u4e0d\u603b\u662f\u4ee4\u4eba\u6ee1\u610f\u7684\u3002</li> <li>\u53ef\u80fd\u4e0d\u8db3\u4ee5\u6bd4\u8f83\u4e0d\u540c\u6a21\u578b\u7684\u6027\u80fd\uff0c\u7279\u522b\u662f\u5f53\u6a21\u578b\u5728\u8bef\u62a5\u548c\u6f0f\u62a5\u4e4b\u95f4\u5177\u6709\u4e0d\u540c\u7684\u6743\u8861\u65f6\u3002</li> </ul> <p>\u4e00\u6b21\u6027\u83b7\u5f97\u51c6\u786e\u7387\u3001\u53ec\u56de\u7387\u548c F1 \u5206\u6570\u7684\u6700\u7b80\u5355\u65b9\u6cd5\u662f\u4f7f\u7528 scikit-learn \u7684\u5206\u7c7b\u62a5\u544a\uff1a</p> <pre><code>from sklearn.metrics import classification_report  # \u4fee\u6b63\u5bfc\u5165\u8bed\u53e5\uff0c\u5e94\u8be5\u5728import\u548cclassification_report\u4e4b\u95f4\u52a0\u4e0a\u7a7a\u683c\n\n# \u751f\u6210\u5206\u7c7b\u62a5\u544a\n# \u8be5\u62a5\u544a\u5305\u62ec\u4e86\u7cbe\u786e\u5ea6\u3001\u53ec\u56de\u7387\u3001F1\u5206\u6570\u7b49\u5173\u952e\u6307\u6807\nclass_report = classification_report(y_test, y_pred) \n\n# \u6253\u5370\u5206\u7c7b\u62a5\u544a\nprint(class_report)\n</code></pre>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#auc","title":"\u5de5\u4f5c\u7279\u6027\u66f2\u7ebf\u4e0b\u9762\u79ef\uff08AUC\uff09","text":"<p>AUC\u8861\u91cf\u7684\u662f\u5728\u4e0d\u540c\u7684\u5224\u5b9a\u95e8\u69db\u4e0b\uff0c\u6a21\u578b\u8bc6\u522b\u6b63\u7c7b\u7684\u80fd\u529b\u4e0e\u8bef\u5c06\u8d1f\u7c7b\u5224\u4e3a\u6b63\u7c7b\u7684\u98ce\u9669\u4e4b\u95f4\u7684\u5e73\u8861\u3002AUC\u503c\u6ee1\u5206\u4e3a1\uff0c\u4ee3\u8868\u6a21\u578b\u9884\u6d4b\u80fd\u529b\u65e0\u61c8\u53ef\u51fb\uff0c\u800c\u5f97\u5206\u4e3a0.5\u5219\u610f\u5473\u7740\u6a21\u578b\u7684\u9884\u6d4b\u4e0d\u8fc7\u662f\u78b0\u8fd0\u6c14\u3002\u5728\u8bc4\u4f30\u548c\u6bd4\u8f83\u591a\u4e2a\u6a21\u578b\u7684\u8868\u73b0\u65f6\uff0cAUC\u5c24\u5176\u6709\u4ef7\u503c\uff0c\u4f46\u4e3a\u4e86\u6df1\u5165\u638c\u63e1\u6bcf\u4e2a\u6a21\u578b\u5728\u5404\u4e2a\u65b9\u9762\u7684\u4f18\u52a3\uff0c\u6700\u597d\u8fd8\u662f\u5c06\u5b83\u4e0e\u5176\u4ed6\u6027\u80fd\u6307\u6807\u4e00\u5e76\u53c2\u8003\u3002</p> <p></p> <ul> <li>\u8bc4\u4f30\u5404\u79cd\u5206\u7c7b\u9608\u503c\u7684\u6a21\u578b\u6027\u80fd\u3002</li> <li>\u9002\u7528\u4e8e\u4e0d\u5e73\u8861\u7684\u6570\u636e\u96c6\u3002</li> <li>\u53ef\u7528\u4e8e\u6bd4\u8f83\u4e0d\u540c\u6a21\u578b\u7684\u6027\u80fd\u3002</li> <li>\u5047\u8bbe\u8bef\u62a5\u548c\u6f0f\u62a5\u5177\u6709\u76f8\u540c\u7684\u6210\u672c\u3002</li> <li>\u975e\u6280\u672f\u5229\u76ca\u76f8\u5173\u8005\u96be\u4ee5\u89e3\u91ca\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u4e86\u89e3 ROC \u66f2\u7ebf\u3002</li> <li>\u53ef\u80fd\u4e0d\u9002\u5408\u5177\u6709\u5c11\u91cf\u89c2\u6d4b\u503c\u7684\u6570\u636e\u96c6\u6216\u5177\u6709\u5927\u91cf\u7c7b\u522b\u7684\u6a21\u578b\u3002</li> </ul> <p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u8ba1\u7b97 AUC \u5206\u6570\u5e76\u7ed8\u5236 ROC \u66f2\u7ebf\uff1a</p> <pre><code># \u4ecesklearn.metrics\u6a21\u5757\u5bfc\u5165roc_auc_score\u548croc_curve\u51fd\u6570\u7528\u4e8e\u8ba1\u7b97AUC\u5206\u6570\u548c\u7ed8\u5236ROC\u66f2\u7ebf\uff0c\u540c\u65f6\u5bfc\u5165matplotlib.pyplot\u7528\u4e8e\u7ed8\u56fe\nfrom sklearn.metrics import roc_auc_score, roc_curve \nimport matplotlib.pyplot as plt \n\n# \u4f7f\u7528\u6a21\u578b\u5bf9\u6d4b\u8bd5\u96c6X_test\u8fdb\u884c\u6982\u7387\u9884\u6d4b\uff0c\u53d6\u6b63\u7c7b\u9884\u6d4b\u6982\u7387\u4e3a\u771f\u9633\u6027\u7387\u7684\u4f9d\u636e\ny_pred_proba = my_model.predict_proba(X_test)[:, 1] \n\n# \u5229\u7528\u771f\u5b9e\u6807\u7b7ey_test\u548c\u9884\u6d4b\u6982\u7387y_pred_proba\u8ba1\u7b97AUC\u5206\u6570\uff0c\u8bc4\u4f30\u6a21\u578b\u7684\u6574\u4f53\u6027\u80fd\nauc_score = roc_auc_score(y_test, y_pred_proba) \n\n# \u57fa\u4e8e\u771f\u5b9e\u6807\u7b7e\u548c\u9884\u6d4b\u6982\u7387\uff0c\u8ba1\u7b97ROC\u66f2\u7ebf\u7684\u5047\u9633\u6027\u7387\uff08fpr\uff09\u548c\u771f\u9633\u6027\u7387\uff08tpr\uff09\uff0c\u53ca\u4e0d\u540c\u9608\u503c\nfpr, tpr, Thresholds = roc_curve(y_test, y_pred_proba) \n\n# \u4f7f\u7528matplotlib\u7ed8\u5236ROC\u66f2\u7ebf\uff0c\u5c55\u793a\u6a21\u578b\u7684\u6027\u80fd\u3002\u66f2\u7ebf\u4e0b\u7684\u9762\u79ef\uff08AUC\uff09\u8d8a\u5927\uff0c\u6a21\u578b\u6027\u80fd\u8d8a\u597d\nplt.plot(fpr, tpr, label='My Model (AUC = %0.2f)' % auc_score) \n\n# \u7ed8\u5236\u5bf9\u89d2\u7ebf\uff0c\u8868\u793a\u968f\u673a\u731c\u6d4b\u7684\u6027\u80fd\u6c34\u5e73\uff0c\u4f5c\u4e3a\u6027\u80fd\u7684\u57fa\u51c6\u7ebf\nplt.plot([0, 1], [0, 1], 'k--') \n\n# \u8bbe\u5b9a\u56fe\u50cf\u7684x\u8f74\u548cy\u8f74\u7684\u663e\u793a\u8303\u56f4\nplt.xlim([0.0, 1.0]) \nplt.ylim([0.0, 1.05]) \n\n# \u8bbe\u7f6ex\u8f74\u6807\u7b7e\u4e3a\u201c\u8bef\u62a5\u7387\u201d\u548cy\u8f74\u6807\u7b7e\u4e3a\u201c\u771f\u9633\u6027\u7387\u201d\uff0c\u5373ROC\u66f2\u7ebf\u7684\u6807\u51c6\u8f74\u6807\u7b7e\nplt.xlabel('\u8bef\u62a5\u7387') \nplt.ylabel('\u771f\u9633\u6027\u7387') \n\n# \u8bbe\u7f6e\u56fe\u8868\u6807\u9898\u4e3a\u201c\u63a5\u6536\u5668\u64cd\u4f5c\u7279\u5f81\u201d\uff0c\u5373ROC\u66f2\u7ebf\u7684\u5e38\u89c1\u540d\u79f0\nplt.title('\u63a5\u6536\u5668\u64cd\u4f5c\u7279\u5f81') \n\n# \u6dfb\u52a0\u56fe\u4f8b\uff0c\u4f4d\u4e8e\u56fe\u7684\u53f3\u4e0b\u89d2\uff0c\u5c55\u793a\u6a21\u578b\u53ca\u5176AUC\u5206\u6570\nplt.legend(loc=\"lower right\") \n\n# \u663e\u793a\u7ed8\u5236\u7684\u56fe\u50cf\nplt.show()\n</code></pre>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#_8","title":"\u5bf9\u6570\u635f\u5931\uff08\u4ea4\u53c9\u71b5\u635f\u5931)","text":"<p>\u5bf9\u6570\u635f\u5931\u7528\u6765\u8bc4\u4f30\u6a21\u578b\u9884\u6d4b\u51c6\u786e\u6027\u7684\u4e00\u79cd\u65b9\u6cd5\uff0c\u5b83\u5bf9\u6bcf\u6b21\u9884\u6d4b\u7684\u6b63\u786e\u4e0e\u5426\u8fdb\u884c\u5956\u60e9\u3002 \u8fd9\u79cd\u5ea6\u91cf\u65b9\u5f0f\u901a\u8fc7\u60e9\u7f5a\u9519\u8bef\u7684\u9884\u6d4b\u540c\u65f6\u5956\u52b1\u6b63\u786e\u7684\u9884\u6d4b\u6765\u5de5\u4f5c\u3002\u5982\u679c\u5bf9\u6570\u635f\u5931\u7684\u503c\u8d8a\u4f4e\uff0c\u610f\u5473\u7740\u6a21\u578b\u7684\u6027\u80fd\u8d8a\u597d\uff0c\u800c\u5f53\u8fd9\u4e2a\u503c\u8fbe\u52300\u65f6\uff0c\u5c31\u4ee3\u8868\u8fd9\u4e2a\u6a21\u578b\u80fd\u591f\u5b8c\u7f8e\u5730\u8fdb\u884c\u5206\u7c7b\u3002</p> <p></p> <ul> <li>N\u662f\u89c2\u6d4b\u503c\u7684\u6570\u91cf\u3002</li> <li>y_test\u662f\u4e8c\u5143\u5206\u7c7b\u95ee\u9898\u7684\u771f\u5b9e\u6807\u7b7e\uff080 \u6216 1\uff09\u3002</li> <li>y_prob\u662f\u6807\u7b7e\u4e3a 1 \u7684\u9884\u6d4b\u6982\u7387\u3002</li> </ul> <p>\u5f53\u4f60\u9700\u8981\u5bf9\u6a21\u578b\u7684\u6982\u7387\u9884\u6d4b\u8fdb\u884c\u8bc4\u4f30\u65f6\uff0c\u6bd4\u5982\u5728\u5e94\u7528\u903b\u8f91\u56de\u5f52\u6216\u8005\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9\u6570\u635f\u5931\u5c31\u663e\u5f97\u5c24\u4e3a\u91cd\u8981\u4e86\u3002 \u4e3a\u4e86\u80fd\u66f4\u6df1\u5165\u5730\u638c\u63e1\u6a21\u578b\u5728\u5404\u4e2a\u5206\u7c7b\u4e0a\u7684\u8868\u73b0\uff0c\u6700\u597d\u662f\u5c06\u5bf9\u6570\u635f\u5931\u4e0e\u5176\u4ed6\u8bc4\u4f30\u6307\u6807\u4e00\u8d77\u8003\u8651\u4f7f\u7528\u3002</p> <ul> <li>\u6982\u7387\u9884\u6d4b\uff1a\u8861\u91cf\u8f93\u51fa\u6982\u7387\u4f30\u8ba1\u7684\u6a21\u578b\u7684\u6027\u80fd\uff0c\u9f13\u52b1\u7ecf\u8fc7\u826f\u597d\u6821\u51c6\u7684\u9884\u6d4b\u3002</li> <li>\u5bf9\u6570\u635f\u5931\u53ef\u7528\u4e8e\u6bd4\u8f83\u4e0d\u540c\u6a21\u578b\u7684\u6027\u80fd\u6216\u4f18\u5316\u5355\u4e2a\u6a21\u578b\u7684\u6027\u80fd\u3002</li> <li>\u9002\u7528\u4e8e\u4e0d\u5e73\u8861\u6570\u636e\u3002</li> <li>\u5bf9\u6781\u7aef\u6982\u7387\u9884\u6d4b\u9ad8\u5ea6\u654f\u611f\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9519\u8bef\u5206\u7c7b\u5b9e\u4f8b\u7684\u5de8\u5927\u60e9\u7f5a\u503c\u3002</li> <li>\u53ef\u80fd\u96be\u4ee5\u5411\u975e\u6280\u672f\u5229\u76ca\u76f8\u5173\u8005\u89e3\u91ca\u548c\u6c9f\u901a\u3002</li> </ul>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#_9","title":"\u56de\u5f52\u6307\u6807","text":""},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#mae","title":"\u5e73\u5747\u7edd\u5bf9\u8bef\u5dee\uff08MAE\uff09","text":"<p>\u5e73\u5747\u7edd\u5bf9\u8bef\u5dee\uff08MAE\uff09\u662f\u7528\u6765\u8ba1\u7b97\u9884\u6d4b\u503c\u548c\u5b9e\u9645\u503c\u4e4b\u95f4\u5dee\u8ddd\u7edd\u5bf9\u503c\u7684\u5e73\u5747\u91cf\u3002</p> <p></p> <ul> <li>N\u662f\u6570\u636e\u70b9\u7684\u6570\u91cf\u3002</li> <li>y_pred\u662f\u9884\u6d4b\u503c\u3002</li> <li>y_test\u662f\u5b9e\u9645\u503c\u3002</li> </ul> <p>\u6982\u62ec\uff1a</p> <ul> <li>\u6613\u4e8e\u89e3\u91ca\uff1a\u8868\u793a\u5e73\u5747\u8bef\u5dee\u5927\u5c0f\u3002</li> <li>\u5bf9\u5f02\u5e38\u503c\u7684\u654f\u611f\u5ea6\u4f4e\u4e8e\u5747\u65b9\u8bef\u5dee (MSE)\u3002</li> <li>\u65e0\u9519\u8bef\u65b9\u5411\uff1a\u4e0d\u8868\u793a\u9ad8\u4f30\u6216\u4f4e\u4f30\u3002</li> <li>\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u53ef\u80fd\u65e0\u6cd5\u6355\u83b7\u6781\u7aef\u9519\u8bef\u7684\u5f71\u54cd\u3002</li> </ul> <pre><code>from sklearn.metrics import mean_absolute_error  # \u4fee\u6b63\u51fd\u6570\u540d\u79f0\uff0c\u5e94\u4e3a\u5c0f\u5199\u7684 'mean_absolute_error'\n\n# \u8ba1\u7b97\u771f\u5b9e\u503c\u4e0e\u9884\u6d4b\u503c\u4e4b\u95f4\u7684\u5e73\u5747\u7edd\u5bf9\u8bef\u5dee (MAE)\nmae = mean_absolute_error(y_true, y_pred)  # \u8ba1\u7b97MAE\n\n# \u6253\u5370MAE\u503c\uff0c\u4ee5\u8bc4\u4f30\u6a21\u578b\u9884\u6d4b\u7684\u51c6\u786e\u6027\nprint(\"MAE:\", mae)\n</code></pre>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#mse","title":"\u5747\u65b9\u8bef\u5dee\uff08MSE\uff09","text":"<p>\u5747\u65b9\u8bef\u5dee\uff08MSE\uff09\u7528\u4e8e\u8ba1\u7b97\u9884\u6d4b\u503c\u4e0e\u5b9e\u9645\u503c\u5dee\u5f02\u7684\u5e73\u65b9\u540e\u7684\u5e73\u5747\u6570\u3002</p> <p></p> <p>MSE\u7279\u522b\u5bf9\u79bb\u7fa4\u503c\u654f\u611f\uff0c\u8fd9\u662f\u56e0\u4e3a\u5b83\u5bf9\u4e8e\u8f83\u5927\u7684\u8bef\u5dee\u65bd\u52a0\u4e86\u66f4\u91cd\u7684\u60e9\u7f5a\uff0c\u8fdc\u8d85\u8fc7\u5c0f\u8bef\u5dee\u3002\u8fd9\u4e00\u7279\u6027\u6839\u636e\u5177\u4f53\u7684\u5e94\u7528\u573a\u666f\uff0c\u65e2\u53ef\u80fd\u662f\u4e00\u4e2a\u4f18\u52bf\u4e5f\u53ef\u80fd\u662f\u4e00\u4e2a\u52a3\u52bf\u3002 \u6982\u62ec\uff1a</p> <ul> <li>\u5bf9\u6781\u7aef\u9519\u8bef\u66f4\u52a0\u654f\u611f\u3002</li> <li>\u5e73\u65b9\u8bef\u5dee\u503c\u53ef\u80fd\u4e0d\u5982\u7edd\u5bf9\u8bef\u5dee\u76f4\u89c2\u3002</li> <li>\u4e0e\u5e73\u5747\u7edd\u5bf9\u8bef\u5dee (MAE) \u76f8\u6bd4\uff0c\u53d7\u5f02\u5e38\u503c\u7684\u5f71\u54cd\u66f4\u5927\u3002</li> </ul>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#rmse","title":"\u5747\u65b9\u6839\u8bef\u5dee\uff08RMSE\uff09","text":"<p>\u5747\u65b9\u6839\u8bef\u5dee (RMSE) \u662f\u5747\u65b9\u8bef\u5dee\u7684\u5e73\u65b9\u6839\u3002</p> <p></p> <p>RMSE\u540c\u6837\u5bf9\u79bb\u7fa4\u503c\u654f\u611f\uff0c\u548cMSE\u4e00\u6837\uff0c\u5bf9\u8f83\u5927\u7684\u8bef\u5dee\u7ed9\u4e88\u8f83\u91cd\u7684\u60e9\u7f5a\u3002\u4e0d\u8fc7\uff0cRMSE\u7684\u4e00\u4e2a\u663e\u8457\u4f18\u52bf\u5728\u4e8e\u5b83\u7684\u5355\u4f4d\u548c\u76ee\u6807\u53d8\u91cf\u4fdd\u6301\u4e00\u81f4\uff0c\u8fd9\u4f7f\u5f97RMSE\u66f4\u52a0\u6613\u4e8e\u7406\u89e3\u548c\u89e3\u91ca\u3002 \u6982\u62ec\uff1a</p> <ul> <li>\u5bf9\u6781\u7aef\u9519\u8bef\u66f4\u52a0\u654f\u611f\u3002</li> <li>\u4e0e\u76ee\u6807\u53d8\u91cf\u76f8\u540c\u7684\u5355\u4f4d\uff1a</li> <li>\u4e0e\u5e73\u5747\u7edd\u5bf9\u8bef\u5dee (MAE) \u76f8\u6bd4\uff0c\u53d7\u5f02\u5e38\u503c\u7684\u5f71\u54cd\u66f4\u5927\u3002</li> </ul> <pre><code>from sklearn.metrics import mean_squared_error  # \u6ce8\u610f\u4fee\u6b63\u5bfc\u5165\u51fd\u6570\u540d\u7684\u5927\u5c0f\u5199\n\n# \u5229\u7528\u6a21\u578b\u5bf9\u6570\u636e\u96c6X\u8fdb\u884c\u9884\u6d4b\uff0c\u5f97\u5230\u9884\u6d4b\u503cy_pred\ny_pred = model.predict(X) \n\n# \u8ba1\u7b97\u5b9e\u9645\u503cy\u548c\u9884\u6d4b\u503cy_pred\u4e4b\u95f4\u7684\u5747\u65b9\u8bef\u5dee\uff08MSE\uff09\nmse = mean_squared_error(y, y_pred)  # \u6ce8\u610f\u4fee\u6b63\u51fd\u6570\u540d\u7684\u5927\u5c0f\u5199\n\n# \u901a\u8fc7\u5bf9MSE\u53d6\u5e73\u65b9\u6839\uff0c\u8ba1\u7b97\u5747\u65b9\u6839\u8bef\u5dee\uff08RMSE\uff09\uff0c\u8fd9\u4e00\u6b65\u4f7f\u5f97\u8bef\u5dee\u5355\u4f4d\u4e0e\u76ee\u6807\u53d8\u91cf\u5355\u4f4d\u4e00\u81f4\nrmse = np.sqrt(mse) \n\n# \u8f93\u51fa\u5747\u65b9\u6839\u8bef\u5dee\uff08RMSE\uff09\uff0c\u4ee5\u8bc4\u4f30\u6a21\u578b\u9884\u6d4b\u7684\u51c6\u786e\u6027\nprint('Root Mean Squared Error:', rmse)\n</code></pre>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#mape","title":"\u5e73\u5747\u7edd\u5bf9\u767e\u5206\u6bd4\u8bef\u5dee\uff08MAPE\uff09","text":"<p>\u5e73\u5747\u7edd\u5bf9\u767e\u5206\u6bd4\u8bef\u5dee\uff08MAPE\uff09\u662f\u4e00\u4e2a\u8861\u91cf\u9884\u6d4b\u51c6\u786e\u6027\u7684\u6307\u6807\uff0c\u5b83\u901a\u8fc7\u8ba1\u7b97\u9884\u6d4b\u503c\u4e0e\u5b9e\u9645\u503c\u4e4b\u95f4\u5dee\u5f02\u7684\u767e\u5206\u6bd4\uff0c\u7136\u540e\u53d6\u8fd9\u4e9b\u767e\u5206\u6bd4\u5dee\u5f02\u7684\u5e73\u5747\u503c\u6765\u5b9e\u73b0\u3002MAPE\u7684\u8ba1\u7b97\u65b9\u5f0f\u53ef\u4ee5\u8fd9\u6837\u8868\u8fbe\uff1a</p> <p></p> <p>\u5728\u5bf9\u6bd4\u4e0d\u540c\u6a21\u578b\u6027\u80fd\u6216\u5224\u65ad\u8bef\u5dee\u7684\u91cd\u8981\u7a0b\u5ea6\u65f6\uff0cMAPE\u5c55\u73b0\u4e86\u5176\u72ec\u5230\u7684\u4ef7\u503c\u3002 \u4f46\u662f\uff0c\u5f53\u6d89\u53ca\u5230\u63a5\u8fd1\u96f6\u7684\u6570\u503c\u65f6\uff0cMAPE\u7684\u5e94\u7528\u5c31\u4f1a\u9047\u5230\u6311\u6218\uff0c\u56e0\u4e3a\u8fd9\u65f6\u7684\u767e\u5206\u6bd4\u8bef\u5dee\u53ef\u80fd\u4f1a\u6fc0\u589e\uff0c\u53d8\u5f97\u5f02\u5e38\u5de8\u5927\u3002</p> <ul> <li>\u76f8\u5bf9\u8bef\u5dee\u6307\u6807\uff1a\u53ef\u7528\u4e8e\u6bd4\u8f83\u4e0d\u540c\u5c3a\u5ea6\u7684\u6a21\u578b\u6027\u80fd\u3002</li> <li>\u6613\u4e8e\u89e3\u91ca\uff1a\u4ee5\u767e\u5206\u6bd4\u8868\u793a\u3002</li> <li>\u96f6\u503c\u672a\u5b9a\u4e49\uff0c\u8fd9\u53ef\u80fd\u53d1\u751f\u5728\u67d0\u4e9b\u5e94\u7528\u7a0b\u5e8f\u4e2d\u3002</li> <li>\u4e0d\u5bf9\u79f0\uff1a\u9ad8\u4f30\u5c0f\u5b9e\u9645\u503c\u7684\u8bef\u5dee\uff0c\u4f4e\u4f30\u5927\u5b9e\u9645\u503c\u7684\u8bef\u5dee\u3002</li> </ul> <p>Scikit learn \u6ca1\u6709 MAPE \u51fd\u6570\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\u81ea\u5df1\u8ba1\u7b97\uff1a</p> <pre><code># \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97\u5e73\u5747\u7edd\u5bf9\u767e\u5206\u6bd4\u8bef\u5dee\uff08MAPE\uff09\ndef mape(y_true, y_pred): \n    # \u8ba1\u7b97\u771f\u5b9e\u503c\u4e0e\u9884\u6d4b\u503c\u4e4b\u95f4\u7684\u7edd\u5bf9\u5dee\u5f02\uff0c\u7136\u540e\u9664\u4ee5\u771f\u5b9e\u503c\uff0c\u6700\u540e\u4e58\u4ee5100\u8f6c\u6362\u4e3a\u767e\u5206\u6bd4\n    return np.mean(np.abs((y_true - y_pred) / y_true)) * 100\n\n# \u4f7f\u7528\u5b9a\u4e49\u597d\u7684MAPE\u51fd\u6570\uff0c\u4f20\u5165\u771f\u5b9e\u503cy_true\u548c\u9884\u6d4b\u503cy_pred\uff0c\u8ba1\u7b97MAPE\nmape_value = mape(y_true, y_pred)  # \u4fee\u6b63\u53d8\u91cf\u540d\u4ee5\u907f\u514d\u4e0e\u51fd\u6570\u540d\u76f8\u540c\n\n# \u6253\u5370MAPE\u503c\uff0c\u8bc4\u4f30\u6a21\u578b\u9884\u6d4b\u7684\u5e73\u5747\u8bef\u5dee\u767e\u5206\u6bd4\nprint(\"MAPE:\", mape_value)  # \u4fee\u6b63\u8bed\u6cd5\u9519\u8bef\n</code></pre>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#r","title":"R \u5e73\u65b9\uff08\u51b3\u5b9a\u7cfb\u6570)","text":"<p>R\u5e73\u65b9\u8861\u91cf\u4e86\u6a21\u578b\u9884\u6d4b\u503c\u4e0e\u5b9e\u9645\u503c\u4e4b\u95f4\u7684\u4e00\u81f4\u6027\uff0c\u901a\u8fc7\u8ba1\u7b97\u6a21\u578b\u80fd\u89e3\u91ca\u7684\u76ee\u6807\u53d8\u91cf\u65b9\u5dee\u7684\u6bd4\u4f8b\u6765\u8bc4\u4f30\u3002\u5177\u4f53\u6765\u8bf4\uff0cR\u5e73\u65b9\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a</p> <p></p> <ul> <li>y_mean\u662f\u5b9e\u9645\u503c\u7684\u5e73\u5747\u503c\u3002</li> <li>y_pred\u662f\u9884\u6d4b\u503c\u3002</li> <li>y_test\u662f\u5b9e\u9645\u503c\u3002</li> </ul> <p>R\u5e73\u65b9\u7684\u53d6\u503c\u4ecb\u4e8e0\u52301\u4e4b\u95f4\uff0c\u5176\u4e2d\u503c\u8d8a\u63a5\u8fd11\u610f\u5473\u7740\u6a21\u578b\u7684\u9884\u6d4b\u80fd\u529b\u8d8a\u5f3a\u3002\u4f46\u662f\uff0cR\u5e73\u65b9\u4e5f\u5b58\u5728\u4e00\u5b9a\u7684\u9650\u5236\uff0c\u6bd4\u5982\u8bf4\uff0c\u5373\u4f7f\u52a0\u5165\u4e86\u4e0e\u76ee\u6807\u53d8\u91cf\u65e0\u5173\u7684\u7279\u5f81\uff0c\u5176\u503c\u4e5f\u6709\u53ef\u80fd\u4e0a\u5347\u3002 \u6982\u62ec\uff1a</p> <ul> <li>\u4ee3\u8868\u89e3\u91ca\u65b9\u5dee\u7684\u6bd4\u4f8b\uff0c\u4f7f\u5176\u6613\u4e8e\u7406\u89e3\u548c\u6c9f\u901a\u3002</li> <li>\u5bf9\u76ee\u6807\u53d8\u91cf\u7684\u89c4\u6a21\u4e0d\u592a\u654f\u611f\uff0c\u8fd9\u4f7f\u5f97\u5b83\u66f4\u9002\u5408\u6bd4\u8f83\u4e0d\u540c\u6a21\u578b\u7684\u6027\u80fd\u3002</li> <li>\u504f\u5411\u4e8e\u5177\u6709\u8bb8\u591a\u529f\u80fd\u7684\u6a21\u578b\uff0c\u8fd9\u53ef\u80fd\u5e76\u4e0d\u603b\u662f\u4ee4\u4eba\u6ee1\u610f\u7684\u3002</li> <li>\u4e0d\u9002\u5408\u8bc4\u4f30\u9884\u6d4b\u53d8\u91cf\u548c\u76ee\u6807\u53d8\u91cf\u4e4b\u95f4\u4e0d\u5b58\u5728\u7ebf\u6027\u5173\u7cfb\u7684\u6a21\u578b\u3002</li> <li>\u53ef\u80fd\u4f1a\u53d7\u5230\u6570\u636e\u4e2d\u5f02\u5e38\u503c\u7684\u5f71\u54cd\u3002</li> </ul> <pre><code>from sklearn.metrics import r2_score \n\n\n# \u4f7f\u7528r2_score\u51fd\u6570\u8ba1\u7b97\u771f\u5b9e\u503cy_true\u548c\u9884\u6d4b\u503cy_pred\u4e4b\u95f4\u7684R\u5e73\u65b9\u503c\nr_squared = r2_score(y_true, y_pred) \n\n# \u8f93\u51faR\u5e73\u65b9\u503c\uff0c\u4ee5\u8bc4\u4f30\u6a21\u578b\u89e3\u91ca\u76ee\u6807\u53d8\u91cf\u65b9\u5dee\u7684\u80fd\u529b\nprint(\"R-squared:\", r_squared)\n</code></pre>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#r-adjusted-r-squared","title":"\u8c03\u6574\u540e\u7684 R \u5e73\u65b9\uff08Adjusted R-Squared\uff09","text":"<p>Adjusted R-Squared \u662f\u5bf9R\u5e73\u65b9\uff08 R-Squared\uff09\u7684\u6539\u826f\uff0c\u5b83\u5728\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u8003\u8651\u5230\u4e86\u6a21\u578b\u4e2d\u5305\u542b\u7684\u7279\u5f81\u6570\u91cf\uff0c\u4ece\u800c\u5bf9\u6a21\u578b\u590d\u6742\u5ea6\u8fdb\u884c\u4e86\u8c03\u6574\u3002\u8c03\u6574R\u5e73\u65b9\u7684\u8ba1\u7b97\u516c\u5f0f\u662f\u8fd9\u6837\u7684\uff1a</p> <p></p> <ul> <li>N\u662f\u6570\u636e\u70b9\u7684\u6570\u91cf\u3002</li> <li>k\u662f\u7279\u5f81\u7684\u6570\u91cf\u3002</li> </ul> <p>\u8c03\u6574\u540e\u7684 R-Squared \u53ef\u4ee5\u901a\u8fc7\u60e9\u7f5a\u5177\u6709\u8fc7\u591a\u7279\u5f81\u7684\u6a21\u578b\u6765\u5e2e\u52a9\u9632\u6b62\u8fc7\u5ea6\u62df\u5408\u3002 \u6982\u62ec\uff1a</p> <ul> <li>\u4fee\u6539 R \u5e73\u65b9\uff0c\u8c03\u6574\u6a21\u578b\u4e2d\u9884\u6d4b\u53d8\u91cf\u7684\u6570\u91cf\uff0c\u4f7f\u5176\u6210\u4e3a\u6bd4\u8f83\u5177\u6709\u4e0d\u540c\u9884\u6d4b\u53d8\u91cf\u6570\u91cf\u7684\u6a21\u578b\u6027\u80fd\u7684\u66f4\u5408\u9002\u7684\u6307\u6807\u3002</li> <li>\u5bf9\u76ee\u6807\u53d8\u91cf\u7684\u89c4\u6a21\u4e0d\u592a\u654f\u611f\uff0c\u8fd9\u4f7f\u5f97\u5b83\u66f4\u9002\u5408\u6bd4\u8f83\u4e0d\u540c\u6a21\u578b\u7684\u6027\u80fd\u3002</li> <li>\u60e9\u7f5a\u989d\u5916\u53d8\u91cf\uff1a\u4e0e R \u5e73\u65b9\u76f8\u6bd4\uff0c\u964d\u4f4e\u8fc7\u5ea6\u62df\u5408\u98ce\u9669\u3002</li> <li>\u4e0d\u9002\u5408\u8bc4\u4f30\u9884\u6d4b\u53d8\u91cf\u548c\u76ee\u6807\u53d8\u91cf\u4e4b\u95f4\u4e0d\u5b58\u5728\u7ebf\u6027\u5173\u7cfb\u7684\u6a21\u578b\u3002</li> <li>\u53ef\u80fd\u4f1a\u53d7\u5230\u6570\u636e\u4e2d\u5f02\u5e38\u503c\u7684\u5f71\u54cd\u3002</li> </ul> <pre><code>from sklearn.metrics import r2_score \n\n# \u8ba1\u7b97\u6a21\u578b\u7684R\u5e73\u65b9\u503c\uff0c\u5373\u6a21\u578b\u7684\u89e3\u91ca\u80fd\u529b\nr_squared = r2_score(y, y_pred) \n\n# \u4e3a\u4e86\u66f4\u51c6\u786e\u5730\u8bc4\u4f30\u6a21\u578b\u6027\u80fd\uff0c\u8ba1\u7b97\u8c03\u6574\u540e\u7684R\u5e73\u65b9\u503c\nheroes_count = len(y)  # \u89c2\u6d4b\u503c\u6570\u91cf\uff0c\u7c7b\u6bd4\u4e3a\u6b66\u6797\u4e2d\u7684\u82f1\u96c4\u4eba\u6570\ntechniques_count = X.shape[1]   # \u7279\u5f81\u6570\u91cf\uff0c\u7c7b\u6bd4\u4e3a\u6a21\u578b\u4e2d\u7684\u6b66\u5b66\u6280\u5de7\u6570\n\n# \u8c03\u6574\u540e\u7684R\u5e73\u65b9\u503c\u7684\u8ba1\u7b97\u8003\u8651\u4e86\u6a21\u578b\u4e2d\u7684\u7279\u5f81\u6570\u91cf\nadj_r_squared = 1 - (((1 - r_squared) * (heroes_count - 1)) / (heroes_count - techniques_count - 1))\n\n# \u8f93\u51fa\u8c03\u6574\u540e\u7684R\u5e73\u65b9\u503c\nprint(\"\u8c03\u6574\u540e\u7684R\u5e73\u65b9\uff1a\", adj_r_squared)\n</code></pre>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#_10","title":"\u4ea4\u53c9\u9a8c\u8bc1\u4e0e\u6a21\u578b\u9009\u62e9","text":""},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#cross-validation","title":"\u4ec0\u4e48\u662f\u4ea4\u53c9\u9a8c\u8bc1\uff08Cross Validation\uff09\uff1f","text":"<p>\u4ea4\u53c9\u9a8c\u8bc1\u662f\u4e00\u79cd\u8bc4\u4f30\u673a\u5668\u5b66\u4e60\u6a21\u578b\u6cdb\u5316\u80fd\u529b\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7\u5c06\u6570\u636e\u5212\u5206\u4e3a\u591a\u4e2a\u201c\u8bad\u7ec3-\u9a8c\u8bc1\u201d\u5b50\u96c6\uff0c\u591a\u6b21\u8bad\u7ec3\u8bc4\u4f30\uff0c\u4ece\u800c\u66f4\u7a33\u5b9a\u5730\u4f30\u8ba1\u6a21\u578b\u6027\u80fd\u3002</p>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#_11","title":"\ud83c\udfaf \u4e3a\u4ec0\u4e48\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\uff1f","text":"<ul> <li>\u9632\u6b62 \u8fc7\u62df\u5408 \u6216 \u6b20\u62df\u5408</li> <li>\u5f97\u5230\u66f4\u7a33\u5b9a\u7684\u8bc4\u4f30\u7ed3\u679c</li> <li>\u652f\u6301\u8d85\u53c2\u6570\u4f18\u5316\u548c\u6a21\u578b\u9009\u62e9</li> </ul>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#_12","title":"\u5e38\u89c1\u7684\u4ea4\u53c9\u9a8c\u8bc1\u65b9\u6cd5","text":""},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#1k-k-fold","title":"\uff081\uff09K \u6298\u4ea4\u53c9\u9a8c\u8bc1\uff08K-Fold\uff09","text":"<p>\u5c06\u6570\u636e\u96c6\u5212\u5206\u4e3a K \u4e2a\u5b50\u96c6\uff08fold\uff09\uff0c\u6bcf\u6b21\u7528 1 \u4e2a\u5b50\u96c6\u4f5c\u4e3a\u9a8c\u8bc1\u96c6\uff0c\u5176\u4f59 K-1 \u4e2a\u4f5c\u4e3a\u8bad\u7ec3\u96c6\uff0c\u91cd\u590d K \u6b21\uff0c\u6700\u540e\u5e73\u5747\u6027\u80fd\u3002</p> <p>\u4f18\u70b9\uff1a\u9002\u7528\u4e8e\u5c0f\u6570\u636e\u96c6\uff0c\u8bc4\u4f30\u7a33\u5b9a \u7f3a\u70b9\uff1aK \u8d8a\u5927\uff0c\u8ba1\u7b97\u6210\u672c\u8d8a\u9ad8</p> <pre><code>from sklearn.model_selection import KFold, cross_val_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.datasets import load_iris\n\nX, y = load_iris(return_X_y=True)\nmodel = LogisticRegression()\n\nkf = KFold(n_splits=5, shuffle=True, random_state=42)\nscores = cross_val_score(model, X, y, cv=kf)\nprint(\"\u6bcf\u6298\u51c6\u786e\u7387:\", scores)\nprint(\"\u5e73\u5747\u51c6\u786e\u7387:\", scores.mean())\n</code></pre>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#2leave-one-out-loocv","title":"\uff082\uff09\u7559\u4e00\u6cd5\uff08Leave-One-Out, LOOCV\uff09","text":"<p>\u6bcf\u6b21\u53ea\u7528\u4e00\u4e2a\u6837\u672c\u505a\u9a8c\u8bc1\uff0c\u5269\u4e0b\u7684\u5168\u90e8\u505a\u8bad\u7ec3\uff0c\u91cd\u590d n \u6b21\uff08n \u4e3a\u6837\u672c\u6570\uff09\u3002</p> <p>\u4f18\u70b9\uff1a\u9002\u7528\u4e8e\u5c0f\u6570\u636e\u91cf \u7f3a\u70b9\uff1a\u8ba1\u7b97\u6210\u672c\u6781\u9ad8</p> <pre><code>from sklearn.model_selection import LeaveOneOut\nloo = LeaveOneOut()\nscores = cross_val_score(model, X, y, cv=loo)\n</code></pre>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#3-k-stratified-k-fold","title":"\uff083\uff09\u5206\u5c42 K \u6298\uff08Stratified K-Fold\uff09","text":"<p>\u7528\u4e8e\u5206\u7c7b\u95ee\u9898\uff0c\u5728\u6bcf\u4e2a fold \u4e2d\u4fdd\u6301\u5404\u7c7b\u6837\u672c\u7684\u6bd4\u4f8b\u4e0e\u6574\u4f53\u6570\u636e\u4e00\u81f4\u3002</p> <pre><code>from sklearn.model_selection import StratifiedKFold\n\nskf = StratifiedKFold(n_splits=5, shuffle=True, random_state=42)\nscores = cross_val_score(model, X, y, cv=skf)\n</code></pre>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#4-k-repeated-k-fold","title":"\uff084\uff09\u91cd\u590d K \u6298\uff08Repeated K-Fold\uff09","text":"<p>\u591a\u6b21\u91cd\u590d K \u6298\u9a8c\u8bc1\uff0c\u9002\u5408\u5c0f\u6570\u636e\u96c6\u51cf\u5c11\u5076\u7136\u6027\u3002</p> <pre><code>from sklearn.model_selection import RepeatedKFold\nrkf = RepeatedKFold(n_splits=5, n_repeats=10, random_state=42)\n</code></pre>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#model-selection","title":"\u6a21\u578b\u9009\u62e9\uff08Model Selection\uff09","text":"<p>\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u8981\u6bd4\u8f83\u591a\u4e2a\u6a21\u578b\u6216\u591a\u4e2a\u8d85\u53c2\u6570\u7ec4\u5408\uff0c\u9009\u51fa\u8868\u73b0\u6700\u4f73\u7684\u6a21\u578b\u3002</p>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#_13","title":"\ud83c\udfaf \u600e\u4e48\u505a\u6a21\u578b\u9009\u62e9\uff1f","text":"<ul> <li>\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u5bf9\u6bcf\u4e2a\u6a21\u578b\u8fdb\u884c\u8bc4\u5206</li> <li>\u6bd4\u8f83\u5e73\u5747\u5f97\u5206\uff0c\u9009\u51fa\u6700\u4f18\u6a21\u578b</li> </ul>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#_14","title":"\u8d85\u53c2\u6570\u8c03\u4f18\u4e0e\u7f51\u683c\u641c\u7d22","text":""},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#gridsearchcv","title":"GridSearchCV \u793a\u4f8b\uff1a","text":"<pre><code>from sklearn.model_selection import GridSearchCV\n\nparam_grid = {'C': [0.1, 1, 10]}\ngrid = GridSearchCV(LogisticRegression(), param_grid, cv=5)\ngrid.fit(X, y)\n\nprint(\"\u6700\u4f73\u53c2\u6570\uff1a\", grid.best_params_)\nprint(\"\u6700\u4f73\u5206\u6570\uff1a\", grid.best_score_)\n</code></pre>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#_15","title":"\u4ea4\u53c9\u9a8c\u8bc1\u4e0e\u8bad\u7ec3/\u6d4b\u8bd5\u5212\u5206\u7684\u533a\u522b","text":"\u9879\u76ee \u8bad\u7ec3/\u6d4b\u8bd5\u5212\u5206 \u4ea4\u53c9\u9a8c\u8bc1 \u5212\u5206\u65b9\u5f0f \u4e00\u6b21\u6027\u5212\u5206 \u591a\u6b21\u4ea4\u53c9\u5212\u5206 \u8bc4\u4f30\u7a33\u5b9a\u6027 \u5bb9\u6613\u53d7\u6570\u636e\u5212\u5206\u5f71\u54cd \u66f4\u7a33\u5b9a\u3001\u5168\u9762 \u662f\u5426\u7528\u4e8e\u5c0f\u6570\u636e\u96c6 \u4e0d\u63a8\u8350 \u63a8\u8350 \u8ba1\u7b97\u6210\u672c \u4f4e \u9ad8"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#_16","title":"\u4ea4\u53c9\u9a8c\u8bc1\u65b9\u6cd5\u6bd4\u8f83","text":"\u65b9\u6cd5 \u7279\u70b9 \u662f\u5426\u63a8\u8350 K \u6298\u4ea4\u53c9\u9a8c\u8bc1 \u901a\u7528\u3001\u7a33\u5b9a\u3001\u7ecf\u5178 \u2705 \u5f3a\u70c8\u63a8\u8350 Stratified K-Fold \u9002\u5408\u5206\u7c7b\u4efb\u52a1 \u2705 \u66f4\u4f18\u9009\u62e9 Leave-One-Out \u7a33\u5b9a\u4f46\u8ba1\u7b97\u91cf\u5927 \u26a0\ufe0f \u5c0f\u6570\u636e\u7528 Repeated K-Fold \u591a\u6b21\u9a8c\u8bc1\u66f4\u7a33\u5065 \u2705 ShuffleSplit \u968f\u673a\u5212\u5206\u591a\u6b21 \u2705 \u9002\u5408\u5927\u6570\u636e"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#_17","title":"\u8bad\u7ec3\u96c6 / \u9a8c\u8bc1\u96c6 / \u6d4b\u8bd5\u96c6\u5212\u5206","text":""},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#_18","title":"\u4e00\u3001\u4e09\u79cd\u6570\u636e\u96c6\u7684\u5b9a\u4e49","text":"\u6570\u636e\u96c6 \u4f5c\u7528\u63cf\u8ff0 \u8bad\u7ec3\u96c6\uff08Training Set\uff09 \u7528\u4e8e\u62df\u5408\u6a21\u578b\uff08\u6a21\u578b\u5b66\u4e60\u7684\u5bf9\u8c61\uff09 \u9a8c\u8bc1\u96c6\uff08Validation Set\uff09 \u7528\u4e8e\u8c03\u53c2\u548c\u6a21\u578b\u9009\u62e9\uff0c\u4e0d\u53c2\u4e0e\u8bad\u7ec3 \u6d4b\u8bd5\u96c6\uff08Test Set\uff09 \u7528\u4e8e\u6700\u7ec8\u8bc4\u4f30\u6a21\u578b\u6cdb\u5316\u6027\u80fd"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#_19","title":"\u4e8c\u3001\u4e3a\u4ec0\u4e48\u8981\u5212\u5206\u8fd9\u4e09\u79cd\u6570\u636e\u96c6\uff1f","text":"<ul> <li>\u9632\u6b62\u8fc7\u62df\u5408\uff1a\u6a21\u578b\u5728\u8bad\u7ec3\u96c6\u4e0a\u5b66\u5f97\u592a\u597d\uff0c\u6cdb\u5316\u5dee\u3002</li> <li>\u9a8c\u8bc1\u96c6\u7528\u4e8e\u9009\u62e9\u6700\u4f73\u8d85\u53c2\u6570\u6216\u6a21\u578b\u3002</li> <li>\u6d4b\u8bd5\u96c6\u662f\u201c\u6a21\u578b\u7684\u671f\u672b\u8003\u8bd5\u201d\uff0c\u4e0d\u80fd\u88ab\u7528\u4e8e\u8bad\u7ec3\u6216\u8c03\u53c2\u3002</li> </ul>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#_20","title":"\u4e09\u3001\u5e38\u89c1\u5212\u5206\u6bd4\u4f8b","text":"\u5212\u5206\u65b9\u5f0f \u6bd4\u4f8b\u793a\u4f8b \u8bad\u7ec3 / \u6d4b\u8bd5 80% / 20% \u8bad\u7ec3 / \u9a8c\u8bc1 / \u6d4b\u8bd5 60% / 20% / 20% \u5c0f\u6570\u636e\u96c6\u65f6\u7528\u4ea4\u53c9\u9a8c\u8bc1\u66ff\u4ee3\u9a8c\u8bc1\u96c6 - <p>\u2705 \u6ce8\u610f\uff1a\u9a8c\u8bc1\u96c6\u548c\u6d4b\u8bd5\u96c6\u8981\u4e92\u4e0d\u91cd\u53e0\uff0c\u5426\u5219\u8bc4\u4f30\u4f1a\u4e0d\u51c6\u786e\u3002</p>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#python-sklearn","title":"\u56db\u3001Python \u5b9e\u73b0\u793a\u4f8b\uff08\u4f7f\u7528 sklearn\uff09","text":"<pre><code>from sklearn.model_selection import train_test_split\nfrom sklearn.datasets import load_iris\n\nX, y = load_iris(return_X_y=True)\n\n# \u9996\u5148\u5212\u5206\u8bad\u7ec3\u96c6\u548c\u4e34\u65f6\u96c6\uff08\u9a8c\u8bc1+\u6d4b\u8bd5\uff09\nX_train, X_temp, y_train, y_temp = train_test_split(\n    X, y, test_size=0.4, random_state=42\n)\n\n# \u518d\u4ece\u4e34\u65f6\u96c6\u4e2d\u5212\u5206\u9a8c\u8bc1\u96c6\u548c\u6d4b\u8bd5\u96c6\nX_val, X_test, y_val, y_test = train_test_split(\n    X_temp, y_temp, test_size=0.5, random_state=42\n)\n\nprint(\"\u8bad\u7ec3\u96c6\u5927\u5c0f:\", X_train.shape)\nprint(\"\u9a8c\u8bc1\u96c6\u5927\u5c0f:\", X_val.shape)\nprint(\"\u6d4b\u8bd5\u96c6\u5927\u5c0f:\", X_test.shape)\n</code></pre>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#602020","title":"\u4e94\u3001\u56fe\u793a\u7406\u89e3\uff0860%/20%/20%\uff09","text":"<pre><code>\u5b8c\u6574\u6570\u636e\u96c6: \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n              \u2193\n\u8bad\u7ec3\u96c6\uff0860%\uff09 \u9a8c\u8bc1\u96c6\uff0820%\uff09 \u6d4b\u8bd5\u96c6\uff0820%\uff09\n</code></pre>"},{"location":"machinelearning/ml-tutorial/01-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/#markdown","title":"\u516d\u3001\u4e09\u79cd\u6570\u636e\u5212\u5206\u65b9\u5f0f\u6bd4\u8f83\u8868\u683c\uff08Markdown \u6e90\u7801\uff09","text":"\u6570\u636e\u96c6\u7c7b\u578b \u7528\u9014 \u662f\u5426\u53c2\u4e0e\u8bad\u7ec3 \u662f\u5426\u7528\u4e8e\u8c03\u53c2 \u662f\u5426\u7528\u4e8e\u6700\u7ec8\u8bc4\u4f30 \u8bad\u7ec3\u96c6 \u62df\u5408\u6a21\u578b\u53c2\u6570\uff08\u5982\u6743\u91cd\uff09 \u2705 \u662f \u274c \u5426 \u274c \u5426 \u9a8c\u8bc1\u96c6 \u9009\u62e9\u6a21\u578b\u6216\u8d85\u53c2\u6570 \u274c \u5426 \u2705 \u662f \u274c \u5426 \u6d4b\u8bd5\u96c6 \u8bc4\u4f30\u6cdb\u5316\u6027\u80fd\uff08\u6700\u7ec8\u6307\u6807\uff09 \u274c \u5426 \u274c \u5426 \u2705 \u662f"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/","title":"\u7b2c\u4e8c\u7ae0\uff1a\u6570\u636e\u9884\u5904\u7406\u4e0e\u7279\u5f81\u5de5\u7a0b","text":""},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#standardscaler-minmaxscaler","title":"\u6807\u51c6\u5316\u4e0e\u5f52\u4e00\u5316\uff08StandardScaler / MinMaxScaler\uff09","text":""},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#standardization","title":"\ud83d\udd39 \u4e00\u3001\u6807\u51c6\u5316\uff08Standardization\uff09","text":"<p>\u5c06\u7279\u5f81\u8f6c\u6362\u4e3a\u5747\u503c\u4e3a 0\uff0c\u6807\u51c6\u5dee\u4e3a 1\u7684\u5206\u5e03\u3002</p> \\[ x\u2019 = \\frac{x - \\mu}{\\sigma} \\] <ul> <li>\\(\\mu\\)\uff1a\u7279\u5f81\u7684\u5747\u503c</li> <li>\\(\\sigma\\)\uff1a\u7279\u5f81\u7684\u6807\u51c6\u5dee</li> </ul> <pre><code>from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\nX_scaled = scaler.fit_transform(X)  # X \u4e3a\u4e8c\u7ef4\u6570\u7ec4\n</code></pre> <p>\ud83d\udccc \u9002\u7528\u573a\u666f\uff1a</p> <ul> <li>\u5047\u8bbe\u6570\u636e\u670d\u4ece\u9ad8\u65af\u5206\u5e03\uff08\u5982\u7ebf\u6027\u56de\u5f52\u3001SVM\u3001PCA\uff09</li> <li>\u5bf9\u5f02\u5e38\u503c\u4e0d\u654f\u611f\u7684\u6a21\u578b</li> </ul>"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#normalization","title":"\ud83d\udd39 \u4e8c\u3001\u5f52\u4e00\u5316\uff08Normalization\uff09","text":"<p>\u5c06\u6570\u636e\u7f29\u653e\u5230\u4e00\u4e2a\u56fa\u5b9a\u8303\u56f4\uff08\u901a\u5e38\u662f [0, 1]\uff09\u5185\u3002</p> \\[ x\u2019 = \\frac{x - x_{\\min}}{x_{\\max} - x_{\\min}} \\] <ul> <li>\\(x_{\\min}\\)\uff1a\u7279\u5f81\u7684\u6700\u5c0f\u503c</li> <li>\\(x_{\\max}\\)\uff1a\u7279\u5f81\u7684\u6700\u5927\u503c</li> </ul> <pre><code>from sklearn.preprocessing import MinMaxScaler\n\nscaler = MinMaxScaler()\nX_scaled = scaler.fit_transform(X)\n</code></pre> <p>\ud83d\udccc \u9002\u7528\u573a\u666f\uff1a</p> <ul> <li>\u7279\u5f81\u6ca1\u6709\u660e\u663e\u7684\u5206\u5e03\u89c4\u5f8b</li> <li>\u9700\u8981\u5c06\u7279\u5f81\u9650\u5236\u5728\u7edf\u4e00\u533a\u95f4\uff08\u5982\u56fe\u50cf\u50cf\u7d20\u503c\uff09</li> <li>\u5bf9\u5f02\u5e38\u503c\u8f83\u654f\u611f</li> </ul>"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#vs","title":"\u4e09\u3001\u6807\u51c6\u5316 vs \u5f52\u4e00\u5316 \u5bf9\u6bd4\u8868","text":"\u9879\u76ee \u6807\u51c6\u5316\uff08StandardScaler\uff09 \u5f52\u4e00\u5316\uff08MinMaxScaler\uff09 \u6570\u5b66\u5b9a\u4e49 \u8f6c\u6362\u4e3a\u5747\u503c\u4e3a 0\u3001\u6807\u51c6\u5dee\u4e3a 1 \u7684\u5206\u5e03 \u7f29\u653e\u5230\u6307\u5b9a\u8303\u56f4\uff08\u5982 0~1\uff09 \u516c\u5f0f \\( x' = \\frac{x - \\mu}{\\sigma} \\) \\( x' = \\frac{x - x_{min}}{x_{max} - x_{min}} \\) \u662f\u5426\u53d7\u5f02\u5e38\u503c\u5f71\u54cd \u5426 \u662f \u5e94\u7528\u573a\u666f SVM\u3001PCA\u3001\u7ebf\u6027\u56de\u5f52 \u795e\u7ecf\u7f51\u7edc\u3001\u56fe\u50cf\u5904\u7406\u3001\u8ddd\u79bb\u7b97\u6cd5 \u662f\u5426\u8003\u8651\u5206\u5e03 \u662f \u5426"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#_2","title":"\u56db\u3001\u5b9e\u9645\u793a\u4f8b\uff08\u542b\u5f02\u5e38\u503c\uff09","text":"<pre><code>import numpy as np\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\n\n# \u793a\u4f8b\u6570\u636e\uff08\u5305\u542b\u5f02\u5e38\u503c\uff09\nX = np.array([[1], [2], [3], [100]])\n\n# \u6807\u51c6\u5316\nstd_scaler = StandardScaler()\nX_std = std_scaler.fit_transform(X)\n\n# \u5f52\u4e00\u5316\nminmax_scaler = MinMaxScaler()\nX_minmax = minmax_scaler.fit_transform(X)\n\nprint(\"\u539f\u59cb\u6570\u636e:\\n\", X.flatten())\nprint(\"\u6807\u51c6\u5316:\\n\", X_std.flatten())\nprint(\"\u5f52\u4e00\u5316:\\n\", X_minmax.flatten())\n</code></pre>"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#_3","title":"\u7f3a\u5931\u503c\u5904\u7406\u3001\u5f02\u5e38\u503c\u68c0\u6d4b","text":""},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#missing-values","title":"\ud83e\udde9 \u4e00\u3001\u7f3a\u5931\u503c\u5904\u7406\uff08Missing Values\uff09","text":""},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#1","title":"\u2705 1. \u4ec0\u4e48\u662f\u7f3a\u5931\u503c\uff1f","text":"<p>\u7f3a\u5931\u503c\u662f\u6307\u6570\u636e\u96c6\u4e2d\u67d0\u4e9b\u6837\u672c\u7684\u7279\u5f81\u503c\u4e3a\u7a7a\u6216\u4e0d\u53ef\u7528\uff0c\u5e38\u89c1\u8868\u793a\u4e3a\uff1a</p> <ul> <li>NaN</li> <li>\u7a7a\u5b57\u7b26\u4e32 \"\"</li> <li>\u7279\u5b9a\u503c 999, -1\uff08\u9700\u8981\u81ea\u884c\u8bc6\u522b\uff09</li> </ul>"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#2","title":"\ud83d\udd27 2. \u7f3a\u5931\u503c\u5904\u7406\u65b9\u6cd5","text":"\u65b9\u6cd5 \u63cf\u8ff0 \u4f7f\u7528\u5efa\u8bae \u5220\u9664\u6837\u672c\u6216\u7279\u5f81 \u5220\u9664\u542b\u7f3a\u5931\u503c\u7684\u884c\u6216\u5217 \u7f3a\u5931\u503c\u6781\u5c11\u65f6 \u5747\u503c/\u4e2d\u4f4d\u6570\u586b\u5145 \u7528\u8be5\u7279\u5f81\u7684\u5e73\u5747\u503c/\u4e2d\u4f4d\u6570\u66ff\u6362\u7f3a\u5931\u503c \u6570\u503c\u578b\u7279\u5f81\u3001\u7f3a\u5931\u6bd4\u4f8b\u8f83\u5c0f \u4f17\u6570\u586b\u5145 \u7528\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u503c\u66ff\u6362 \u7c7b\u522b\u578b\u7279\u5f81 \u63d2\u503c\u6cd5 \u7528\u524d\u540e\u6570\u636e\u7684\u8d8b\u52bf\u586b\u5145 \u65f6\u95f4\u5e8f\u5217\u3001\u8fde\u7eed\u6570\u636e \u6a21\u578b\u9884\u6d4b\u586b\u5145 \u7528\u5176\u4ed6\u7279\u5f81\u5efa\u6a21\u9884\u6d4b\u7f3a\u5931\u503c \u9ad8\u7ea7\u5904\u7406\u65b9\u5f0f\uff0c\u9002\u7528\u4e8e\u590d\u6742\u60c5\u51b5"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#3-python","title":"\ud83d\udee0\ufe0f 3. Python \u793a\u4f8b","text":"<pre><code>import numpy as np\nimport pandas as pd\nfrom sklearn.impute import SimpleImputer\n\n# \u6784\u9020\u5e26\u7f3a\u5931\u503c\u6570\u636e\ndata = pd.DataFrame({\n    'A': [1, 2, np.nan, 4],\n    'B': ['x', np.nan, 'y', 'z']\n})\n\n# \u6570\u503c\u578b\u5217\u7528\u5747\u503c\u586b\u5145\nimputer_num = SimpleImputer(strategy='mean')\ndata['A'] = imputer_num.fit_transform(data[['A']])\n\n# \u7c7b\u522b\u578b\u5217\u7528\u4f17\u6570\u586b\u5145\nimputer_cat = SimpleImputer(strategy='most_frequent')\ndata['B'] = imputer_cat.fit_transform(data[['B']])\n\nprint(data)\n</code></pre>"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#outlier-detection","title":"\ud83d\udea8 \u4e8c\u3001\u5f02\u5e38\u503c\u68c0\u6d4b\uff08Outlier Detection\uff09","text":""},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#1_1","title":"\u2705 1. \u4ec0\u4e48\u662f\u5f02\u5e38\u503c\uff1f","text":"<p>\u5f02\u5e38\u503c\u662f\u6307\u4e0e\u6837\u672c\u6574\u4f53\u5206\u5e03\u663e\u8457\u4e0d\u540c\u7684\u6570\u636e\u70b9\u3002\u5e38\u89c1\u8868\u73b0\u6709\uff1a</p> <ul> <li>\u7279\u5f81\u503c\u6781\u7aef\u5927/\u5c0f</li> <li>\u4e0d\u7b26\u5408\u5927\u591a\u6570\u6570\u636e\u8d8b\u52bf</li> </ul>"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#2_1","title":"\ud83d\udd0d 2. \u5e38\u7528\u68c0\u6d4b\u65b9\u6cd5","text":"\u65b9\u6cd5 \u63cf\u8ff0 \u4f18\u70b9 \u7f3a\u70b9 \u7bb1\u578b\u56fe\u6cd5\uff08IQR\uff09 \u57fa\u4e8e\u56db\u5206\u4f4d\u6570\u68c0\u6d4b\u79bb\u7fa4\u70b9 \u7b80\u5355\u76f4\u89c2 \u4ec5\u9002\u5408\u5355\u53d8\u91cf Z-Score \u6cd5 \u770b\u6807\u51c6\u5dee\u8ddd\u79bb \u6613\u4e8e\u5b9e\u73b0 \u9700\u670d\u4ece\u6b63\u6001\u5206\u5e03 \u57fa\u4e8e\u6a21\u578b\u7684\u68c0\u6d4b \u4f7f\u7528 Isolation Forest / One-Class SVM \u53ef\u5904\u7406\u9ad8\u7ef4\u6570\u636e \u8bad\u7ec3\u5f00\u9500\u8f83\u5927 \u805a\u7c7b\u6cd5 \u5982 DBSCAN \u68c0\u6d4b\u7a00\u758f\u70b9 \u76f4\u89c2\u7075\u6d3b \u9700\u8c03\u53c2\uff0c\u53ef\u80fd\u8bef\u5224"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#3-python_1","title":"\ud83d\udce6 3. Python \u793a\u4f8b","text":""},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#z-score","title":"\u2705 \u65b9\u6cd5\u4e00\uff1aZ-Score \u68c0\u6d4b\u5f02\u5e38\u503c","text":"<pre><code>from scipy.stats import zscore\nimport numpy as np\n\nX = np.array([10, 12, 13, 11, 9, 12, 300])  # \u6700\u540e\u4e00\u4e2a\u4e3a\u5f02\u5e38\u503c\nz = np.abs(zscore(X))\nprint(\"Z-score:\", z)\n\n# \u5224\u65ad\u9608\u503c\noutliers = X[z &gt; 3]\nprint(\"\u5f02\u5e38\u503c:\", outliers)\n</code></pre>"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#iqr","title":"\u2705 \u65b9\u6cd5\u4e8c\uff1a\u7bb1\u578b\u56fe\u6cd5\uff08IQR\uff09","text":"<pre><code>import pandas as pd\n\ndata = pd.Series([10, 12, 13, 11, 9, 12, 300])\nQ1 = data.quantile(0.25)\nQ3 = data.quantile(0.75)\nIQR = Q3 - Q1\n\n# \u5224\u5b9a\u5f02\u5e38\u503c\noutliers = data[(data &lt; Q1 - 1.5 * IQR) | (data &gt; Q3 + 1.5 * IQR)]\nprint(\"\u5f02\u5e38\u503c:\\n\", outliers)\n</code></pre>"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#sklearn-isolation-forest","title":"\u2705 \u65b9\u6cd5\u4e09\uff1a\u4f7f\u7528 Sklearn \u7684 Isolation Forest","text":"<pre><code>from sklearn.ensemble import IsolationForest\n\nX = np.array([[10], [12], [13], [11], [9], [12], [300]])\niso = IsolationForest(contamination=0.1)\noutliers = iso.fit_predict(X)\n\nprint(\"\u6807\u8bb0\uff08-1\u4e3a\u5f02\u5e38\uff09:\", outliers)\n</code></pre>"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#_4","title":"\ud83e\uddfe \u4e09\u3001\u603b\u7ed3\u8868\uff1a\u7f3a\u5931\u503c\u4e0e\u5f02\u5e38\u503c\u5904\u7406\u5bf9\u6bd4","text":"\u9879\u76ee \u7f3a\u5931\u503c\u5904\u7406 \u5f02\u5e38\u503c\u5904\u7406 \u8868\u73b0\u5f62\u5f0f NaN\u3001\u7a7a\u5b57\u7b26\u4e32\u3001\u7279\u6b8a\u503c\u7b49 \u6781\u5927/\u6781\u5c0f\u503c\u3001\u4e0d\u7b26\u5408\u5206\u5e03\u7684\u70b9 \u662f\u5426\u5e38\u89c1 \u975e\u5e38\u5e38\u89c1 \u76f8\u5bf9\u8f83\u5c11\uff0c\u4f46\u5f71\u54cd\u5927 \u662f\u5426\u9700\u8981\u5904\u7406 \u662f \u662f \u5e38\u7528\u65b9\u6cd5 \u5747\u503c/\u4e2d\u4f4d\u6570/\u4f17\u6570\u586b\u5145\u3001\u63d2\u503c\u3001\u6a21\u578b Z-score\u3001IQR\u3001Isolation Forest\u3001SVM"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#one-hotlabel-encoding","title":"\u7279\u5f81\u7f16\u7801\uff1aOne-Hot\u3001Label Encoding","text":""},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#1_2","title":"1\ufe0f\u20e3 \u4e3a\u4ec0\u4e48\u9700\u8981\u7279\u5f81\u7f16\u7801\uff1f","text":"<p>\u673a\u5668\u5b66\u4e60\u6a21\u578b\u65e0\u6cd5\u76f4\u63a5\u5904\u7406\u7c7b\u522b\u578b\u7279\u5f81\uff08\u5982\u989c\u8272\u3001\u57ce\u5e02\u540d\u3001\u6027\u522b\u7b49\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c06\u5176\u8f6c\u6362\u4e3a\u6570\u5b57\u5f62\u5f0f\uff08\u5373\u7f16\u7801\uff09\uff0c\u4ee5\u4fbf\u6a21\u578b\u80fd\u591f\u7406\u89e3\u548c\u5904\u7406\u3002</p>"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#2-one-hot-encoding","title":"2\ufe0f\u20e3 One-Hot Encoding\uff08\u72ec\u70ed\u7f16\u7801\uff09","text":"<p>\u5c06\u6bcf\u4e2a\u7c7b\u522b\u8868\u793a\u4e3a\u4e00\u4e2a\u957f\u5ea6\u4e3a\u7c7b\u522b\u6570\u7684\u5411\u91cf\uff0c\u53ea\u6709\u5f53\u524d\u7c7b\u522b\u4f4d\u7f6e\u4e3a 1\uff0c\u5176\u4ed6\u4e3a 0\u3002</p>"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#_5","title":"\ud83d\udcca \u793a\u4f8b\uff1a","text":"<p>\u5047\u8bbe\u7279\u5f81\u201c\u989c\u8272\u201d\u6709\u4e09\u4e2a\u53d6\u503c\uff1a['\u7ea2', '\u7eff', '\u84dd'] One-Hot \u7f16\u7801\u540e\uff1a</p> \u989c\u8272 \u7ea2 \u7eff \u84dd \u7ea2 1 0 0 \u7eff 0 1 0 \u84dd 0 0 1"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#_6","title":"\ud83e\udde0 \u7279\u70b9\uff1a","text":"<ul> <li>\u4e0d\u5b58\u5728\u7c7b\u522b\u95f4\u7684\u987a\u5e8f\u5173\u7cfb</li> <li>\u589e\u52a0\u7ef4\u5ea6\uff08\u9ad8\u7ef4\u7a00\u758f\uff09</li> <li>\u4e0d\u9002\u5408\u7c7b\u522b\u7279\u522b\u591a\u7684\u60c5\u51b5\uff08\u5982\u56fd\u5bb6\u3001\u7528\u6237 ID\uff09</li> </ul>"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#python","title":"\ud83d\udee0\ufe0f Python \u5b9e\u73b0\uff1a","text":"<pre><code>from sklearn.preprocessing import OneHotEncoder\nimport numpy as np\n\ndata = np.array([['\u7ea2'], ['\u7eff'], ['\u84dd']])\nencoder = OneHotEncoder(sparse=False)\nencoded = encoder.fit_transform(data)\nprint(encoded)\n</code></pre>"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#3-label-encoding","title":"3\ufe0f\u20e3 Label Encoding\uff08\u6807\u7b7e\u7f16\u7801\uff09","text":"<p>\u5c06\u6bcf\u4e2a\u7c7b\u522b\u6620\u5c04\u4e3a\u4e00\u4e2a\u6574\u6570\uff0c\u4f8b\u5982\uff1a</p> \u989c\u8272 \u7f16\u7801 \u7ea2 0 \u7eff 1 \u84dd 2"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#_7","title":"\ud83e\udde0 \u7279\u70b9\uff1a","text":"<ul> <li>\u7b80\u5355\u5feb\u901f\uff0c\u4e0d\u589e\u52a0\u7ef4\u5ea6</li> <li>\u9ed8\u8ba4\u5f15\u5165\u987a\u5e8f\u5173\u7cfb\uff08\u5bf9\u65e0\u5e8f\u7279\u5f81\u4e0d\u5408\u7406\uff09</li> <li>\u5e38\u7528\u4e8e\u6811\u6a21\u578b\uff08\u5982\u51b3\u7b56\u6811\u3001\u968f\u673a\u68ee\u6797\u3001XGBoost\uff09</li> </ul>"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#python_1","title":"\ud83d\udee0\ufe0f Python \u5b9e\u73b0\uff1a","text":"<pre><code>from sklearn.preprocessing import LabelEncoder\n\ndata = ['\u7ea2', '\u7eff', '\u84dd']\nencoder = LabelEncoder()\nencoded = encoder.fit_transform(data)\nprint(encoded)\n</code></pre>"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#one-hot-vs-label-encoding","title":"\ud83d\udcca One-Hot vs Label Encoding \u5bf9\u6bd4\u8868","text":"\u9879\u76ee One-Hot Encoding Label Encoding \u539f\u7406 \u6bcf\u4e2a\u7c7b\u522b\u4e00\u4e2a\u72ec\u7acb\u7684\u4e8c\u8fdb\u5236\u4f4d \u6bcf\u4e2a\u7c7b\u522b\u6620\u5c04\u4e3a\u4e00\u4e2a\u6574\u6570 \u7ef4\u5ea6\u53d8\u5316 \u589e\u52a0\u7ef4\u5ea6\uff08\u9ad8\u7ef4\u7a00\u758f\uff09 \u4e0d\u589e\u52a0\u7ef4\u5ea6 \u662f\u5426\u5f15\u5165\u987a\u5e8f \u274c \u5426 \u2705 \u662f\uff08\u53ef\u80fd\u5f15\u5165\u9519\u8bef\u987a\u5e8f\uff09 \u662f\u5426\u9002\u7528\u4e8e\u6811\u6a21\u578b \u2b55 \u53ef\u9009\uff08\u4f46\u4e0d\u5fc5\u8981\uff09 \u2705 \u975e\u5e38\u9002\u5408 \u662f\u5426\u9002\u7528\u4e8e\u7ebf\u6027\u6a21\u578b \u2705 \u63a8\u8350\uff08\u907f\u514d\u987a\u5e8f\u8bef\u5bfc\uff09 \u274c \u4e0d\u63a8\u8350\uff08\u4f1a\u8bef\u5bfc\u6a21\u578b\uff09 \u7c7b\u522b\u6570\u91cf\u5f88\u5927\u65f6 \u274c \u4e0d\u63a8\u8350\uff08\u7ef4\u5ea6\u707e\u96be\uff09 \u2705 \u63a8\u8350"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#pcaldaselectkbest","title":"\u7279\u5f81\u9009\u62e9\u4e0e\u964d\u7ef4\uff1aPCA\u3001LDA\u3001SelectKBest","text":""},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#1-vs","title":"1\ufe0f\u20e3 \u7279\u5f81\u9009\u62e9 vs \u964d\u7ef4\uff1a\u6982\u5ff5\u533a\u5206","text":"\u9879\u76ee \u7279\u5f81\u9009\u62e9\uff08Feature Selection\uff09 \u964d\u7ef4\uff08Dimensionality Reduction\uff09 \u672c\u8d28 \u4fdd\u7559\u539f\u59cb\u7279\u5f81\u7684\u4e00\u90e8\u5206 \u901a\u8fc7\u53d8\u6362\u751f\u6210\u65b0\u7684\u7279\u5f81\uff08\u538b\u7f29\u8868\u793a\uff09 \u662f\u5426\u4fdd\u7559\u539f\u59cb\u7279\u5f81 \u2705 \u662f \u274c \u5426 \u4e3e\u4f8b SelectKBest\u3001Lasso PCA\u3001LDA \u5e94\u7528\u76ee\u7684 \u5220\u9664\u5197\u4f59\u3001\u65e0\u5173\u7279\u5f81\uff0c\u63d0\u5347\u6a21\u578b\u6548\u679c \u51cf\u5c11\u7ef4\u5ea6\u3001\u53bb\u566a\u3001\u53ef\u89c6\u5316"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#2-pca","title":"2\ufe0f\u20e3 PCA\uff08\u4e3b\u6210\u5206\u5206\u6790\uff09","text":"<ul> <li>\u901a\u8fc7\u7ebf\u6027\u53d8\u6362\uff0c\u5c06\u9ad8\u7ef4\u7279\u5f81\u6620\u5c04\u5230\u4f4e\u7ef4\u7a7a\u95f4\uff0c\u4f7f\u65b9\u5dee\u6700\u5927\u5316</li> <li>\u4e0d\u8003\u8651\u6807\u7b7e\uff08\u65e0\u76d1\u7763\uff09</li> </ul>"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#_8","title":"\ud83d\udcca \u4f5c\u7528\uff1a","text":"<ul> <li>\u7528\u66f4\u5c11\u7684\u7ef4\u5ea6\u8868\u8fbe\u5c3d\u53ef\u80fd\u591a\u7684\u4fe1\u606f\uff08\u65b9\u5dee\uff09</li> <li>\u53bb\u9664\u5197\u4f59\u3001\u76f8\u5173\u6027\u5f3a\u7684\u7279\u5f81</li> </ul> <pre><code>from sklearn.decomposition import PCA\nfrom sklearn.datasets import load_iris\n\nX, y = load_iris(return_X_y=True)\npca = PCA(n_components=2)\nX_pca = pca.fit_transform(X)\n\nprint(\"\u539f\u59cb\u7ef4\u5ea6:\", X.shape)\nprint(\"\u964d\u7ef4\u540e:\", X_pca.shape)\n</code></pre>"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#3-lda","title":"3\ufe0f\u20e3 LDA\uff08\u7ebf\u6027\u5224\u522b\u5206\u6790\uff09","text":"<ul> <li>\u540c\u6837\u662f\u964d\u7ef4\u65b9\u6cd5\uff0c\u4f46\u8003\u8651\u7c7b\u522b\u6807\u7b7e\uff08\u76d1\u7763\u5f0f\uff09</li> <li>\u6700\u5927\u5316\u7c7b\u95f4\u8ddd\u79bb\uff0c\u6700\u5c0f\u5316\u7c7b\u5185\u8ddd\u79bb \u2192 \u63d0\u9ad8\u5206\u7c7b\u53ef\u5206\u6027</li> </ul>"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#_9","title":"\ud83d\udcca \u4f5c\u7528\uff1a","text":"<ul> <li>\u964d\u7ef4\u540c\u65f6\u63d0\u9ad8\u5206\u7c7b\u6027\u80fd</li> <li>\u7c7b\u4f3c PCA\uff0c\u4f46\u9002\u7528\u4e8e\u5206\u7c7b\u95ee\u9898</li> </ul> <pre><code>from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA\n\nlda = LDA(n_components=2)\nX_lda = lda.fit_transform(X, y)\n\nprint(\"\u964d\u7ef4\u540e:\", X_lda.shape)\n</code></pre>"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#4-selectkbest","title":"4\ufe0f\u20e3 SelectKBest\uff08\u5355\u53d8\u91cf\u7279\u5f81\u9009\u62e9\uff09","text":"<ul> <li>\u5bf9\u6bcf\u4e2a\u7279\u5f81\u4e0e\u76ee\u6807\u53d8\u91cf\u8ba1\u7b97\u4e00\u4e2a\u7edf\u8ba1\u91cf\uff08\u5982 F \u5206\u6570\u3001\u5361\u65b9\u3001\u4e92\u4fe1\u606f\uff09</li> <li>\u6309\u5206\u6570\u9009\u62e9\u524d K \u4e2a\u6700\u76f8\u5173\u7279\u5f81</li> </ul>"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#_10","title":"\ud83d\udcca \u5e38\u7528\u8bc4\u5206\u51fd\u6570\uff1a","text":"<ul> <li>f_classif\uff1a\u7528\u4e8e\u5206\u7c7b\u4efb\u52a1\uff08ANOVA F-test\uff09</li> <li>chi2\uff1a\u5361\u65b9\u68c0\u9a8c\uff08\u975e\u8d1f\u7279\u5f81\uff09</li> <li>mutual_info_classif\uff1a\u4e92\u4fe1\u606f\uff08\u975e\u7ebf\u6027\u76f8\u5173\uff09</li> </ul> <pre><code>from sklearn.feature_selection import SelectKBest, f_classif\n\nselector = SelectKBest(score_func=f_classif, k=2)\nX_selected = selector.fit_transform(X, y)\n\nprint(\"\u7279\u5f81\u9009\u62e9\u540e:\", X_selected.shape)\n</code></pre>"},{"location":"machinelearning/ml-tutorial/02-%20%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/#_11","title":"\ud83d\udcca \u65b9\u6cd5\u5bf9\u6bd4\u8868","text":"\u65b9\u6cd5 \u7c7b\u578b \u662f\u5426\u76d1\u7763 \u662f\u5426\u4fdd\u7559\u539f\u59cb\u7279\u5f81 \u7279\u70b9 \u9002\u7528\u573a\u666f PCA \u964d\u7ef4 \u274c \u65e0\u76d1\u7763 \u274c \u5426 \u6700\u5927\u5316\u65b9\u5dee\uff0c\u6d88\u9664\u591a\u91cd\u5171\u7ebf\u6027 \u65e0\u76d1\u7763\u5b66\u4e60\u3001\u538b\u7f29 LDA \u964d\u7ef4 \u2705 \u6709\u76d1\u7763 \u274c \u5426 \u6700\u5927\u5316\u7c7b\u95f4\u5dee\u5f02\uff0c\u63d0\u9ad8\u5206\u7c7b\u6548\u679c \u5206\u7c7b\u4efb\u52a1 SelectKBest \u7279\u5f81\u9009\u62e9 \u2705 \u6709\u76d1\u7763 \u2705 \u662f \u5355\u53d8\u91cf\u9009\u62e9\uff0c\u5feb\u901f\u6709\u6548 \u5feb\u901f\u7b5b\u7279\u5f81"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/","title":"\u7b2c\u4e09\u7ae0\uff1a\u5e38\u7528\u76d1\u7763\u5b66\u4e60\u6a21\u578b","text":""},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_2","title":"\u56de\u5f52\u6a21\u578b","text":""},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#linear-regression","title":"\u7ebf\u6027\u56de\u5f52\uff08Linear Regression\uff09","text":""},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#1","title":"\ud83c\udf1f 1. \u4ec0\u4e48\u662f\u7ebf\u6027\u56de\u5f52\uff1f","text":"<p>\u7ebf\u6027\u56de\u5f52\u662f\u6700\u7b80\u5355\u3001\u6700\u7ecf\u5178\u7684\u56de\u5f52\u5206\u6790\u65b9\u6cd5\uff0c\u7528\u4e8e\u5efa\u6a21\u56e0\u53d8\u91cf\uff08\u76ee\u6807\uff09\u4e0e\u4e00\u4e2a\u6216\u591a\u4e2a\u81ea\u53d8\u91cf\uff08\u7279\u5f81\uff09\u4e4b\u95f4\u7684\u7ebf\u6027\u5173\u7cfb\u3002 \u901a\u4fd7\u5730\u8bf4\uff1a</p> <p>\u7ed9\u5b9a\u4e00\u4e9b\u70b9\uff0c\u7528\u4e00\u6761\u76f4\u7ebf\u628a\u5b83\u4eec\u5c3d\u91cf\u201c\u62df\u5408\u201d\u597d\u3002</p> <p>\u6839\u636e\u8f93\u5165\u53d8\u91cf\u7684\u6570\u91cf\uff0c\u5206\u4e3a\uff1a</p> <ul> <li>\u7b80\u5355\u7ebf\u6027\u56de\u5f52\uff1a\u53ea\u6709\u4e00\u4e2a\u7279\u5f81\u53d8\u91cf\u3002</li> <li>\u591a\u5143\u7ebf\u6027\u56de\u5f52\uff1a\u6709\u591a\u4e2a\u7279\u5f81\u53d8\u91cf\u3002</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#2","title":"\u2728 2. \u6570\u5b66\u8868\u8fbe","text":""},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#1_1","title":"\uff081\uff09\u7b80\u5355\u7ebf\u6027\u56de\u5f52","text":"<p>\u6a21\u578b\u5f62\u5f0f\uff1a</p> \\[ y = w x + b \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\(y\\)\uff1a\u76ee\u6807\u53d8\u91cf</li> <li>\\(x\\)\uff1a\u8f93\u5165\u7279\u5f81</li> <li>\\(w\\)\uff1a\u659c\u7387\uff08\u56de\u5f52\u7cfb\u6570\uff09</li> <li>\\(b\\)\uff1a\u622a\u8ddd\uff08\u504f\u7f6e\uff09</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#2_1","title":"\uff082\uff09\u591a\u5143\u7ebf\u6027\u56de\u5f52","text":"<p>\u6a21\u578b\u5f62\u5f0f\uff1a</p> \\[ y = w_1 x_1 + w_2 x_2 + \\cdots + w_p x_p + b \\] <p>\u77e9\u9635\u5f62\u5f0f\uff1a</p> \\[ y = \\mathbf{X}\\mathbf{w} + b \\] <p>\u6216\uff08\u5c06\u504f\u7f6e\u5408\u5e76\u8fdb\u6743\u91cd\uff09\uff1a</p> \\[ y = \\mathbf{X}\\mathbf{w} \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\(\\mathbf{X}\\)\uff1a\\(n \\times p\\) \u77e9\u9635\uff08n \u4e2a\u6837\u672c\uff0cp \u4e2a\u7279\u5f81\uff09</li> <li>\\(\\mathbf{w}\\)\uff1a\u6743\u91cd\u5411\u91cf</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#3","title":"\ud83e\uddee 3. \u635f\u5931\u51fd\u6570\u4e0e\u6700\u5c0f\u4e8c\u4e58\u6cd5","text":"<p>\u6700\u5c0f\u4e8c\u4e58\u6cd5\uff08OLS, Ordinary Least Squares\uff09\u601d\u60f3\uff1a</p> <p>\u5bfb\u627e\u53c2\u6570 \\(\\mathbf{w}, b\\)\uff0c\u4f7f\u9884\u6d4b\u503c\u548c\u771f\u5b9e\u503c\u4e4b\u95f4\u7684\u5e73\u65b9\u8bef\u5dee\u6700\u5c0f\u3002</p> <p>\u76ee\u6807\u51fd\u6570\uff1a</p> \\[ J(\\mathbf{w}, b) = \\sum_{i=1}^n \\left( y_i - (\\mathbf{x}_i \\cdot \\mathbf{w} + b) \\right)^2 \\] <p>\u6700\u4f18\u89e3\uff08\u95ed\u5f0f\u89e3\uff09\uff1a</p> \\[ \\hat{\\mathbf{w}} = \\left(\\mathbf{X}^\\top \\mathbf{X}\\right)^{-1} \\mathbf{X}^\\top \\mathbf{y} \\] <p>\u26a0\ufe0f \u5f53\u7279\u5f81\u9ad8\u5ea6\u76f8\u5173\uff08\u5171\u7ebf\u6027\uff09\u6216\u7279\u5f81\u6570\u8d85\u8fc7\u6837\u672c\u6570\u65f6\uff0c\\(\\mathbf{X}^\\top \\mathbf{X}\\) \u4e0d\u53ef\u9006\uff0c\u9700\u8981\u6b63\u5219\u5316\uff08\u5982\u5cad\u56de\u5f52\uff09\u3002</p>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#4-python","title":"\ud83d\udee0\ufe0f 4. Python \u5b9e\u73b0\u793a\u4f8b","text":"<pre><code>import numpy as np\nfrom sklearn.linear_model import LinearRegression\n\n# \u6837\u672c\u6570\u636e\nX = np.array([[1], [2], [3], [4], [5]])\ny = np.array([2, 4, 6, 8, 10])\n\n# \u521b\u5efa\u6a21\u578b\nmodel = LinearRegression()\n\n# \u62df\u5408\nmodel.fit(X, y)\n\n# \u8f93\u51fa\u7cfb\u6570\u548c\u622a\u8ddd\nprint(\"\u659c\u7387\uff08w\uff09\uff1a\", model.coef_)\nprint(\"\u622a\u8ddd\uff08b\uff09\uff1a\", model.intercept_)\n\n# \u9884\u6d4b\ny_pred = model.predict(X)\nprint(\"\u9884\u6d4b\u7ed3\u679c\uff1a\", y_pred)\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c</p> <pre><code>    \u659c\u7387\uff08w\uff09\uff1a [2.]\n    \u622a\u8ddd\uff08b\uff09\uff1a 0.0\n    \u9884\u6d4b\u7ed3\u679c\uff1a [ 2.  4.  6.  8. 10.]\n</code></pre>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_3","title":"\u591a\u5143\u7ebf\u6027\u56de\u5f52","text":"<pre><code>import numpy as np\nfrom sklearn.linear_model import LinearRegression\n\n# \u6837\u672c\u6570\u636e\uff1a5 \u4e2a\u6837\u672c\uff0c2 \u4e2a\u7279\u5f81\n# X: (n_samples, n_features)\nX = np.array([\n    [1, 2],\n    [2, 0],\n    [3, 1],\n    [4, 3],\n    [5, 5]\n])\n\n# \u76ee\u6807\u53d8\u91cf\ny = np.array([5, 6, 9, 13, 17])\n\n# \u521b\u5efa\u6a21\u578b\nmodel = LinearRegression()\n\n# \u62df\u5408\nmodel.fit(X, y)\n\n# \u8f93\u51fa\u7cfb\u6570\u548c\u622a\u8ddd\nprint(\"\u56de\u5f52\u7cfb\u6570\uff08w\uff09\uff1a\", model.coef_)\nprint(\"\u622a\u8ddd\uff08b\uff09\uff1a\", model.intercept_)\n\n# \u9884\u6d4b\ny_pred = model.predict(X)\nprint(\"\u9884\u6d4b\u7ed3\u679c\uff1a\", y_pred)\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c</p> <pre><code>\u56de\u5f52\u7cfb\u6570\uff08w\uff09\uff1a [1.63636364 2.27272727]\n\u622a\u8ddd\uff08b\uff09\uff1a 1.090909090909092\n\u9884\u6d4b\u7ed3\u679c\uff1a [ 7.27272727  4.36363636  8.27272727 13.45454545 18.63636364]\n</code></pre> <p>\u8fd9\u8868\u793a\uff1a</p> <p>\\(y \\approx 1.636 \\cdot x_1 + 2.273 \\cdot x_2 + 1.091\\)</p>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#5","title":"\ud83d\udca1 5. \u5e94\u7528\u573a\u666f","text":"<ul> <li>\u9500\u552e\u9884\u6d4b\uff08\u6839\u636e\u5e7f\u544a\u8d39\u7528\u9884\u6d4b\u9500\u91cf\uff09</li> <li>\u623f\u4ef7\u9884\u6d4b\uff08\u6839\u636e\u9762\u79ef\u3001\u5730\u6bb5\u7b49\u7279\u5f81\uff09</li> <li>\u98ce\u9669\u5efa\u6a21\uff08\u6839\u636e\u5ba2\u6237\u5c5e\u6027\u9884\u6d4b\u8fdd\u7ea6\u6982\u7387\uff09</li> <li>\u65f6\u95f4\u5e8f\u5217\u5206\u6790\uff08\u7b80\u5355\u8d8b\u52bf\u5efa\u6a21\uff09</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#6","title":"\u2696\ufe0f 6. \u4f18\u7f3a\u70b9","text":""},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_4","title":"\u2705 \u4f18\u70b9","text":"<ul> <li> <p>\u7b80\u5355\u76f4\u89c2   \u7b97\u6cd5\u6613\u4e8e\u7406\u89e3\u548c\u89e3\u91ca\u3002</p> </li> <li> <p>\u8bad\u7ec3\u5feb\u901f   \u8ba1\u7b97\u590d\u6742\u5ea6\u4f4e\uff0c\u9002\u5408\u5c0f\u5230\u4e2d\u7b49\u89c4\u6a21\u6570\u636e\u3002</p> </li> <li> <p>\u89e3\u91ca\u6027\u5f3a   \u6a21\u578b\u7cfb\u6570\u53ef\u4ee5\u6e05\u695a\u53cd\u6620\u5404\u4e2a\u7279\u5f81\u5bf9\u76ee\u6807\u7684\u5f71\u54cd\u3002</p> </li> <li> <p>\u57fa\u7840\u6027\u5f3a   \u662f\u8bb8\u591a\u590d\u6742\u6a21\u578b\uff08\u5982\u5cad\u56de\u5f52\u3001Lasso\u3001\u5e7f\u4e49\u7ebf\u6027\u6a21\u578b\uff09\u7684\u57fa\u7840\u3002</p> </li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_5","title":"\u274c \u7f3a\u70b9","text":"<ul> <li> <p>\u7ebf\u6027\u5047\u8bbe   \u5047\u8bbe\u8f93\u5165\u4e0e\u8f93\u51fa\u4e4b\u95f4\u662f\u7ebf\u6027\u5173\u7cfb\uff0c\u5982\u679c\u5b9e\u9645\u662f\u975e\u7ebf\u6027\u5173\u7cfb\uff0c\u6a21\u578b\u62df\u5408\u6548\u679c\u5dee\u3002</p> </li> <li> <p>\u5bf9\u5f02\u5e38\u503c\u654f\u611f   \u6781\u7aef\u503c\u4f1a\u663e\u8457\u5f71\u54cd\u6a21\u578b\u7cfb\u6570\u3002</p> </li> <li> <p>\u591a\u91cd\u5171\u7ebf\u6027\u95ee\u9898   \u7279\u5f81\u4e4b\u95f4\u9ad8\u5ea6\u76f8\u5173\u65f6\uff0c\u7cfb\u6570\u4e0d\u7a33\u5b9a\uff0c\u6a21\u578b\u89e3\u91ca\u6027\u4e0b\u964d\u3002</p> </li> <li> <p>\u65e0\u6cd5\u6355\u6349\u590d\u6742\u6a21\u5f0f   \u65e0\u6cd5\u81ea\u52a8\u5efa\u6a21\u53d8\u91cf\u4e4b\u95f4\u7684\u4ea4\u4e92\u6216\u9ad8\u9636\u5173\u7cfb\u3002</p> </li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#decisiontreeregressor","title":"\u51b3\u7b56\u6811\u56de\u5f52\uff08DecisionTreeRegressor\uff09","text":""},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#1_2","title":"\ud83c\udf1f 1. \u6982\u5ff5\u4e0e\u539f\u7406","text":"<p>\u51b3\u7b56\u6811\u56de\u5f52\u662f\u4e00\u79cd\u57fa\u4e8e\u6811\u7ed3\u6784\u7684\u56de\u5f52\u6a21\u578b\uff0c\u901a\u8fc7\u4e0d\u65ad\u5730\u5212\u5206\u7279\u5f81\u7a7a\u95f4\uff0c\u5c06\u6570\u636e\u5206\u5272\u6210\u4e00\u7cfb\u5217\u66f4\u5c0f\u7684\u533a\u57df\uff0c\u7136\u540e\u5728\u6bcf\u4e2a\u533a\u57df\u5185\u9884\u6d4b\u4e00\u4e2a\u56fa\u5b9a\u7684\u503c\uff08\u901a\u5e38\u662f\u533a\u57df\u6837\u672c\u7684\u5747\u503c\uff09\u3002</p> <p>\u901a\u4fd7\u7406\u89e3\uff1a \u5c31\u50cf\u7528\u201c\u5982\u679c\u2026\u90a3\u4e48\u2026\u201d\u7684\u6761\u4ef6\u5206\u5272\u6570\u636e\u3002\u4f8b\u5982\uff1a</p> <p>\u5982\u679c\u9762\u79ef &lt; 100 \u5e73\u65b9\u7c73\uff0c\u5219\u623f\u4ef7 \u2248 80\u4e07\uff1b\u5426\u5219 \u2248 150\u4e07\u3002</p>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#2_2","title":"\ud83e\udde0 2. \u7b97\u6cd5\u6d41\u7a0b","text":"<ol> <li> <p>\u9009\u62e9\u6700\u4f73\u7279\u5f81\u4e0e\u5207\u5206\u70b9</p> <ul> <li>\u5728\u6240\u6709\u7279\u5f81\u548c\u5207\u5206\u70b9\u4e2d\u627e\u5230\u80fd\u6700\u5c0f\u5316MSE\uff08\u5747\u65b9\u8bef\u5dee\uff09\u7684\u5212\u5206\u3002</li> </ul> </li> <li> <p>\u5206\u88c2\u6570\u636e</p> <ul> <li>\u6839\u636e\u6700\u4f18\u5212\u5206\u5c06\u6570\u636e\u5206\u4e3a\u4e24\u4e2a\u5b50\u533a\u57df\u3002</li> </ul> </li> <li> <p>\u9012\u5f52\u5212\u5206</p> <ul> <li>\u5bf9\u6bcf\u4e2a\u5b50\u533a\u57df\u7ee7\u7eed\u5206\u88c2\u3002</li> </ul> </li> <li> <p>\u505c\u6b62\u6761\u4ef6</p> <ul> <li>\u8fbe\u5230\u6700\u5927\u6df1\u5ea6</li> <li>\u5b50\u96c6\u6837\u672c\u6570\u4f4e\u4e8e\u6700\u5c0f\u6837\u672c\u6570</li> <li>\u5206\u88c2\u4e0d\u518d\u964d\u4f4e\u8bef\u5dee</li> </ul> </li> <li> <p>\u53f6\u8282\u70b9\u9884\u6d4b</p> <ul> <li>\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u9884\u6d4b\u503c = \u6240\u542b\u6837\u672c\u76ee\u6807\u53d8\u91cf\u7684\u5e73\u5747\u503c\u3002</li> </ul> </li> </ol>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#3-python","title":"\u2728 3. Python \u793a\u4f8b","text":"<pre><code>import numpy as np\nfrom sklearn.tree import DecisionTreeRegressor\nimport matplotlib.pyplot as plt\n\n# \u6837\u672c\u6570\u636e\nX = np.arange(0, 6, 0.5).reshape(-1, 1)\ny = np.sin(X).ravel() + np.random.randn(len(X)) * 0.1\n\n# \u521b\u5efa\u51b3\u7b56\u6811\u56de\u5f52\u5668\ntree = DecisionTreeRegressor(max_depth=3)\n\n# \u62df\u5408\ntree.fit(X, y)\n\n# \u9884\u6d4b\nX_test = np.linspace(0, 6, 100).reshape(-1, 1)\ny_pred = tree.predict(X_test)\n\n# \u7ed8\u5236\u56de\u5f52\u66f2\u7ebf\nplt.scatter(X, y, color=\"black\", label=\"Training Data\")\nplt.plot(X_test, y_pred, color=\"red\", label=\"Prediction\")\nplt.legend()\nplt.title(\"Decision Tree Regression\")\nplt.xlabel(\"X\")\nplt.ylabel(\"y\")\nplt.show()\n</code></pre>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#4","title":"\ud83c\udfa8 4. \u7ed8\u5236\u51b3\u7b56\u6811\u7ed3\u6784","text":"<p>\u53ef\u4ee5\u901a\u8fc7 plot_tree() \u53ef\u89c6\u5316\u6811\u7ed3\u6784\uff1a <pre><code>from sklearn.tree import plot_tree\n\nplt.figure(figsize=(12, 6))\nplot_tree(\n    tree,\n    feature_names=[\"X\"],\n    filled=True,\n    rounded=True,\n    fontsize=10\n)\nplt.title(\"Decision Tree Structure\")\nplt.show()\n</code></pre></p>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_6","title":"\ud83d\udcca \u4f7f\u7528\u573a\u666f","text":"<p>\u2705 \u9002\u5408\u4ee5\u4e0b\u60c5\u5883\uff1a</p> <ul> <li> <p>\u975e\u7ebf\u6027\u5173\u7cfb\u5efa\u6a21</p> <ul> <li>\u7279\u5f81\u4e0e\u76ee\u6807\u53d8\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\u590d\u6742\u6216\u6709\u660e\u663e\u5206\u6bb5\u89c4\u5f8b\u3002</li> </ul> </li> <li> <p>\u5c0f\u578b\u6216\u4e2d\u578b\u6570\u636e\u96c6</p> <ul> <li>\u6837\u672c\u91cf\u4e0d\u5927\u65f6\uff0c\u6a21\u578b\u6613\u4e8e\u8bad\u7ec3\u548c\u89e3\u91ca\u3002</li> </ul> </li> <li> <p>\u9700\u8981\u53ef\u89c6\u5316\u548c\u89e3\u91ca</p> <ul> <li>\u51b3\u7b56\u6811\u53ef\u4ee5\u6e05\u6670\u663e\u793a\u5206\u88c2\u6761\u4ef6\u548c\u9884\u6d4b\u903b\u8f91\u3002</li> </ul> </li> <li> <p>\u65e0\u9700\u7279\u5f81\u7f29\u653e</p> <ul> <li>\u5bf9\u6570\u636e\u7684\u5c3a\u5ea6\u4e0d\u654f\u611f\uff0c\u9884\u5904\u7406\u7b80\u5355\u3002</li> </ul> </li> <li> <p>\u6df7\u5408\u7c7b\u578b\u7279\u5f81</p> <ul> <li>\u53ef\u4ee5\u540c\u65f6\u5904\u7406\u6570\u503c\u578b\u548c\u7c7b\u522b\u578b\u53d8\u91cf\u3002</li> </ul> </li> </ul> <p>\u793a\u4f8b\u5e94\u7528\uff1a</p> <ul> <li>\u623f\u4ef7\u9884\u6d4b\uff08\u9762\u79ef\u3001\u5730\u6bb5\u3001\u697c\u9f84\u7b49\uff09</li> <li>\u5ba2\u6237\u4ef7\u503c\u8bc4\u5206</li> <li>\u4ea7\u54c1\u9700\u6c42\u9884\u6d4b</li> <li>\u80fd\u8017\u5efa\u6a21</li> <li>\u7b80\u5355\u7684\u65f6\u95f4\u5e8f\u5217\u5206\u6bb5\u8d8b\u52bf\u5efa\u6a21</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_7","title":"\u2696\ufe0f \u4f18\u7f3a\u70b9","text":""},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_8","title":"\u2705 \u4f18\u70b9","text":"<ul> <li>\u76f4\u89c2\u6613\u89e3\u91ca<ul> <li>\u53ef\u4ee5\u751f\u6210\u53ef\u89c6\u5316\u7684\u6811\u7ed3\u6784\u3002</li> </ul> </li> <li>\u652f\u6301\u975e\u7ebf\u6027<ul> <li>\u4e0d\u540c\u5206\u652f\u53ef\u4ee5\u5b66\u4e60\u4e0d\u540c\u7684\u5c40\u90e8\u6a21\u5f0f\u3002</li> </ul> </li> <li>\u65e0\u9700\u7279\u5f81\u7f29\u653e<ul> <li>\u4e0d\u4f9d\u8d56\u6807\u51c6\u5316\u6216\u5f52\u4e00\u5316\u3002</li> </ul> </li> <li>\u5904\u7406\u6df7\u5408\u6570\u636e<ul> <li>\u540c\u65f6\u652f\u6301\u6570\u503c\u578b\u548c\u7c7b\u522b\u578b\u7279\u5f81\u3002</li> </ul> </li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_9","title":"\u274c \u7f3a\u70b9","text":"<ul> <li>\u5bb9\u6613\u8fc7\u62df\u5408<ul> <li>\u5982\u679c\u6811\u592a\u6df1\uff0c\u4f1a\u5728\u8bad\u7ec3\u6570\u636e\u4e0a\u8868\u73b0\u5f88\u597d\uff0c\u4f46\u6cdb\u5316\u5dee\u3002</li> </ul> </li> <li>\u4e0d\u7a33\u5b9a<ul> <li>\u5bf9\u5c0f\u7684\u8f93\u5165\u6ce2\u52a8\u654f\u611f\uff0c\u6811\u7ed3\u6784\u53ef\u80fd\u5b8c\u5168\u4e0d\u540c\u3002</li> </ul> </li> <li>\u9884\u6d4b\u4e0d\u8fde\u7eed<ul> <li>\u8f93\u51fa\u662f\u5206\u6bb5\u5e38\u6570\uff0c\u53ef\u80fd\u4e0d\u591f\u5e73\u6ed1\u3002</li> </ul> </li> <li>\u4e0d\u652f\u6301\u5916\u63a8<ul> <li>\u5728\u8bad\u7ec3\u6570\u636e\u8303\u56f4\u4e4b\u5916\u9884\u6d4b\u65f6\u4e0d\u53ef\u9760\u3002</li> </ul> </li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#svr","title":"\u652f\u6301\u5411\u91cf\u56de\u5f52\uff08SVR\uff09","text":""},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#1_3","title":"\ud83c\udf1f 1. \u6982\u5ff5\u4e0e\u539f\u7406","text":"<p>\u652f\u6301\u5411\u91cf\u56de\u5f52\uff08SVR\uff09\u662f\u652f\u6301\u5411\u91cf\u673a\uff08SVM\uff09\u5728\u56de\u5f52\u95ee\u9898\u4e0a\u7684\u6269\u5c55\u3002 \u5b83\u7684\u6838\u5fc3\u601d\u60f3\u662f\uff1a  </p> <p>\u5728\u8bef\u5dee\u4e0d\u8d85\u8fc7 \u03b5 \u7684\u60c5\u51b5\u4e0b\uff0c\u627e\u5230\u4e00\u4e2a\u6700\u5e73\u6ed1\u7684\u51fd\u6570\uff08\u5373\u5177\u6709\u6700\u5927\u95f4\u9694\u7684\u56de\u5f52\u8d85\u5e73\u9762\uff09\u3002</p> <p>\u4e0e\u666e\u901a\u56de\u5f52\u4e0d\u540c\uff0cSVR\u5728\u03b5\u8303\u56f4\u5185\u7684\u9884\u6d4b\u8bef\u5dee\u4e0d\u8ba1\u60e9\u7f5a\uff0c\u53ea\u60e9\u7f5a\u8d85\u51fa\u03b5\u7684\u8bef\u5dee\u3002</p> <p>\u901a\u4fd7\u7406\u89e3\uff1a</p> <ul> <li>\u60f3\u8c61\u4e00\u6761\u5e73\u6ed1\u7684\u5e26\u6709\u201c\u5bb9\u5fcd\u5e26(\u03b5-tube)\u201d\u7684\u76f4\u7ebf\u3002</li> <li>\u53ea\u5bf9\u8d85\u51fa\u5e26\u5b50\u7684\u70b9\u8fdb\u884c\u60e9\u7f5a\u3002</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#2_3","title":"\ud83e\udde0 2. \u7b97\u6cd5\u8981\u70b9","text":"<ul> <li>\u76ee\u6807\u51fd\u6570<ul> <li>\u5c3d\u91cf\u8ba9\u6a21\u578b\u5e73\u6ed1\uff08\u5373\u6743\u91cd\u5c0f\uff09</li> <li>\u540c\u65f6\u5c3d\u91cf\u8ba9\u591a\u6570\u70b9\u843d\u5728\u03b5-tube\u5185</li> </ul> </li> <li>\u6838\u51fd\u6570<ul> <li>\u901a\u8fc7\u6838\u51fd\u6570\u5904\u7406\u975e\u7ebf\u6027\u5173\u7cfb\uff08\u5982RBF\u6838\uff09</li> </ul> </li> <li>\u03b5-insensitive loss<ul> <li>\u5728\u03b5\u8303\u56f4\u5185\u8bef\u5dee\u89c6\u4e3a0</li> </ul> </li> <li>\u652f\u6301\u5411\u91cf<ul> <li>\u4f4d\u4e8e\u03b5-tube\u5916\u7684\u70b9\u79f0\u4e3a\u652f\u6301\u5411\u91cf</li> </ul> </li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#3-python_1","title":"\u2728 3. Python \u793a\u4f8b","text":"<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.svm import SVR\n\n# \u6837\u672c\u6570\u636e\nX = np.sort(5 * np.random.rand(40, 1), axis=0)\ny = np.sin(X).ravel()\n\n# \u52a0\u4e00\u4e9b\u566a\u58f0\ny[::5] += 0.5 * (0.5 - np.random.rand(8))\n\n# \u521b\u5efa SVR \u6a21\u578b\nsvr_rbf = SVR(kernel='rbf', C=100, gamma=0.1, epsilon=0.1)\n\n# \u62df\u5408\nsvr_rbf.fit(X, y)\n\n# \u9884\u6d4b\nX_test = np.linspace(0, 5, 100).reshape(-1, 1)\ny_pred = svr_rbf.predict(X_test)\n\n# \u7ed8\u56fe\nplt.scatter(X, y, color='darkorange', label='data')\nplt.plot(X_test, y_pred, color='navy', lw=2, label='SVR model')\nplt.xlabel('X')\nplt.ylabel('y')\nplt.title('Support Vector Regression')\nplt.legend()\nplt.show()\n</code></pre>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#4_1","title":"\ud83d\udcca 4. \u4f7f\u7528\u573a\u666f","text":"<p>\u2705 \u975e\u7ebf\u6027\u56de\u5f52\u95ee\u9898 \u2705 \u9700\u8981\u5bf9\u5f02\u5e38\u503c\u6709\u4e00\u5b9a\u9c81\u68d2\u6027 \u2705 \u6837\u672c\u91cf\u4e2d\u5c0f\u578b\uff08SVR\u5728\u5927\u89c4\u6a21\u6570\u636e\u4e0a\u8f83\u6162\uff09</p> <p>\u793a\u4f8b\u5e94\u7528\uff1a</p> <ul> <li>\u80a1\u7968\u4ef7\u683c\u8d70\u52bf\u9884\u6d4b</li> <li>\u975e\u7ebf\u6027\u65f6\u95f4\u5e8f\u5217\u5efa\u6a21</li> <li>\u5de5\u4e1a\u8fc7\u7a0b\u53d8\u91cf\u9884\u6d4b</li> <li>\u751f\u7269\u533b\u5b66\u4fe1\u53f7\u56de\u5f52</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#5_1","title":"\u2696\ufe0f 5. \u4f18\u7f3a\u70b9","text":""},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_10","title":"\u2705 \u4f18\u70b9","text":"<ul> <li>\u652f\u6301\u975e\u7ebf\u6027\u56de\u5f52\uff08\u901a\u8fc7\u6838\u51fd\u6570\uff09</li> <li>\u5bf9\u5f02\u5e38\u503c\u9c81\u68d2\uff08\u03b5\u4e0d\u654f\u611f\u533a\uff09</li> <li>\u80fd\u5728\u9ad8\u7ef4\u7279\u5f81\u7a7a\u95f4\u5efa\u6a21\u590d\u6742\u6a21\u5f0f</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_11","title":"\u274c \u7f3a\u70b9","text":"<ul> <li>\u5927\u6837\u672c\u6570\u636e\u96c6\u8bad\u7ec3\u901f\u5ea6\u6162</li> <li>\u8d85\u53c2\u6570\uff08C\u3001\u03b5\u3001gamma\uff09\u654f\u611f\uff0c\u9700\u8981\u8c03\u53c2</li> <li>\u96be\u4ee5\u76f4\u63a5\u89e3\u91ca\u6a21\u578b</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#knn","title":"KNN \u56de\u5f52","text":""},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#1_4","title":"\ud83c\udf1f 1. \u6982\u5ff5\u4e0e\u539f\u7406","text":"<p>KNN\u56de\u5f52\u662f\u4e00\u79cd\u57fa\u4e8e\u5b9e\u4f8b\u7684\u975e\u53c2\u6570\u56de\u5f52\u65b9\u6cd5\uff0c\u4e0d\u6784\u5efa\u663e\u5f0f\u7684\u6a21\u578b\u3002 \u5b83\u7684\u6838\u5fc3\u601d\u60f3\u662f\uff1a  </p> <p>\u5bf9\u4e00\u4e2a\u6837\u672c\u8fdb\u884c\u9884\u6d4b\u65f6\uff0c\u627e\u5230\u5176\u6700\u8fd1\u7684K\u4e2a\u90bb\u5c45\uff0c\u53d6\u8fd9\u4e9b\u90bb\u5c45\u7684\u76ee\u6807\u53d8\u91cf\u7684\u5e73\u5747\u503c\u4f5c\u4e3a\u9884\u6d4b\u7ed3\u679c\u3002</p> <p>\u4e0eKNN\u5206\u7c7b\u4e0d\u540c\uff1a</p> <ul> <li>\u5206\u7c7b\uff1a\u6295\u7968\u786e\u5b9a\u7c7b\u522b</li> <li>\u56de\u5f52\uff1a\u5e73\u5747\u90bb\u5c45\u7684\u503c</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#2_4","title":"\ud83e\udde0 2. \u7b97\u6cd5\u6d41\u7a0b","text":"<ol> <li> <p>\u9009\u62e9\u8ddd\u79bb\u5ea6\u91cf</p> <ul> <li>\u5e38\u7528\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\uff0c\u4e5f\u53ef\u4ee5\u7528\u66fc\u54c8\u987f\u8ddd\u79bb\u7b49</li> </ul> </li> <li> <p>\u9009\u53d6K\u503c</p> <ul> <li>\u4f8b\u5982K=3\u6216K=5</li> </ul> </li> <li> <p>\u5bf9\u65b0\u6837\u672c\u8fdb\u884c\u9884\u6d4b</p> <ul> <li>\u8ba1\u7b97\u5176\u4e0e\u6240\u6709\u8bad\u7ec3\u6837\u672c\u7684\u8ddd\u79bb</li> <li>\u9009\u62e9\u6700\u8fd1\u7684K\u4e2a\u6837\u672c</li> <li>\u53d6\u8fd9\u4e9b\u90bb\u5c45\u7684\u76ee\u6807\u53d8\u91cf\u7684\u5e73\u5747\u503c\uff08\u6216\u52a0\u6743\u5e73\u5747\uff09</li> </ul> </li> </ol>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#3-python_2","title":"\u2728 3. Python\u793a\u4f8b","text":"<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.neighbors import KNeighborsRegressor\n\n# \u6837\u672c\u6570\u636e\nX = np.sort(5 * np.random.rand(40, 1), axis=0)\ny = np.sin(X).ravel()\n\n# \u521b\u5efa KNN \u56de\u5f52\u5668\nknn = KNeighborsRegressor(n_neighbors=3)\n\n# \u62df\u5408\nknn.fit(X, y)\n\n# \u9884\u6d4b\nX_test = np.linspace(0, 5, 100).reshape(-1, 1)\ny_pred = knn.predict(X_test)\n\n# \u7ed8\u56fe\nplt.scatter(X, y, color='darkorange', label='data')\nplt.plot(X_test, y_pred, color='navy', label='KNN prediction')\nplt.xlabel('X')\nplt.ylabel('y')\nplt.title('KNN Regression (k=3)')\nplt.legend()\nplt.show()\n</code></pre>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#4_2","title":"\ud83d\udcca 4. \u4f7f\u7528\u573a\u666f","text":"<p>\u2705 \u7279\u5f81\u4e0e\u76ee\u6807\u53d8\u91cf\u4e4b\u95f4\u5173\u7cfb\u590d\u6742 \u2705 \u65e0\u9700\u6a21\u578b\u5047\u8bbe\uff08\u975e\u53c2\u6570\u65b9\u6cd5\uff09 \u2705 \u5c0f\u6570\u636e\u96c6\u573a\u666f\u6548\u679c\u597d</p> <p>\u793a\u4f8b\u5e94\u7528\uff1a</p> <ul> <li>\u623f\u4ef7\u9884\u6d4b\uff08\u57fa\u4e8e\u90bb\u8fd1\u623f\u5c4b\uff09</li> <li>\u4e2a\u6027\u5316\u63a8\u8350\uff08\u57fa\u4e8e\u76f8\u4f3c\u7528\u6237/\u5546\u54c1\uff09</li> <li>\u65f6\u95f4\u5e8f\u5217\u77ed\u671f\u9884\u6d4b</li> <li>\u533b\u7597\u6570\u636e\u5c40\u90e8\u6a21\u5f0f\u5efa\u6a21</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#5_2","title":"\u2696\ufe0f 5. \u4f18\u7f3a\u70b9","text":""},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_12","title":"\u2705 \u4f18\u70b9","text":"<ul> <li>\u7b80\u5355\u76f4\u89c2\uff0c\u6613\u7406\u89e3</li> <li>\u65e0\u9700\u8bad\u7ec3\u8fc7\u7a0b\uff08\u60f0\u6027\u5b66\u4e60\uff09</li> <li>\u80fd\u6355\u6349\u4efb\u610f\u590d\u6742\u5173\u7cfb</li> <li>\u5bf9\u5f02\u5e38\u503c\u76f8\u5bf9\u9c81\u68d2</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_13","title":"\u274c \u7f3a\u70b9","text":"<ul> <li>\u5927\u6570\u636e\u96c6\u9884\u6d4b\u901f\u5ea6\u6162\uff08\u9700\u8ba1\u7b97\u6240\u6709\u8ddd\u79bb\uff09</li> <li>\u5bf9\u7ef4\u5ea6\u707e\u96be\u654f\u611f\uff08\u9ad8\u7ef4\u6570\u636e\u6548\u679c\u5dee\uff09</li> <li>K\u503c\u9009\u62e9\u654f\u611f\uff08\u9700\u4ea4\u53c9\u9a8c\u8bc1\uff09</li> <li>\u4e0d\u652f\u6301\u5916\u63a8\uff08\u53ea\u80fd\u5728\u5df2\u6709\u6570\u636e\u5206\u5e03\u9644\u8fd1\u9884\u6d4b\uff09</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#xgboostlightgbm","title":"\u96c6\u6210\u65b9\u6cd5\uff1a\u968f\u673a\u68ee\u6797\u56de\u5f52\u3001XGBoost\u3001LightGBM","text":""},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_14","title":"\u968f\u673a\u68ee\u6797\u56de\u5f52","text":""},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_15","title":"\ud83c\udf1f \u6982\u5ff5","text":"<p>\u968f\u673a\u68ee\u6797\u56de\u5f52\u662f\u57fa\u4e8e\u96c6\u6210\u5b66\u4e60\u4e2dBagging\uff08Bootstrap Aggregating\uff09\u601d\u60f3\u7684\u4e00\u79cd\u56de\u5f52\u65b9\u6cd5\u3002 \u5b83\u901a\u8fc7\u6784\u5efa\u591a\u68f5\u51b3\u7b56\u6811\uff0c\u5e76\u5bf9\u5b83\u4eec\u7684\u9884\u6d4b\u7ed3\u679c\u8fdb\u884c\u5e73\u5747\uff0c\u6765\u63d0\u5347\u6a21\u578b\u7684\u7a33\u5b9a\u6027\u548c\u7cbe\u5ea6\u3002</p> <p>\u901a\u4fd7\u7406\u89e3\uff1a</p> <p>\u201c\u8ba9\u5f88\u591a\u4e0d\u540c\u7684\u6811\u4e00\u8d77\u6295\u7968\uff0c\u5927\u5bb6\u5e73\u5747\u610f\u89c1\u3002\u201d</p>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_16","title":"\ud83e\udde0 \u7b97\u6cd5\u539f\u7406","text":"<ol> <li> <p>Bootstrap\u91c7\u6837\uff1a</p> <ul> <li>\u4ece\u8bad\u7ec3\u96c6\u6709\u653e\u56de\u5730\u91c7\u6837\uff0c\u751f\u6210\u591a\u4efd\u6837\u672c\u5b50\u96c6\u3002</li> </ul> </li> <li> <p>\u8bad\u7ec3\u51b3\u7b56\u6811\uff1a</p> <ul> <li>\u6bcf\u68f5\u6811\u5728\u4e00\u4e2a\u5b50\u96c6\u4e0a\u8bad\u7ec3\u3002</li> <li>\u6bcf\u6b21\u5206\u88c2\u8282\u70b9\u65f6\uff0c\u968f\u673a\u9009\u62e9\u90e8\u5206\u7279\u5f81\u8fdb\u884c\u5212\u5206\u3002</li> </ul> </li> <li> <p>\u96c6\u6210\uff1a</p> <ul> <li>\u6240\u6709\u6811\u9884\u6d4b\u7ed3\u679c\u53d6\u5e73\u5747\u503c\uff0c\u4f5c\u4e3a\u6700\u7ec8\u56de\u5f52\u8f93\u51fa\u3002</li> </ul> </li> </ol>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#python","title":"\u2728 Python\u793a\u4f8b","text":"<pre><code>from sklearn.ensemble import RandomForestRegressor\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# \u521b\u5efa\u6570\u636e\nX = np.sort(5 * np.random.rand(80, 1), axis=0)\ny = np.sin(X).ravel()\ny[::5] += 0.5 * (0.5 - np.random.rand(16))  # \u6dfb\u52a0\u566a\u58f0\n\n# \u521b\u5efa\u6a21\u578b\nrf = RandomForestRegressor(\n    n_estimators=100,\n    max_depth=5,\n    random_state=42\n)\n\n# \u62df\u5408\nrf.fit(X, y)\n\n# \u9884\u6d4b\nX_test = np.linspace(0, 5, 100).reshape(-1, 1)\ny_pred = rf.predict(X_test)\n\n# \u7ed8\u56fe\nplt.scatter(X, y, color=\"darkorange\", label=\"data\")\nplt.plot(X_test, y_pred, color=\"navy\", label=\"Random Forest Prediction\")\nplt.xlabel(\"X\")\nplt.ylabel(\"y\")\nplt.title(\"Random Forest Regression\")\nplt.legend()\nplt.show()\n</code></pre>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_17","title":"\ud83d\udcca \u4f7f\u7528\u573a\u666f","text":"<p>\u2705 \u975e\u7ebf\u6027\u5173\u7cfb\u5efa\u6a21 \u2705 \u9700\u8981\u9ad8\u7cbe\u5ea6\u9884\u6d4b \u2705 \u5c0f\u5230\u4e2d\u578b\u6570\u636e\u96c6\uff08\u5927\u6570\u636e\u4e5f\u53ef\u6269\u5c55\uff09</p> <p>\u793a\u4f8b\uff1a</p> <ul> <li>\u623f\u4ef7\u9884\u6d4b</li> <li>\u5546\u54c1\u9700\u6c42\u9884\u6d4b</li> <li>\u98ce\u9669\u8bc4\u5206</li> <li>\u590d\u6742\u65f6\u95f4\u5e8f\u5217\u5efa\u6a21</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_18","title":"\u2696\ufe0f \u4f18\u7f3a\u70b9","text":""},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_19","title":"\u2705 \u4f18\u70b9","text":"<ul> <li>\u6613\u7528\uff0c\u5c11\u91cf\u8c03\u53c2\u5373\u53ef</li> <li>\u9c81\u68d2\u6027\u5f3a\uff0c\u4e0d\u6613\u8fc7\u62df\u5408</li> <li>\u53ef\u4ee5\u5904\u7406\u9ad8\u7ef4\u6570\u636e</li> <li>\u53ef\u4f30\u8ba1\u7279\u5f81\u91cd\u8981\u6027</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_20","title":"\u274c \u7f3a\u70b9","text":"<ul> <li>\u8bad\u7ec3\u548c\u9884\u6d4b\u901f\u5ea6\u8f83\u6162\uff08\u76f8\u6bd4\u5355\u68f5\u6811\uff09</li> <li>\u6a21\u578b\u8f83\u5927\uff0c\u5b58\u50a8\u5360\u7528\u9ad8</li> <li>\u4e0d\u6613\u89e3\u91ca\uff08\u6bcf\u68f5\u6811\u7684\u89c4\u5219\u590d\u6742\uff09</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_21","title":"\ud83d\udcdd \u5e38\u7528\u53c2\u6570","text":"<ul> <li>n_estimators: \u6811\u7684\u6570\u91cf\uff08\u9ed8\u8ba4100\uff09</li> <li>max_depth: \u6811\u7684\u6700\u5927\u6df1\u5ea6</li> <li>min_samples_split: \u5185\u90e8\u5206\u88c2\u6240\u9700\u7684\u6700\u5c0f\u6837\u672c\u6570</li> <li>max_features: \u5206\u88c2\u65f6\u8003\u8651\u7684\u7279\u5f81\u6570\u91cf</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#xgboost","title":"XGBoost","text":""},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_22","title":"\ud83c\udf1f \u6982\u5ff5","text":"<p>XGBoost\uff08Extreme Gradient Boosting\uff09\u662f\u4e00\u79cd\u9ad8\u6548\u7684\u68af\u5ea6\u63d0\u5347\u6811\uff08Gradient Boosting Tree\uff09\u5e93\u3002 \u5b83\u7684\u6838\u5fc3\u601d\u60f3\uff1a  </p> <p>\u901a\u8fc7\u8fed\u4ee3\u6784\u5efa\u591a\u68f5\u6811\uff0c\u6bcf\u68f5\u6811\u90fd\u62df\u5408\u4e0a\u4e00\u6b21\u9884\u6d4b\u7684\u6b8b\u5dee\uff0c\u4e0d\u65ad\u63d0\u9ad8\u6a21\u578b\u6027\u80fd\u3002</p> <p>\u76f8\u6bd4\u4f20\u7edfGBDT\uff0cXGBoost\u5728\uff1a</p> <p>\u2705 \u8bad\u7ec3\u901f\u5ea6 \u2705 \u7cbe\u5ea6 \u2705 \u8fc7\u62df\u5408\u63a7\u5236 \u2705 \u5e76\u884c\u5316 \u4e0a\u90fd\u6709\u663e\u8457\u63d0\u5347\u3002</p>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_23","title":"\ud83e\udde0 \u7b97\u6cd5\u8981\u70b9","text":"<ul> <li>Boosting<ul> <li>\u591a\u68f5\u6811\u6309\u987a\u5e8f\u5efa\u7acb\uff0c\u540e\u4e00\u68f5\u6811\u7ea0\u6b63\u524d\u4e00\u68f5\u6811\u7684\u8bef\u5dee\u3002</li> </ul> </li> <li>\u4e8c\u9636\u68af\u5ea6\u4f18\u5316<ul> <li>\u5229\u7528\u635f\u5931\u51fd\u6570\u4e00\u9636\u3001\u4e8c\u9636\u5bfc\u6570\u63d0\u9ad8\u4f18\u5316\u7cbe\u5ea6\u3002</li> </ul> </li> <li>Shrinkage<ul> <li>\u5b66\u4e60\u7387\u7f29\u5c0f\u6bcf\u68f5\u6811\u8d21\u732e\u3002</li> </ul> </li> <li>\u5217\u91c7\u6837<ul> <li>\u968f\u673a\u62bd\u53d6\u90e8\u5206\u7279\u5f81\u589e\u5f3a\u591a\u6837\u6027\u3002</li> </ul> </li> <li>\u6b63\u5219\u5316<ul> <li>\u6811\u590d\u6742\u5ea6\u60e9\u7f5a\u9632\u6b62\u8fc7\u62df\u5408\u3002</li> </ul> </li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#python_1","title":"\u2728 Python\u793a\u4f8b","text":"<pre><code>import xgboost as xgb\nfrom sklearn.metrics import mean_squared_error\nimport numpy as np\n\nX = np.sort(5 * np.random.rand(80, 1), axis=0)\ny = np.sin(X).ravel()\ny[::5] += 0.5 * (0.5 - np.random.rand(16))\n\nmodel = xgb.XGBRegressor(\n    n_estimators=100,\n    learning_rate=0.1,\n    max_depth=3,\n    subsample=0.8,\n    colsample_bytree=0.8,\n    random_state=42\n)\n\nmodel.fit(X, y)\n\nX_test = np.linspace(0, 5, 100).reshape(-1, 1)\ny_pred = model.predict(X_test)\n\nmse = mean_squared_error(np.sin(X_test).ravel(), y_pred)\nprint(\"MSE:\", mse)\n</code></pre>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_24","title":"\ud83d\udcca \u4f7f\u7528\u573a\u666f","text":"<p>\u2705 \u7279\u5f81\u591a\u3001\u975e\u7ebf\u6027\u5173\u7cfb\u590d\u6742 \u2705 \u5927\u89c4\u6a21\u6570\u636e\u96c6 \u2705 \u9ad8\u7cbe\u5ea6\u9884\u6d4b\u9700\u6c42</p> <p>\u793a\u4f8b\uff1a</p> <ul> <li>\u623f\u4ef7\u9884\u6d4b</li> <li>\u9500\u552e\u9884\u6d4b</li> <li>\u91d1\u878d\u98ce\u9669\u8bc4\u4f30</li> <li>\u7528\u6237\u8bc4\u5206\u9884\u6d4b</li> <li>\u65f6\u95f4\u5e8f\u5217\u5efa\u6a21</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_25","title":"\u2696\ufe0f \u4f18\u7f3a\u70b9","text":""},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_26","title":"\u2705 \u4f18\u70b9","text":"<ul> <li>\u9ad8\u7cbe\u5ea6</li> <li>\u6297\u8fc7\u62df\u5408</li> <li>\u652f\u6301\u5e76\u884c\u8ba1\u7b97</li> <li>\u7075\u6d3b\u6027\u5f3a</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_27","title":"\u274c \u7f3a\u70b9","text":"<ul> <li>\u53c2\u6570\u591a\uff0c\u9700\u8981\u8c03\u4f18</li> <li>\u5185\u5b58\u5360\u7528\u9ad8</li> <li>\u89e3\u91ca\u6027\u5dee</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_28","title":"\ud83d\udcdd \u5e38\u7528\u53c2\u6570","text":"<ul> <li>n_estimators: \u6811\u6570\u91cf</li> <li>learning_rate: \u5b66\u4e60\u7387</li> <li>max_depth: \u6811\u6700\u5927\u6df1\u5ea6</li> <li>subsample: \u6837\u672c\u91c7\u6837\u6bd4</li> <li>colsample_bytree: \u7279\u5f81\u91c7\u6837\u6bd4</li> <li>reg_alpha: L1\u6b63\u5219</li> <li>reg_lambda: L2\u6b63\u5219</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#lightgbm","title":"LightGBM","text":"<p>LightGBM\uff08Light Gradient Boosting Machine\uff09\u662f\u4e00\u4e2a\u7531\u5fae\u8f6f\u5f00\u53d1\u7684\u9ad8\u6027\u80fd\u68af\u5ea6\u63d0\u5347\u6846\u67b6\uff0c\u4e13\u4e3a\u5927\u89c4\u6a21\u6570\u636e\u548c\u9ad8\u7ef4\u7a00\u758f\u6570\u636e\u800c\u8bbe\u8ba1\u3002</p> <p>\u4e0e\u4f20\u7edfGBDT\u76f8\u6bd4\uff1a</p> <p>\u2705 \u66f4\u5feb\u7684\u8bad\u7ec3\u901f\u5ea6 \u2705 \u66f4\u5c11\u7684\u5185\u5b58\u5360\u7528 \u2705 \u66f4\u597d\u7684\u5206\u5e03\u5f0f\u652f\u6301 \u2705 \u9ad8\u51c6\u786e\u6027</p>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_29","title":"\ud83e\udde0 \u7b97\u6cd5\u4eae\u70b9","text":"<p>1\ufe0f\u20e3 Histogram-based\u5206\u7bb1</p> <ul> <li>\u5c06\u8fde\u7eed\u7279\u5f81\u79bb\u6563\u5316\u6210\u6709\u9650\u4e2abin\uff08\u76f4\u65b9\u56fe\uff09\uff0c\u51cf\u5c11\u5185\u5b58\u548c\u8ba1\u7b97\u91cf\u3002</li> </ul> <p>2\ufe0f\u20e3 Leaf-wise\u751f\u957f\u7b56\u7565</p> <ul> <li>\u6bcf\u6b21\u9009\u62e9\u589e\u76ca\u6700\u5927\u7684\u53f6\u5b50\u5206\u88c2\uff0c\u62df\u5408\u80fd\u529b\u5f3a\u3002</li> </ul> <p>3\ufe0f\u20e3 \u652f\u6301\u7c7b\u522b\u7279\u5f81</p> <ul> <li>\u53ef\u76f4\u63a5\u5904\u7406\u5206\u7c7b\u53d8\u91cf\u3002</li> </ul> <p>4\ufe0f\u20e3 \u9ad8\u6548\u5e76\u884c</p> <ul> <li>\u7279\u5f81\u5e76\u884c\u3001\u6570\u636e\u5e76\u884c\u3001Voting\u5e76\u884c\u3002</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#python_2","title":"\u2728 Python\u793a\u4f8b","text":"<pre><code>import lightgbm as lgb\nfrom sklearn.metrics import mean_squared_error\nimport numpy as np\n\nX = np.sort(5 * np.random.rand(80, 1), axis=0)\ny = np.sin(X).ravel()\ny[::5] += 0.5 * (0.5 - np.random.rand(16))\n\nmodel = lgb.LGBMRegressor(\n    n_estimators=100,\n    learning_rate=0.1,\n    max_depth=3,\n    num_leaves=31,\n    random_state=42\n)\n\nmodel.fit(X, y)\n\nX_test = np.linspace(0, 5, 100).reshape(-1, 1)\ny_pred = model.predict(X_test)\n\nmse = mean_squared_error(np.sin(X_test).ravel(), y_pred)\nprint(\"MSE:\", mse)\n</code></pre>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_30","title":"\ud83d\udcca \u4f7f\u7528\u573a\u666f","text":"<p>\u2705 \u5927\u89c4\u6a21\u6570\u636e\u96c6 \u2705 \u9ad8\u7ef4\u7a00\u758f\u7279\u5f81 \u2705 \u9ad8\u6027\u80fd\u751f\u4ea7\u73af\u5883 \u2705 \u590d\u6742\u975e\u7ebf\u6027\u5173\u7cfb\u5efa\u6a21</p> <p>\u793a\u4f8b\uff1a</p> <ul> <li>\u9500\u552e\u9884\u6d4b</li> <li>\u5e7f\u544a\u70b9\u51fb\u7387\u9884\u6d4b</li> <li>\u98ce\u9669\u8bc4\u4f30</li> <li>Kaggle\u7ade\u8d5b</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_31","title":"\u2696\ufe0f \u4f18\u7f3a\u70b9","text":""},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_32","title":"\u2705 \u4f18\u70b9","text":"<ul> <li>\u8bad\u7ec3\u901f\u5ea6\u5feb</li> <li>\u5185\u5b58\u5360\u7528\u4f4e</li> <li>\u81ea\u52a8\u652f\u6301\u7c7b\u522b\u7279\u5f81</li> <li>\u9ad8\u7cbe\u5ea6</li> <li>\u5206\u5e03\u5f0f\u8bad\u7ec3</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_33","title":"\u274c \u7f3a\u70b9","text":"<ul> <li>\u66f4\u5bb9\u6613\u8fc7\u62df\u5408</li> <li>\u53c2\u6570\u7406\u89e3\u6210\u672c\u8f83\u9ad8</li> <li>\u5c0f\u6570\u636e\u96c6\u4f18\u52bf\u4e0d\u660e\u663e</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_34","title":"\u5206\u7c7b\u6a21\u578b","text":""},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#logistic-regression","title":"\u903b\u8f91\u56de\u5f52\uff08Logistic Regression\uff09","text":""},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_35","title":"\ud83c\udf1f \u6982\u5ff5","text":"<p>\u903b\u8f91\u56de\u5f52\u662f\u4e00\u79cd\u5206\u7c7b\u6a21\u578b\uff08\u4e0d\u662f\u56de\u5f52\u6a21\u578b\uff09\u3002 \u901a\u8fc7\u5b66\u4e60\u7ebf\u6027\u51fd\u6570\uff0c\u5c06\u6837\u672c\u6620\u5c04\u5230\u6982\u7387\u533a\u95f4 [0,1]\uff0c\u518d\u6839\u636e\u9608\u503c\u8fdb\u884c\u5206\u7c7b\u3002</p> <p>\u901a\u4fd7\u7406\u89e3\uff1a  </p> <p>\u7528\u4e00\u6761\u7ebf\u628a\u4e0d\u540c\u7c7b\u522b\u5206\u5f00\uff0c\u540c\u65f6\u628a\u7ed3\u679c\u6620\u5c04\u6210\u6982\u7387\u3002</p> <p>\u903b\u8f91\u56de\u5f52\u5e38\u7528\u4e8e\uff1a \u2705 \u4e8c\u5206\u7c7b\uff08\u6700\u7ecf\u5178\uff09 \u2705 \u591a\u5206\u7c7b\uff08Softmax\u6269\u5c55\uff09</p>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_36","title":"\u270f\ufe0f \u6570\u5b66\u8868\u8fbe\u5f0f","text":"<p>\u5bf9\u4e8e\u8f93\u5165\u7279\u5f81 \\(x\\) \u548c\u53c2\u6570 \\(\\beta\\)\uff1a  </p> <ol> <li> <p>\u7ebf\u6027\u90e8\u5206\uff1a    [    z = \\beta_0 + \\beta_1 x_1 + \\ldots + \\beta_n x_n    ]</p> </li> <li> <p>Sigmoid\u51fd\u6570\uff1a    [    \\sigma(z) = \\frac{1}{1 + e^{-z}}    ]    \u8f93\u51fa\u6982\u7387 \\(\\in (0,1)\\)</p> </li> <li> <p>\u9884\u6d4b\u5206\u7c7b\uff1a    [    \\hat{y} =    \\begin{cases}    1 &amp; \\text{if } \\sigma(z) \\geq 0.5 \\    0 &amp; \\text{if } \\sigma(z) &lt; 0.5    \\end{cases}    ]</p> </li> </ol>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_37","title":"\ud83e\udde0 \u7b97\u6cd5\u6d41\u7a0b","text":"<ol> <li>\u521d\u59cb\u5316\u6743\u91cd</li> <li>\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\uff08MLE\uff09\u4f18\u5316\u4ea4\u53c9\u71b5\u635f\u5931\uff1a    [    Loss = - \\sum_{i=1}^{N} \\left[ y_i \\log(\\hat{y}_i) + (1-y_i)\\log(1-\\hat{y}_i) \\right]    ]</li> <li>\u8fed\u4ee3\u66f4\u65b0\u6743\u91cd\uff08\u5982\u68af\u5ea6\u4e0b\u964d\uff09</li> </ol>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#python_3","title":"\u2728 Python\u793a\u4f8b","text":"<pre><code>from sklearn.linear_model import LogisticRegression\nfrom sklearn.datasets import make_classification\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report\n\n# \u751f\u6210\u6837\u672c\nX, y = make_classification(\n    n_samples=200,\n    n_features=4,\n    n_informative=2,\n    n_redundant=0,\n    random_state=42\n)\n\n# \u5212\u5206\u6570\u636e\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.2, random_state=42\n)\n\n# \u521b\u5efa\u6a21\u578b\nmodel = LogisticRegression()\n\n# \u62df\u5408\nmodel.fit(X_train, y_train)\n\n# \u9884\u6d4b\ny_pred = model.predict(X_test)\n\n# \u8f93\u51fa\u7ed3\u679c\nprint(classification_report(y_test, y_pred))\n</code></pre>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_38","title":"\ud83d\udcca \u4f7f\u7528\u573a\u666f","text":"<p>\u2705 \u4e8c\u5206\u7c7b\u95ee\u9898 \u2705 \u7279\u5f81\u4e0e\u76ee\u6807\u53d8\u91cf\u8fd1\u4f3c\u7ebf\u6027\u5173\u7cfb \u2705 \u6982\u7387\u8f93\u51fa\u9700\u6c42</p> <p>\u793a\u4f8b\u5e94\u7528\uff1a</p> <ul> <li>\u4fe1\u7528\u98ce\u9669\u5224\u65ad</li> <li>\u5e7f\u544a\u70b9\u51fb\u9884\u6d4b</li> <li>\u75be\u75c5\u9884\u6d4b</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_39","title":"\u2696\ufe0f \u4f18\u7f3a\u70b9","text":""},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_40","title":"\u2705 \u4f18\u70b9","text":"<ul> <li>\u7406\u8bba\u6210\u719f\u3001\u53ef\u89e3\u91ca\u6027\u5f3a</li> <li>\u6536\u655b\u901f\u5ea6\u5feb</li> <li>\u6982\u7387\u8f93\u51fa\u76f4\u89c2</li> <li>\u5c0f\u6570\u636e\u96c6\u8868\u73b0\u826f\u597d</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_41","title":"\u274c \u7f3a\u70b9","text":"<ul> <li>\u53ea\u80fd\u5efa\u6a21\u7ebf\u6027\u8fb9\u754c</li> <li>\u5bf9\u5f02\u5e38\u503c\u654f\u611f</li> <li>\u9700\u8981\u7279\u5f81\u7f29\u653e\u548c\u9884\u5904\u7406</li> </ul>"},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#decisiontreeclassifier","title":"\u51b3\u7b56\u6811\u5206\u7c7b\uff08DecisionTreeClassifier\uff09","text":""},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#knn_1","title":"KNN \u5206\u7c7b","text":""},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#svm","title":"\u652f\u6301\u5411\u91cf\u673a\uff08SVM\uff09","text":""},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#naive-bayes","title":"\u6734\u7d20\u8d1d\u53f6\u65af\uff08Naive Bayes\uff09","text":""},{"location":"machinelearning/ml-tutorial/03-%E5%B8%B8%E7%94%A8%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#catboost","title":"\u96c6\u6210\u65b9\u6cd5\uff1a\u968f\u673a\u68ee\u6797\u3001\u68af\u5ea6\u63d0\u5347\u6811\u3001CatBoost","text":""},{"location":"machinelearning/ml-tutorial/04-%E9%9D%9E%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/","title":"\u7b2c\u56db\u7ae0\uff1a\u975e\u76d1\u7763\u5b66\u4e60\u6a21\u578b","text":""},{"location":"machinelearning/ml-tutorial/04-%E9%9D%9E%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#kmeansdbscan","title":"\u805a\u7c7b\uff1aKMeans\u3001DBSCAN\u3001\u5c42\u6b21\u805a\u7c7b","text":""},{"location":"machinelearning/ml-tutorial/04-%E9%9D%9E%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#pcat-snelda","title":"\u964d\u7ef4\uff1aPCA\u3001t-SNE\u3001LDA","text":""},{"location":"machinelearning/ml-tutorial/04-%E9%9D%9E%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#apriorifp-growth","title":"\u5173\u8054\u89c4\u5219\u5b66\u4e60\uff1aApriori\u3001FP-Growth","text":""},{"location":"machinelearning/ml-tutorial/04-%E9%9D%9E%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/#_2","title":"\u5bc6\u5ea6\u4f30\u8ba1\u4e0e\u5f02\u5e38\u68c0\u6d4b","text":""},{"location":"machinelearning/ml-tutorial/05-%E6%A8%A1%E5%9E%8B%E4%BC%98%E5%8C%96%E4%B8%8E%E6%AD%A3%E5%88%99%E5%8C%96/","title":"\u7b2c\u4e94\u7ae0\uff1a\u6a21\u578b\u4f18\u5316\u4e0e\u6b63\u5219\u5316","text":""},{"location":"machinelearning/ml-tutorial/05-%E6%A8%A1%E5%9E%8B%E4%BC%98%E5%8C%96%E4%B8%8E%E6%AD%A3%E5%88%99%E5%8C%96/#gridsearchcvrandomizedsearchcvbayesian-optimization","title":"\u6a21\u578b\u8c03\u53c2\u65b9\u6cd5\uff1aGridSearchCV\u3001RandomizedSearchCV\u3001Bayesian Optimization","text":""},{"location":"machinelearning/ml-tutorial/05-%E6%A8%A1%E5%9E%8B%E4%BC%98%E5%8C%96%E4%B8%8E%E6%AD%A3%E5%88%99%E5%8C%96/#l1l2elasticnet","title":"\u6b63\u5219\u5316\uff1aL1\u3001L2\u3001ElasticNet","text":""},{"location":"machinelearning/ml-tutorial/05-%E6%A8%A1%E5%9E%8B%E4%BC%98%E5%8C%96%E4%B8%8E%E6%AD%A3%E5%88%99%E5%8C%96/#earlystopping","title":"\u505c\u6b62\u51c6\u5219\uff1aEarlyStopping","text":""},{"location":"machinelearning/ml-tutorial/05-%E6%A8%A1%E5%9E%8B%E4%BC%98%E5%8C%96%E4%B8%8E%E6%AD%A3%E5%88%99%E5%8C%96/#vs","title":"\u6b20\u62df\u5408 vs \u8fc7\u62df\u5408","text":""},{"location":"machinelearning/ml-tutorial/06-%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%8F%90%E5%8D%87%E6%96%B9%E6%B3%95/","title":"\u7b2c\u516d\u7ae0\uff1a\u96c6\u6210\u5b66\u4e60\u4e0e\u63d0\u5347\u65b9\u6cd5","text":""},{"location":"machinelearning/ml-tutorial/06-%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%8F%90%E5%8D%87%E6%96%B9%E6%B3%95/#bagging-boosting","title":"Bagging \u4e0e Boosting","text":""},{"location":"machinelearning/ml-tutorial/06-%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%8F%90%E5%8D%87%E6%96%B9%E6%B3%95/#random-forest","title":"\u968f\u673a\u68ee\u6797\uff08Random Forest\uff09","text":""},{"location":"machinelearning/ml-tutorial/06-%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%8F%90%E5%8D%87%E6%96%B9%E6%B3%95/#gbdt-xgboost-lightgbm-catboost","title":"\u68af\u5ea6\u63d0\u5347\uff08GBDT / XGBoost / LightGBM / CatBoost\uff09","text":""},{"location":"machinelearning/ml-tutorial/06-%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%8F%90%E5%8D%87%E6%96%B9%E6%B3%95/#stacking","title":"\u5806\u53e0\uff08Stacking\uff09\u6a21\u578b","text":""},{"location":"machinelearning/ml-tutorial/07-%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B0%E4%B8%8E%E5%8F%AF%E8%A7%A3%E9%87%8A%E6%80%A7/","title":"\u7b2c\u4e03\u7ae0\uff1a\u6a21\u578b\u8bc4\u4f30\u4e0e\u53ef\u89e3\u91ca\u6027","text":""},{"location":"machinelearning/ml-tutorial/07-%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B0%E4%B8%8E%E5%8F%AF%E8%A7%A3%E9%87%8A%E6%80%A7/#roc-auc","title":"\u6df7\u6dc6\u77e9\u9635\u3001ROC \u66f2\u7ebf\u3001AUC","text":""},{"location":"machinelearning/ml-tutorial/07-%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B0%E4%B8%8E%E5%8F%AF%E8%A7%A3%E9%87%8A%E6%80%A7/#_2","title":"\u4ea4\u53c9\u9a8c\u8bc1\u3001\u5b66\u4e60\u66f2\u7ebf\u3001\u9a8c\u8bc1\u66f2\u7ebf","text":""},{"location":"machinelearning/ml-tutorial/07-%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B0%E4%B8%8E%E5%8F%AF%E8%A7%A3%E9%87%8A%E6%80%A7/#shaplime","title":"\u6a21\u578b\u53ef\u89e3\u91ca\u6027\uff1aSHAP\u3001LIME","text":""},{"location":"machinelearning/ml-tutorial/08-%E6%A8%A1%E5%9E%8B%E4%BF%9D%E5%AD%98%E5%92%8C%E9%83%A8%E7%BD%B2/","title":"\u7b2c\u516b\u7ae0\uff1a\u6a21\u578b\u4fdd\u5b58\u4e0e\u90e8\u7f72","text":""},{"location":"machinelearning/ml-tutorial/08-%E6%A8%A1%E5%9E%8B%E4%BF%9D%E5%AD%98%E5%92%8C%E9%83%A8%E7%BD%B2/#joblib","title":"joblib","text":""},{"location":"machinelearning/ml-tutorial/08-%E6%A8%A1%E5%9E%8B%E4%BF%9D%E5%AD%98%E5%92%8C%E9%83%A8%E7%BD%B2/#pickle","title":"pickle","text":""},{"location":"machinelearning/ml-tutorial/08-%E6%A8%A1%E5%9E%8B%E4%BF%9D%E5%AD%98%E5%92%8C%E9%83%A8%E7%BD%B2/#onnx","title":"ONNX","text":""},{"location":"machinelearning/ml-tutorial/09-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/","title":"\u7b2c\u4e5d\u7ae0\uff1a\u81ea\u52a8\u5316\u5de5\u5177","text":""},{"location":"machinelearning/ml-tutorial/09-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/#mlflow","title":"MLflow","text":""},{"location":"machinelearning/ml-tutorial/09-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/#optuna","title":"Optuna","text":""},{"location":"machinelearning/ml-tutorial/09-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/#dvc","title":"DVC","text":""},{"location":"machinelearning/scikit-learn/basic/","title":"scikit-learn \u624b\u518c","text":""},{"location":"machinelearning/scikit-learn/basic/#_1","title":"\u7b2c\u4e00\u90e8\u5206\uff1a\u57fa\u7840","text":""},{"location":"machinelearning/scikit-learn/basic/#1-scikit-learn","title":"1. Scikit-learn \u7b80\u4ecb","text":"<p>Scikit-learn \u662f\u57fa\u4e8e Python \u7684\u79d1\u5b66\u8ba1\u7b97\u5e93\uff08NumPy/SciPy\uff09\u6784\u5efa\u7684\u673a\u5668\u5b66\u4e60\u5e93\uff0c\u5177\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a</p> <ul> <li>\u7b80\u5355\u9ad8\u6548\u7684\u6570\u636e\u6316\u6398\u548c\u6570\u636e\u5206\u6790\u5de5\u5177</li> <li>\u5f00\u6e90\u3001\u5546\u4e1a\u53ef\u7528 - BSD \u8bb8\u53ef\u8bc1</li> <li>\u5efa\u7acb\u5728 NumPy\u3001SciPy \u548c matplotlib \u4e4b\u4e0a</li> <li>\u652f\u6301\u76d1\u7763\u5b66\u4e60\u548c\u65e0\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5</li> </ul>"},{"location":"machinelearning/scikit-learn/basic/#2","title":"2. \u5b89\u88c5\u4e0e\u914d\u7f6e","text":"<pre><code># \u57fa\u7840\u5b89\u88c5\npip install scikit-learn\n\n# \u5b8c\u6574\u5b89\u88c5\uff08\u5305\u542b\u7ed8\u56fe\u529f\u80fd\uff09\npip install scikit-learn[alldeps]\n\n# \u9a8c\u8bc1\u5b89\u88c5\npython -c \"import sklearn; print(sklearn.__version__)\"\n</code></pre>"},{"location":"machinelearning/scikit-learn/basic/#3","title":"3. \u57fa\u672c\u5de5\u4f5c\u6d41\u7a0b","text":"\u6b65\u9aa4 \u65b9\u6cd5 1\ufe0f\u20e3 \u6570\u636e\u9884\u5904\u7406 <code>preprocessing</code> 2\ufe0f\u20e3 \u5212\u5206\u8bad\u7ec3\u96c6\u6d4b\u8bd5\u96c6 <code>train_test_split()</code> 3\ufe0f\u20e3 \u9009\u62e9\u6a21\u578b <code>LogisticRegression()</code>\u3001<code>SVC()</code> \u7b49 4\ufe0f\u20e3 \u6a21\u578b\u8bad\u7ec3 <code>.fit(X_train, y_train)</code> 5\ufe0f\u20e3 \u6a21\u578b\u9884\u6d4b <code>.predict(X_test)</code> 6\ufe0f\u20e3 \u6a21\u578b\u8bc4\u4f30 <code>accuracy_score</code>\u3001<code>classification_report</code> \u7b49 <pre><code>from sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\n\n# \u52a0\u8f7d\u6570\u636e\niris = load_iris()\nX, y = iris.data, iris.target\n\n# \u6570\u636e\u5206\u5272\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.2, random_state=42\n)\n\n# \u6570\u636e\u6807\u51c6\u5316\nscaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)\n\n# \u6a21\u578b\u8bad\u7ec3\nclf = RandomForestClassifier(n_estimators=100, random_state=42)\nclf.fit(X_train, y_train)\n\n# \u6a21\u578b\u8bc4\u4f30\ny_pred = clf.predict(X_test)\nprint(f\"\u51c6\u786e\u7387: {accuracy_score(y_test, y_pred):.2f}\")\n</code></pre>"},{"location":"machinelearning/scikit-learn/basic/#_2","title":"\u7b2c\u4e8c\u90e8\u5206\uff1a\u6838\u5fc3\u6a21\u5757","text":"\u6a21\u5757\u540d \u8bf4\u660e <code>sklearn.datasets</code> \u63d0\u4f9b\u5185\u7f6e\u6570\u636e\u96c6\u3001\u6a21\u62df\u6570\u636e\u751f\u6210\u5668\u3001\u5916\u90e8\u6570\u636e\u52a0\u8f7d\u5de5\u5177 <code>sklearn.model_selection</code> \u6570\u636e\u5212\u5206\u3001\u4ea4\u53c9\u9a8c\u8bc1\u3001\u7f51\u683c\u641c\u7d22\u7b49\u6a21\u578b\u9009\u62e9\u5de5\u5177 <code>sklearn.preprocessing</code> \u7279\u5f81\u7f29\u653e\u3001\u5f52\u4e00\u5316\u3001\u7f16\u7801\u3001\u7f3a\u5931\u503c\u586b\u5145\u7b49\u9884\u5904\u7406\u65b9\u6cd5 <code>sklearn.linear_model</code> \u5404\u7c7b\u7ebf\u6027\u6a21\u578b\uff0c\u5982\u7ebf\u6027\u56de\u5f52\u3001\u903b\u8f91\u56de\u5f52\u3001Lasso\u3001Ridge <code>sklearn.tree</code> \u51b3\u7b56\u6811\u6a21\u578b\uff0c\u5305\u62ec\u5206\u7c7b\u4e0e\u56de\u5f52\u6811 <code>sklearn.ensemble</code> \u96c6\u6210\u65b9\u6cd5\uff0c\u5982\u968f\u673a\u68ee\u6797\u3001\u68af\u5ea6\u63d0\u5347\u3001\u6295\u7968\u6cd5\u7b49 <code>sklearn.svm</code> \u652f\u6301\u5411\u91cf\u673a\uff0c\u7528\u4e8e\u5206\u7c7b\u548c\u56de\u5f52\u4efb\u52a1 <code>sklearn.naive_bayes</code> \u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\uff0c\u5982\u9ad8\u65af\u3001\u4f2f\u52aa\u5229\u3001\u591a\u9879\u5f0f\u8d1d\u53f6\u65af <code>sklearn.neighbors</code> K\u8fd1\u90bb\u7b97\u6cd5\uff0c\u7528\u4e8e\u5206\u7c7b\u4e0e\u56de\u5f52 <code>sklearn.metrics</code> \u8bc4\u4f30\u6307\u6807\u6a21\u5757\uff0c\u652f\u6301\u5206\u7c7b\u3001\u56de\u5f52\u3001\u805a\u7c7b\u7b49\u8bc4\u4f30 <code>sklearn.pipeline</code> \u6784\u5efa\u6570\u636e\u5904\u7406 + \u6a21\u578b\u8bad\u7ec3\u7684\u4e00\u4f53\u5316\u6d41\u7a0b"},{"location":"machinelearning/scikit-learn/basic/#1-sklearndatasets","title":"1. sklearn.datasets","text":""},{"location":"machinelearning/scikit-learn/basic/#datasets","title":"\ud83e\udde0 \u4e00\u3001datasets \u662f\u4ec0\u4e48\uff1f","text":"<p>sklearn.datasets \u63d0\u4f9b\u4e86\uff1a</p> <ul> <li>\u2705 \u5185\u7f6e\u7ecf\u5178\u6570\u636e\u96c6\uff08\u5982\u9e22\u5c3e\u82b1\u3001\u6ce2\u58eb\u987f\u623f\u4ef7\uff09</li> <li>\u2705 \u4e0b\u8f7d\u771f\u5b9e\u6570\u636e\u96c6\uff08\u5982 20 \u7c7b\u65b0\u95fb\u6587\u672c\uff09</li> <li>\u2705 \u751f\u6210\u6a21\u62df\u6570\u636e\uff08\u7528\u4e8e\u5206\u7c7b\u3001\u56de\u5f52\u3001\u805a\u7c7b\u7b49\uff09</li> </ul>"},{"location":"machinelearning/scikit-learn/basic/#_3","title":"\ud83d\udcda \u4e8c\u3001\u5185\u7f6e\u5c0f\u578b\u6570\u636e\u96c6\uff08\u5e38\u7528\u4e8e\u5165\u95e8\u7ec3\u4e60\uff09","text":"\u51fd\u6570\u540d \u63cf\u8ff0 <code>load_iris()</code> \u9e22\u5c3e\u82b1\u6570\u636e\u96c6\uff08\u5206\u7c7b\uff09 <code>load_digits()</code> \u624b\u5199\u6570\u5b57\u6570\u636e\u96c6 <code>load_diabetes()</code> \u7cd6\u5c3f\u75c5\u6570\u636e\u96c6\uff08\u56de\u5f52\uff09 <code>load_wine()</code> \u8461\u8404\u9152\u5206\u7c7b\u6570\u636e <code>load_breast_cancer()</code> \u4e73\u817a\u764c\u4e8c\u5206\u7c7b\u6570\u636e <code>load_linnerud()</code> \u4eba\u4f53\u6307\u6807\u56de\u5f52\u6570\u636e"},{"location":"machinelearning/scikit-learn/basic/#_4","title":"\ud83c\udf10 \u4e09\u3001\u4ece\u5916\u90e8\u4e0b\u8f7d\u6570\u636e\u96c6\uff08\u771f\u5b9e\u4e16\u754c\uff09","text":"\u51fd\u6570\u540d \u63cf\u8ff0 <code>fetch_20newsgroups()</code> 20 \u7c7b\u65b0\u95fb\u6587\u672c\uff08NLP\uff09 <code>fetch_california_housing()</code> \u52a0\u5dde\u623f\u4ef7\u6570\u636e\uff08\u56de\u5f52\uff09 <code>fetch_covtype()</code> \u68ee\u6797\u8986\u76d6\u7c7b\u578b\u6570\u636e\u96c6 <code>fetch_olivetti_faces()</code> Olivetti \u4eba\u8138\u8bc6\u522b\u56fe\u50cf\u6570\u636e <code>fetch_lfw_people()</code> LFW\uff08Labeled Faces in the Wild\uff09\u4eba\u8138\u56fe\u50cf <code>fetch_lfw_pairs()</code> LFW \u8138\u90e8\u914d\u5bf9\u56fe\u50cf\uff08\u4eba\u8138\u9a8c\u8bc1\uff09"},{"location":"machinelearning/scikit-learn/basic/#_5","title":"\ud83e\uddea \u56db\u3001\u751f\u6210\u6a21\u62df\u6570\u636e\uff08\u5efa\u6a21\u4e0e\u6d4b\u8bd5\u7528\uff09","text":"\u51fd\u6570 \u7528\u9014 <code>make_classification()</code> \u751f\u6210\u7528\u4e8e\u5206\u7c7b\u7684\u6837\u672c\u6570\u636e <code>make_regression()</code> \u751f\u6210\u7528\u4e8e\u56de\u5f52\u7684\u6837\u672c\u6570\u636e <code>make_blobs()</code> \u751f\u6210\u7528\u4e8e\u805a\u7c7b\u6d4b\u8bd5\u7684\u9ad8\u65af\u5206\u5e03\u6570\u636e <code>make_moons()</code> \u751f\u6210\u53cc\u6708\u5f62\u72b6\u7684\u975e\u7ebf\u6027\u5206\u7c7b\u6570\u636e <code>make_circles()</code> \u751f\u6210\u540c\u5fc3\u5706\u5f62\u7684\u4e8c\u5206\u7c7b\u6570\u636e <code>make_multilabel_classification()</code> \u751f\u6210\u591a\u6807\u7b7e\u5206\u7c7b\u95ee\u9898\u6570\u636e <code>make_sparse_spd_matrix()</code> \u751f\u6210\u7a00\u758f\u5bf9\u79f0\u6b63\u5b9a\u77e9\u9635\uff08\u5982\u56fe\u6a21\u578b\u7ed3\u6784\uff09"},{"location":"machinelearning/scikit-learn/basic/#2-sklearnmodel_selection","title":"2. sklearn.model_selection","text":""},{"location":"machinelearning/scikit-learn/basic/#model_selection","title":"\ud83d\udccc \u4e00\u3001model_selection \u662f\u4ec0\u4e48\uff1f","text":"<p>\u8fd9\u662f scikit-learn \u4e2d\u8d1f\u8d23\uff1a</p> <ul> <li>\u6570\u636e\u5212\u5206\uff08\u8bad\u7ec3\u96c6/\u6d4b\u8bd5\u96c6\uff09</li> <li>\u6a21\u578b\u8bc4\u4f30\uff08\u4ea4\u53c9\u9a8c\u8bc1\uff09</li> <li>\u8d85\u53c2\u6570\u641c\u7d22\uff08\u7f51\u683c\u641c\u7d22\u3001\u968f\u673a\u641c\u7d22\uff09</li> <li>\u6a21\u578b\u9009\u62e9\u4e0e\u9a8c\u8bc1\u7b56\u7565\u7684\u6838\u5fc3\u6a21\u5757</li> </ul>"},{"location":"machinelearning/scikit-learn/basic/#_6","title":"\ud83e\udde9 \u4e8c\u3001\u5e38\u7528\u529f\u80fd\u5206\u7c7b\u4e0e\u4f5c\u7528","text":"\u529f\u80fd\u7c7b\u522b \u5e38\u7528\u51fd\u6570 \u4f5c\u7528 \u6570\u636e\u96c6\u5212\u5206 <code>train_test_split</code> \u8bad\u7ec3\u96c6 / \u6d4b\u8bd5\u96c6\u5212\u5206 \u4ea4\u53c9\u9a8c\u8bc1 <code>cross_val_score</code>, <code>cross_validate</code>, <code>KFold</code>, <code>StratifiedKFold</code> \u591a\u6298\u8bc4\u4f30\u6a21\u578b \u8d85\u53c2\u6570\u641c\u7d22 <code>GridSearchCV</code>, <code>RandomizedSearchCV</code> \u7f51\u683c/\u968f\u673a\u641c\u7d22\u53c2\u6570 \u5b66\u4e60\u66f2\u7ebf <code>learning_curve</code>, <code>validation_curve</code> \u6a21\u578b\u5b66\u4e60\u8fc7\u7a0b\u53ef\u89c6\u5316 \u9884\u5b9a\u4e49\u9a8c\u8bc1 <code>ShuffleSplit</code>, <code>LeaveOneOut</code> \u7b49 \u63a7\u5236\u9a8c\u8bc1\u96c6\u5212\u5206\u65b9\u5f0f"},{"location":"machinelearning/scikit-learn/basic/#train_test_split","title":"\u2702\ufe0f \u4e09\u3001\u6570\u636e\u5212\u5206\uff1atrain_test_split()","text":"<pre><code>from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y,\n                                                    test_size=0.2,\n                                                    random_state=42,\n                                                    stratify=y)\n</code></pre> <ul> <li>test_size\uff1a\u6d4b\u8bd5\u96c6\u6bd4\u4f8b\uff08\u5982 0.2\uff09</li> <li>stratify=y\uff1a\u6309\u6807\u7b7e\u6bd4\u4f8b\u5206\u5c42\u91c7\u6837\uff08\u5206\u7c7b\u5e38\u7528\uff09</li> </ul>"},{"location":"machinelearning/scikit-learn/basic/#_7","title":"\ud83d\udd01 \u56db\u3001\u4ea4\u53c9\u9a8c\u8bc1","text":""},{"location":"machinelearning/scikit-learn/basic/#1-cross_val_score","title":"1\ufe0f\u20e3 cross_val_score()","text":"<p>\u5feb\u901f\u8bc4\u4f30\u6a21\u578b\u4ea4\u53c9\u9a8c\u8bc1\u5f97\u5206\uff1a</p> <pre><code>from sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LogisticRegression\n\nscores = cross_val_score(LogisticRegression(), X, y, cv=5)\nprint(\"\u5e73\u5747\u51c6\u786e\u7387\uff1a\", scores.mean())\n</code></pre>"},{"location":"machinelearning/scikit-learn/basic/#2-cross_validate","title":"2\ufe0f\u20e3 cross_validate()\uff08\u652f\u6301\u66f4\u591a\u8f93\u51fa\uff09","text":"<pre><code>from sklearn.model_selection import cross_validate\n\nresult = cross_validate(LogisticRegression(), X, y,\n                        scoring=['accuracy', 'f1_macro'],\n                        return_train_score=True,\n                        cv=5)\nprint(result)\n</code></pre>"},{"location":"machinelearning/scikit-learn/basic/#kfold","title":"\ud83d\udd00 \u4e94\u3001\u4ea4\u53c9\u9a8c\u8bc1\u7b56\u7565\u7c7b\uff08KFold \u7b49\uff09","text":"\u7c7b\u540d \u8bf4\u660e <code>KFold</code> \u7b80\u5355\u5747\u5300\u5212\u5206\u4e3a K \u6298 <code>StratifiedKFold</code> \u4fdd\u6301\u7c7b\u522b\u5206\u5e03\u7684 K \u6298\uff08\u9002\u7528\u4e8e\u5206\u7c7b\u95ee\u9898\uff09 <code>ShuffleSplit</code> \u591a\u6b21\u968f\u673a\u5212\u5206\u8bad\u7ec3/\u6d4b\u8bd5\u96c6 <code>LeaveOneOut</code> \u7559\u4e00\u6cd5\uff08\u6bcf\u6b21\u7559\u4e00\u4e2a\u6837\u672c\u505a\u6d4b\u8bd5\u96c6\uff09 <code>GroupKFold</code> \u6309\u7ec4\u5212\u5206\uff0c\u786e\u4fdd\u540c\u4e00\u7ec4\u6570\u636e\u4e0d\u5728\u8bad\u7ec3\u548c\u9a8c\u8bc1\u96c6\u4e2d\u540c\u65f6\u51fa\u73b0 <pre><code>from sklearn.model_selection import StratifiedKFold\n\nskf = StratifiedKFold(n_splits=5)\nfor train_idx, test_idx in skf.split(X, y):\n    print(train_idx, test_idx)\n</code></pre>"},{"location":"machinelearning/scikit-learn/basic/#_8","title":"\ud83d\udd0d \u516d\u3001\u8d85\u53c2\u6570\u641c\u7d22","text":""},{"location":"machinelearning/scikit-learn/basic/#gridsearchcv","title":"\u2705 GridSearchCV\uff08\u7f51\u683c\u641c\u7d22\uff09","text":"<pre><code>from sklearn.model_selection import GridSearchCV\nfrom sklearn.svm import SVC\n\nparam_grid = {'C': [0.1, 1, 10], 'kernel': ['linear', 'rbf']}\ngrid = GridSearchCV(SVC(), param_grid, cv=5)\ngrid.fit(X_train, y_train)\n\nprint(\"\u6700\u4f18\u53c2\u6570\uff1a\", grid.best_params_)\nprint(\"\u6700\u4f18\u5f97\u5206\uff1a\", grid.best_score_)\n</code></pre>"},{"location":"machinelearning/scikit-learn/basic/#randomizedsearchcv","title":"\u2705 RandomizedSearchCV\uff08\u968f\u673a\u641c\u7d22\uff09","text":"<p>\u66f4\u9002\u5408\u5927\u641c\u7d22\u7a7a\u95f4\uff1a</p> <pre><code>from sklearn.model_selection import RandomizedSearchCV\nfrom scipy.stats import uniform\n\nparam_dist = {'C': uniform(0.1, 10)}\nrand_search = RandomizedSearchCV(SVC(), param_distributions=param_dist, n_iter=10, cv=5)\nrand_search.fit(X_train, y_train)\n</code></pre>"},{"location":"machinelearning/scikit-learn/basic/#_9","title":"\ud83d\udcc8 \u4e03\u3001\u5b66\u4e60\u66f2\u7ebf &amp; \u9a8c\u8bc1\u66f2\u7ebf\uff08\u53ef\u89c6\u5316\u6a21\u578b\u5b66\u4e60\u80fd\u529b\uff09","text":""},{"location":"machinelearning/scikit-learn/basic/#_10","title":"\u5b66\u4e60\u66f2\u7ebf\uff1a\u968f\u7740\u6837\u672c\u91cf\u589e\u52a0\u7684\u6027\u80fd\u53d8\u5316","text":"<pre><code>from sklearn.model_selection import learning_curve\nfrom sklearn.linear_model import LogisticRegression\nimport matplotlib.pyplot as plt\n\ntrain_sizes, train_scores, test_scores = learning_curve(LogisticRegression(), X, y, cv=5)\n\nplt.plot(train_sizes, train_scores.mean(axis=1), label='train')\nplt.plot(train_sizes, test_scores.mean(axis=1), label='test')\nplt.legend()\nplt.title(\"Learning Curve\")\nplt.show()\n</code></pre>"},{"location":"machinelearning/scikit-learn/basic/#_11","title":"\u9a8c\u8bc1\u66f2\u7ebf\uff1a\u968f\u7740\u8d85\u53c2\u6570\u53d8\u5316\u6a21\u578b\u6027\u80fd\u5982\u4f55","text":"<pre><code>from sklearn.model_selection import validation_curve\n\nparam_range = [0.01, 0.1, 1, 10]\ntrain_scores, test_scores = validation_curve(\n    LogisticRegression(), X, y,\n    param_name=\"C\", param_range=param_range,\n    cv=5)\n\nplt.plot(param_range, train_scores.mean(axis=1), label=\"Train\")\nplt.plot(param_range, test_scores.mean(axis=1), label=\"Test\")\nplt.xscale('log')\nplt.title(\"Validation Curve\")\nplt.legend()\nplt.show()\n</code></pre>"},{"location":"machinelearning/scikit-learn/basic/#3-sklearnpreprocessing","title":"3. sklearn.preprocessing","text":""},{"location":"machinelearning/scikit-learn/basic/#_12","title":"\u2705 \u4e00\u3001\u6a21\u5757\u4f5c\u7528\u6982\u8ff0","text":"<p><code>sklearn.preprocessing</code> \u63d0\u4f9b\u5404\u79cd\u6570\u636e\u9884\u5904\u7406\u65b9\u6cd5\uff1a</p> \u9884\u5904\u7406\u7c7b\u522b \u5178\u578b\u64cd\u4f5c \u7279\u5f81\u7f29\u653e \u6807\u51c6\u5316\u3001\u5f52\u4e00\u5316\u3001\u6700\u5927\u6700\u5c0f\u7f29\u653e \u975e\u6570\u503c\u7279\u5f81\u7f16\u7801 LabelEncoding\u3001OneHotEncoding \u975e\u7ebf\u6027\u8f6c\u6362 \u5bf9\u6570\u3001\u5e42\u6b21\u3001\u5206\u4f4d\u6570\u53d8\u6362 \u7f3a\u5931\u503c\u5904\u7406 \u63d2\u503c\u3001\u586b\u5145"},{"location":"machinelearning/scikit-learn/basic/#_13","title":"\ud83d\udcca \u4e8c\u3001\u5e38\u7528\u9884\u5904\u7406\u5668\u603b\u89c8","text":"\u540d\u79f0 \u7c7b/\u51fd\u6570 \u7528\u9014 \u6807\u51c6\u5316 <code>StandardScaler</code> \u8f6c\u6362\u4e3a\u5747\u503c 0 \u65b9\u5dee 1 \u5f52\u4e00\u5316 <code>MinMaxScaler</code> \u7f29\u653e\u5230 [0, 1] \u533a\u95f4 \u6700\u5927\u7edd\u5bf9\u7f29\u653e <code>MaxAbsScaler</code> \u7f29\u653e\u5230 [-1, 1] \u7a00\u758f\u7f29\u653e <code>RobustScaler</code> \u7f29\u653e\u4e0d\u53d7\u5f02\u5e38\u503c\u5f71\u54cd \u5355\u4f4d\u5411\u91cf\u5316 <code>Normalizer</code> \u5c06\u6bcf\u884c\u6837\u672c\u7f29\u653e\u4e3a\u5355\u4f4d\u8303\u6570 \u7c7b\u522b\u7f16\u7801 <code>LabelEncoder</code>, <code>OneHotEncoder</code> \u6807\u7b7e\u7f16\u7801\u6216\u72ec\u70ed\u7f16\u7801 \u7f3a\u5931\u503c\u586b\u5145 <code>SimpleImputer</code> \u7528\u5747\u503c/\u4e2d\u4f4d\u6570/\u4f17\u6570\u586b\u8865\u7f3a\u5931 \u529f\u80fd\u8f6c\u6362 <code>FunctionTransformer</code>, <code>PowerTransformer</code>, <code>QuantileTransformer</code> \u81ea\u5b9a\u4e49\u53d8\u6362\u3001Box-Cox/Yeo-Johnson\u3001\u5206\u4f4d\u6570\u53d8\u6362"},{"location":"machinelearning/scikit-learn/basic/#_14","title":"\ud83d\udcd0 \u4e09\u3001\u5e38\u7528\u7f29\u653e\u7c7b\u8be6\u89e3","text":""},{"location":"machinelearning/scikit-learn/basic/#1-standardscaler","title":"1\ufe0f\u20e3 StandardScaler\uff1a\u6807\u51c6\u5316","text":"<pre><code>from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\nX_scaled = scaler.fit_transform(X)\n</code></pre>"},{"location":"machinelearning/scikit-learn/basic/#2-minmaxscaler","title":"2\ufe0f\u20e3 MinMaxScaler\uff1a\u5f52\u4e00\u5316","text":"<pre><code>from sklearn.preprocessing import MinMaxScaler\n\nscaler = MinMaxScaler()\nX_scaled = scaler.fit_transform(X)\n</code></pre>"},{"location":"machinelearning/scikit-learn/basic/#3-robustscaler","title":"3\ufe0f\u20e3 RobustScaler\uff1a\u6297\u5f02\u5e38\u503c\u7f29\u653e","text":"<pre><code>from sklearn.preprocessing import RobustScaler\n\nscaler = RobustScaler()\nX_scaled = scaler.fit_transform(X)\n</code></pre>"},{"location":"machinelearning/scikit-learn/basic/#4-normalizer","title":"4\ufe0f\u20e3 Normalizer\uff1a\u5355\u4f4d\u8303\u6570\u7f29\u653e\uff08\u884c\u65b9\u5411\uff09","text":"<pre><code>from sklearn.preprocessing import Normalizer\n\nscaler = Normalizer()\nX_scaled = scaler.fit_transform(X)\n</code></pre>"},{"location":"machinelearning/scikit-learn/basic/#_15","title":"\ud83d\udd24 \u56db\u3001\u7c7b\u522b\u53d8\u91cf\u7f16\u7801\u5668","text":""},{"location":"machinelearning/scikit-learn/basic/#labelencoder","title":"LabelEncoder\uff1a\u6807\u7b7e\u7f16\u7801","text":"<pre><code>from sklearn.preprocessing import LabelEncoder\n\nle = LabelEncoder()\ny_encoded = le.fit_transform(['yes', 'no', 'yes', 'no'])\n</code></pre>"},{"location":"machinelearning/scikit-learn/basic/#onehotencoder","title":"OneHotEncoder\uff1a\u72ec\u70ed\u7f16\u7801","text":"<pre><code>from sklearn.preprocessing import OneHotEncoder\n\nenc = OneHotEncoder(sparse=False)\nX = [['Male'], ['Female'], ['Male']]\nX_encoded = enc.fit_transform(X)\n</code></pre>"},{"location":"machinelearning/scikit-learn/basic/#_16","title":"\ud83e\uddea \u4e94\u3001\u7f3a\u5931\u503c\u5904\u7406","text":""},{"location":"machinelearning/scikit-learn/basic/#simpleimputer","title":"SimpleImputer\uff1a\u5747\u503c/\u4e2d\u4f4d\u6570\u586b\u8865","text":"<pre><code>from sklearn.impute import SimpleImputer\nimport numpy as np\n\nimp = SimpleImputer(strategy='mean')\nX = np.array([[1, 2], [np.nan, 3], [7, 6]])\nX_filled = imp.fit_transform(X)\n</code></pre>"},{"location":"machinelearning/scikit-learn/basic/#_17","title":"\ud83d\udd01 \u516d\u3001\u975e\u7ebf\u6027\u53d8\u6362","text":""},{"location":"machinelearning/scikit-learn/basic/#powertransformerbox-cox-yeo-johnson","title":"PowerTransformer\uff1aBox-Cox / Yeo-Johnson","text":"<pre><code>from sklearn.preprocessing import PowerTransformer\n\npt = PowerTransformer(method='yeo-johnson')\nX_transformed = pt.fit_transform(X)\n</code></pre>"},{"location":"machinelearning/scikit-learn/basic/#quantiletransformer","title":"QuantileTransformer\uff1a\u5206\u4f4d\u6570\u53d8\u6362","text":"<pre><code>from sklearn.preprocessing import QuantileTransformer\n\nqt = QuantileTransformer(output_distribution='normal')\nX_transformed = qt.fit_transform(X)\n</code></pre>"},{"location":"machinelearning/scikit-learn/basic/#_18","title":"\ud83e\uddfe \u4e03\u3001\u5c0f\u7ed3\uff1a\u9884\u5904\u7406\u5668\u9009\u62e9\u5efa\u8bae\u8868","text":"\u573a\u666f \u63a8\u8350\u65b9\u6cd5 \u6570\u636e\u6807\u51c6\u5316 <code>StandardScaler</code> \u5f02\u5e38\u503c\u5b58\u5728 <code>RobustScaler</code> \u7279\u5f81\u5728\u4e0d\u540c\u91cf\u7eb2 <code>MinMaxScaler</code> \u6837\u672c\u4e3a\u5411\u91cf\u6570\u636e <code>Normalizer</code> \u5206\u7c7b\u6807\u7b7e\u8f6c\u6362 <code>LabelEncoder</code>, <code>OneHotEncoder</code> \u6570\u636e\u7f3a\u5931 <code>SimpleImputer</code> \u7279\u5f81\u975e\u6b63\u6001\u5206\u5e03 <code>PowerTransformer</code>, <code>QuantileTransformer</code>"},{"location":"machinelearning/scikit-learn/basic/#pipeline","title":"\u2705 \u516b\u3001\u914d\u5408 Pipeline \u4f7f\u7528","text":"<pre><code>from sklearn.pipeline import Pipeline\nfrom sklearn.linear_model import LogisticRegression\n\npipe = Pipeline([\n    ('scaler', StandardScaler()),\n    ('model', LogisticRegression())\n])\npipe.fit(X_train, y_train)\n</code></pre>"},{"location":"machinelearning/scikit-learn/basic/#4-sklearnmetrics","title":"4. sklearn.metrics","text":""},{"location":"machinelearning/scikit-learn/basic/#_19","title":"\u2705 \u4e00\u3001\u6a21\u5757\u7528\u9014","text":"<p><code>sklearn.metrics</code> \u662f\u7528\u4e8e\u8bc4\u4f30\u6a21\u578b\u6027\u80fd\u7684\u6a21\u5757\uff0c\u652f\u6301\uff1a</p> <ul> <li>\u5206\u7c7b\u4efb\u52a1\u8bc4\u4f30\u6307\u6807\uff08\u5982\u51c6\u786e\u7387\u3001F1 \u503c\uff09</li> <li>\u56de\u5f52\u4efb\u52a1\u8bc4\u4f30\u6307\u6807\uff08\u5982\u5747\u65b9\u8bef\u5dee\u3001R\u00b2\uff09</li> <li>\u805a\u7c7b\u8bc4\u4f30\u6307\u6807\uff08\u5982\u8f6e\u5ed3\u7cfb\u6570\u3001ARI\uff09</li> <li>\u591a\u6807\u7b7e\u3001\u591a\u8f93\u51fa\u3001\u591a\u5206\u7c7b\u4efb\u52a1\u652f\u6301</li> </ul>"},{"location":"machinelearning/scikit-learn/basic/#_20","title":"\ud83c\udfaf \u4e8c\u3001\u5206\u7c7b\u4efb\u52a1\u8bc4\u4f30\u6307\u6807","text":"\u51fd\u6570 \u542b\u4e49 \u7528\u6cd5\u4e3e\u4f8b <code>accuracy_score()</code> \u51c6\u786e\u7387 \u5206\u7c7b\u6b63\u786e\u7684\u6837\u672c\u6570 / \u603b\u6837\u672c\u6570 <code>precision_score()</code> \u7cbe\u786e\u7387 \u6b63\u7c7b\u9884\u6d4b\u4e2d\u6b63\u786e\u7684\u6bd4\u4f8b <code>recall_score()</code> \u53ec\u56de\u7387 \u5b9e\u9645\u6b63\u7c7b\u4e2d\u88ab\u6b63\u786e\u8bc6\u522b\u7684\u6bd4\u4f8b <code>f1_score()</code> F1 \u503c \u7cbe\u786e\u7387\u548c\u53ec\u56de\u7387\u7684\u8c03\u548c\u5e73\u5747 <code>classification_report()</code> \u5206\u7c7b\u6574\u4f53\u62a5\u544a \u591a\u4e2a\u6307\u6807\u7efc\u5408 <code>confusion_matrix()</code> \u6df7\u6dc6\u77e9\u9635 TP/FP/FN/TN <code>roc_auc_score()</code> ROC \u66f2\u7ebf\u4e0b\u7684\u9762\u79ef \u4e8c\u5206\u7c7b\u6027\u80fd <code>log_loss()</code> \u5bf9\u6570\u635f\u5931 \u6982\u7387\u9884\u6d4b\u8bef\u5dee <pre><code>from sklearn.metrics import accuracy_score, f1_score, classification_report, confusion_matrix\n\ny_true = [0, 1, 1, 1, 0, 0, 1]\ny_pred = [0, 1, 0, 1, 0, 1, 1]\n\nprint(\"\u51c6\u786e\u7387\uff1a\", accuracy_score(y_true, y_pred))\nprint(\"F1 \u503c\uff1a\", f1_score(y_true, y_pred))\nprint(\"\u62a5\u544a\uff1a\\n\", classification_report(y_true, y_pred))\nprint(\"\u6df7\u6dc6\u77e9\u9635\uff1a\\n\", confusion_matrix(y_true, y_pred))\n</code></pre>"},{"location":"machinelearning/scikit-learn/basic/#_21","title":"\ud83d\udcc9 \u4e09\u3001\u56de\u5f52\u4efb\u52a1\u8bc4\u4f30\u6307\u6807","text":"\u51fd\u6570 \u542b\u4e49 \u7528\u6cd5 <code>mean_squared_error()</code> \u5747\u65b9\u8bef\u5dee\uff08MSE\uff09 \u5747\u65b9\u8bef\u5dee\u8d8a\u5c0f\u8d8a\u597d <code>mean_absolute_error()</code> \u5e73\u5747\u7edd\u5bf9\u8bef\u5dee\uff08MAE\uff09 \u66f4\u5c11\u53d7\u79bb\u7fa4\u70b9\u5f71\u54cd <code>r2_score()</code> \u51b3\u5b9a\u7cfb\u6570 R\u00b2 \u8d8a\u63a5\u8fd1 1 \u8d8a\u597d <code>mean_squared_log_error()</code> \u5747\u65b9\u5bf9\u6570\u8bef\u5dee \u9002\u5408\u5bf9\u6570\u56de\u5f52\u95ee\u9898 <pre><code>from sklearn.metrics import mean_squared_error, r2_score\n\ny_true = [3, -0.5, 2, 7]\ny_pred = [2.5, 0.0, 2, 8]\n\nprint(\"MSE:\", mean_squared_error(y_true, y_pred))\nprint(\"R\u00b2:\", r2_score(y_true, y_pred))\n</code></pre>"},{"location":"machinelearning/scikit-learn/basic/#_22","title":"\ud83e\udde0 \u56db\u3001\u805a\u7c7b\u4efb\u52a1\u8bc4\u4f30\u6307\u6807","text":"\u51fd\u6570 \u542b\u4e49 \u7279\u70b9 <code>adjusted_rand_score()</code> \u8c03\u6574\u540e\u7684\u5170\u5fb7\u6307\u6570\uff08ARI\uff09 \u65e0\u76d1\u7763\u805a\u7c7b\u6807\u7b7e\u76f8\u4f3c\u6027 <code>normalized_mutual_info_score()</code> \u5f52\u4e00\u5316\u4e92\u4fe1\u606f \u805a\u7c7b\u6807\u7b7e\u4e00\u81f4\u6027 <code>homogeneity_score()</code> \u540c\u8d28\u6027\u8bc4\u5206 \u6bcf\u4e2a\u805a\u7c7b\u53ea\u5305\u542b\u4e00\u79cd\u6807\u7b7e <code>completeness_score()</code> \u5b8c\u6574\u6027\u8bc4\u5206 \u6bcf\u79cd\u6807\u7b7e\u53ea\u5728\u4e00\u4e2a\u805a\u7c7b\u4e2d <code>silhouette_score()</code> \u8f6e\u5ed3\u7cfb\u6570 \u7528\u4e8e\u5ea6\u91cf\u805a\u7c7b\u5206\u79bb\u7a0b\u5ea6 <pre><code>from sklearn.metrics import adjusted_rand_score\n\nlabels_true = [0, 0, 1, 1, 2, 2]\nlabels_pred = [0, 0, 1, 2, 2, 2]\n\nprint(\"ARI:\", adjusted_rand_score(labels_true, labels_pred))\n</code></pre>"},{"location":"machinelearning/scikit-learn/basic/#_23","title":"\ud83e\uddfe \u4e94\u3001\u5e38\u7528\u6307\u6807\u901f\u67e5\u8868","text":""},{"location":"machinelearning/scikit-learn/basic/#_24","title":"\ud83d\udcca \u5206\u7c7b\u6307\u6807\u901f\u67e5\u8868","text":"\u6307\u6807 \u51fd\u6570 \u8bf4\u660e \u51c6\u786e\u7387 <code>accuracy_score</code> \u603b\u4f53\u5206\u7c7b\u6b63\u786e\u7387 \u7cbe\u786e\u7387 <code>precision_score</code> \u6b63\u7c7b\u4e2d\u9884\u6d4b\u6b63\u786e\u7684\u6bd4\u4f8b \u53ec\u56de\u7387 <code>recall_score</code> \u5b9e\u9645\u6b63\u7c7b\u4e2d\u88ab\u9884\u6d4b\u6b63\u786e\u7684\u6bd4\u4f8b F1 \u503c <code>f1_score</code> \u5e73\u8861\u7cbe\u786e\u7387\u4e0e\u53ec\u56de\u7387 \u6df7\u6dc6\u77e9\u9635 <code>confusion_matrix</code> \u9884\u6d4b vs \u771f\u5b9e\u6807\u7b7e \u5206\u7c7b\u62a5\u544a <code>classification_report</code> \u591a\u4e2a\u6307\u6807\u6c47\u603b\u5c55\u793a"},{"location":"machinelearning/scikit-learn/basic/#_25","title":"\ud83d\udcc8 \u56de\u5f52\u6307\u6807\u901f\u67e5\u8868","text":"\u6307\u6807 \u51fd\u6570 \u8bf4\u660e MSE <code>mean_squared_error</code> \u5bf9\u8bef\u5dee\u5e73\u65b9\u7684\u5e73\u5747\u503c MAE <code>mean_absolute_error</code> \u7edd\u5bf9\u8bef\u5dee\u7684\u5e73\u5747\u503c R\u00b2 <code>r2_score</code> \u56de\u5f52\u62df\u5408\u4f18\u5ea6\uff0c\u8d8a\u63a5\u8fd1 1 \u8d8a\u597d"},{"location":"machinelearning/scikit-learn/basic/#_26","title":"\ud83e\udde0 \u805a\u7c7b\u6307\u6807\u901f\u67e5\u8868","text":"\u6307\u6807 \u51fd\u6570 \u8bf4\u660e ARI <code>adjusted_rand_score</code> \u805a\u7c7b\u6807\u7b7e\u4e00\u81f4\u6027 NMI <code>normalized_mutual_info_score</code> \u6807\u7b7e\u4fe1\u606f\u5171\u4eab\u7a0b\u5ea6 Homogeneity <code>homogeneity_score</code> \u6bcf\u4e2a\u7c07\u662f\u5426\u53ea\u5305\u542b\u4e00\u4e2a\u7c7b Completeness <code>completeness_score</code> \u6bcf\u4e2a\u7c7b\u662f\u5426\u96c6\u4e2d\u5728\u4e00\u4e2a\u7c07 Silhouette <code>silhouette_score</code> \u805a\u7c7b\u7684\u5206\u79bb\u6027\u548c\u7d27\u5bc6\u5ea6"},{"location":"machinelearning/scikit-learn/basic/#_27","title":"\ud83e\udde0 \u516d\u3001\u5efa\u8bae\u4f7f\u7528\u573a\u666f\u603b\u7ed3","text":"\u4efb\u52a1\u7c7b\u578b \u63a8\u8350\u6307\u6807 \u4e8c\u5206\u7c7b \u51c6\u786e\u7387\u3001\u7cbe\u786e\u7387\u3001\u53ec\u56de\u7387\u3001F1\u3001AUC \u591a\u5206\u7c7b \u5206\u7c7b\u62a5\u544a\u3001\u6df7\u6dc6\u77e9\u9635 \u56de\u5f52 MSE\u3001MAE\u3001R\u00b2 \u805a\u7c7b ARI\u3001NMI\u3001\u8f6e\u5ed3\u7cfb\u6570"},{"location":"machinelearning/scikit-learn/basic/#_28","title":"\u2705 \u4e03\u3001\u8865\u5145\u8bf4\u660e\uff1a\u591a\u6807\u7b7e/\u591a\u5206\u7c7b\u8bbe\u7f6e\u53c2\u6570","text":"<ul> <li><code>average='binary'</code>\uff1a\u9ed8\u8ba4\uff0c\u7528\u4e8e\u4e8c\u5206\u7c7b</li> <li><code>average='micro'</code>\uff1a\u5168\u5c40\u7d2f\u8ba1 TP/FP/FN</li> <li><code>average='macro'</code>\uff1a\u5404\u7c7b\u522b\u6307\u6807\u7b80\u5355\u5e73\u5747</li> <li><code>average='weighted'</code>\uff1a\u52a0\u6743\u5e73\u5747\uff08\u6309\u652f\u6301\u5ea6\uff09</li> <li><code>labels=</code>\uff1a\u6307\u5b9a\u53c2\u4e0e\u8ba1\u7b97\u7684\u6807\u7b7e\u7c7b\u522b\u7d22\u5f15</li> </ul>"},{"location":"machinelearning/scikit-learn/basic/#_29","title":"\u7b2c\u4e09\u90e8\u5206\uff1a\u5206\u7c7b\u7b97\u6cd5","text":""},{"location":"machinelearning/scikit-learn/basic/#1-logistic-regression","title":"1. Logistic Regression","text":""},{"location":"machinelearning/scikit-learn/basic/#2-k-knn","title":"2. K-\u8fd1\u90bb\uff08KNN\uff09","text":""},{"location":"machinelearning/scikit-learn/basic/#3_1","title":"3. \u51b3\u7b56\u6811","text":""},{"location":"machinelearning/scikit-learn/basic/#4","title":"4. \u968f\u673a\u68ee\u6797","text":""},{"location":"machinelearning/scikit-learn/basic/#5-svm","title":"5. \u652f\u6301\u5411\u91cf\u673a\uff08SVM\uff09","text":""},{"location":"machinelearning/scikit-learn/basic/#6","title":"6. \u6734\u7d20\u8d1d\u53f6\u65af","text":""},{"location":"machinelearning/scikit-learn/basic/#7-xgboost-lightgbm","title":"7. XGBoost / LightGBM","text":""},{"location":"machinelearning/scikit-learn/basic/#_30","title":"\u7b2c\u56db\u90e8\u5206\uff1a\u56de\u5f52\u7b97\u6cd5","text":""},{"location":"machinelearning/scikit-learn/basic/#1","title":"1. \u7ebf\u6027\u56de\u5f52","text":""},{"location":"machinelearning/scikit-learn/basic/#2_1","title":"2. \u51b3\u7b56\u6811\u56de\u5f52","text":""},{"location":"machinelearning/scikit-learn/basic/#3-l2","title":"3. \u5cad\u56de\u5f52\uff08L2\uff09","text":""},{"location":"machinelearning/scikit-learn/basic/#4-lasso-l1","title":"4. Lasso \u56de\u5f52\uff08L1\uff09","text":""},{"location":"machinelearning/scikit-learn/basic/#5-svr","title":"5. \u652f\u6301\u5411\u91cf\u56de\u5f52\uff08SVR\uff09","text":""},{"location":"machinelearning/scikit-learn/basic/#6_1","title":"6. \u968f\u673a\u68ee\u6797\u56de\u5f52","text":""},{"location":"machinelearning/scikit-learn/basic/#7-xgboost","title":"7. XGBoost \u56de\u5f52","text":""},{"location":"machinelearning/scikit-learn/basic/#_31","title":"\u7b2c\u4e94\u90e8\u5206\uff1a\u805a\u7c7b\u7b97\u6cd5","text":""},{"location":"machinelearning/scikit-learn/basic/#1-kmeans","title":"1. KMeans","text":""},{"location":"machinelearning/scikit-learn/basic/#2-dbscan","title":"2. DBSCAN","text":""},{"location":"machinelearning/scikit-learn/basic/#3_2","title":"3. \u5c42\u6b21\u805a\u7c7b","text":""},{"location":"machinelearning/scikit-learn/basic/#4-gmm","title":"4. \u9ad8\u65af\u6df7\u5408\u6a21\u578b\uff08GMM\uff09","text":""},{"location":"machinelearning/scikit-learn/basic/#_32","title":"\u7b2c\u516d\u90e8\u5206\uff1a\u964d\u7ef4","text":""},{"location":"machinelearning/scikit-learn/basic/#1-pca","title":"1. PCA \u4e3b\u6210\u5206\u5206\u6790","text":""},{"location":"machinelearning/scikit-learn/basic/#2-lda","title":"2. LDA \u7ebf\u6027\u5224\u522b\u5206\u6790","text":""},{"location":"machinelearning/scikit-learn/basic/#3-t-sne","title":"3. t-SNE","text":""},{"location":"machinelearning/scikit-learn/basic/#4-umap","title":"4. UMAP","text":""},{"location":"maths/math/","title":"\u7a0b\u5e8f\u5458\u7684\u6570\u5b66","text":""},{"location":"maths/math/#_2","title":"\u7ebf\u6027\u4ee3\u6570\u57fa\u7840","text":""},{"location":"maths/math/#_3","title":"\u7ebf\u6027\u4ee3\u6570\u9ad8\u7ea7","text":""},{"location":"maths/math/#_4","title":"\u6982\u7387\u8bba","text":""},{"location":"maths/math/#_5","title":"\u5fae\u79ef\u5206\u57fa\u7840","text":""},{"location":"maths/math/#_6","title":"\u591a\u5143\u51fd\u6570\u5fae\u5206\u5b66","text":""},{"location":"maths/math/#crf","title":"\u6761\u4ef6\u968f\u673a\u573aCRF","text":""},{"location":"maths/math/#hmm","title":"\u9690\u9a6c\u5c14\u79d1\u592b\u6a21\u578bHMM","text":""},{"location":"maths/math/#_7","title":"\u6700\u4f18\u5316","text":""},{"location":"maths/math/#_8","title":"\u8d1d\u53f6\u65af\u7f51\u7edc","text":""}]}